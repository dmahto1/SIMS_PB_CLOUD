$PBExportHeader$w_do.srw
$PBExportComments$+Delivery Order
forward
global type w_do from w_std_master_detail
end type
type cb_readonly from commandbutton within tabpage_main
end type
type st_shipment from statictext within tabpage_main
end type
type st_shipment_nbr from statictext within tabpage_main
end type
type st_validation_msg from statictext within tabpage_main
end type
type cb_custom1 from commandbutton within tabpage_main
end type
type cb_emc from commandbutton within tabpage_main
end type
type cb_do_print_docs from commandbutton within tabpage_main
end type
type cb_do_readytoship from commandbutton within tabpage_main
end type
type cb_do_shipment from commandbutton within tabpage_main
end type
type cb_do_void from commandbutton within tabpage_main
end type
type cb_do_select_customer from commandbutton within tabpage_main
end type
type sle_order from singlelineedit within tabpage_main
end type
type sle_order2 from singlelineedit within tabpage_main
end type
type tab_address from tab within tabpage_main
end type
type tabpage_shipto from userobject within tab_address
end type
type dw_shipto from u_dw_ancestor within tabpage_shipto
end type
type tabpage_shipto from userobject within tab_address
dw_shipto dw_shipto
end type
type tabpage_bt from userobject within tab_address
end type
type dw_bt from u_dw_ancestor within tabpage_bt
end type
type tabpage_bt from userobject within tab_address
dw_bt dw_bt
end type
type tabpage_it from userobject within tab_address
end type
type dw_it from u_dw_ancestor within tabpage_it
end type
type tabpage_it from userobject within tab_address
dw_it dw_it
end type
type tabpage_st from userobject within tab_address
end type
type dw_st from u_dw_ancestor within tabpage_st
end type
type tabpage_st from userobject within tab_address
dw_st dw_st
end type
type tabpage_trax_3rd_party from userobject within tab_address
end type
type cb_3p_customer from commandbutton within tabpage_trax_3rd_party
end type
type dw_trax_3rd_party from u_dw_ancestor within tabpage_trax_3rd_party
end type
type tabpage_trax_3rd_party from userobject within tab_address
cb_3p_customer cb_3p_customer
dw_trax_3rd_party dw_trax_3rd_party
end type
type tabpage_rt from userobject within tab_address
end type
type cb_selectreturncustomer from commandbutton within tabpage_rt
end type
type dw_rt from u_dw_ancestor within tabpage_rt
end type
type tabpage_rt from userobject within tab_address
cb_selectreturncustomer cb_selectreturncustomer
dw_rt dw_rt
end type
type tab_address from tab within tabpage_main
tabpage_shipto tabpage_shipto
tabpage_bt tabpage_bt
tabpage_it tabpage_it
tabpage_st tabpage_st
tabpage_trax_3rd_party tabpage_trax_3rd_party
tabpage_rt tabpage_rt
end type
type cb_do_notes from commandbutton within tabpage_main
end type
type cb_do_pod from commandbutton within tabpage_main
end type
type cb_do_hold from commandbutton within tabpage_main
end type
type cb_do_confirm from commandbutton within tabpage_main
end type
type st_order_nbr from statictext within tabpage_main
end type
type dw_main from u_dw_ancestor within tabpage_main
end type
type cb_open_ro from commandbutton within tabpage_main
end type
type cb_print_passout_note from commandbutton within tabpage_search
end type
type cb_combine_gsin from commandbutton within tabpage_search
end type
type cb_multi_ready_to_ship from commandbutton within tabpage_search
end type
type cb_wmscutover from commandbutton within tabpage_search
end type
type cb_clearall from commandbutton within tabpage_search
end type
type cb_selectall from commandbutton within tabpage_search
end type
type cb_batch_print_dn from commandbutton within tabpage_search
end type
type cb_confirm_batch from commandbutton within tabpage_search
end type
type dw_result from u_dw_ancestor within tabpage_search
end type
type cb_do_search from commandbutton within tabpage_search
end type
type cb_do_clear from commandbutton within tabpage_search
end type
type uo_mobile_status from uo_multi_select_search within tabpage_search
end type
type uo_ord_status from uo_multi_select_search within tabpage_search
end type
type uo_otm_ord_status from uo_multi_select_search within tabpage_search
end type
type dw_search from u_dw_ancestor within tabpage_search
end type
type tabpage_other from userobject within tab_main
end type
type cb_lock_load_google from commandbutton within tabpage_other
end type
type cb_assign_pro from commandbutton within tabpage_other
end type
type dw_other from u_dw_ancestor within tabpage_other
end type
type tabpage_other from userobject within tab_main
cb_lock_load_google cb_lock_load_google
cb_assign_pro cb_assign_pro
dw_other dw_other
end type
type tabpage_detail from userobject within tab_main
end type
type cb_import_ib from commandbutton within tabpage_detail
end type
type cb_show_so from commandbutton within tabpage_detail
end type
type otm_message_t from statictext within tabpage_detail
end type
type cb_show_dn from commandbutton within tabpage_detail
end type
type st_verify_sku_upc from statictext within tabpage_detail
end type
type sle_verify from singlelineedit within tabpage_detail
end type
type cb_do_det_insert from commandbutton within tabpage_detail
end type
type cb_do_det_delete from commandbutton within tabpage_detail
end type
type dw_detail from u_dw_ancestor within tabpage_detail
end type
type tabpage_detail from userobject within tab_main
cb_import_ib cb_import_ib
cb_show_so cb_show_so
otm_message_t otm_message_t
cb_show_dn cb_show_dn
st_verify_sku_upc st_verify_sku_upc
sle_verify sle_verify
cb_do_det_insert cb_do_det_insert
cb_do_det_delete cb_do_det_delete
dw_detail dw_detail
end type
type tabpage_pick from userobject within tab_main
end type
type cb_pick_unallocate from commandbutton within tabpage_pick
end type
type rb_pick_fefo from radiobutton within tabpage_pick
end type
type rb_pick_lifo from radiobutton within tabpage_pick
end type
type rb_pick_fifo from radiobutton within tabpage_pick
end type
type rb_pick_default from radiobutton within tabpage_pick
end type
type cb_replace_boxid from commandbutton within tabpage_pick
end type
type dw_pick_mobile from u_dw_ancestor within tabpage_pick
end type
type st_pallet from statictext within tabpage_pick
end type
type sle_palletno from singlelineedit within tabpage_pick
end type
type cbx_selectall from checkbox within tabpage_pick
end type
type cb_serial from commandbutton within tabpage_pick
end type
type cb_wt_dims from commandbutton within tabpage_pick
end type
type cbx_partial_bom from checkbox within tabpage_pick
end type
type cb_lmsroute from commandbutton within tabpage_pick
end type
type batch_pick_t from statictext within tabpage_pick
end type
type cb_pick_insert from commandbutton within tabpage_pick
end type
type cb_pick_generate from commandbutton within tabpage_pick
end type
type cb_pick_print from commandbutton within tabpage_pick
end type
type dw_pickdetail from u_dw_ancestor within tabpage_pick
end type
type cb_picklocs from commandbutton within tabpage_pick
end type
type cb_pick_copy from commandbutton within tabpage_pick
end type
type dw_print from datawindow within tabpage_pick
end type
type cbx_show_comp from checkbox within tabpage_pick
end type
type dw_pick from u_dw_ancestor within tabpage_pick
end type
type gb_2 from groupbox within tabpage_pick
end type
type cb_pick_select from commandbutton within tabpage_pick
end type
type cb_pick_delete from commandbutton within tabpage_pick
end type
type tabpage_pick from userobject within tab_main
cb_pick_unallocate cb_pick_unallocate
rb_pick_fefo rb_pick_fefo
rb_pick_lifo rb_pick_lifo
rb_pick_fifo rb_pick_fifo
rb_pick_default rb_pick_default
cb_replace_boxid cb_replace_boxid
dw_pick_mobile dw_pick_mobile
st_pallet st_pallet
sle_palletno sle_palletno
cbx_selectall cbx_selectall
cb_serial cb_serial
cb_wt_dims cb_wt_dims
cbx_partial_bom cbx_partial_bom
cb_lmsroute cb_lmsroute
batch_pick_t batch_pick_t
cb_pick_insert cb_pick_insert
cb_pick_generate cb_pick_generate
cb_pick_print cb_pick_print
dw_pickdetail dw_pickdetail
cb_picklocs cb_picklocs
cb_pick_copy cb_pick_copy
dw_print dw_print
cbx_show_comp cbx_show_comp
dw_pick dw_pick
gb_2 gb_2
cb_pick_select cb_pick_select
cb_pick_delete cb_pick_delete
end type
type tabpage_pack from userobject within tab_main
end type
type cb_print_sscc_label from commandbutton within tabpage_pack
end type
type cb_pack_copypaste from commandbutton within tabpage_pack
end type
type cb_lock_load from commandbutton within tabpage_pack
end type
type sle_carton_scan_t from statictext within tabpage_pack
end type
type sle_carton_scan from singlelineedit within tabpage_pack
end type
type cb_print_ship_label from commandbutton within tabpage_pack
end type
type cb_calc_carton_count from commandbutton within tabpage_pack
end type
type cbx_gen_level2_qty from checkbox within tabpage_pack
end type
type cb_ci_load_tender from commandbutton within tabpage_pack
end type
type cb_print_dn from commandbutton within tabpage_pack
end type
type cb_lmsrate from commandbutton within tabpage_pack
end type
type cbx_show_comp_pack from checkbox within tabpage_pack
end type
type cb_pack_copy from commandbutton within tabpage_pack
end type
type dw_packlist_notes from u_dw_ancestor within tabpage_pack
end type
type rb_metric from radiobutton within tabpage_pack
end type
type rb_eng from radiobutton within tabpage_pack
end type
type cb_pack_insert from commandbutton within tabpage_pack
end type
type cb_pack_generate from commandbutton within tabpage_pack
end type
type cb_pack_print from commandbutton within tabpage_pack
end type
type dw_packprint from datawindow within tabpage_pack
end type
type dw_pack from u_dw_ancestor within tabpage_pack
end type
type gb_etom from groupbox within tabpage_pack
end type
type cb_import_pack from commandbutton within tabpage_pack
end type
type cbx_sel from checkbox within tabpage_pack
end type
type cb_pack_select from commandbutton within tabpage_pack
end type
type cb_pack_delete from commandbutton within tabpage_pack
end type
type tabpage_pack from userobject within tab_main
cb_print_sscc_label cb_print_sscc_label
cb_pack_copypaste cb_pack_copypaste
cb_lock_load cb_lock_load
sle_carton_scan_t sle_carton_scan_t
sle_carton_scan sle_carton_scan
cb_print_ship_label cb_print_ship_label
cb_calc_carton_count cb_calc_carton_count
cbx_gen_level2_qty cbx_gen_level2_qty
cb_ci_load_tender cb_ci_load_tender
cb_print_dn cb_print_dn
cb_lmsrate cb_lmsrate
cbx_show_comp_pack cbx_show_comp_pack
cb_pack_copy cb_pack_copy
dw_packlist_notes dw_packlist_notes
rb_metric rb_metric
rb_eng rb_eng
cb_pack_insert cb_pack_insert
cb_pack_generate cb_pack_generate
cb_pack_print cb_pack_print
dw_packprint dw_packprint
dw_pack dw_pack
gb_etom gb_etom
cb_import_pack cb_import_pack
cbx_sel cbx_sel
cb_pack_select cb_pack_select
cb_pack_delete cb_pack_delete
end type
type tabpage_serial from userobject within tab_main
end type
type mle_2dbarcode from multilineedit within tabpage_serial
end type
type rb_2dbarcode from radiobutton within tabpage_serial
end type
type cb_copy_serial from commandbutton within tabpage_serial
end type
type sle_total_alloc_qty from singlelineedit within tabpage_serial
end type
type sle_total_req_qty from singlelineedit within tabpage_serial
end type
type st_total_alloc_qty from statictext within tabpage_serial
end type
type st_total_req_qty from statictext within tabpage_serial
end type
type cbx_print_labels from checkbox within tabpage_serial
end type
type dw_carton_serial from datawindow within tabpage_serial
end type
type scan_qty_t from statictext within tabpage_serial
end type
type sle_scan_qty from singlelineedit within tabpage_serial
end type
type cb_new_carton from commandbutton within tabpage_serial
end type
type cb_ob_serial_delete from commandbutton within tabpage_serial
end type
type cb_ob_serial_insert from commandbutton within tabpage_serial
end type
type sle_carton_no from singlelineedit within tabpage_serial
end type
type st_carton_no_t from statictext within tabpage_serial
end type
type rb_manual from radiobutton within tabpage_serial
end type
type rb_barcode from radiobutton within tabpage_serial
end type
type gb_1 from groupbox within tabpage_serial
end type
type sle_barcodes from singlelineedit within tabpage_serial
end type
type cb_undo from commandbutton within tabpage_serial
end type
type dw_serial from u_dw_ancestor within tabpage_serial
end type
type st_message from statictext within tabpage_serial
end type
type cb_generate_ob_serial from commandbutton within tabpage_serial
end type
type cbx_selallserial from checkbox within tabpage_serial
end type
type tabpage_serial from userobject within tab_main
mle_2dbarcode mle_2dbarcode
rb_2dbarcode rb_2dbarcode
cb_copy_serial cb_copy_serial
sle_total_alloc_qty sle_total_alloc_qty
sle_total_req_qty sle_total_req_qty
st_total_alloc_qty st_total_alloc_qty
st_total_req_qty st_total_req_qty
cbx_print_labels cbx_print_labels
dw_carton_serial dw_carton_serial
scan_qty_t scan_qty_t
sle_scan_qty sle_scan_qty
cb_new_carton cb_new_carton
cb_ob_serial_delete cb_ob_serial_delete
cb_ob_serial_insert cb_ob_serial_insert
sle_carton_no sle_carton_no
st_carton_no_t st_carton_no_t
rb_manual rb_manual
rb_barcode rb_barcode
gb_1 gb_1
sle_barcodes sle_barcodes
cb_undo cb_undo
dw_serial dw_serial
st_message st_message
cb_generate_ob_serial cb_generate_ob_serial
cbx_selallserial cbx_selallserial
end type
type tabpage_bol from userobject within tab_main
end type
type rb_sli from radiobutton within tabpage_bol
end type
type rb_bol from radiobutton within tabpage_bol
end type
type cb_editaddress from commandbutton within tabpage_bol
end type
type cb_bol_print from commandbutton within tabpage_bol
end type
type cb_generate_bol from commandbutton within tabpage_bol
end type
type dw_bol_prt from u_dw_ancestor within tabpage_bol
end type
type dw_bol_valeod from datawindow within tabpage_bol
end type
type dw_bol_entry from datawindow within tabpage_bol
end type
type rb_bol_combined from radiobutton within tabpage_bol
end type
type gb_letter from groupbox within tabpage_bol
end type
type tabpage_bol from userobject within tab_main
rb_sli rb_sli
rb_bol rb_bol
cb_editaddress cb_editaddress
cb_bol_print cb_bol_print
cb_generate_bol cb_generate_bol
dw_bol_prt dw_bol_prt
dw_bol_valeod dw_bol_valeod
dw_bol_entry dw_bol_entry
rb_bol_combined rb_bol_combined
gb_letter gb_letter
end type
type tabpage_carrier from userobject within tab_main
end type
type st_carrier_ship_date from statictext within tabpage_carrier
end type
type em_carrier_ship_date from editmask within tabpage_carrier
end type
type dw_carrier_labels from datawindow within tabpage_carrier
end type
type cb_carrier_labels from commandbutton within tabpage_carrier
end type
type cb_save_carrier_defaults from commandbutton within tabpage_carrier
end type
type cb_export_to_carrier from commandbutton within tabpage_carrier
end type
type dw_carrier from datawindow within tabpage_carrier
end type
type tabpage_carrier from userobject within tab_main
st_carrier_ship_date st_carrier_ship_date
em_carrier_ship_date em_carrier_ship_date
dw_carrier_labels dw_carrier_labels
cb_carrier_labels cb_carrier_labels
cb_save_carrier_defaults cb_save_carrier_defaults
cb_export_to_carrier cb_export_to_carrier
dw_carrier dw_carrier
end type
type tabpage_trax from userobject within tab_main
end type
type cb_trax_clearall from commandbutton within tabpage_trax
end type
type cb_trax_selectall from commandbutton within tabpage_trax
end type
type cb_trax_print_label from commandbutton within tabpage_trax
end type
type cb_trax_void from commandbutton within tabpage_trax
end type
type cb_trax_ship from commandbutton within tabpage_trax
end type
type dw_trax from u_dw_ancestor within tabpage_trax
end type
type tabpage_trax from userobject within tab_main
cb_trax_clearall cb_trax_clearall
cb_trax_selectall cb_trax_selectall
cb_trax_print_label cb_trax_print_label
cb_trax_void cb_trax_void
cb_trax_ship cb_trax_ship
dw_trax dw_trax
end type
type tabpage_shipments from userobject within tab_main
end type
type cb_confirm_shipment from commandbutton within tabpage_shipments
end type
type cb_remove_from_shipment from commandbutton within tabpage_shipments
end type
type st_1 from statictext within tabpage_shipments
end type
type dw_shipments from u_dw_ancestor within tabpage_shipments
end type
type tabpage_shipments from userobject within tab_main
cb_confirm_shipment cb_confirm_shipment
cb_remove_from_shipment cb_remove_from_shipment
st_1 st_1
dw_shipments dw_shipments
end type
type tabpage_load_plan from userobject within tab_main
end type
type dw_load_plan from datawindow within tabpage_load_plan
end type
type tabpage_load_plan from userobject within tab_main
dw_load_plan dw_load_plan
end type
type dw_scanner from u_dw_ancestor within w_do
end type
type dw_print_invoice from datawindow within w_do
end type
end forward

global type w_do from w_std_master_detail
integer width = 4805
integer height = 2896
boolean vscrollbar = true
event ue_pack_print ( )
event ue_process_bol ( )
event ue_print_bol ( )
event ue_generate_pack ( )
event type integer ue_confirm ( )
event ue_select_customer ( )
event ue_generate_gemini ( )
event ue_backorder ( )
event ue_load_carrier ( )
event ue_carrier_labels ( )
event ue_create_workorder ( )
event ue_process_shipments ( )
event ue_update_serial_id ( )
event ue_notes ( )
event ue_generate_pick_server ( )
event ue_edit_warehouse_address ( )
event ue_select_warehouse ( )
event ue_select_customer_3rdparty ( )
event ue_select_customer_rt ( )
event ue_generate_carrier_pro ( )
event ue_noscroll pbm_vscroll
event mysyscmd pbm_syscommand
event ue_pick_pallet ( )
event ue_move_pallet ( )
event ue_pick_mixed ( )
event ue_enter_serial_numbers ( )
event ue_tms_unlock ( )
event ue_pro_unlock ( )
dw_scanner dw_scanner
dw_print_invoice dw_print_invoice
end type
global w_do w_do

type prototypes

end prototypes

type variables


Datawindow idw_main
Datawindow idw_other
Datawindow idw_detail
Datawindow idw_pick
Datawindow idw_print
Datawindow idw_packprint
Datawindow idw_bol
Datawindow idw_serial
Datawindow idw_carrier
Datawindow	idw_packlabels
Datawindow idw_scanner 			//GAP1202
Datawindow idw_pick_detail
Datawindow idw_pack
Datawindow idw_search
Datawindow idw_result
Datawindow	idw_trax
DAtawindow	 idw_Shipments
Datawindow idw_carton_serial  //TimA 08/14/13
Datawindow	 idw_Mobile /* 09/14 - PCONKL */
Datawindow idw_load_plan
n_ds_content ids_content
n_cst_common_tables ln_common_tables
datastore ids_compare,ids_default_address, ids_Alt_Addresses, ids_print_format, ids_st, ids_carrier, ids_carrier_Pro_warehouse
datastore idsEdiContainers		// GailM 8/18/14 883
Datawindowchild idwc_address, idwc_supplier,idwc_carrier,idwc_carton_type, idwc_FreightTerms
Datastore ids_Functionality_Manager  //TimA 07/16/15

//Gailm 05/28/2013 Pandora Issue 605 - Multi select ord status and OTM ord status
//uo_multi_select_search StatusSelect
//uo_multi_select_search OTMStatusSelect
Boolean ib_show_ord_status = false
Boolean ib_show_otm_ord_status = false
Boolean ib_show_mobile_status = false
Boolean ib_ariens_on_hold_service_call = false
Boolean ib_ShortShipEnabled, ib_under_picked, ib_ShortShipUnlocked, ibResetUpdateRequired
Boolean ib_access=False

String isTMSstatus					//GailM 11/19/2018 S25773:  N = NotTMS, T = TMS, & Z = TMS overriddent
string is_shipment_id,is_eng,is_metric // Dinesh - 02082022

//GailM 1/2/2018 I357 F5734 S14571 PAN - HRI Alert for High Risk Inventory
Boolean ib_hri_ind,ib_readonly= False
long inewindex

Long ll_checkboxrow,il_userspid

//TimA 03/26/13
Datawindowchild idw_From_Loc
String isWareHouse

n_labels	iuo_labels

//TimA Pandora #476
Datastore idsNotes

//TimA Pandora issue #560
Datawindowchild idwc_IM_Coo_Pick,idwc_IM_Coo_Pack

//TAM W&S 2011/01 Added DDDW
Datawindowchild idwc_lot_no, idwc_detail_uf2

//TimA 04/09/13 Pandora issue #560
Datawindowchild ldwc_ItemMasterCoo,ldwc_ItemMasterCooPack

String is_bonded // TAM W&S 2012/12
String isSelSku    // Gailm 09/25/2017

//TimA 01/03/12 OTM Project
String isOTMEnabled
String isDeleteSkus[]  //Capture Sku's before the order is deleted
String isDoNoDelete
String isShipmentChangedFlag
String isFlagDeleteOTM
Long ilUpdateOTM
Boolean ib_ConfirmButtonStatus
//TimA 05/22/12 Pandora issue #407
//Flag called when Outbound Dashboard is searching the records.
Boolean ib_SearchCalledFromDashboard
Long ll_Skip_OTM, ll_SkipOTMFlag //Sometime we need to skip a call to OTM for Enterprise orders.

//TimA 09/28/12 Pandora issue #514  flag forCommercial invoice
//GailM 07/03/2017 - SIMSPEVS-654 - Add boolean ibMIM to identify an order as MIM
Boolean ibEUFlag
Boolean ibDejaVu, ibLPN, ibMIM, ibFootprint, ibCntrSerial	 //TAM 2018/02 S141838  GWM 20180220 DE3189
String is_find_match // Dinesh - SIMS-198 - Screen lock orders

Datawindowchild idwOTM_Status
n_otm i_otm

SingleLineEdit isle_order
SingleLineEdit isle_order2
CommandButton  icb_void, icb_confirm, icb_Hold
CommandButton icb_det_insert, icb_det_delete
CommandButton icb_pick_insert, icb_pick_delete, icb_wt_dims
CommandButton icb_pick_generate, icb_pick_print,icb_pick_copy, icb_pick_unallocate
CommandButton icb_pack_insert, icb_pack_delete
CommandButton icb_pack_copy, icb_pack_print, icb_Shipment, icb_ReadyToShip, icb_notes, icb_ship_docs
CommandButton icb_ci_load_tender, icb_serial, icb_import_ib, icb_lock_load,icb_lock_load_google

String is_sql,isoriqsqldropdown
String is_dono, is_sku,is_order_new
String is_content_sql
String is_pd_sql
String dw_
String is_bolno,isColumn, isCurrentSku
String is_text[5]
string is_OldNew
boolean ib_generate
boolean ib_order_from_first
boolean ib_order_to_first
boolean ib_complete_from_first
boolean ib_complete_to_first
boolean ib_gemini
boolean	ibCarrierSelected
Boolean	ibMultipleSKU, ibSkuScanned, ibCCCFirstSave, ibPackModified, ibPackNotified, ibSerialModified
w_do iw_window
Long	ilCurrPickRow,ilComprow,ilUndoRow,ilRetrieveRow,ilParentQty
integer ilPvhtest
n_warehouse i_nwarehouse
n_cst_order i_order
boolean ib_print, ibDeliveryDateChanged
//For 3COM_Nash LMS Socket Route/Rate call
CommandButton icb_LMSRoute
CommandButton icb_LMSRate
boolean ib_LMSSocket
Datastore	ids_pick_detail
String	isSerialSKU[]
Long		ilSerialLine[], ilSerialID[]
Boolean	ibSerialsUpdated , ib_qtyentered , ibScanQtyNeeded
String 	is_Ready_Or_Confirm //dts - new 'Ready' functionality for 3COM (to send ASN before goods actually ship)
String 	is_Status_Db //TAM 2005/03/23 - Store Status of order master from the database.  
Tab	ITAddress
u_nvo_carton_serial_scanning iuo_carton_serial_scanning
window iwparent
// pvh 12/01/05
string isCurrentPackCartonId
// pvh 12/08/05
string ispicksuppliers[]
decimal idpicksupplierqty[]
string ispacksuppliers[]
decimal idpacksupplierqty[]
string isInvalidSku
string isInvalidSupplier
boolean ib_pack
// pvh 02/03/06
datastore idsparentskbychild

int	iiPackSupplierIndex
int	ilSetRow

inet	linit
u_nvo_websphere_post	iuoWebsphere
Long	ilcartonNo
long ilComponent_no, ilParent_rowno, ilParent_maxrow // 01/03/2011 ujh: S/N_Pfx1:   

// pvh - 11/21/06
boolean ibcalcAllocated
boolean	ibPickModified
Boolean	ibServerAllocationEnabled, ibUnconfirmRequested, ibUnconfirmFullCircle
Boolean ib_enable_bol // Dinesh -S66897

u_nvo_check_digit_validations iuo_check_digit_validations
String	isPandoraToProject
//TimA 03/26/13 Pandora issue #595
String isSchCode

boolean ib_autotask // Flag to bypass messageboxes etc. when running AutoTask Utilities.

datastore ids_compare_underscanned, ids_skuserialhold,ids_hazardoussku

Boolean ibMorkKitOrder

String is_sku_bg_color_init_expression

String is_warehouse_cd, is_warehouse_country, is_to_country
Boolean ib_eu_to_eu

string isGenericSearchColumnNameValue[]

BOOLEAN bChange_cf_owner_name_Allowed		// ET3 2013-01-04 Pandora requires F10 override to access 
														// 	see doubleclicked event of detail tab 
string isinvoice_no //08-Feb-2013  :Madhu added	

string is_batch_message[] //Added for Mutli-Confirm
boolean ib_batchconfirmmode
String isLabelPrinter

//TimA 11/13/13 Pandora issue #637 new varable for picking pallets
Boolean ib_LPN_PickByPallet

//TimA 12/12/13 Pandora issue #671.  Requires Authorization to confirm the order
Boolean ib_Authorize
String  is_AuthorizeType

str_pscan_resp str_resp

Boolean	ibProjectRequiresScanQty
Long	ilScanRow

//TimA 04/23/14 Pandora issue #36 Re-Confim detail lines
String isDetailRecordsToReConfirm

Boolean	ibConfirmShipment
//TimA 06/05/14 Pandora issue #855 boolean for the copy rows button on the pack list tab
Boolean ibCopied,ib_search= True
String isSkuCopied

String is_warehouse_of_create_inbound		// 	Missing confirmation changes - LTK 20141218 

//TimA 01/29/15 Pandora issue #859 change Box ID's
String is_ShowBoxChange
Long il_SingleBoxIdSwap, il_DblClkPickRow

//GailM 06/15/2015 Named Fields First visible and non-protected column
String is_nfNextTab

//GailM 06/20/2017 Pandora SIMSPEVS-605 - Validate BoxIDs - Do not allow pack and serial lists to be generated while there are BoxIDs to scan
Long il_ContainerTracked
Long il_CountNotScanned
boolean ib_lock= True

//TimA 07/16/15
String is_BoxIDLookup
Boolean ibkeytype =FALSE //17-Aug-2015 :Madhu- Added code to prevent Manul scan
Boolean ibmouseclick =FALSE  //17-Aug-2015 :Madhu- Added code to prevent Manul scan
Boolean ibPressF10Unlock =FALSE //17-Aug-2015 :Madhu- Added to prevent Manul scanning
String is_dangerous_item	//02-Jun-2016 Madhu Added to capture Dangerous Item.
Long 	il_detail_row //02-Jun-2016 Madhu Added to capture Dangerous Item Row.
long	ilPackRow, ilPickLineItemNo

//TAM 2018/02 - S14838 
String is_OM_Enabled_Ind//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab

Boolean ibGenerateFromSerial					// Moved from ue_generate_pack to parent
Boolean ibMixedSerialPickRows   				// Both serialized and non-serialized pick rows.  Pack rows generated from Serial# and Pick Tabs
Boolean ibSerialRows								// There are serialized rows
Boolean ibWHExceptionFromSerialScan 		// Lookup table exceptions from scanning serial numbers.  Serialized records will be pulled from pick list
Boolean ibSerialCartonNoChanged				// Allow carton number to change in serial tab but, during Serial Save, re-generate Pack List serialized rows
Boolean ibSerializedOnly							// Serialized Only

//GailM 6/13/2018 S19742 Edge Configuration
datastore idsEdgeConfiguration
String isEdgeList, isHriList, isDangerList, isDefectList, isDriveList, isPackagingInd
String isEdgeComment, isHriComment, isDangerComment, isDefectComment, isDriveComment

//Gailm 6/26/2018 S20849 F8117 I1026 Google Footprint Partial Containers
String isPallet, isContainer, isWhCode, isSupplier
Boolean ibCanSplitContainer, ibSplitContainerRequired
Boolean ibEscape = FALSE	//GailM DE15963
String isLoad_Status, isLoadId //TAM 2018/08 S22531
Boolean ibSelected, ibPharmacyProcessing
String is_pack_po_no2,is_display_name,is_userid,is_invoice_no,is_user_id
long il_find_matchW,il_find_matchR
end variables

forward prototypes
public subroutine of_space ()
public function integer wf_set_pick_filter (string as_action)
public subroutine wf_bol_adjust ()
public function integer wf_set_pack_filter (string as_action)
public function integer wf_check_valid ()
public function integer wf_check_confirm ()
public function integer wf_coo_validation (datawindow adw_serial, integer al_row)
public subroutine wf_assignetom (integer ai_number)
public subroutine wf_check_status ()
public subroutine wf_clear_screen ()
public function integer wf_validation ()
public function integer wf_update_content ()
public function integer wf_address_tab_enable (boolean abenable)
public function integer wf_save_carton_serial ()
public subroutine wf_set_filter_carton_type ()
public function window getparentwindow ()
public subroutine setparentwindow (ref window awin)
public function integer wf_enable_trax ()
public function integer dosuppliercheck ()
public function boolean getpacksupplierfor (string _supplier)
public subroutine doresetsupplierarrays ()
public function integer dosupplierqtycheck ()
public subroutine setpacksupplierindex (integer _value)
public function integer getpacksupplierindex ()
public subroutine setinvalidsupplier (string _value)
public function string getinvalidsupplier ()
public function string getinvalidsku ()
public subroutine setinvalidsku (string _value)
public function boolean parentskuisbundled (string _parentsku)
public subroutine setpacksupplier (string _sku, string _supplier, decimal _qty, long _line)
public subroutine setpicksupplier (string _sku, string _supplier, decimal _qty, long _line)
public subroutine dodisplaymessage (string _title, string _message)
public subroutine setserialcarton (integer _lineitemno, string _sku, string _supplier, string _oldcarton, string _newcarton)
public function integer wf_validate_pack_carton (string ascarton)
public subroutine setcartonno (long value)
public function long getcartonno ()
public subroutine setcalcallocated (boolean value)
public function boolean getcalcallocated ()
public function integer wf_update_content_server ()
public function boolean set_shipment_dates ()
public function integer uf_update_carton_rows (integer airow, string ascolumn, decimal advalue)
public function integer uf_update_carton_rows (integer airow, string ascolumn, string asvalue)
public subroutine wf_check_shipment ()
protected function integer uf_enable_first_carton_row (integer airow, string ascarton)
public function integer wf_convert (ref string as_std, integer ai_ind, integer ai_row)
public function string pandora_getowner (string astype, string asvalue)
public function string pandora_getwarehouse (string as_cust)
public function integer wf_post_pick_list_generate (integer ai_row)
public function integer wf_lock (boolean ab_lock)
public function boolean f_packprint_pandora ()
public function integer wf_serial_no_validation (datawindow adw_serial, integer al_row)
public subroutine wf_populate_coo_pandora ()
public subroutine wf_populate_coo_dropdown (ref datawindow adw_current, string as_coo, long al_row)
public function integer wf_set_active_parent_range (long al_row, ref long al_parent_rowno, ref long al_parent_maxrow, ref datawindow aw_serial)
public function integer wf_restore_component_no (ref datawindow adw_serial)
public function integer wf_validate_serial_numbers (string as_sku, string as_serialno, string as_tableid)
public function integer wf_check_status_emc ()
public function integer wf_enable_trax_data_entry ()
public function integer uf_nike_export_to_scanner ()
public function integer uf_config_custom_buttons ()
public function integer uf_nike_import_from_scanner ()
public function boolean wf_skus_have_valid_weight_dims ()
public function integer wf_check_if_shuttle_order (string as_project)
public subroutine wf_set_otm_message (string as_action)
public function integer wf_check_for_otm_updates (string as_datawindowname, string as_columnname)
public function integer wf_enable_otm_status ()
public subroutine getdeletedskus ()
public function integer uf_nike_verify_pack (boolean abshowerrormsg)
public function boolean wf_set_state_ci_lt_button ()
public function boolean wf_fwd_transferorder ()
public function integer uf_stryker_validate_against_file ()
public function integer wf_export_ws_tradenet_ipt ()
public function integer wf_export_ws_tradenet_out ()
public function boolean wf_embargoed_country_check (string as_country, boolean ab_acceptoverride)
public function boolean wf_is_country_eu_to_eu (string as_from_country, string as_to_country)
public function integer wf_set_embargo_override_authorization ()
public function integer wf_create_inbound (ref datawindow adwmain, ref string ab_error_message_title, ref string ab_error_message)
public subroutine wf_update_from_loc (datawindowchild as_dw_child)
public subroutine uf_showhide_status (string as_status)
public function integer wf_display_message (string as_message)
public function long wf_validate_skuserialhold ()
public function integer wf_serial_swap (integer airow, string asorigserial, string asnewserial)
public function integer getnbrchecked ()
public function string wf_set_pack_carton (long alcurrentrow)
public function boolean wf_authorize (string as_dono, string as_authorizetype)
public function integer pandora_getlpn (string asvalue)
public function integer uf_process_pack_complete ()
public function integer uf_send_websphere_gi (string astype)
protected function boolean wf_select_reconfirm_records (string as_dono)
public function integer wf_check_serials_scanned ()
public function boolean getauthorize (string as_dono, string as_authorizetype)
public function boolean remauthorize (string as_dono, string as_authorizetype)
public subroutine resetordstatus (string as_dono, string as_status)
public function string wf_is_confirming (string as_dono)
public function integer uf_generate_container_scan ()
public function integer wf_check_status_mobile ()
public function integer wf_check_confirm_mobile ()
public function integer wf_duplicate_serial_no_scan_validation (string as_sku, string as_serialno, string as_ownercd)
public subroutine wf_reset_serial_flag ()
public function integer uf_print_a4_label_puma ()
public function integer wf_named_field_enable (boolean abenable)
public function string wf_tab_next (str_multiparms astr_parms)
public function integer uf_print_h2o_invoice ()
public subroutine wf_check_dana ()
public function integer wf_batch_validation (string asdono)
public function integer wf_check_carrier_dangerous_goods ()
public function integer uf_generate_kendo_level2_carton_count ()
public subroutine wf_check_container_scanned ()
public function integer wf_check_sscc_no ()
public function integer wf_return_to_stock ()
public subroutine wf_refresh_serial_flag ()
public function integer wf_multiple_coo_validation (string as_wh_code)
public function string uf_get_serialnos (string as_sku, string as_carton_no)
public function integer wf_set_special_packaging_comments ()
public function integer wf_check_footprint_containers ()
public function integer wf_is_footprint_pallet_allocated ()
public function integer wf_create_edi_outbound_expansion (string as_invoiceno, long al_batchseq, long al_new_batchseq)
public function string wf_is_pallet_allocated (string aspallet, datawindow adwpick, string aswhcode, string assku, string ascontainer)
public function integer wf_pick_pack_qty_validation (boolean lb_confirm_button_clicked)
public function integer wf_pick_pack_qty_comparision ()
public function integer wf_pick_pack_container_qty_validation (boolean lb_confirm_button_clicked, boolean lb_pack_print_button_clicked, boolean lb_ci_button_clicked)
public function integer wf_check_pack_predelete_validation (integer airowind[])
public function integer wf_riverbed_enable_serial_tabpage ()
public function string getlocationtype (string aswhcode, string aslocation)
public function string addcomma (string asinput, string asallinput)
protected function integer uf_print_a4_label ()
public subroutine f_crossdock ()
public subroutine wf_set_carton_type ()
public subroutine wf_delivery_order_readonly (boolean ab_read)
end prototypes

event ue_pack_print();// This event prints the Packing List which is currently visible on the screen 
// and not from the database - JC
 
// Any custom Pack Print routines are called from the clicked event of the print button
 
// pvh - 09/15/06 bluecoat
string trackingids = 'Tracking Ids: '
string acomma = ", "
string ls_trax_acct_no, ls_logo		// SIMSPEVS-644
 
Long ll_cnt, i, j, llRow, llLineItemNo,llFindCount, llFindRow, llhazCount, llHazPos, llNotesCount, llNotesPos
Decimal ld_weight, ld_costcenter
String ls_address,lsfind,ls_text[], lscusttype, lscustcode, lsSerial, lsNotes
String ls_project_id , ls_sku ,lsSKUHold,  ls_description,ls_alt_sku, ls_supplier, lsHazCode, lsHazText, lsTransportMode
String ls_inventory_type_desc,ls_etom, lsSupplierName, lsDONO
String lsWHCode,lsaddr1,lsaddr2,lsaddr3,lsaddr4,lscity,lsstate,lszip,lscountry,lsname,lsVAT, lsUPC, lsPrinter, lsVol, lsNativeDesc, lsGrp
 string lsName_to,lsaddr1_to,lsAddr2_to,lsaddr3_to,lsaddr4_to,lsCity_to,lsState_to, lsZip_to,lsCountry_to,lstel,lsemail,ls_cust // Dinesh - 11/25/2020- S51458- Put away H2O Print
String ls_d_packing_prt, lsCartonType,ls_Ord_Type
//TAM W&S 
String lsim_uf11, ls_first_carton_row
Long llim_qty2
string lsUF1,lsUF2,lsUF3

Datastore       ldsHazmat, ldsNotes
 
string ls_dono
str_parms	lstrParms

SetNull(ls_logo)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//10/11/2010 ujh: part of Extending the description field in packing list for pandora (supplier removed in this object)
if upper(gs_project) = 'PANDORA' then
	ls_d_packing_prt = 'd_packing_prt_Pandora'
else
	ls_d_packing_prt = 'd_packing_prt'
end if
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
// pvh - 09/18/06 - Added packing print do to project table.
string PackDo
PackDo = g.getPackPrintDo()
idw_packPrint.Dataobject = ls_d_packing_prt   //10/11/2010 ujh allow for dataobject with supplier column removed
if PackDo > '' then idw_packPrint.Dataobject = PackDo
// eom

//Any Custom Packing Lists without custom logic (just logos, etc.)
//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
If Upper(gs_project) = 'GM_MONTRY'  then // GM_MONTRY uses 2 custom packing lists
		  // gap 09/2002 Get PDC 
		  lscusttype = "NOT PDC" 
		  lscustcode =    idw_main.GetItemstring(1,"cust_code")
		  select customer_type 
		  into :lscusttype        
		  from Customer
		  where project_id = :gs_project and cust_code = :lscustcode ;
		  idw_packPrint.Dataobject = 'd_saltillopdc_packing_prt'
ElseIf upper(gs_project) = 'EUT' then
		  idw_packPrint.Dataobject = 'd_eut_packing_prt'          
ElseIf upper(gs_project) = 'RUN-WORLD' OR upper(gs_project) = 'GIGA'  then
		  idw_packPrint.Dataobject = 'd_rw_packing_prt'                   
ElseIf Upper(gs_project) = 'IRONPORT' Then //TAM 2007/09/06 -  Added a Logo to the generic packing list.  
		  idw_packPrint.Dataobject = 'd_ironport_packing_prt'
ElseIf Upper(gs_project) = 'DB-SLOB' Then 
		  idw_packPrint.Dataobject = 'd_dbslob_packing_prt'       
ElseIf Upper(gs_project) = 'PHILIPS-SG' or Upper(gs_project) = 'PHILIPSCLS' or Upper(gs_project) = 'PHILIPS-DA'  & 
	or Upper(gs_project) = 'TPV'  or Upper(gs_project) = 'FUNAI'  or  Upper(gs_project) = 'GIBSON'  Then /* 12/12 - PCONKL - added TPV */  //TAM 2015/01/26 Added Gibson   //GailM 11/18/2020 S51441
		  idw_packPrint.Dataobject = 'd_philips_packing_prt'  
ElseIf Upper(gs_project) = 'PHILIPS-TH' Then 
		  idw_packPrint.Dataobject = 'd_philips_th_packing_prt'  		  
// TAM W&S 03/2011
ElseIf Upper(Left((gs_project),3)) = 'WS-' Then 
		  idw_packPrint.Dataobject = 'd_ws_muser_packing_prt'  		  
ElseIf Upper(gs_project) = 'WARNER' Then 		
		//Jxlim 08/24/2010 For any other project if dw report object has value use its value else use generic English version
		// MEA 10/10/11 - Uncommented dataobject assignment and commented If PackDo > '' code.
		  idw_packPrint.Dataobject = 'd_warner_packing_prt' 
//		If PackDo > '' Then 
//			idw_packPrint.Dataobject = PackDo
//		Else
//			idw_packPrint.Dataobject = ls_d_packing_prt     //10/11/2010 ujh allow for dataobject with supplier column removed
//		End If
		//Jxlim 08/24/2010 end of Modification for Chinese Report.
Elseif Upper(gs_project) = 'PHXBRANDS' AND (Trim(idw_main.GetItemstring(1,"cust_code")) = "1021000002" OR Trim(idw_main.GetItemstring(1,"cust_code")) = "1021000004") Then
	
		  idw_packPrint.Dataobject = 'd_phxbrands_canadian_tire_packing_prt'
		  
ElseIf Upper(gs_project) = 'NYX' Then /* 08/13 - PCONKL */
	
		//DEtermine whether we are printing master or carton level...
		open(w_packlist_print_Type)
		lstrparms = Message.PowerobjectParm
		if lstrparms.cancelled then 
			return
		ElseIf lstrparms.String_arg[1] = 'M' Then /* master*/
			idw_packPrint.Dataobject = 'd_packing_prt_nyx' 
		else /* carton level*/
			idw_packPrint.Dataobject = 'd_packing_prt_nyx_container' 
		End If
		
//Jxlim 09/10/2014 anki Packing List
//TAM 11/18/2015 Separate anki Packing List for US warehouse vs Europe warehouse(This will change in the future when ANKI starts sending an
// Indicator which packilist should print.
// Currently commented out untill ANKI is ready.
ElseIf Upper(gs_project) = 'ANKI'  Then 
//	If Upper(idw_main.getitemstring(1,"wh_code")) <> 'ANKI-EMU' Then
//		  idw_packPrint.Dataobject = 'd_packing_prt_anki_magento' 
//	Else
		  idw_packPrint.Dataobject = 'd_packing_prt_anki' 
//	End If

//1-May-2015 Madhu - Added for TCI Packing List
ElseIf Upper(gs_project) ='TCI' Then
		idw_packprint.Dataobject='d_packing_prt_tci'

		// 10/2015 - ASPEN - A couple of fields for ASPEN only
Elseif upper(gs_project) = 'ASPEN' Then
		  idw_packPrint.Dataobject = 'd_packing_prt_aspen' 
ElseIf Upper(gs_project) = 'H2O' Then /* 01/16 - PCONKL */
		 // idw_packPrint.Dataobject = 'd_packing_prt_h2O'
		 ls_Ord_Type=idw_main.GetITemString(1,'ord_type') // Dinesh -03/31/2021- S55411- H2O+ - SIMS: Update Packing Lst 2
		 //messagebox('',ls_Ord_Type)
		if ls_Ord_Type='E' then
		  	idw_packPrint.Dataobject = 'd_packing_prt_h2O_new' // Dinesh - 11/25/2020- Packing list H2O
		else
		  	idw_packPrint.Dataobject = 'd_packing_prt_h2O'
		end if
Else
	//Jxlim 08/20/2010 For any other project if dw report object has value use its value else use generic English version
		If PackDo > '' Then 
			idw_packPrint.Dataobject = PackDo
		Else
				 //10/11/2010 ujh USE VARIABLE TO allow for dataobject with supplier column removed
				 idw_packPrint.Dataobject = ls_d_packing_prt //GAP1203 added the default packing   
		End If
		//Jxlim 08/20/2010 end of Modification for Chinese Report.
End If 	 
  
SetPointer(HourGlass!)
If idw_pack.AcceptText() = -1 Then
        tab_main.SelectTab(3) 
        idw_pack.SetFocus()
        Return 
End If
 
If ib_changed then /* we want to make sure the validation routine is run before printing*/
        Messagebox(is_title,'Please save changes before printing Pack List.')
        Return
End If
 
//No row means no Print
ll_cnt = idw_pack.rowcount()
If ll_cnt = 0 Then
        MessageBox("Print Packing List"," No records to print!")
        Return
End If
 
//Clear the Report Window (hidden datawindow)
idw_packprint.Reset()
ls_project_id = idw_main.getitemstring(1,"project_id")

// Jxlim 07/17/2013 SkuSerialHold validation; If Sku/Model is on Hold do not allow packing generation, initiated by Arien	
If  Upper(gs_project) = 'ARIENS' Then
	If wf_validate_skuserialhold() < 0 Then	
		If MessageBox('Sku/Model', "SKU/Model is on hold. Do you want to print anyway?.", Question!, YesNo!) = 2 Then
			Return 
		End If
	End If
End If
 
// 07/00 PCONKL - Get The Ship from info from the Project Table
// 04/04 - PCONKL - Some projects using standard PL are using Warehouse Address instead of Project Address
// 09/08 - PCONKL - Added 'DIEBOLD'
// 05/09 - PCONKL - Added Philips and Pandora
 
// *** 07/09 - PCONKL - All baseline Packing Lists now pulling Ship From address fom Warehouse table.
//      ***                                             For those projects that were pulling from Project, the address info has been copied over to the Warehouse table. This should be transparent to the users
 
// If Upper(gs_Project) = 'PHXBRANDS'  or Upper(gs_Project) = 'PHILIPS-SG' or Upper(gs_Project) = 'PANDORA'  Then
        
        lsWHCode = idw_main.getitemstring(1,"wh_code")
        
        Select WH_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country,tel,email_address
        Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry,:lstel,:lsemail
        From warehouse
        Where WH_Code = :lsWHCode
        Using Sqlca;
		
 
//Else
        
//      Select Client_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country, vat_id
//      Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry, :lsVat
//      From Project
//      Where Project_id = :gs_project
//      Using Sqlca;
        
//End If
 
// 05/09 - PCONKL - For Philips, we want to show Delivery Notes, 12/12 - added TPV  //Jxlim 09/12/2014 Added Anki
// 6/13 - MEA - Added FUNAI
//TAM 2015/01/26 Added GIBSON
//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
If gs_project = 'PHILIPS-SG' OR gs_project = 'PHILIPS-TH' OR gs_project = 'PHILIPSCLS' OR gs_project = 'PHILIPS-DA' OR gs_project = 'TPV'  &
	OR gs_project = 'FUNAI'  OR gs_project = 'ANKI'  OR gs_project = 'GIBSON'  Then
        
        idw_packprint.Modify("delivery_notes_t.text = ''")
        
        ldsNotes = Create DataStore
        ldsNotes.dataobject = 'd_dono_notes'
        ldsNotes.SetTransObject(SQLCA)
        
        lsDONO = idw_Main.GetItemString(1,'do_no')
        lsNotes = ""
                
        llNotesCount = ldsNotes.Retrieve(gs_project,lsDONO)
        For llNotesPos = 1 to llNotesCount
                        
                //Only want header notes
                If ldsNotes.GetItemNumber(llNotesPos,'line_item_No') = 0 Then
                        lsNotes += ldsNotes.GetITemString(llNotesPos,'note_text') + " "
                End If
                                
        Next
        
        If lsNotes > '' Then
                idw_packprint.Modify("delivery_notes_t.text = '" + lsNotes + "'")
        End If
        
End If /*Philips*/
 
 
//02/02 - PCONKL - Hazardous material stuff for GM hahn
ldsHazmat = Create Datastore
ldshazmat.dataobject = 'd_hazard_text'
ldshazmat.SetTransObject(SQLCA)
 
lsTransPortMode= idw_main.GetITemString(1,'transport_Mode') /* used for printing haz mat info*/
	
	// Get the cost center.
	nvo_order lnvo_order
	lnvo_order = Create nvo_order
	lnvo_order.f_getcostcenter(1, ld_costcenter)
	Destroy lnvo_order
 
//Loop through each row in Tab pages and grab the coresponding info
For i = 1 to ll_cnt
        
        j = idw_packprint.InsertRow(0)
        
 
        //Get SKU, Description and Quantities  04/05/00 PCONKL - include user field5 as pdc_whse_loc
        // 02/02 - PConkl - include hazardous text cd
        
        ls_sku = idw_pack.getitemstring(i,"sku")
        ls_supplier = idw_pack.getitemstring(i,"supp_code")
        llLineItemNo = idw_pack.GetITemNumber(i,'line_item_no')
        
        If ls_SKU <> lsSKUHold Then
                
                select description, weight_1, hazard_text_cd, part_upc_Code, user_field8, native_description, grp, qty_2, user_field11    /* 05/09 - PCONKL - UF8 = Volume for Philips */ /* TAM W&S 2011/03 added qty2 and uf11 */
                into :ls_description, :ld_weight, :lshazCode, :lsUPC, :lsVol, :lsnativeDesc, :lsGrp, :llim_qty2, :lsim_uf11
                from item_master 
                where project_id = :ls_project_id and sku = :ls_sku and supp_code = :ls_supplier ;
                
        End If /*Sku Changed*/
        
        lsSkuHold = ls_SKU
 
		 // 01/10 - PCONKL - Native (Chinese) description and Grp for Warner
			If upper(gs_Project) = 'WARNER' Then				
				ls_description = trim(lsnativeDesc)				
				idw_packprint.setitem(j,"item_grp",lsGrp)
			Else
	      	  ls_description = trim(ls_description)
			End If
        
        // 02/02 PCONKL - If there is hazardous material text for this SKU/Ship Method, retrieve the text for the report
        lshazText = ''
        If lshazCode > '' Then /*haz text exists for this sku*/
                llhazCount = ldsHazmat.Retrieve(gs_project,lshazCode,lsTransportMode)
                If llHazCount > 0 Then
                        For llHazPos = 1 to llHazCount
                                lsHazText += ldshazMat.GetItemString(llHazPos,'hazard_text') + '~r'
                        Next
                End If
        End If /*haz text exists*/
 
 
        IF UPPER(gs_project) = 'GM_MI_DAT' then
                        idw_packprint.setitem(j,"user_field8",idw_main.getitemstring(1,"user_field8"))
        end if
        
        //Set all Items on the Report by grabbing info from tab pages
		
		//Warner using UF18 for Cust Order No
		If upper(gs_project) = 'WARNER' Then			
			 idw_packprint.setitem(j,"ord_no",idw_main.getitemstring(1,"User_Field18"))
		Else
		   idw_packprint.setitem(j,"ord_no",idw_main.getitemstring(1,"cust_order_no"))
		End IF
		//TAM W&S Added Qty2 from Item Master 
		If Upper(Left((gs_project),3)) = 'WS-' Then			
//			 idw_packprint.setitem(j,"im_qty2",llim_qty2)
			 idw_packprint.setitem(j,"pack_size",lsim_uf11)
		End IF
		
		///XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		// BCR 22-SEP-2011: Franke_TH/Baseline modification for Serial No Capture
		IF Upper(gs_project) = 'FRANKE_TH' THEN
			CHOOSE CASE idw_pack.getitemString(i,"serialized_ind") 
				CASE 'Y', 'B'
					idw_packprint.setitem(j,"sn_scan", 'Y')
				CASE ELSE
					idw_packprint.setitem(j,"sn_scan", 'N')
			END CHOOSE
		END IF
		///XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
        idw_packprint.setitem(j,"costcenter", string(ld_costcenter))
        idw_packprint.setitem(j,"carton_no",idw_pack.getitemString(i,"carton_no")) /*Printed report should show carton # from screen instead of row #*/

		//TAM 2015/01/26 BOL is Customer Number for ANKI- Invoice Number for everyone else
		If  gs_project = 'ANKI'  and not isNull(idw_main.getitemstring(1,"cust_order_no")) and idw_main.getitemstring(1,"cust_order_no") <> ''then
	 	  idw_packprint.setitem(j,"bol_no", idw_main.getitemstring(1,"cust_order_no"))
		Else
		  idw_packprint.setitem(j,"bol_no",is_bolno)
		End If
		
        idw_packprint.setitem(j,"freight_terms",idw_other.getitemstring(1,"freight_terms"))     
        idw_packprint.setitem(j,"cust_code",idw_main.getitemstring(1,"cust_code")) /* 5/3/00 PCONKL*/
        idw_packprint.setitem(j,"city",idw_main.getitemstring(1,"city"))
        idw_packprint.setitem(j,"country",idw_main.getitemstring(1,"country"))
        idw_packprint.setitem(j,"ord_date",idw_main.getitemdatetime(1,"ord_date"))
        idw_packprint.setitem(j,"complete_date",idw_main.getitemdatetime(1,"complete_date"))
		  
		  //10/11/2010 ujh use variable to allow for dataobject with supplier column removed
		IF idw_packPrint.Dataobject = ls_d_packing_prt THEN
   	   	    idw_packprint.setitem(j,"schedule_date",idw_main.getitemdatetime(1,"schedule_date"))			
		END IF
		
		//Jxlim 09/10/2014 - field for Anki
		If upper(gs_project) = 'ANKI' Then			
			 idw_packprint.setitem(j,"ecommerce_id", idw_main.getitemString(1,"User_Field14") )	
			 idw_packprint.setitem(j,"schedule_date",idw_main.getitemdatetime(1,"schedule_date")) //14-Oct-2014 :Madhu- Display Schedule Date on Anki Pack list
		     idw_packprint.setitem(j,"carrier", idw_other.getitemString(1,"carrier") )
    		 idw_packprint.setitem(j,"freight_terms",idw_other.getitemstring(1,"freight_terms")) 
            idw_packprint.setitem(j,"sch_cd",idw_other.getitemString(1,"user_field1")) /* 5/3/00 PCONKL */
	        idw_packprint.setitem(j,"ship_via",idw_other.getitemString(1,"ship_via")) /* 5/3/00 PCONKL */
	  		idw_packprint.setitem(j,"shipper_tracking_id",idw_pack.getitemstring(i,"shipper_tracking_id")) //27-Oct-2014 : Madhu- Display shipper tracking Id for ANKI on Pack list
	  		idw_packprint.setitem(j,"wh_code",idw_other.getitemstring(1,"wh_code")) //2015/11/18 : TAM
           	idw_packprint.setitem(j,"discount",idw_other.getitemNumber(1,"order_discount_amt")) //2015/11/18 : TAM
            	idw_packprint.setitem(j,"tax",idw_other.getitemNumber(1,"order_tax_amt")) //2015/11/18 : TAM
            	idw_packprint.setitem(j,"ship_and_handling",idw_other.getitemNumber(1,"shipping_handling_amt")) //2015/11/18 : TAM
			datetime ldt_date
			  SELECT getdate()  
    				INTO :ldt_date  
   				FROM dbo.Warehouse  
 				WHERE dbo.Warehouse.WH_Code = 'ANKI-AURO'   ;
	  		idw_packprint.setitem(j,"world_date",ldt_date) //2015/11/18 : TAM


		End If /* ANKI */
		  
        idw_packprint.setitem(j,"sku",ls_sku)
//        idw_packprint.setitem(j,"alt_sku",ls_alt_sku)  //08/09/00 DGM commented out; It's empty anyway- hdc
        idw_packprint.setitem(j,"description",ls_description)
		  
 	   if upper(gs_project) = 'RUN-WORLD' OR upper(gs_project) = 'GIGA' Then                 
             idw_packprint.SetITem(j,'c_first_carton_row', idw_pack.getitemString(i,"c_first_carton_row"))
			idw_packprint.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_gross")) 							 
        else
                idw_packprint.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_net")) /*take from displayed pask list instead of DB*/
        end if
		 
		//Jxlim 08/03/2012 Added weight_gross to all of the report objects above that call this event to print pack.
		//except Pandora that has its own function to process print_pack.
	    	//Jxlim 06/12/2012 PHYSIO and FIREEYE requirement and turned into baseline.		
		idw_packprint.setitem(j,"weight_gross",idw_pack.getitemDecimal(i,"weight_gross")) 

        
        idw_packprint.setitem(j,"standard_of_measure",idw_pack.getitemString(i,"standard_of_measure"))
        idw_packprint.setitem(j,"carrier", idw_other.getitemString(1,"carrier") )
        idw_packprint.setitem(j,"ship_via",idw_other.getitemString(1,"ship_via")) /* 5/3/00 PCONKL */
        idw_packprint.setitem(j,"sch_cd",idw_other.getitemString(1,"user_field1")) /* 5/3/00 PCONKL */
        idw_packprint.setitem(j,"packlist_notes",idw_main.getitemString(1,"packlist_notes")) /* 09/01 PCONKL */
        idw_packprint.setitem(j,"upc_Code",lsUPC) /* 04/04 PCONKL */
        idw_packprint.setitem(j,"project_id",gs_project) /* 12/01 PCONKL */
        idw_packprint.setitem(j,"HazText",lshazText) /* 02/02 PCONKL */
		  
		// 08/13 - PCONKL - A couple of fields for NYX only
		 if upper(gs_project) = 'NYX' Then
			
			 idw_packprint.setitem(j,"store_nbr", idw_other.getitemString(1,"User_Field2") )
			 idw_packprint.setitem(j,"packlist_nbr", Right(Trim(idw_main.getitemString(1,"do_no")),7) )
			 
		End If /* NYX */
		
		//04/16 - PCONKL - for H2O
		 if upper(gs_project) = 'H2O' Then
			 idw_packprint.setitem(j,"hazard_cd", idw_pack.getitemString(i,"hazard_cd") )
		End If
		
		// 10/2015 - ASPEN - A couple of fields for ASPEN only
		 if upper(gs_project) = 'ASPEN' Then
			
			 idw_packprint.setitem(j,"client_cust_po_nbr", idw_other.getitemString(1,"client_cust_po_nbr") )
	      	 idw_packprint.setitem(j,"ship_via",idw_other.getitemString(1,"ship_via")) 
			 idw_packprint.setitem(j,"lot_no", idw_pack.getitemString(i,"pack_lot_no") )

			String lsLotNo 
			lsLotNo = idw_pack.getitemString(i,"pack_lot_no")
			// TAM 2016/02/25 Get PONO from the picklist
			If lsLotNo =  '' or isNull(lsLotNo)  Then
				llFindRow = idw_pick.Find("Upper(sku) = '" + Upper(ls_sku) + "' and line_item_no = " + String(llLineItemNo) ,1,idw_pick.RowCount())
				If llFindRow > 0 Then
					idw_packprint.setitem(j,"lot_no", idw_pick.getitemString(llFindRow,"lot_no"))
				End If
			End If
			
			//GailM - 8/28/2017 - SIMSPEVS-644 Aspen Medical Modify the current Packing List Special BillTo address to replace ShipFrom address
			//GailM - 10/16/2017 - SIMSPEVS-644 Use lookup in customer table to determine DropShip address and logo
			// First check for logo before changing the address.  If no record found the address will remain the warehouse address
			ls_trax_acct_no = idw_main.getitemstring(1,'Trax_Acct_No') 
			
			SELECT user_field10 INTO :ls_logo FROM customer 
			WHERE project_id = 'ASPEN' and customer_type = 'DS' and cust_code = :ls_trax_acct_no USING SQLCA;
			
			If Not isNull( ls_logo ) and ls_logo <> '' Then
				
				ls_logo = "p_1.Filename='" + ls_logo + "' "
				idw_packPrint.Modify( ls_logo )  //Add logo to datawindow
		
				SELECT cust_name, address_1, address_2, address_3, address_4, city, state, zip, country,email_Address,tel
				INTO :lsName, :lsAddr1, :lsAddr2, :lsAddr3, :lsAddr4, :lsCity, :lsState, :lsZip, :lsCountry, :lsemail, :lstel
				FROM customer
				WHERE project_id = 'ASPEN' and customer_type = 'DS' and cust_code = :ls_trax_acct_no
				USING SQLCA;
				
				 SELECT country_name INTO :lsCountry FROM country WHERE designating_code = :lsCountry USING SQLCA;
			
			End If
			
		End If /* ASPEN */
		
        
		  //For English to Metrtics changes added L or K based on E or M
        ls_etom=idw_packprint.getitemString(j,"standard_of_measure")
        IF ls_etom <> "" and not isnull(ls_etom) and j=1 THEN
                IF ls_etom = 'E' THEN
                        ls_text[1]="unit_w_t.Text='"+is_text[1]+"L'"                    
                        ls_text[2]="ext_w_t.Text='"+is_text[2]+"L'"
                        ls_text[3]="etom_t.Text='INCHES'"
                ELSE
                        ls_text[1]="unit_w_t.Text='"+is_text[1]+"K'"
                        ls_text[2]="ext_w_t.Text='"+is_text[2]+"K'"
						//Jxlim 08/24/2010 Modified for Chinese report		
						 If idw_packPrint.Dataobject = 'd_packing_prt_chinese' Then	
                       		ls_text[3]="etom_t.Text='??'"
						Else
							ls_text[3]="etom_t.Text='CENTIMETERS'"
						End if
						//Jxlim 08/24/2010 End of modified for Chinese report
                END IF
        END IF  
        
        // 5/4/00 PCONKL - find matching row in detail to get ordered quantity and CNTL Number
        
        // 09/01 - PCONKL - we may have multiple pack rows that match to a single detail row. THis will cause the Order qty
        //                  to be wrong if we simply copy it for each row (it will be multiplied by each additional row). 
        //                                                If the ordered qty on the order detail = the shipped qty, we will just set the ord qty = shipped qty
        //                                                If Ord Qty > shipped qty, we will set the difference on the last row for the sku, the rest will be equal
        //                                              This assumes that the Shipped QTY on Packing List = Alloc QTY on DEtail. This will be validated before allowing to print (wf_val)
        
        lsFind = "Upper(sku) = '" + Upper(ls_sku) + "' and line_item_no = " + string(llLineItemNo)
        llRow = idw_detail.Find(lsFind,1,idw_detail.RowCount())
        
        if llRow > 0 Then
                
                idw_packprint.setitem(j,"cntl_number",idw_detail.getitemString(llRow,"user_field1")) /* Cntrl num // detail Weight for Sears*/
                idw_packprint.setitem(j,"user_field2",idw_detail.getitemString(llRow,"user_field2")) /* 12/01 for Saltillo*/
                idw_packprint.setitem(j,"alt_sku",idw_detail.getitemString(llRow,"alternate_sku")) //hdc for W&S
//				MessageBox("Debug", "set alt_sku to " + idw_packprint.getitemstring(j,"alt_sku"))
   		    	//TAM W&S Added UOM and pick_Lot_Nofrom Detail 
			If Upper(Left((gs_project),3)) = 'WS-' Then			
				idw_packprint.setitem(j,"uom",idw_detail.getitemString(llRow,"uom"))
				idw_packprint.setitem(j,"lot_nbr",idw_detail.getitemString(llRow,"pick_lot_no"))
			End IF
 	
                If Upper(gs_project) <> 'GM_MONTRY'  or (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  = "PDC" or lscusttype = "ACDELCOPDC")) Then /* 08/02 - Pconkl - GAP 9/02 added satillo PDCs */
                        If idw_detail.getitemnumber(llRow,"req_qty") = idw_detail.getitemnumber(llRow,"alloc_qty") Then
                                idw_packprint.setitem(j,"ord_qty",idw_pack.getitemNumber(i,"quantity"))
                        Else /*ord qty <> Alloc, if it's the last carton row for this sku, show the difference here, otherwise set to alloc*/
                                If (i = ll_cnt) or (idw_pack.Find(lsFind,(i + 1),(ll_cnt + 1)) = 0) Then /*last row for the sku*/
                                        //set order qty = shipped qty for row + (order - alloc) from detail. This assumes that the Shipped QTY on Packing List = Alloc QTY on DEtail. This will be validated before allowing to print (wf_val)
                                        idw_packprint.setitem(j,"ord_qty",(idw_pack.getitemNumber(i,"quantity") + (idw_detail.getitemnumber(llRow,"req_qty") - idw_detail.getitemnumber(llRow,"alloc_qty"))))
                                Else /* not last row for sku*/
                                        idw_packprint.setitem(j,"ord_qty",idw_pack.getitemNumber(i,"quantity"))
                                End If
                        End If
                Else /* ord qty will be set properly for Saltillo since only one qty per page */
                        idw_packprint.setitem(j,"ord_qty",idw_detail.getitemnumber(llRow,"req_qty"))
                End If
                
			//KloneLab
			//MEA - 9/12
			//If Customer_Sku is populated on Delivery_Detail, copy that to the “alt_Sku” field on the printed packing list. 
			//You can use the baseline event and datawindow. This should be Klone specific.	  
			  
			IF UPPER(gs_project) = 'KLONELAB' then
				if trim(idw_detail.GetItemString(llRow,"customer_sku")) <> '' then
					idw_packprint.setitem(j,"alt_sku", idw_detail.getitemstring(llRow,"customer_sku"))
				end if
			  end if			 

			//TAM - 11/11/2015 - field for Anki
			If upper(gs_project) = 'ANKI' Then			
         		   	idw_packprint.setitem(j,"price",idw_detail.getitemNumber(llRow,"price")) //2015/11/18 : TAM
			End If /* ANKI */
					 
        Else /*row not found (should never happen), set req qty to 0*/
                idw_packprint.setitem(j,"cntl_number",'')
        End If
        
        idw_packprint.setitem(j,"picked_quantity",idw_pack.getitemNumber(i,"quantity")) 
        
        //05/09 - PCONKL - For Philips, Volume is coming from Item Master , 12/12 - added TPV
	   // 6/13 - MEA - Added FUNAI
	   //TAM 2015/01/26 Added Gibson
	  //3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
		//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
 	  	 If gs_project = 'PHILIPS-SG' OR gs_project = 'PHILIPS-TH' OR gs_project = 'PHILIPSCLS' OR gs_project = 'PHILIPS-DA' &
		 	OR gs_project = 'TPV' OR gs_project = 'FUNAI'  OR gs_project = 'GIBSON'  Then
                
                If isNumber(lsVol) Then
                        idw_packprint.setitem(j,"volume",idw_pack.getitemNumber(i,"quantity") * Dec(lsVol) * 1000)
                End IF
                
        Else
                idw_packprint.setitem(j,"volume",idw_pack.getitemDecimal(i,"cbm")) 
        End If
        
    		
	  If idw_pack.getitemDecimal(i,"cbm") > 0 Then
                idw_packprint.setitem(j,'dimensions',string(idw_pack.getitemDecimal(i,"length")) + ' x ' + string(idw_pack.getitemDecimal(i,"width")) + ' x ' + string(idw_pack.getitemDecimal(i,"height"))) /* 02/01 - PCONKL*/
        End If
				  
        idw_packprint.setitem(j,"country_of_origin",idw_pack.getitemstring(i,"country_of_origin")) 
        idw_packprint.setitem(j,"supp_code",idw_pack.getitemstring(i,"supp_code")) 
        
        // 10/07 - PCONKL - Get Serial Numbers from serial tab(Outbound)
        If idw_serial.RowCount() > 0 Then
                
                lsSerial = ""
                lsFind = "Upper(Carton_No) = '" + Upper(idw_Pack.GetItemString(i,'carton_no')) + "' and line_item_No = " + String(idw_Pack.GetITemNumber(i,'line_item_No'))
                llFindRow = idw_serial.Find(lsFind,1,idw_serial.RowCOunt())
                Do While llFindRow > 0
                
                        lsSerial += ", " + idw_serial.GetItemString(llFindRow,'serial_no')
                
                        llFindRow ++
                        If llFindRow > idw_serial.RowCount() Then
                                lLFindRow = 0
                        Else
                                llFindRow = idw_serial.Find(lsFind,llFindRow,idw_serial.RowCOunt())
                        End If
                
                Loop
                
                If Left(lsSerial,2) = ', ' Then lsSerial = mid(lsSerial,3,999999999)
                idw_packprint.setitem(j,"serial_no",lsSerial)
        
        End If /*serial numbers exist*/
                
        //idw_packprint.setitem(j,"serial_no",idw_pack.getitemstring(i,"free_form_serial_no")) /* 02/01 - PCONKL*/
        
        idw_packprint.setitem(j,"component_ind",idw_pack.getitemstring(i,"component_ind")) /* 02/01 - PCONKL - sort component master to top*/
                
        idw_packprint.setitem(j,"cust_name",idw_main.getitemstring(1,"cust_name"))
        idw_packprint.setitem(j,"delivery_address1",idw_main.getitemstring(1,"address_1"))
        idw_packprint.setitem(j,"delivery_address2",idw_main.getitemstring(1,"address_2"))
        idw_packprint.setitem(j,"delivery_address3",idw_main.getitemstring(1,"address_3"))
        idw_packprint.setitem(j,"delivery_address4",idw_main.getitemstring(1,"address_4"))
        idw_packprint.setitem(j,"delivery_state",idw_main.getitemstring(1,"state"))
        idw_packprint.setitem(j,"delivery_zip",idw_main.getitemstring(1,"zip"))
	  
        idw_packprint.setitem(j,"remark",idw_main.getitemstring(1,"remark"))
        // 07/00 PCONKL - Ship from info is coming from Project Table  
		
		//Begin Dinesh - S51458- 25/11/2020 - H2O Packing list print
	if gs_project = 'H2O' then
			
		if ls_ord_type='E' then
		
		select user_Field1, user_field2, user_field3 into :lsUF1, :lsUF2, :lsUF3 from lookup_table where project_id='H2O' and code_type='PL_TEXT' and code_id='1';
		
		lsDONO = idw_Main.GetItemString(1,'do_no') // Dinesh - 25/11/2020- S51458- H2O packinglist print
//        Select cust_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country,tel,email_address
//        Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry,:lstel,:lsemail
//        From Delivery_master
//        Where Project_Id = :gs_project and DO_NO =:lsDONO
//        Using Sqlca;
		  
		Select name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country
        	Into   :lsName_to, :lsaddr1_to, :lsAddr2_to, :lsaddr3_to, :lsaddr4_to, :lsCity_to, :lsState_to, :lsZip_to, :lsCountry_to
          From Delivery_Alt_Address
          Where DO_NO = :lsDONO and Address_Type='BT'
          Using Sqlca;
			 
		Select cust_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country,tel,email_address
        Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry,:lstel,:lsemail
        From customer
        Where project_id = 'H2O' and Cust_code='ST405'
        Using Sqlca;
	
		idw_packprint.setitem(j,"letter_head",lsUF1)
	 	idw_packprint.setitem(j,"letter_content",lsUF2)
	   	idw_packprint.setitem(j,"letter_thanks",lsUF3)	
	    idw_packprint.setitem(j,"ship_from_name",lsName)
        idw_packprint.setitem(j,"ship_from_address1",lsAddr1)
        idw_packprint.setitem(j,"ship_from_address2",lsAddr2)
        idw_packprint.setitem(j,"ship_from_address3",lsAddr3)
        idw_packprint.setitem(j,"ship_from_address4",lsAddr3)
        idw_packprint.setitem(j,"ship_from_city",lsCity)
        idw_packprint.setitem(j,"ship_from_state",lsState)
        idw_packprint.setitem(j,"ship_from_zip",lsZip)
	   // idw_packprint.setitem(j,"ship_from_country",lsCountry)
	    idw_packprint.setitem(j,"ship_from_tel",lstel) 
	    idw_packprint.setitem(j,"ship_from_email",lsemail)
		 
		//idw_packprint.setitem(j,"delivery_country",idw_main.getitemstring(1,"country"))
		
	    idw_packprint.setitem(j,"bill_name",lsName_to)
        idw_packprint.setitem(j,"bill_to_address1",lsaddr1_to)
        idw_packprint.setitem(j,"bill_to_address2",lsaddr2_to)
        idw_packprint.setitem(j,"bill_to_address3",lsaddr3_to)
        idw_packprint.setitem(j,"bill_to_address4",lsaddr4_to)
        idw_packprint.setitem(j,"bill_to_city",lsCity_to)
        idw_packprint.setitem(j,"bill_to_state",lsstate_to)
        idw_packprint.setitem(j,"bill_to_zip",lszip_to)
	   idw_packprint.setitem(j,"bill_to_country",lscountry_to)
		//Begin -Dinesh -  S58363- 06/14/2021- H2O+ - SIMS: Update SO Packing List
	elseif  ls_ord_type='S' then
		Select cust_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country,tel,email_address
        Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry,:lstel,:lsemail
        From customer
        Where project_id = 'H2O' and Cust_code='ST405'
        Using Sqlca;
		idw_packprint.setitem(j,"component_ind",idw_pack.getitemstring(i,"component_ind")) /* 02/01 - PCONKL - sort component master to top*/
         idw_packprint.setitem(j,"cust_name",idw_main.getitemstring(1,"cust_name"))
        idw_packprint.setitem(j,"delivery_address1",idw_main.getitemstring(1,"address_1"))
        idw_packprint.setitem(j,"delivery_address2",idw_main.getitemstring(1,"address_2"))
        idw_packprint.setitem(j,"delivery_address3",idw_main.getitemstring(1,"address_3"))
        idw_packprint.setitem(j,"delivery_address4",idw_main.getitemstring(1,"address_4"))
        idw_packprint.setitem(j,"delivery_state",idw_main.getitemstring(1,"state"))
        idw_packprint.setitem(j,"delivery_zip",idw_main.getitemstring(1,"zip"))
        idw_packprint.setitem(j,"remark",idw_main.getitemstring(1,"remark"))
        
        // 07/00 PCONKL - Ship from info is coming from Project Table  
        idw_packprint.setitem(j,"ship_from_name",lsName)
        idw_packprint.setitem(j,"ship_from_address1",lsaddr1)
        idw_packprint.setitem(j,"ship_from_address2",lsaddr2)
        idw_packprint.setitem(j,"ship_from_address3",lsaddr3)
        idw_packprint.setitem(j,"ship_from_address4",lsaddr4)
        idw_packprint.setitem(j,"ship_from_city",lsCity)
        idw_packprint.setitem(j,"ship_from_state",lsstate)
        idw_packprint.setitem(j,"ship_from_zip",lszip)
		idw_packprint.setitem(j,"ship_from_country",lscountry)
	//End -Dinesh - S58363- 06/14/2021- H2O+ - SIMS: Update SO Packing List
	else
		 idw_packprint.setitem(j,"component_ind",idw_pack.getitemstring(i,"component_ind")) /* 02/01 - PCONKL - sort component master to top*/
                
        idw_packprint.setitem(j,"cust_name",idw_main.getitemstring(1,"cust_name"))
        idw_packprint.setitem(j,"delivery_address1",idw_main.getitemstring(1,"address_1"))
        idw_packprint.setitem(j,"delivery_address2",idw_main.getitemstring(1,"address_2"))
        idw_packprint.setitem(j,"delivery_address3",idw_main.getitemstring(1,"address_3"))
        idw_packprint.setitem(j,"delivery_address4",idw_main.getitemstring(1,"address_4"))
        idw_packprint.setitem(j,"delivery_state",idw_main.getitemstring(1,"state"))
        idw_packprint.setitem(j,"delivery_zip",idw_main.getitemstring(1,"zip"))
        idw_packprint.setitem(j,"remark",idw_main.getitemstring(1,"remark"))
        
        // 07/00 PCONKL - Ship from info is coming from Project Table  
        idw_packprint.setitem(j,"ship_from_name",lsName)
        idw_packprint.setitem(j,"ship_from_address1",lsaddr1)
        idw_packprint.setitem(j,"ship_from_address2",lsaddr2)
        idw_packprint.setitem(j,"ship_from_address3",lsaddr3)
        idw_packprint.setitem(j,"ship_from_address4",lsaddr4)
        idw_packprint.setitem(j,"ship_from_city",lsCity)
        idw_packprint.setitem(j,"ship_from_state",lsstate)
        idw_packprint.setitem(j,"ship_from_zip",lszip)
		idw_packprint.setitem(j,"ship_from_country",lscountry)
	
	end if 
	   else
	  //End - Dinesh - 11/25/2020 - S51458 - H2O+ - SIMS: Update Packing List print report
        idw_packprint.setitem(j,"ship_from_name",lsName)
        idw_packprint.setitem(j,"ship_from_address1",lsaddr1)
        idw_packprint.setitem(j,"ship_from_address2",lsaddr2)
        idw_packprint.setitem(j,"ship_from_address3",lsaddr3)
        idw_packprint.setitem(j,"ship_from_address4",lsaddr4)
        idw_packprint.setitem(j,"ship_from_city",lsCity)
        idw_packprint.setitem(j,"ship_from_state",lsstate)
        idw_packprint.setitem(j,"ship_from_zip",lszip)
	    idw_packprint.setitem(j,"ship_from_country",lscountry)
	
	
	end if  
	
//nxjain31-08-2015
		if 	Upper(Left((gs_project),3)) = 'WS-' Then 
					Decimal  ld_length,ld_width ,ld_height   ,ld_gs_weight ,ld_qty2 ,ld_qty
				SELECT Length_2, Width_2, Height_2, Weight_2,qty_2
				INTO :ld_length, :ld_width, :ld_height, :ld_weight , :ld_qty2
				FROM Item_Master 
				WHERE Project_id = :ls_project_id and sku = :ls_sku and supp_code = :ls_supplier 
				
				Using SQLCA;
				ld_qty =idw_pack.GetITemNumber(i,'Quantity')				
				ld_gs_weight =( (ld_qty/ ld_qty2 ) * ld_weight )

				idw_packprint.SetItem ( j, 'gross_wgt', round (ld_gs_weight,5) ) 
				idw_packprint.SetItem ( j, 'net_wgt',round(ld_weight ,5))
				idw_packprint.setitem(j,"lot_nbr",idw_detail.getitemString(llRow,"pick_lot_no"))
				idw_packprint.setitem(j,"picked_quantity",idw_detail.getitemString(llRow,"User_Field1")) 
				idw_packprint.setitem(j,"uom",idw_detail.getitemString(llRow,"User_Field2"))

				
			end if       
 
 //nxjain	31-08-2015
 
        IF UPPER(gs_project) = 'GM_MONTRY' AND idw_packprint.dataobject = "d_saltillopdc_packing_prt" then
                        idw_packprint.setitem(j,"user_field2",idw_main.getitemstring(1,"user_field2"))
                        idw_packprint.setitem(j,"user_field4",idw_main.getitemstring(1,"user_field4"))
        end if
 
 
        if UPPER(gs_project) =  'PHXBRANDS' OR UPPER(gs_project) =  'SIKA' then
                idw_packprint.setitem(j,"staging_location",idw_pick.getitemstring(1,"staging_location"))
        end if  
        
        IF idw_packPrint.Dataobject = 'd_phxbrands_canadian_tire_packing_prt' THEN
        
                select alternate_sku
                into :ls_alt_sku
                from item_master 
                where project_id = :ls_project_id and sku = :ls_sku and supp_code = :ls_supplier ;
        
                idw_packprint.setitem(j,"alt_sku",ls_alt_sku)
 
                idw_packprint.setitem(j,"ship_ref", idw_other.getitemString(1,"ship_ref") )
                idw_packprint.setitem(j,"User_Field7", idw_other.getitemString(1,"User_Field7") )
 
//              llFindRow = idw_pick.Find("Upper(sku) = '" + Upper(ls_sku) + "' and line_item_no = " + String(llLineItemNo) ,1,idw_pick.RowCount())
 
//              If llFindRow > 0 Then
                        idw_packprint.setitem(j,"po_no", idw_pick.getitemString(1,"po_no") )
//              End If
       END IF
	

	//nxjain 2013-05-21 update the altrenate sku 	 Kinderdikj only 
	 IF UPPER(gs_project) =  'KINDERDIJK' THEN
       
        select alternate_sku  into :ls_alt_sku
         from item_master 
         where project_id = :ls_project_id and sku = :ls_sku and supp_code = :ls_supplier ;
         
			idw_packprint.setitem(j,"alt_sku",ls_alt_sku)
       END IF
	// nxjain end 2013-05-21	 	 	 
		
	//12/15 - PCONKL - Added Ship Ref to Baseline Packing List (for Metro)
	If idw_packprint.dataobject = "d_packing_prt" then
		idw_packprint.setitem(j,"ship_ref", idw_other.getitemString(1,"ship_ref"))
		//GailM 3/24/2020 DE15273 NYCSP Packlist shows boxes should show pallet (default to boxes)
		lsCartonType = idw_pack.getitemstring(i,"carton_type")
		 IF UPPER(gs_project) =  'NYCSP' then //// Begin - Dinesh - S51986 - 12/09/2020- NYCSP - KNY: Change Packlist Printout 'Box' Headers to 'Line'
		 
		 if IsNull(lsCartonType) Then lsCartonType = 'Lines'
		else
		 If IsNull(lsCartonType) Then lsCartonType = 'Boxes'
		end if
		
		idw_packprint.setitem(j,"carton_type", lsCartonType)
	End If
		 
		         
Next /*PAcking Row */
 
i=1
FOR i = 1 TO UpperBound(ls_text[])
        idw_packprint.Modify(ls_text[i])
        ls_text[i]=""
NEXT
 
idw_packprint.Sort()
idw_packprint.GroupCalc()
 
IF upper(gs_project) = 'RUN-WORLD' OR upper(gs_project) = 'GIGA' then
        
        
        
//       DO# - taken from Other info.AWB/BOL Nbr.   awb_bol_nbr
// SO# - taken from Order info.Order Nbr         order_no
// PO# - taken from Order info.Customer Order   customer_order_no
// Request Date - taken from Order info.Request Date   request_date
//      
        idw_packPrint.Modify( "t_awb_bol_nbr.text='"+idw_other.getitemstring(1,"awb_bol_no")+"'")
        idw_packPrint.Modify( "t_order_no.text='"+idw_main.getitemstring(1,"invoice_no")+"'")
        idw_packPrint.Modify( "t_customer_order_no.text='"+idw_main.getitemstring(1,"cust_order_no")+"'")
        idw_packPrint.Modify( "t_request_date.text='"+string(idw_main.getitemdatetime(1,"request_date"),"mm/dd/yyyy hh:mm AM/PM")+"'")
 
        IF idw_detail.RowCount() > 0 THEN
                
                ls_supplier = idw_detail.GetItemString( 1, "supp_code")
                
                
                SELECT SUPP_NAME INTO :lsSupplierName FROM Supplier
                        WHERE Supp_Code = :ls_supplier AND ( project_id = 'RUN-WORLD' OR project_id = 'GIGA' )  USING SQLCA;
 
                idw_packPrint.Modify( "t_ship_from_name.text='"+lsSupplierName+"'")
 
                
        END IF
 
END IF
 
 
// 09/04 - PCONKL - If we have a default printer for PackList, Load now
lsPrinter = ProfileString(gs_iniFile,'PRINTERS','PACKLIST','')
If lsPrinter > '' Then PrintSetPrinter(lsPrinter)

idw_packprint.Object.t_costcenter.Y= long(idw_packprint.Describe("costcenter.y"))
 
//Send the report to the Print report window
OpenWithParm(w_dw_print_options,idw_packprint) 

//TAM - 2016/01/28 - Anki Aurora wants the Commercial Invoice Print window to Pop up for all Packlist Prints
If upper(gs_project) = 'ANKI'  and lsWHCode = 'ANKI-AURO' Then			
     lsDONO = idw_Main.GetItemString(1,'do_no')
	lstrparms.String_arg[2] = '*DONO*' + lsDono  /* *dono will tell DO to retrieve by DONO instead of the default order number */
	OpenSheetwithparm(w_pandora_commercial_invoice_rpt,lStrparms, w_main, gi_menu_pos, Original!)
End If
 
// 09/04 - PCONKL - We want to store the last printer used for Printing the Pack List for defaulting later
lsPrinter = PrintGetPrinter()
SetProfileString(gs_inifile,'PRINTERS','PACKLIST',lsPrinter)
 
 
If message.doubleparm = 1 then
        If idw_main.GetItemString(1,"ord_status") = "N" or &
                idw_main.GetItemString(1,"ord_status") = "P" or &
                idw_main.GetItemString(1,"ord_status") = "I" or &
			   idw_main.GetItemString(1,"ord_status") = "A" Then 
					 if gs_project='PANDORA' then
						idw_main.SetItem(1,"ord_status","L") // DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
					else
						 idw_main.SetItem(1,"ord_status","A")
					end if
                ib_changed = TRUE
                iw_window.trigger event ue_save()
        End If
End If
 

end event

event ue_process_bol();Long	llCount
Decimal ldWeight,ld_tot
String	lsInvoiceNo, lsDONO,	lsBOLDesc,ls_wh_code,ls_shipper,ls_bol_carrier
string ls_note,ls_carrier,ls_carrier_code, ls_weight           			 //GAP 9/26/03
string ls_type,ls_name, ls_address_1,ls_address_2,ls_address_3,ls_address_4,ls_city,ls_state,ls_country,ls_zip 
int li_rtn,i,li_row
U_Nvo_Custom_BOL	lu_BOL
datastore lds_po, lds_po_multi
integer li_rtn2, li_idx
string ls_po, ls_po_list, lsBOL, lsBT
boolean lb_multi_run
integer li_rtn3, li_idx2, liLen1, liLen2
string	ls_current_warehouse, lsCanCanLabelNo, lsCustName
String  lsBOM_UF3, ls_shippable_flag
String lsSkipIt

datastore ldsSKUs
string ls_sql_syntax_SKU, lsTemp, lsHazCd, ERRORS
long llSKUCount
string lsConsolNo //dts - for Ariens to check if Consolidated BOL is applicable

lu_bol = Create u_nvo_Custom_Bol

// Set Defaults
is_OldNew = "NEW"
tab_main.tabpage_bol.dw_bol_entry.visible = False

//GAP 05/03  Get the BOL Ready for Print
CHOOSE CASE upper(gs_project)
	// pvh - 10/05/06 - petco	
	
	CASE "REMA"		//GailM 3/20/2018 S16749 F7146 I805
		
		//04-MAY-2018 :Madhu S18653 - Rema Back/Duplicate Order Process
		If tab_main.tabpage_bol.rb_bol.checked =True Then
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_rema_bol_prt'		//single BOL
		elseIf tab_main.tabpage_bol.rb_sli.checked  = True Then
			
			lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
			
			select count(do_no) into :llCount from Delivery_Master with(nolock)
			where project_id = 'REMA'
			and consolidation_no = :lsConsolNo
			and ord_status in('A', 'C', 'D');
			
			If llCount < 2 Then
				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
				Return
			End If	 

			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_rema_combined_bol_prt'	//combined BOL
		else
			MessageBox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If

	CASE "PHXBRANDS"
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_phxbrands_bol_prt'
	
	CASE "GM_MONTRY"                                                //wason 11/22
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_gm_bol_prt'//wason 11/22
	CASE "LOGITECH"
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_logitech_bol_prt'
	CASE "BLUECOAT"  // pvh - 09/15/06	
//TAM - 2009/05/20 Remove custom Bluecoat
//		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_bluecoat_bol_prt'
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_generic_bol_prt'
	CASE "INGRAM"  // tam - 2007/05/31
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_generic_bol_prt'
	CASE "SCITEX-IID"  // tam - 10/11/06
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_scitex_bol_new_prt'
	CASE "NYCSP"  // tam - 08/09/2007
		//tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_generic_bol_prt'  //12-Dec-2013 :Madhu - commented- designed new BOL for NYCSP 
		tab_main.tabpage_bol.dw_bol_prt.dataobject ='d_nycsp_bol_rpt'  //12-Dec-2013 :Madhu- Added - desgined new BOL for NYCSP
		
	Case "EUT" /* 07/08 - MEA*/
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_eut_outbound_delivery_prt'		
	Case "RUN-WORLD", "GIGA" /* 07/08 - MEA*/
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_rw_outbound_delivery_prt'		
	Case "RIVERBED" /* 2012/01 - TAM  */
		//Jxlim 06/11/2012 Jira SIM-705, If Riverbed then we need to look in the delivery bom table for the shippable flag (User_field 3) for appropriate SLI report.
		//TAM 08/19/2013 Added additional filter on UF3  since we are setting the base unit as the parent instead of the PTO(PTO has the is shiippable = yes.
			lsdono = idw_main.GetITemString(1,"do_no")
			Select User_field3 Into :lsBOM_UF3
			From Delivery_BOM
//			Where Project_id = :gs_project and do_no = :lsdono 
			Where Project_id = :gs_project and do_no = :lsdono and User_Field3 like '%IsShippable:Y%'
			Using SQLCA;
			If POS(Trim(lsBOM_UF3), "IsShippable:Y") > 0 Then
				ls_shippable_flag = 'Y'
				tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_riverbed_sli_prt_shippable'
			Else
				ls_shippable_flag = 'N'
				tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_riverbed_sli_prt'
			End If		
		//Jxlim 06/11/2012 Jira SIM-705 The end
	Case "PUMA"
		
		IF idw_main.RowCount() > 0 THEN
			
			ls_current_warehouse = idw_main.GetItemString(1, "wh_code")
		
		END IF
		
		// CHECK IF WE ARE SHIPPING FROM MALAYSIA
		IF Upper( ls_current_warehouse ) = 'PUMA-MY' THEN
			
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_puma_my_outbound_delivery_prt'
			
		ELSE
			
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_puma_outbound_delivery_prt'				
			
		END IF
		
	Case "WS-MUSER" , "WS-AWI" , "WS-BMS", "WS-BM", "WS-MHD" , "WS-PR"// TAM W&S 2011/01 
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_ws_muser_outbound_delivery_prt'//	CASE else
//	CASE else
//		is_OldNew = "OLD"
//		tab_main.tabpage_bol.dw_bol_entry.visible = True
	CASE "MAQUET"
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_maquet_bol_prt'
	
	CASE 'PANDORA' // KRZ 12/14/09
		//TAM 2018/08 - S22531 - Don't Print if TMS has no load Id	
		String ls_dmuf1, lsloadId
		ls_dmuf1 = Trim(w_do.idw_main.GetItemString(1,"user_field1"))
		lsloadId = Trim(w_do.idw_main.GetItemString(1,"load_id"))
		
		If ls_dmuf1 <> 'DOS' and  ls_dmuf1 <> 'PIU' and ls_dmuf1 <> 'NOS' and ls_dmuf1 <> 'GND' and (lsloadId = '' or isNull(lsloadId)) then /*11/19 - PCONKL F19222/DE13597 - add 'GND' */
			
			//GailM 10/15/2018 Temporarily use flag to disable this function until other testing is done
			lsSkipIt =  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")
			If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"tHEN
				messagebox("BOL Generate","This is TMS order and should have Load ID, BOL cannot be generated", Exclamation!)
				return
			Else
//				messagebox("BOL Generate","This is a TMS order and should have Load ID.~rThis stop is temporarily disabled.  Change Flag to 'Y' to reenable.", Exclamation!)
			End If
		End If
	
	//Jxlim 05/23/2012		
		If tab_main.tabpage_bol.rb_bol.Checked=True or tab_main.tabpage_bol.rb_bol_combined.Checked=True Then
			//Jxlim 06/24/2013 Replace Bol with vics Bol - Pandora
			//tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_pandora_bol_prt'	     //commented out till vics bol is ready
			//tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt'			//baseline
			//tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_pandora'	//Pandora
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_combine_pandora_ext'		// LTK 20151008
			
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_riverbed_sli_prt'
		End If
	//Jxlim 11/14/2013 Friedrich Vics BOL klone from Pandora
	
	CASE "FRIEDRICH"	

		//12/13/2013 Applied Jesslyn changed for Friedrich
		//TAM  2013/11/19 Adding My standard BOL until Jesslyn's changes are complete.  I commented out Jesslyn's code below.  When you are ready you can comment out 
		// My change and uncomment yours.
		//	         tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_friedrich_bol_prt'

		 //Jesslyn's changes comment out by trey until they are ready
		If tab_main.tabpage_bol.rb_bol.Checked=True Then  //vics BOL					
			//tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_friedrich_bol_prt'  //standard BOL
		//TAM 2015/01/31 Moved to custom object
		//			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_singleorder'  //Jxlim 12/26/2013 made it a generic object			
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_friedrich_bol_prt_singleorder' 	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then  //combined BOL
			//check to see if there are other orders on the shipment
			lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
				
			select count(do_no) into :llCount from Delivery_Master 
			where project_id = 'FriedRich'
			and consolidation_no = :lsConsolNo
			and ord_status in('A', 'C', 'D');
			
			If llCount < 2 Then
				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
				Return
			End If	        
//TAM 2015/01/31 Moved to custom object
//			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_combine_ext'  //Jxlim 12/26/2013 made it a generic object
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_friedrich_bol_prt_combine_ext'  //Jxlim 12/26/2013 made it a generic object

		else
			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If
		
//TAM 06/20/2018 - S20314 - Cree BOL klone from Friedrich
	
	CASE "CREE"	

		If tab_main.tabpage_bol.rb_bol.Checked=True Then  //vics BOL					
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_cree_bol_prt_singleorder' 	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then  //combined BOL
			//check to see if there are other orders on the shipment
			lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
				
			select count(do_no) into :llCount from Delivery_Master 
			where project_id = 'CREE'
			and consolidation_no = :lsConsolNo
			and ord_status in('A', 'C', 'D');
			
			If llCount < 2 Then
				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
				Return
			End If	        
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_cree_bol_prt_combine_ext'  

		else
			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If
		
	CASE "BOSCH"  // TAM 2014/09 added Bosch	

		//check to see if there are other orders on the shipment
		lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
		If tab_main.tabpage_bol.rb_bol.Checked=True Then  //vics BOL					
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_bosch_bol_prt_single_ext'	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then  //combined BOL
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
				
			//TAM - Allow Combined BOL even for Single Order.
//			select count(do_no) into :llCount from Delivery_Master 
//			where project_id = 'BOSCH'
//			and consolidation_no = :lsConsolNo
//			and ord_status in('A', 'C', 'D');
//			
//			If llCount < 2 Then
//				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
//				Return
//			End If	        
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_bosch_bol_prt_consolidated_ext'  

		else
			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If


	CASE "KLONELAB" //MEA 12/10/12
		If tab_main.tabpage_bol.rb_bol.Checked=True Then
	         tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_klonelab_bol_prt'
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
			lsConsolNo = idw_main.GetItemString(1, "Awb_Bol_No")
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
				
			select count(do_no) into :llCount from Delivery_Master 
			where project_id = 'KLONELAB'
			and Awb_Bol_No = :lsConsolNo
			and ord_status in('A', 'C', 'D');
			
			If llCount < 2 Then
				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
				Return
			End If
	         tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_klonelab_bol_consol_prt'
		else
			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If
		
		
//	CASE "ARIENS" //dts - 7/12/13
//		//dts 8/22/13 - adding Combined BOL (using the rb_sli to trigger combined bol)
//		If tab_main.tabpage_bol.rb_bol.Checked=True Then
//	         tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_ariens_bol_prt'
//		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
//			//check to see if there are other orders on the shipment
//			lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
//			if isnull(lsConsolNo) or lsConsolNo = '' then
//				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
//				Return
//			End If
//				
//			select count(do_no) into :llCount from Delivery_Master 
//			where project_id = 'ARIENS'
//			and consolidation_no = :lsConsolNo
//			and ord_status in('A', 'C', 'D');
//			
//			If llCount < 2 Then
//				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
//				Return
//			End If
//	         tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_ariens_bol_combined_prt'
//		else
//			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
//		End If
		
	CASE "ANKI"  //Jxlim 09/22/2014
		
		//tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_generic_bol_prt'
		//TAM  2014/10/9  Added Vic BOL for Anki
		If tab_main.tabpage_bol.rb_bol.Checked=True Then  //vics BOL					
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_singleorder'  //Jxlim 12/26/2013 made it a generic object			
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then  //combined BOL
			//check to see if there are other orders on the shipment
			lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
				
			select count(do_no) into :llCount from Delivery_Master 
			where project_id = 'ANKI'
			and consolidation_no = :lsConsolNo
			and ord_status in('A', 'C', 'D');
			
			If llCount < 2 Then
				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
				Return
			End If	        
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_combine_ext'  //Jxlim 12/26/2013 made it a generic object

		else
			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If

	Case "H2O" /* 12/15 - PCONKL */
		
		//tab_main.tabpage_bol.rb_bol.Checked=True /*default to true for now until we determine if we need a combined BOL */
		
		If tab_main.tabpage_bol.rb_bol.Checked=True Then  //vics BOL					
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_singleorder'  	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then  //combined BOL
			//check to see if there are other orders on the shipment
			lsConsolNo = idw_main.GetItemString(1, "Consolidation_no")
			if isnull(lsConsolNo) or lsConsolNo = '' then
				messagebox("BOL Generate", "Combined BOL not available - Order must have a Consolidation No (Ship ID).")
				Return
			End If
				
			select count(do_no) into :llCount from Delivery_Master 
			where project_id = 'H2O'
			and consolidation_no = :lsConsolNo
			and ord_status in('A', 'C', 'D');
			
			If llCount < 2 Then
				messagebox("BOL Generate", "Combined BOL not applicable - Only one order for given Shipment Details.")
				Return
			End If	        
			tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_vics_bol_prt_combine_ext' 

		else
			messagebox("BOL Generate", "You must Select either 'BOL' or 'Combined BOL'.")
		End If
		
//TAM 2019/05/02 - F15316 (Kendo) - Added custom BOL
	CASE "KENDO"
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_kendo_bol_prt'

	CASE Else  
		/* dts - 08/22/2008 enabled 'else' for BOSCH 
		     - the 'else' only applies to projects that have a value in Project.bol_print_dw
			  - they still need to be added to Case statement below
		*/
		If idw_Pack.RowCount() = 0 then
			messagebox("BOL Print", "Must generate Pack List.")
			return
		end if
		
		tab_main.tabpage_bol.dw_bol_prt.dataobject = 'd_generic_bol_prt'

END CHOOSE



//Save changes first
If ib_changed Then
	messagebox(is_title,'Please save changes before generating BOL!')
	return
End If

ls_wh_code= idw_main.object.wh_code[1]
//gap 5/2003 NEW BOL PROCESS get out if no picking list yet!
if 	is_OldNew = "NEW" then 
	
	If idw_detail.RowCount() > 0 Then
	Else
		Messagebox("Validation Error","You must create a picking list before you can generate the BOL!")
		tab_main.tabpage_bol.cb_bol_print.Enabled = False /*Disable printing of BOL*/
		Return
	End If
	
  CHOOSE CASE upper(gs_project)                                   //wason 11/22
		
	CASE "REMA"			//GailM 3/20/2018 S16749 F7146 I805
		
		//04-MAY-2018 :Madhu S18653 - Rema Back/Duplicate Order Process
		If tab_main.tabpage_bol.rb_bol.checked =True Then
			lsDONO = idw_main.GetITemString(1,"do_no")
			lu_bol.uf_process_bol_rema( idw_main.GetITemString(1,"do_no"), idw_bol )
		elseIf tab_main.tabpage_bol.rb_sli.checked = True Then
			lu_bol.uf_process_bol_rema_combined( idw_main.GetITemString(1,"Consolidation_no"), idw_bol )
		End If

	// pvh - 09/15/2006 - Bluecoat
	case "BLUECOAT"
		lu_bol.uf_process_bol_generic( idw_main.GetITemString(1,"do_no"),idw_bol )
	
	
	// TAM - 05/31/2007 - Ingram Micro
	case "INGRAM"
		lu_bol.uf_process_bol_generic( idw_main.GetITemString(1,"do_no"),idw_bol )
	
 	CASE 'GM_MONTRY'                                                         //wason 11/22
	
		idw_bol.SetRedraw(False)
		
	   lsDONO = idw_main.GetITemString(1,"do_no")                      //wason 11/22
		idw_bol.settransobject(sqlca)                                   //wason 11/22
      li_rtn=idw_bol.Retrieve(lsDONO)                                 //wason 11/22
		if li_rtn >= 1 then                                                //wason 12/02
			ls_shipper=idw_bol.getitemstring(1,"project_client_name")     //wason 11/22
			ls_bol_carrier=idw_bol.getitemstring(1,"carrier")               //wason 11/22
			if isNull(idw_bol.getitemstring(1,"project_user_field3"))  then //wason 11/22
				idw_bol.setitem(1,"project_user_field3","AUTOPARTS")         //wason 11/22
			end if                                                          //wason 11/22
			
			if mod(li_rtn,21)<>0 then                                       //wason 11/22
		
				for i=mod(li_rtn,21) to 21                                   //wason 11/22
					li_row=idw_bol.insertrow(0)                               //wason 11/22
				next                                                         //wason 11/22
			
				idw_bol.setitem(li_row,"project_client_name",ls_shipper)        //wason 11/22
				idw_bol.setitem(li_row,"carrier_1",ls_bol_carrier)              //wason 11/22
		
			end if                                                          //wason 11/22
			
		else                                                               //wason 12/02
			messagebox("","No record in delivery_detail")                   //wason 12/02
		end if                                                             //wason 12/02
			
		idw_Bol.SetRedraw(True)

			
	CASE "PHXBRANDS"

		lsDONO = idw_main.GetITemString(1,"do_no")
		
		// pvh - 02.16.06
		// if carrier = WICO, replace the Remit To name and address with COLLECT
		lu_bol.setCarrier( idw_other.object.carrier[ idw_other.getrow() ] )
		
		// 05/04 - TMcClanahan - Moved to UO
		lu_bol.uf_process_bol_phxbrands(lsDONO, idw_bol)		
		
		//BCR 16-MAR-2012: Display Can-Can Label # if Ship_To Customer name is ShopRite or PriceRite.
		lsCustName = w_do.idw_main.GetItemString(1, 'Cust_name')
		liLen1 = Len( "SHOP RITE")
		liLen2 = Len( "PRICE RITE")
		
		If Mid(lsCustName, 1, liLen1) = "SHOP RITE" OR Mid(lsCustName, 1, liLen2) = "PRICE RITE" Then
	
			lsCanCanLabelNo = idw_other.GetITemString(1,'User_Field22')	
			idw_bol.Modify("can_can_label_no.visible=TRUE")
			idw_bol.Modify("can_can_label_no.text='" + lsCanCanLabelNo + "'")
		END IF
		////////////////////////////////////////////////
		

	CASE "LOGITECH"
		
		lsDONO = idw_main.GetITemString(1,"do_no")
	
		lu_bol.uf_process_bol_logitech(lsDONO, idw_bol)

	
	// TAM - 10/11/2006 - SCITEX
	CASE "SCITEX-IID"

		lsDONO = idw_main.GetITemString(1,"do_no")
		lu_bol.uf_process_bol_scitex(lsDONO, idw_bol)		
		
// TAM - 08/09/2007
	CASE "COTY"
		lu_bol.uf_process_bol_generic( idw_main.GetITemString(1,"do_no"),idw_bol )

// TAM - 08/09/2007
	CASE "NYCSP"
		//lu_bol.uf_process_bol_generic( idw_main.GetITemString(1,"do_no"),idw_bol ) //12-Dec-2013 :Madhu- commented - Designed new BOL
		lu_bol.uf_process_bol_nycsp(idw_main.GetItemString(1,"do_no"),idw_bol) //12-Dec-2013 :Madhu -Added - Desgined new BOL
/* dts - 12/17/07 */
	CASE "SIKA"
		lsBOL = idw_main.GetItemString(1,"awb_bol_no")
		if isnull(lsBOL) or lsBOL = '' then
			messagebox("BOL Print", "Must enter BOL Number.")
			return
		end if
		lsDONO = idw_main.GetItemString(1,"do_no")
		select project_id into :lsBT
		from delivery_alt_address
		where project_id = 'SIKA'
		and do_no =  :lsDONO
		and address_Type = 'BT';
		if isnull(lsBT) or lsBT = '' then
			messagebox("BOL Print", "Must enter Bill-to Address information.")
			return
		end if
		
		If idw_Pack.RowCount() = 0 then
			messagebox("BOL Print", "Must generate Pack List.")
			return
		end if

		//dts -06/10/08 - need to make sure all items are set up to link to HazMat table...
		ldsSKUs = Create Datastore		
		ls_sql_syntax_SKU = "Select distinct sku, hazard_text_cd"
		ls_sql_syntax_SKU += " from item_master"
		ls_sql_syntax_SKU += " where project_id = 'SIKA'"
		ls_sql_syntax_SKU += " and sku in(Select SKU from delivery_detail Where do_no = '" + is_dono + "')"
		ldsSKUs.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax_SKU, "", ERRORS))
		IF Len(Errors) > 0 THEN
			messagebox(is_title, "*** Unable to create datastore for list of SKUs.~r~r" + Errors)
			return
		END IF
		ldsSKUs.SetTransObject(SQLCA)
		llSKUCount = ldsSKUs.Retrieve()
		for i = 1 to llSKUCount
			lsHazCd = ""
			lsTemp = ldsSKUs.GetItemString(i, "hazard_text_cd")
			if isnull(lsTemp) or lsTemp = "" then
				messagebox("No HazTextCd!", "SKU '" + ldsSKUs.GetItemString(i, "SKU") + "' must have a HazTextCd entered in Item Master Maintenance!", Exclamation!)
				return
			end if
			select hazard_text_cd into :lsHazCd
			from haz_mat_info
			where project_id = 'SIKA'
			and hazard_text_cd = :lsTemp;
			if isnull(lsHazCd) or lsHazCd = "" then
				messagebox("Invalid HazTextCd!", "SKU '" + ldsSKUs.GetItemString(i, "SKU") + "' has an invalid HazTextCd ('" + lsTemp + "').~r~rEither add the HazTextCd to Hazmat Text table or update the SKU in Item Master with a valid HazTextCd!", Exclamation!)
				//~r('Maintenance', 'Code Tables', 'Hazmat Text')
				return
			end if
		next

		lu_bol.uf_process_bol_sika(idw_main.GetItemString(1,"do_no"),idw_bol )


CASE "EUT"
		lu_bol.uf_process_eut_do(idw_main.GetITemString(1,"do_no"), idw_bol)		
		
CASE "RUN-WORLD", "PUMA", "GIGA"
		lu_bol.uf_process_rw_do(idw_main.GetITemString(1,"do_no"), idw_bol)				

CASE "WS-MUSER" , "WS-AWI" , "WS-BMS", "WS-BM", "WS-MHD" , "WS-PR"  //TAM w&s 2011/02
		lu_bol.uf_process_ws_do(idw_main.GetITemString(1,"do_no"), idw_bol)				

/* dts - 09/10/08 */
CASE "BOSCH"  // TAM 2014/09 added Bosch	
	//	lu_bol.uf_process_bol_generic( idw_main.GetITemString(1,"do_no"),idw_bol )
		If tab_main.tabpage_bol.rb_bol.Checked=True Then			
			lsConsolNo = ''  // Blank Consol Number so the Single BOL Prints
		End If			
		lu_bol.uf_process_bol_bosch(idw_main.GetItemString(1, "do_no"), idw_bol,lsConsolNo )		

CASE "MAQUET"

	lsDONO = idw_main.GetITemString(1,"do_no")
	
	// if carrier = WICO, replace the Remit To name and address with COLLECT
	lu_bol.setCarrier( idw_other.object.carrier[ idw_other.getrow() ] )
	
	// 05/04 - TMcClanahan - Moved to UO
	lu_bol.uf_process_bol_maquet(lsDONO, idw_bol)		

/* dts - 02/09/09 */
CASE "PANDORA"	

//	// LTK 20150924  Hazardous material check.  If found, display user defined message and prevent BOL generation
//	if f_retrieve_parm(gs_project, 'BOL_CHECK', 'VALIDATE_HAZARDOUS_MAT') = 'Y' then
//		String ls_work
//		long ll_rows
//		boolean lb_use_hazard_cd_column	// if true, use IM.hazard_cd else use IM.UF11
//
//		lb_use_hazard_cd_column = ( f_retrieve_parm(gs_project, 'BOL_CHECK', 'USE_IM_HAZARD_CD') = 'Y' )
//
//		datastore lds_sku_list
//		lds_sku_list = Create datastore
//		ls_sql_syntax_SKU = "Select distinct sku, hazard_cd, user_field11"
//		ls_sql_syntax_SKU += " from item_master"
//		ls_sql_syntax_SKU += " where project_id = 'PANDORA'"
//		ls_sql_syntax_SKU += " and sku in(Select SKU from delivery_detail Where do_no = '" + is_dono + "')"
//		lds_sku_list.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax_SKU, "", ERRORS))
//		if Len(Errors) > 0 then
//			MessageBox(is_title, "*** Unable to create datastore for list of SKUs.~r~r" + Errors)
//			return
//		end if
//		lds_sku_list.SetTransObject(SQLCA)
//		ll_rows = lds_sku_list.Retrieve()
//		for i = 1 to ll_rows
//
//			if lb_use_hazard_cd_column then
//				ls_work = lds_sku_list.GetItemString( i, 'hazard_cd' )
//			else
//				ls_work = lds_sku_list.GetItemString( i, 'user_field11' )
//			end if
//
//			if NOT IsNull( ls_work ) and Len( Trim( ls_work ) ) > 0 then
//				MessageBox(is_title, f_retrieve_parm(gs_project, 'BOL_CHECK', 'VALIDATION_ERROR_MESSAGE', 'USER_FIELD1' ))
//				f_method_trace_special( gs_project, this.ClassName() + ' - ue_process_bol', 'Hazardous material found upon BOL generation, SKU: ' + lds_sku_list.GetItemString( i, 'sku' ) ,is_dono, ' ',' ',isinvoice_no)
//				return
//			end if
//		next
//		
//	end if


		 String ls_consol_no
		 ls_consol_no = idw_main.GetItemString(1,"Consolidation_no")	

	//Jxlim 05/23/2012 SLi
		If tab_main.tabpage_bol.rb_bol.Checked=True Then
			//Jxlim 06/24/2013 Replace Bol with vics Bol - Pandora
			//lu_bol.uf_process_bol_pandora(idw_main.GetItemString(1, "do_no"), idw_bol)
//			lu_bol.uf_process_vics_bol(idw_main.GetItemString(1, "do_no"), idw_bol)		 //commented out till vics bol is ready

			if Len( ls_consol_no ) > 0 then
				long ll_rows
				
				select count(*)
				into :ll_rows
				from delivery_master
				where project_id = :gs_project
				and consolidation_no = :ls_consol_no;
				
				if ll_rows > 1 then
					int li_button
					li_button = MessageBox("BOL Generate", "This order is part of a consolidated shipment. ~rDo you want to generate this single BOL?" + &
						"~r~rClick YES to generate this single BOL.~rClick NO to generate the consolidated BOL.~rClick CANCEL to cancel all generation.", QUESTION!, YESNOCANCEL!)

					if li_button = 1 then
						// This single BOL will be printed below
					elseif li_button = 2 then
						 if lu_bol.uf_process_vics_bol_pandora_combine(ls_consol_no, idw_bol ) = 1 then
						 	tab_main.tabpage_bol.cb_bol_print.Enabled = True
						end if
						Return
					else
						Return
					end if
				end if
			end if

			 lsDONO = idw_main.GetItemString(1,"do_no")	
			 if lu_bol.uf_process_vics_bol_pandora_singleorder(lsDONO, idw_bol )	<> 1 then		// LTK 20151008 new method which lists all distinct hazmat codes and commodity codes
				return		// error condition, reported in method
			end if

		ElseIf tab_main.tabpage_bol.rb_bol_combined.Checked=True then					// LTK 20151008 Added this branch for Pandora #1001
			
			if Len( Trim( ls_consol_no ))  = 0 or IsNull( ls_consol_no ) then
				MessageBox("BOL Generate", "This order is not part of a consolidated shipment.  Please use the BOL radio button to print this BOL.")
				Return
			end if
			
			 if lu_bol.uf_process_vics_bol_pandora_combine(ls_consol_no, idw_bol ) <> 1 then
				return		// error condition, reported in method
			end if
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then		
			lu_bol.uf_process_sli_riverbed(idw_main.GetItemString(1, "do_no"), idw_bol)
		End If		

//Jxlim 112/13/2013 Applied Friedrich changed
CASE "FRIEDRICH"	
//TAM  2013/11/19 Adding My standard BOL until Jesslyn's changes are complete.  I commented out Jesslyn's code below.  When you are ready you can comment out 
// My change and uncomment yours.
//		lu_bol.uf_process_bol_friedrich(idw_main.GetItemString(1, "do_no"), idw_bol)

		If tab_main.tabpage_bol.rb_bol.Checked=True Then			
			//lu_bol.uf_process_bol_friedrich(idw_main.GetItemString(1, "do_no"), idw_bol) //standard BOL 
//TAM 2015/01/31 Moved to custom object
//			lu_bol.uf_process_vics_bol_singleorder(idw_main.GetItemString(1, "do_no"), idw_bol) //Jxlim 12/12/2013 Made this a generic function	
			lu_bol.uf_process_bol_friedrich_singleorder(idw_main.GetItemString(1, "do_no"), idw_bol) //Jxlim 12/12/2013 Made this a generic function	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
			 lsDONO = idw_main.GetItemString(1,"Consolidation_no")	
//TAM 2015/01/31 Moved to custom object
//			 lu_bol.uf_process_vics_bol_combine(lsDONO, idw_bol)	//Jxlim 12/12/2013 Made this a generic function
			 lu_bol.uf_process_bol_friedrich_combined(lsDONO, idw_bol)	
		End If			

//TAM 06/20/2018 -S20314 - Cree BOL
CASE "CREE"	
		If tab_main.tabpage_bol.rb_bol.Checked=True Then			
			lu_bol.uf_process_bol_cree_singleorder(idw_main.GetItemString(1, "do_no"), idw_bol)	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
			 lsDONO = idw_main.GetItemString(1,"Consolidation_no")	
			 lu_bol.uf_process_bol_cree_combined(lsDONO, idw_bol)	
		End If			
		
/* TAM - 2012/01 */
CASE "RIVERBED"
		lu_bol.uf_process_sli_riverbed(idw_main.GetItemString(1, "do_no"), idw_bol)
CASE "KLONELAB" //MEA 12/10/12
		lu_bol.uf_process_bol_klonelab(idw_main.GetItemString(1, "do_no"), idw_bol)
		
	//Jxlim 09/22/2014 Anki BOL
	// 12/15 - PCONKL - Added H2O for VICs
CASE "ANKI", "H2O"
	
	//TAM 2014/10/10 Using VIC Bol 
		If tab_main.tabpage_bol.rb_bol.Checked=True Then			
			lu_bol.uf_process_vics_bol_singleorder(idw_main.GetItemString(1, "do_no"), idw_bol) //Jxlim 12/12/2013 Made this a generic function	
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
			 lsDONO = idw_main.GetItemString(1,"Consolidation_no")	
			 lu_bol.uf_process_vics_bol_combine(lsDONO, idw_bol )	//Jxlim 12/12/2013 Made this a generic function
		End If			
		//lu_bol.uf_process_bol_anki(idw_main.GetItemString(1, "do_no"), idw_bol)		

CASE "ARIENS"
		If tab_main.tabpage_bol.rb_bol.Checked=True Then
			 lsDONO = idw_main.GetItemString(1,"do_no")
			 lu_bol.uf_process_bol_ariens(lsDONO, idw_bol)               
		ElseIf tab_main.tabpage_bol.rb_sli.Checked=True Then
			 lsDONO = idw_main.GetItemString(1,"Consolidation_no")
			 lu_bol.uf_process_bol_ariens(lsDONO, idw_bol)               
		End If		
		
//TAM 2019/05/02 - F15316 (Kendo) - Added custom BOL
CASE "KENDO"
		lu_bol.uf_process_bol_kendo(idw_main.GetItemString(1, "do_no"), idw_bol)
	
CASE ELSE                                                            
	
	lu_bol.uf_process_bol_generic(idw_main.GetItemString(1, "do_no"), idw_bol)
	
//	//Retrieve the report
//	lsDONO = idw_main.GetITemString(1,"do_no")
//	lsInvoiceNo = idw_main.GetITemString(1,"invoice_no")
//	idw_bol.SetTransObject(sqlca)
//	IF gs_project= 'AMBIT' THEN
//		tab_main.tabpage_bol.dw_bol_prt.Retrieve(gs_project,idw_main.GetItemString(1,"do_no"),ls_wh_code)
//	ELSE	
//		tab_main.tabpage_bol.dw_bol_prt.Retrieve(gs_project, lsDONO)
//	END IF
//	If tab_main.tabpage_bol.dw_bol_prt.RowCount() = 0 Then
//		tab_main.tabpage_bol.dw_bol_prt.InsertRow(0)
//	End If
//	tab_main.tabpage_bol.dw_bol_prt.setitem( 1, "c_pieces",idw_detail.GetItemNumber(1,"compute_3"))
//	tab_main.tabpage_bol.dw_bol_prt.setitem( 1, "c_weight",idw_detail.GetItemNumber(1,"compute_7"))
//	
	
 END CHOOSE                                                               //wason 11/22


end if // gap 5/2003 end of OLD BOL ******************************************

tab_main.tabpage_bol.cb_bol_print.Enabled = True /*Enable printing of BOL*/	

If upper(gs_project) = 'KENDO' Then 
	ib_changed = True			// Updated AWB_BOL field on OtherInfo field.  Ensure it is saved.
End If
end event

event ue_print_bol();U_Nvo_Custom_BOL	lu_BOL
datastore ld_TandC // for SIKA...
int liRtn

lu_bol = Create u_nvo_Custom_Bol

//if is_OldNew = "NEW" then //GAP 5/2003 

	idw_bol.accepttext() 
	
	// 04/04 - PCONKL - 3COM SLI needs to hide tags and remove box borders from editable columns before printing
	If upper(gs_Project) = '3COM_NASH' Then
		lu_bol.uf_print_bol_3com()
		Return 
	End If
		
	If upper(gs_Project) = 'LINKSYS' Then
		lu_bol.uf_print_bol_linksys()
		Return 
	End If
	
	OpenWithParm(w_dw_print_options,idw_bol)
	
	/* Sika is planning on having a stock of Terms and Conditions
	   and loading the printer with them when they print BOLs
		
	liRtn = Message.DoubleParm

	If upper(gs_Project) = 'SIKA' and liRtn = 1 Then
		/*SIKA prints a 'Terms and Conditions' page after the BOL
		  - but not if the print is cancelled */
		ld_TandC = Create Datastore
		ld_TandC.dataobject = "d_sika_bol_conditions"
		ld_TandC.settransobject(sqlca)
		Print(ld_TandC)
	end if
*/
end event

event ue_generate_pack();Long ll_cnt, ll_row, i,llFindRow,  llLoopCount, llLoopPos,llLineITemNo, llLineItemNoHold, llCarton, llPackFindRow, ll_owner_id
Decimal ld_gross_weight, ld_weight , ld_length, ld_width, ld_height,ld_qty, ldSetQty, ldParentQty, ldPickQty, ldSerialQty, ldPackQty,ld_qty2,ld_cbm,ld_gs_weight
integer li_foundrow, j,  li_indx, li_PickCount,k
STRING lsSKU, lsSkuParent, lsSupplier, lsSkuParentHold, lsSkuHold,lsFind, lsSerialNo,ls_std_measure , lsPackFind, lsOwnerName, ls_INActiveCustomerName
String  ls_wh_code,ls_std_measure_w,lsSupplierhold,  lscusttype, lscarton, lsLotNo, lsPoNo, lsPoNo2, lscontainerId, lscontainerIdHold
Boolean	lbBundled, lbNewCarton,lbSingleCarton, lbGenerateFromSerial, ibCopyRowInsert
String lsLotNoHold, lsPoNoHold, lsPoNo2Hold, lsGSIN, lsSSCC, lsPrevGSIN,ls_pack_po_no2,ls_pack_sscc_no,ls_carton,ls_carton_prev
Datetime ldtExpDate, ldtExpDateHold
Long	ll_method_trace_id, ll_Findrow
String lsdo_no	//TAM Riverbed 2012/01
long	llbomcount ,llpickcount	//TAM Riverbed 2012/01
String ls_Serialized_Ind  //06-Mar-2014 :Madhu- Added for Ariens SSCC
String lsCOOHold, lsCOO	// LTK 20150716  Pandora #985
Long	llFullCarton, llPartialCarton
lbBundled = True
String ls_Filter, ls_prev_sku
String lsSerializedInd = 'N'	/* 01/18 - GailM - S14978 */
Boolean lbFootprint // TAM 2018/02 - S14838 
String ls_PONO2ControlledInd, ls_ContainerTrackingInd // TAM 2018/02 - S14838 
String ls_Serial_type //TAM 2018/09/27 - DE6536
String lsSQLSelect 

// 10/13 - PCONKL - Override generate function for KloneLab
//26-Mar-2014 :Madhu- If serialno records are availble, generate packlist as like baseline
If gs_project = 'KLONELAB' and  idw_Serial.RowCount() = 0 Then
	
	u_nvo_custom_packlists	luo_custom_Packlists
	luo_custom_Packlists = Create u_nvo_custom_packlists
	
	If idw_Main.GetITemString(1,'ord_type') = 'M' Then /*Musical Run */
		luo_custom_Packlists.uf_generate_pack_klonelab_musicalrun()
	Else
		luo_custom_Packlists.uf_generate_pack_klonelab()
	End If
	
	return
	
End If

// Jxlim 07/17/2013 SkuSerialHold validation, initiated by Arien; Note If serialize is captured, seem logic need to happen on serial tab
//If  Upper(gs_project) = 'ARIENS'   Then
//	If wf_validate_skuserialhold() < 0 Then			
//		Return
//	End If
//End If 
lsSQLSelect = idw_pack.GetSQLSelect()
// 09/05 - PCONKL - If there are packages shipped by TRAX, they must be voided before regenerating (can't delete shipped rows)
If idw_Pack.Find("Tracking_Id_type='T'",1, idw_Pack.RowCount()) > 0 Then
//	messagebox(is_title,'One or more cartons on the current Packing List were shipped by TRAX.~rThese cartons must be voided before you can re-generate the Packing List.',StopSign!) // Dinesh - 02/06/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 
	messagebox(is_title,'One or more cartons on the current Packing List were shipped by ConnectShip.~rThese cartons must be voided before you can re-generate the Packing List.',StopSign!)// Dinesh - 02/06/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 
	return
End If

If ib_changed Then
	messagebox(is_title,'Please save changes before generating Packing list!')
	return
End If

//21-Mar-2014 :Madhu- check pick records against DB to avoid to loose pick rows -START
lsdo_no = idw_main.GetITemString(1,'do_no')
SELECT COUNT(*) into :llpickcount FROM Delivery_Picking with(nolock) WHERE DO_NO =:lsdo_no
USING SQLCA;

f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'ue_generate_pack ' + "Pick records count is : " + string(llpickcount) ,is_dono, ' ',' ',isinvoice_no) 

IF llpickcount = 0 THEN
	MessageBox(is_title, "Pick Records are not saved into DB!, please re-generate pick list or contact TSG/SIMS team ")
	SetMicroHelp("Save failed!")
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'Update ue_generate_pack ' + "Pick records are not saved in DB to generate Pack rows! " ,is_dono, ' ',' ',isinvoice_no) 
	return
END IF
//21-Mar-2014 :Madhu- check pick records against DB to avoid to loose pick rows -END

// cawikholm 07/05/11 Added call to track user 
SetNull( ll_method_trace_id )
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Start ue_generate_pack: ' + is_dono ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'Start ue_generate_pack:' ,is_dono, ' ',' ',isinvoice_no)	//08-Feb-2013  :Madhu added

If idw_pack.RowCount() > 0 and ibSerialCartonNoChanged  = FALSE Then		/* 01/18 - GailM - S14978 */
	
	//TAM 2018/10/11 - S24556 - Prevent Rema from regenerating the packlist
	//MikeA - 3/2020 - DE14755 - Added Kendo
	If (gs_project = 'REMA' OR gs_project = 'KENDO') and idw_pack.GetITemString(1,'pack_sscc_no')  <> '' and not isnull(idw_pack.GetITemString(1,'pack_sscc_no')) Then
		Messagebox(is_title, "Cannot Regenerate the PackList. The SSCC numbers have already been created.",Stopsign!)
		return
	End If
	
	If MessageBox(is_title, "Delete current packing list?", Question!, YesNo!,2) = 1 Then
		
		// 12/15 - PCONKL - can't delete Pack rows if any rows are currently being packed on mobile
		if idw_pack.find("mobile_status_ind in ('P','X')",1, idw_pack.rowcount()) > 0 Then
			Messagebox(is_title, "One or more cartons is currently being packed on mobile. PackList cannot be deleted.",Stopsign!)
			return
		End If
		
		ll_cnt = idw_pack.RowCount()
		idw_pack.Setredraw(false) /*pconkl 5/3/00*/
		For i = ll_cnt To 1 Step - 1
			idw_pack.DeleteRow(i)
		Next
		idw_pack.Setredraw(True) /*pconkl 5/3/00*/
		
		// 5/4/00 PCONKL - deleted rows must be saved back to DB (deleted from) to avoid PK integrity violation
		Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
		If idw_pack.Update(False, False) = 1 Then
			Execute Immediate "COMMIT" using SQLCA;
   		If SQLCA.SQLCode = 0 Then
   			idw_pack.ResetUpdate()
			Else /*commit failed*/
				Execute Immediate "ROLLBACK" using SQLCA;
     			MessageBox(is_title, "Unable to delete Packing List Rows! " + SQLCA.SQLErrText)
				SetMicroHelp("Save failed!")
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End Commit ue_generate_pack ' + "Unable to delete Packing List Rows! " + SQLCA.SQLErrText ) //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'End Commit ue_generate_pack ' + "Unable to delete Packing List Rows! " + SQLCA.SQLErrText ,is_dono, ' ',' ',isinvoice_no)	//08-Feb-2013  :Madhu added
				return
			End If
		Else /*update failed*/
			Execute Immediate "ROLLBACK" using SQLCA;
     			MessageBox(is_title, "Unable to delete Packing List Rows! " + SQLCA.SQLErrText)
				SetMicroHelp("Save failed!")
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End Update ue_generate_pack ' + "Unable to delete Packing List Rows! " + SQLCA.SQLErrText ) //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'End Update ue_generate_pack ' + "Unable to delete Packing List Rows! " + SQLCA.SQLErrText ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
				return
		End If /*end process of delete*/
	Else
		Return
	End If
	
End If

// ET3 20121129   Pandora #533 - No longer needed; disable
// LTK 20120208	Pandora #351 - Ensure all picking items have DIMs, weight and UOM_1 populated or halt the pack generation
//if gs_project = 'PANDORA' and NOT wf_skus_have_valid_weight_dims() then
//	return
//end if

//JAyres 4/10 Check to see if Customer Is INACTIVE
If gs_project = 'PANDORA' then
	
	FOR li_indx = 1 to tab_main.tabpage_pick.dw_pick.RowCount()
		
		
		ll_Owner_ID = tab_main.tabpage_pick.dw_pick.GetItemNumber(li_indx, "owner_id")
		lsOwnername = tab_main.tabpage_pick.dw_pick.GetItemString(li_indx,"cf_owner_name")
		ls_INActiveCustomerName = '' 

		If Right(Trim(lsOwnername), 3) = '(C)' Then
			
			Select Distinct dbo.Customer.Cust_Name
			Into  :ls_INActiveCustomerName
			FROM 	dbo.Owner WITH (NOLOCK)
		      	JOIN dbo.Customer WITH (NOLOCK) 
					  ON dbo.Owner.Project_ID = dbo.Customer.Project_ID
					 AND dbo.Owner.owner_cd	  = dbo.Customer.Cust_Code
			Where dbo.Owner.Owner_ID 		  = :ll_Owner_ID 
	    	  and dbo.Customer.Customer_Type = 'IN' 
			  and dbo.Owner.Project_ID 	  = :gs_project
			USING SQLCA;
	
			If NOT ( ls_INActiveCustomerName= '' or IsNULL( ls_INActiveCustomerName) ) Then
				If IsNull( lsOwnername  ) then  lsOwnername = ''
				MessageBox(is_title, "Owner Name: "+   lsOwnername + " is INACTIVE at Row "+string(li_indx) +" of Picking List.~r~rPlease Enter an Active Owner then Regenerate." )	
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End Pandora ue_generate_pack ' + " Owner Name: "+   lsOwnername + " is INACTIVE at Row "+string(li_indx) ) //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'End Pandora ue_generate_pack ' + " Owner Name: "+   lsOwnername + " is INACTIVE at Row "+string(li_indx) ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
				return
		
			End If
			
		End If
	Next
	
End If

// gap 03/2003 Get cust type 
If isValid(ids_default_address) Then
	If ids_default_address.RowCount() > 0 and ids_default_address.dataobject = 'd_customer_maintenance' Then
		lscusttype = ids_default_address.GetItemString(1, "customer_type")
	Else
		lsCustType = ''
	End If
End If

// 02/01 PCONKL - remove filter on pick list to pick up component children
wf_set_pick_filter('Remove')

idw_pack.SetColumn ("carton_no")

// 09/03 - PCONKL - If we are assigning unique carton numbers, we will start with the numeric (last 6) of DO_NO + 3 digit sequential number,
// otherwise we'll start with 1 for each order
If g.is_unique_pack_cartonnumbers = 'Y' Then
	lsCarton = Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6) /* right 6 of everything after project*/
End If

// pvh - 11/16/06
setCartonNo( 0 )
//ilCartonNo = 0

lsSkuHold = '' /*for adding new pack row (adding on Sku change)*/
lsSkuParentHold = '' /*for adding new Carton - Component children will go in the same carton as their parent eventhough the sku is different*/

/*TEMPORARY - 08/09/07 - Single Carton Pack List
	K&N and 3com-nl have asked to have Pack List generated with a single carton #
	- K&N doesn't appear to have orders for which that would help them
	- Not implemented fully for 3com-nl yet (bundled parts)
*/
// 10/14/08 Now Runners World and EUT are asking for something similar so dusting this off for them...

ls_wh_code = idw_main.object.wh_code[1]
//if gs_project = 'K&N' or (gs_project = '3COM_NASH' and ls_wh_code = '3COM-NL') then
if gs_project = 'RUN-WORLD' or gs_project = 'EUT' or gs_project = 'LAM-SG' or gs_project = 'FLEX-SIN'  or  gs_project = 'GIGA'  then
	lbSingleCarton = true
end if

// 11/09 - PCONKL - If The project indicators for scanning all items (pack validation) and cartons required on Serial Tab, we will generate the Pack List from the Serial
//							tab instead of the Picking Tab. We will only do this if all of the items have been scanned.

//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab
// For Pandora, if there are serial rows in picking and the WH has not been exempt from scanning serial numbers then pull serials for packing
If upper(gs_project) = 'PANDORA' and ibSerialRows = TRUE and ibWHExceptionFromSerialScan = FALSE Then
		ibGenerateFromSerial = True
End If
//TAM - 2018/02 - S14838 - If Container tracked, PoNo2 tracked, serialized_ind = 'B' Then we want to generated the Packing list from the serial tab * This assumes only footprint SKUs are on the Order
lbFootprint = False
if gs_project = 'PANDORA' and idw_Serial.RowCount() > 0 Then 
	lsSupplier = tab_main.tabpage_pick.dw_pick.GetITemString(1,"supp_code")
	lsSKU = idw_Serial.GetITemString(1,"SKU")	
	
	Select Serialized_Ind, PO_NO2_Controlled_Ind, Container_Tracking_Ind 
	Into :lsSerializedInd, :ls_PONO2ControlledInd, :ls_ContainerTrackingInd
	From Item_Master
	Where project_id = :gs_project and sku = :lssku and supp_code = :lsSUpplier;	
	
	//10SEPT-2018 :MEA S23046 F9270 - I1304 - Google - SIMS Footprints Containerization - Outbound
	//Use Foot_Prints_Ind Flag
	
	//lsSerializedInd = 'B' and ls_PONO2ControlledInd = 'Y' and ls_ContainerTrackingInd = 'Y' 

	
	If f_is_sku_foot_print( lsSku,lsSUpplier) then
		lbFootprint = True
	End if
End If

//GailM 01/09/2018 S27905/F13127/I1304 Google - SIMS Footprints Containerization - make Configurable
If (g.ibScanAllOrdersRequired and g.ibCartonSerialvalidationRequired and idw_Serial.RowCount() > 0) OR ( lbFootprint AND f_retrieve_parm("PANDORA","FLAG","CONTAINERIZATION") = "Y"  ) Then
	
	//Make sure that picked Qty = Serial Qty
	ldPickQty = 0
	ll_cnt = idw_Pick.RowCount()
	For i = 1 to ll_Cnt
		If idw_pick.GetITemString(i,'Component_ind') <> 'Y' and idw_pick.GetItemString( i, 'Serialized_Ind' ) = 'B' Then		// GailM 2018/02 Only check serialized pick records
			ldPickQty += idw_Pick.GetITemNumber(i,'quantity')
		End If
	Next
	
	ldSerialQty = 0
	ll_cnt = idw_Serial.RowCount()
	For i = 1 to ll_Cnt
		ldSerialQty += idw_Serial.GetITemNumber(i,'quantity')
	Next
	
	If ldSerialQty < ldPickQty Then
		
		If Messagebox(is_Title,'Not all Items have been scanned on the Serial Tab.' +&
							'~rTotal Scanned Qty: ' + String(ldSerialQty) + ' Total Allocated Qty: '+ String(ldPickQty) +&
							'~rThe Pack List cannot be generated from the Scanned data.' +&
							'~r~rDo you want to generate the Pack List from the Pick List instead?',StopSign!,YesNo!,1) = 2 Then
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ldSerialQty < ldPickQty ue_generate_pack ' + 'Not all Items have been scanned on the Serial Tab.' )	//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'End ldSerialQty < ldPickQty ue_generate_pack ' + 'Not all Items have been scanned on the Serial Tab.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added		
			Return
		End If
		
	Else
		ibGenerateFromSerial = True
	End If
	
End If

SetPointer(Hourglass!)
idw_pack.Setredraw(false) /*pconkl 10/00*/

If ibGenerateFromSerial Then /* Generate from Serial Tab*/

	ll_cnt = idw_Serial.RowCount()
	For i = 1 to ll_cnt /*each Serial Row*/
		
		If idw_Serial.GetITemString(i,'component_ind') = '*' or idw_Serial.GetITemString(i,'component_ind') = 'B' Then Continue
		
		iw_window.SetMicroHelp('Generating Pack list for Serial Row ' + String(i) + ' of ' + String(ll_cnt))
		
		lsSku = idw_Serial.GetITemString(i,'Sku')
		lsSkuParent = idw_Serial.GetITemString(i,'sku_parent')
		lsSupplier = idw_Serial.GetItemString(i,"supp_code")
		llLineItemNo = idw_Serial.GetITemNumber(i,'line_item_no')
		lsCarton = idw_Serial.GetItemString(i,"carton_no")
		ld_qty =  idw_Serial.GetITemNumber(i,'quantity')

		//TAM 2018/09/27 - DE6536 - Get Scanned Barcode Type from serial tab
		ls_Serial_type=	idw_Serial.GetItemString(i,"serial_type")
		
		//DE3189
		select Container_Tracking_Ind into :ls_ContainerTrackingInd
		from Item_Master with(nolock)
		where Project_Id =:gs_project and sku=:lsSku and supp_code=:lsSupplier
		using sqlca;
		
		//We need the serialized indicator from PIcking
		li_foundrow = idw_pick.Find("Line_Item_no = " + String(llLineItemNo) + " and upper(Sku) = '" + upper(lsSKU) + "'",1,idw_pick.RowCOunt())
		If li_foundrow > 0 Then
			lsSerializedInd = idw_pick.getitemstring( li_foundrow,'serialized_ind' )
		End If
			
		// Serial NUmbers may not be allocated  properly to the right line item. Dont over allocate to a single line or we wont be able to save the Pack list (Pack reconciled to Pick by Line AND SKU)
		// each instance of Qty may cause a split across lines. Loop per qty
		For j = 1 to ld_Qty
			
			//For each Detail record for this sku, find the first pack line that hasn't been allocated fully against
			lsFind = "Upper(Sku) = '" + Upper(lsSKU) + "'"
			llFindRow = idw_detail.Find(lsFind,1,idw_Detail.RowCount())

			Do While llFindRow > 0
				
				llLineItemNoHold = idw_detail.GetITemNumber(llFindRow,'line_item_No')
				
				//Sum the Packing Rows for this line item
				lsPackFind = "Line_Item_No = " + string(llLineItemNoHold )
				llPackFindRow = idw_pack.Find(lsFind,1,idw_Pack.RowCount())
				ldPackQty = 0

				Do While llPackFindRow > 0
					ldPackQty += idw_Pack.GetITemNUmber(llPackFindRow,'Quantity')
					llPackFindRow ++
					If llPackFindRow > idw_Pack.RowCount() Then
						llPackFindRow = 0
					Else
						llPackFindRow = idw_pack.Find(lsPackFind,llPackFindRow,idw_Pack.RowCount())
					End If
				Loop
		
				If ldPackQty < idw_Detail.getITemNumber(llFindRow,'alloc_qty') Then Exit /*we can allocate to this line Number*/
				
				llFindRow ++
				If llFindRow > idw_Detail.RowCount() Then
					llFindRow = 0
				Else
					 llFindRow = idw_detail.Find(lsFind,llFindRow,idw_Detail.RowCount())
					
				End If
				
			Loop /*Detail for SKU*/
			
			//GailM 10/22/2019 DE13104 - CartonType not properly showing on pick list
			If f_is_sku_foot_print( lsSku,lsSUpplier) then
				lbFootprint = True
			End if
	
			//One ROw for each Carton/SKU/Line ITem (Carton already assigned in the Serial Tab)
			//Start- Dhirendra -S59788  Changes ls_find string for the new carton type overpack
			IF  lbFootPrint or idw_serial.getItemString( i, 'serial_type' ) = 'Serial' Then
				//Get container id from picking list in same row as serial no
				IF gs_project ='PANDORA' and  lbFootPrint  then
					lsContainerId = idw_serial.getItemString( i, 'container_id' )
					lsFind = "Upper(carton_no) = '" + upper(lsCarton) + "' and upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(lsSupplier) + "' and line_item_no = " + String(llLineITemNo) + " and Upper( pack_container_id ) = '" + Upper( lsContainerId ) + "' "
				elseif gs_project ='PANDORA' and  lbFootPrint =FALSE  then
					lsFind = "Upper(pack_container_id) = '" + upper(lsCarton) + "' and upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(lsSupplier) + "' and line_item_no = " + String(llLineITemNo)
				else 
					lsContainerId = idw_serial.getItemString( i, 'container_id' )
					lsFind = "Upper(carton_no) = '" + upper(lsCarton) + "' and upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(lsSupplier) + "' and line_item_no = " + String(llLineITemNo) + " and Upper( pack_container_id ) = '" + Upper( lsContainerId ) + "' "
				end if 
			Else
				//dts - S59788 - 08/21/2021 - now setting Serial Carton_No to do_no Sequence type Carton_No
				//        - and using Pack_Container_ID in FIND (to create new row if Carton_No is the same (could probably just use Pack_Container_ID as a Container shouldn't be split over multiple Cartons, but....)
				//lsContainerId = idw_serial.getItemString(i, 'carton_no' )
				//lsFind = "Upper(carton_no) = '" + upper(lsCarton) + "' and upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(lsSupplier) + "' and line_item_no = " + String(llLineITemNo)
				lsContainerId = idw_serial.getItemString( i, 'container_id' )
				lsFind = "Upper( pack_container_id ) = '" + Upper( lsContainerId ) + "' and Upper(carton_no) = '" + upper(lsCarton) + "' and upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(lsSupplier) + "' and line_item_no = " + String(llLineITemNo) 
			End If
	//END - Dhirendra -S59788  Changes ls_find string for the new carton type overpack	
			llFindRow = idw_Pack.Find(lsFind,1,idw_Pack.RowCount())
		
			If llFindRow > 0 Then
						
				idw_Pack.SetITem(llFindRow,'quantity',idw_Pack.GetITemDecimal(llfindRow,'quantity') + 1) /*looping for each instance of Qty*/
				If upper(gs_project) ='PANDORA' and ls_ContainerTrackingInd ='Y' and  g.isCopy_Lot_No_to_Packlist = 'Y' Then idw_Pack.setItem(llFindRow, 'Pack_Container_Id', lsContainerId) //19-FEB-2018 :Madhu S15632 Copy Container Id onto Pack List DE3189
			
			Else /* add a new PAcking Row */
						
				ll_row = idw_pack.InsertRow(0)
				
				idw_pack.SetItem(ll_row,"component_ind",idw_serial.GetItemString(i,'component_ind'))
				idw_pack.SetItem(ll_row,"do_no", idw_main.GetItemString(1,"do_no"))
				idw_pack.SetItem(ll_row,"sku", lsSku)
				idw_pack.SetItem(ll_row,"supp_code", lsSupplier)
				idw_pack.SetITem(ll_row,'line_item_No',llLIneItemNo) /* 09/01 Pconkl */
				//Dhirendra -S59788 PANDORA-overpack caton type packing screen functionality -Start
				IF Upper(gs_project) = 'PANDORA' and ls_ContainerTrackingInd <> 'Y' then
					idw_pack.Modify("pack_container_id.Protect=1")
					idw_pack.Modify("pack_po_no2.Protect=1")
					// begin SIMS 217 - adding for container Id Akash....05/31/2023	
				     if  len(lsContainerId) >3 then
						idw_pack.SetItem(ll_row,"pack_container_id",lsContainerId)
				     else 
						idw_pack.SetItem(ll_row,"pack_container_id",idw_serial.GetItemString(i,'carton_no'))
					end if
				// END   SIMS 217 - adding for container Id Akash....05/31/2023
				    // idw_pack.SetItem(ll_row,"pack_container_id",idw_serial.GetItemString(i,'carton_no'))  SIMS 217 - adding for container Id Akash....05/31/2023
				     idw_pack.SetItem(ll_row,"carton_no", right(idw_serial.GetItemString(i,'carton_no'),(len(idw_serial.GetItemString(i,'carton_no'))-1)))
				elseif Upper(gs_project) = 'PANDORA' and ls_ContainerTrackingInd = 'Y' then
					idw_pack.Modify("pack_container_id.Protect=1")
					idw_pack.Modify("pack_po_no2.Protect=1")
				     idw_pack.SetItem(ll_row,"pack_container_id", lsContainerId)
				     idw_pack.SetItem(ll_row,"carton_no",idw_serial.GetItemString(i,'carton_no')) //dts - S59788 - 08/21/2021 - Now setting Carton_no on Serial tab to do_no + sequence
					//dts idw_pack.SetItem(ll_row,"carton_no",wf_set_Pack_carton(ll_row))
			     else
				     idw_pack.SetItem(ll_row,"pack_container_id", lsContainerId)
				     idw_pack.SetItem(ll_row,"carton_no",idw_serial.GetItemString(i,'carton_no'))
					//dts - S59788 - 08/21/2021 idw_pack.SetItem(ll_row,"carton_no",wf_set_Pack_carton(ll_row))
			     end if 
			     //Dhirendra -S59788 PANDORA-overpack caton type packing screen functionality -END
				idw_pack.SetItem(ll_row,"quantity",1) /*looping for each instance of Qty*/	
				idw_pack.SetItem(ll_row,"outerpack_id",1) /* 04/16 - PCONKL - Default outerpack To 1 */
				idw_pack.SetItem(ll_row,"serialized_ind", lsSerializedInd	)	/* 01/18 - GailM - S14978 */
//TAM - 2018/02 - S14838 - If Container tracked, PoNo2 tracked, serialized_ind = 'B' Then we want to generated the Packing list from the serial tab * This assumes only footprint SKUs are on the Order
				If gs_project = 'PANDORA' and lbFootprint = True Then
		//TAM 2018/09/27 - DE6536 - Get Scanned Barcode Type from serial tab
					If ls_Serial_type=	'Pallet' Then 
						idw_pack.SetItem ( ll_row,'Carton_Type', 'Pallet')
					else 
						idw_pack.SetItem ( ll_row,'Carton_Type', 'Carton')
					End If
				End if
				
//				If upper(gs_project) ='PANDORA' and ls_ContainerTrackingInd ='Y' and  g.isCopy_Lot_No_to_Packlist = 'Y' Then
//					idw_Pack.setItem(ll_row, 'Pack_Container_Id', idw_serial.GetItemString(i,'carton_no')) //19-FEB-2018 :Madhu S15632 Copy Container Id onto Pack List DE3189
//				Else 
//					//Get pick list row for this record -- ToDo GailM
//					idw_Pack.setItem(ll_row, 'Pack_Container_Id', idw_pick.GetItemString( i, 'container_id' ) )
//				End If
				
				// 12/15 - PCONKL - Mobile defaults*/
				if idw_Main.GetItemString(1,'mobile_status_ind') = 'C' or   idw_Main.GetItemString(1,'mobile_status_ind') = 'D' Then
					idw_Pack.SetItem(ll_row,'mobile_status_ind','R') /* Set pack status to released if mobile picking has been completed*/
					idw_main.setItem(1,'mobile_pack_status_ind','R') /* Header level packing status to Released*/
				End If
				
				idw_Pack.SetItem(ll_row,'Mobile_pack_mode','V') /*default to validate mode*/
				
				//21-Jul-2016 Madhu- Populate "DD.UF1" onto "DP.UF1" for H2O - START
				If upper(gs_project) ='H2O' Then
					lsFind = "Upper(Sku) = '" + Upper(lsSku) + "' and Line_Item_No =" +string(llLIneItemNo)+ " and supp_code = '" +lsSupplier +"'"
					llFindRow = idw_detail.Find(lsFind,1,idw_Detail.RowCount())
					
					idw_pack.setItem(ll_row,"user_field1",idw_detail.getItemString(llFindRow,'user_field1'))
				END If
				//21-Jul-2016 Madhu- Populate "DD.UF1" onto "DP.UF1" for H2O - END
									
				SELECT Length_1, Width_1, Height_1, Weight_1,standard_of_measure
				INTO :ld_length, :ld_width, :ld_height, :ld_weight,:ls_std_measure
				FROM Item_Master 
				WHERE Project_id = :gs_project and
						SKU = :lsSKU and
						supp_code = :lsSupplier
				Using SQLCA;
				
			//TimA 08/19/15 Commented out to remove from QA per Neha
			//adiing new dimension level 2 for W&S project Nxjain
			//31-08-2015 recoding for new changes 
   
			if 	Upper(Left((gs_project),3)) = 'WS-' Then 
					
				SELECT Length_2, Width_2, Height_2, Weight_2,standard_of_measure,qty_2
				INTO :ld_length, :ld_width, :ld_height, :ld_weight,:ls_std_measure , :ld_qty2
				FROM Item_Master 
				WHERE Project_id = :gs_project and
						SKU = :lsSKU and
						supp_code = :lsSupplier
				Using SQLCA;
			end if
			//nxjain 31-08-2015 
		
				
				// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
				IF gs_project = 'PANDORA' THEN
					ld_length = 0
					ld_width  = 0
					ld_height = 0
					ld_gross_weight = 0
					
					idw_pack.Object.length.protect = 0
					idw_pack.Object.width.protect = 0
					idw_pack.Object.height.protect = 0
					idw_pack.Object.weight_gross.protect = 0
					idw_pack.Object.weight_net.protect = 1
					idw_pack.Object.cbm.protect = 0
	
					// ET3 - force netweight value
					If NOT IsNull(ld_weight) Then idw_pack.SetItem ( ll_row, 'weight_net',ld_weight )
					
				END IF
				
				IF SQLCA.sqlcode = 0 and (idw_serial.GetItemString(i,'component_ind') = 'Y' or idw_serial.GetItemString(i,'component_ind') = 'N') Then
					idw_pack.SetItem ( ll_row, 'length', ld_length)
					idw_pack.SetItem ( ll_row, 'width', ld_width )
					idw_pack.SetItem ( ll_row, 'height', ld_height)
					idw_pack.SetItem ( ll_row, 'weight_net',ld_weight )
					
					// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
					if UPPER(gs_project) = 'PANDORA' then
						idw_pack.SetItem ( ll_row, 'weight_gross', ld_gross_weight )
					else
						idw_pack.SetItem ( ll_row, 'weight_gross', ld_weight )
					end if

					if 	Upper(Left((gs_project),3)) = 'WS-' Then 

						ld_qty =idw_pack.GetITemNumber(ll_row,'Quantity')
						ld_cbm =( ((ld_qty/ ld_qty2) * ld_length *ld_width *ld_height )/1000000 )
						ld_gs_weight =( (ld_qty/ ld_qty2 ) * ld_weight )
						
						idw_pack.SetItem (ll_row,'cbm',round(ld_cbm,5) )
						idw_pack.SetItem ( ll_row, 'weight_gross', round (ld_gs_weight,5) ) 
						idw_pack.SetItem ( ll_row, 'weight_net',round(ld_weight ,5))
					 else 
						idw_pack.SetItem (ll_row,'cbm',(Round(ld_length,0)*Round(ld_width,0)*Round(ld_height,0))) /* 06/00 PCONKL - set cbm*/
					end if 
					
				END IF
							
				//Dgm ETOM default is assign from Wharehouse if Item Master default is different.
				ls_wh_code = idw_main.object.wh_code[1]
				ls_std_measure_w = g.ids_project_warehouse.object.standard_of_measure[g.of_project_warehouse(gs_project,ls_wh_code)]
				IF ls_std_measure = ls_std_measure_w THEN
					idw_pack.Setitem(ll_row,"standard_of_measure",ls_std_measure)			
				ELSE
					idw_pack.Setitem(ll_row,"standard_of_measure",ls_std_measure_w)
					wf_convert(ls_std_measure_w, 1, ll_Row)//convert the Dimentions 
				END IF
				//We need the COO from PIcking
				li_foundrow = idw_pick.Find("Line_Item_no = " + String(llLineItemNo) + " and upper(Sku) = '" + upper(lsSKU) + "'",1,idw_pick.RowCOunt())
				If li_foundrow > 0 Then
					If gs_project = 'PANDORA' then
						//TimA 09/14/11 Pandora issue #226
						idw_pack.setitem(ll_row,'country_of_origin',idw_pick.getitemstring(li_foundrow,'user_field1'))
					else
						idw_pack.setitem(ll_row,'country_of_origin',idw_pick.getitemstring(li_foundrow,'country_of_origin'))
					end if
				Else
					idw_pack.setitem(ll_row,'country_of_origin','XXX')
				End IF

				IF NOT IsNull(idw_pack.GetITemNumber(ll_row,'Quantity')) THEN /*set gross wt*/
						idw_pack.SetItem ( ll_row, 'weight_gross', (idw_pack.GetITemNumber(ll_row,'weight_net') * idw_pack.GetITemNumber(ll_row,'Quantity')))
				END IF
		
				// 04/04 - PCONKL - For 3COM (HKG or SIN Warehouse), we want to default the Shipper Tracking ID to the ASN Number (Delivery MASter UF6)
				If upper(gs_project) = '3COM_NASH' and (upper(idw_main.GetITemString(1,'wh_code')) = '3COM-SIN' or upper(idw_main.GetITemString(1,'wh_code')) = '3COM-HKG') Then
					idw_pack.SetItem ( ll_row,'shipper_tracking_id', idw_Other.GetITEmString(1,'awb_bol_no'))
				End IF
				
			End IF /*add update row*/
			
		next /*Instance of Serial Qty*/
		
	next /* Serial Row */
	
	iw_window.SetMicroHelp("Ready")
	
	//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab 
	If ibMixedSerialPickRows = TRUE Then
		ls_Filter = "serialized_ind = 'N'"
		idw_pick.setfilter(ls_filter)
		idw_pick.filter( )
	End if
		
End If
	
If ibGenerateFromSerial = FALSE or ibMixedSerialPickRows = TRUE Then /* Generate from Pick Tab*/
	//TimA 08/04/11 Idenify Mork orders Issue #192
	If idw_other.GetItemString(1,'user_field21')='Y' then
		ibMorkKitOrder = True
	else
		ibMorkKitOrder = False
	end if

	ll_cnt = idw_pick.rowcount()
	For i = 1 to ll_cnt /*each Pick Row*/
	
		lbNewCarton = False
	
		// 08/04 - PCONKL - If we have built Components from free children, don't show on Pack List
		If idw_Pick.GetITemString(i,'component_ind') = '*' or idw_Pick.GetITemString(i,'component_ind') = 'B' Then Continue
	
		iw_window.SetMicroHelp('Generating Pack list for Pick Row ' + String(i) + ' of ' + String(ll_cnt))
				 	
		llFindRow = 0
		//Check for new pack row or carton
		lsSku = idw_pick.GetITemString(i,'Sku')
		lsSkuParent = idw_pick.GetITemString(i,'sku_parent')
		lsSupplier = idw_pick.GetItemString(i,"supp_code")
		lsSerialno = idw_pick.GetItemString(i,"serial_no")
		llLineItemNo = idw_pick.GetITemNumber(i,'line_item_no')
		lsLotNo = idw_pick.GetITemString(i,'lot_no')
		lsPoNo = idw_pick.GetITemString(i,'po_no')
		lsPoNo2 = idw_pick.GetITemString(i,'po_no2')
		ldtExpDate = idw_pick.GetITemDateTime(i,'expiration_date')
		lscontainerId =idw_pick.getItemString( i, 'container_Id') //08-FEB-2017 :Madhu S15632 - Copy Container Id onto Pack List
		lsSerializedInd =  idw_pick.GetITemString(i,'serialized_ind')		/* 01/18 - GailM - S14978 */	
		// LTK 20150716   Pandora #985
		if gs_project = 'PANDORA' then
			lsCOO = idw_pick.GetITemString(i,'user_field1')
		else
			lsCOO = idw_pick.GetITemString(i,'country_of_origin')
		end if
		
			//02/13 - MEA - Added g.isCopy_Lot_No_to_Packlist = 'Y' to allow Lot No / Po No / Exp Date to be copied over
			
			ibCopyRowInsert = false
			
			if g.isCopy_Lot_No_to_Packlist = 'Y' then
				
				//Need to make sure LotNo, PoNo, PoNo2, and ExpDate are unique
				// LTK 20150716   Pandora #985 added COO to the list
				//08-FEB-2018 :Madhu S15632 Added Contianer Id to the list
					
				if lsLotNo <> lsLotNoHold or lsPoNo <> lsPoNoHold  or lsPoNo2 <> lsPoNo2Hold or  ldtExpDate <> ldtExpDateHold or lsCOO <> lsCOOHold or lscontainerId <> lscontainerIdHold then
				
					ibCopyRowInsert = true
					
				end if
				
			end if

			//08-May-2014 :Madhu- Added code to generate pack list row /each - Ariens SSCC - START
				String lsSerialized_Ind
				SELECT Serialized_Ind 	INTO :lsSerialized_Ind 	FROM Item_Master with (nolock)
				WHERE Project_id = :gs_project and 	SKU = :lsSku and	supp_code = :lsSupplier
				Using SQLCA;
				
				IF (gs_Project='ARIENS' and (lsSerialized_Ind ='B' OR lsSerialized_Ind='O')) Then 
					ibCopyRowInsert =true
				END IF
		
			//08-May-2014 :Madhu- Added code to generate pack list row /each - Ariens SSCC - END

			If (lsSkuparent <> lsSkuparentHold or llLineItemNo <> llLineItemNoHold or lsCOO <> lsCOOHold) OR  ibCopyRowInsert Then /*different sku  new pack Carton*/		// LTK 20150716  Added COO check
				If gs_project = 'PANDORA' then
					//TimA Pandora issue #192	
						if ibMorkKitOrder = True and idw_Pick.GetItemString(i,'component_ind') = 'Y' then //Dont add the parent but still get the information for the children
					//	ll_row = 1
						lsSkuHold = lsSku
						lsSupplierhold = lsSupplier 
						llLineItemNoHold = llLineITemNo	
						lsLotNoHold = lsLotNo
						lsPoNoHold = lsPoNo
						lsPoNo2Hold = lsPoNo2
						ldtExpDateHold = ldtExpDate
						lsCOOHold = lsCOO
						lscontainerIdHold = lscontainerId
					else
						ll_row = idw_pack.InsertRow(0)
						lsSkuHold = lsSku
						lsSupplierhold = lsSupplier 
						llLineItemNoHold = llLineITemNo
						lsLotNoHold = lsLotNo
						lsPoNoHold = lsPoNo
						lsPoNo2Hold = lsPoNo2
						ldtExpDateHold = ldtExpDate
						lsCOOHold = lsCOO
						lscontainerIdHold = lscontainerId
					end if
				else
					ll_row = idw_pack.InsertRow(0)
					lsSkuHold = lsSku
					lsSupplierhold = lsSupplier 
					llLineItemNoHold = llLineITemNo
					lsLotNoHold = lsLotNo
					lsPoNoHold = lsPoNo
					lsPoNo2Hold = lsPoNo2
					ldtExpDateHold = ldtExpDate
					lsCOOHold = lsCOO
					lscontainerIdHold = lscontainerId
				end if
		
				/* TEMPORARY - Single Carton Pack List */
				if lbSingleCarton  and llCarton >=1 then
					//don't create another carton
				else
					// pvh - 11/16/06
					llCarton = getCartonNo()
					llCarton++
					setCartonNo( llCarton )
				End if


			lbNewCarton = True
		
			lsSkuParentHold = lsSkuHold
		
			// 01/05 - PCONKL - for 3COM Bundling initiative - we will show component children that have been blown out on the pick list (not received as parents)
			//							on the Pack List ONLY if the parent Group = 'B' for Bundled.
		
			//If the parent has changed, see if Parent item is a bundled parent
			lbBundled = True
			If Upper(gs_Project) = '3COM_NASH' Then
				If isnull(idw_Pick.getITemString(i,'grp')) or idw_Pick.getITemString(i,'grp') <> 'B' Then
					lbBundled = False
				End If
			Else
				lbBundled = False
			End If
		
		// TAM 2018/11/05 - DE7010 - Need to compare UPPer(lsSupplier)
		//ElseIf lsSKU <> lsSKUHOld or lsSupplier <> lsSupplierhold or Upper(gs_Project) ='RIVERBED' Then  //10-Oct-2013 :Madhu Added projectId  
		ElseIf lsSKU <> lsSKUHOld or Upper(lsSupplier) <> Upper(lsSupplierhold) or Upper(gs_Project) ='RIVERBED' or (Upper(gs_project) = 'BOSCH') Then  // Dinesh 03/16/2023 - SIMS-151- BOSCH Label
		
			ll_row = idw_pack.InsertRow(0)
			lsSkuHold = lsSku
			lsSupplierhold = lsSupplier
			//10-Oct-2013 :Madhu Added code to set CartonNo -START
			llCarton = getCartonNo()
			llCarton++
			setCartonNo( llCarton )
			//10-Oct-2013 :Madhu Added code to set CartonNo -END
		End If

//		If gs_project = 'PANDORA' then
//			If idw_other.GetItemString(1,'user_field21')='Y' and idw_Pick.GetItemString(i,'component_ind') = 'Y' and Not lbBundled Then Continue  //TimA Issue #192
//		else
//			If idw_Pick.GetItemString(i,'component_ind') = 'W' and idw_other.GetItemString(1,'user_field21')='Y' and Not lbBundled Then Continue
			If idw_Pick.GetItemString(i,'component_ind') = 'W'  and ibMorkKitOrder = false and Not lbBundled Then Continue
			If idw_Pick.GetItemString(i,'component_ind') = 'Y'  and ibMorkKitOrder = True and Not lbBundled Then Continue
//			If idw_Pick.GetItemString(i,'component_ind') = 'W'  and Not lbBundled Then Continue	//Original		
//		end if

		//Select SKU from Item_Master and Check row count
		// 08/16 - PCONKL - Added Qty2
		SELECT Length_1, Width_1, Height_1, Weight_1,standard_of_measure,Serialized_Ind, qty_2
		INTO :ld_length, :ld_width, :ld_height, :ld_weight,:ls_std_measure,:ls_Serialized_Ind, :ld_Qty2
		FROM Item_Master 
		WHERE Project_id = :gs_project and
				SKU = :lsSKU and
				supp_code = :lsSupplier;
		
		llLoopCount = 1 
	
		// 08/02 - PCONKL - For Saltillo, we  want to generate a seperate carton for each qty (gap  9/02 - added: Except for PDC types)
		// 2012/01 - TAM - Added riverbed BOM Items.  If an Item has a delivery bom them we will seperate it into 1 per carton
		If Upper(gs_project) = 'RIVERBED' then
			lsdo_no = idw_main.GetITemString(1,'do_no')
			SELECT count(*)  
    			INTO :llBOMCount  
    			FROM Delivery_BOM  
		   	WHERE ( do_no = :lsdo_no ) AND  
         	( Sku_Parent = :lssku )   ;
		End if

//		If Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC"  or isnull(lscusttype)) then 
//		If (Upper(gs_project) = 'RIVERBED' and llBOMCount > 0) or (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC"  or isnull(lscusttype))) then  //10-Oct-2013 :Madhu commented
		//If (Upper(gs_project) = 'RIVERBED') or (Upper(gs_project) ='ARIENS' and (ls_Serialized_Ind ='B' or ls_Serialized_Ind ='O')) or (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC"  or isnull(lscusttype))) then  //10-Oct-2013 :Madhu Removed llBOMCount condition to generate packlist records with qty=1 // Dinesh - 03/16/2023- SIMS-151- BOSCH Label change
		 // Dinesh - 03/16/2023- SIMS-151- BOSCH Label change
		 If (Upper(gs_project) = 'BOSCH') or (Upper(gs_project) = 'RIVERBED') or (Upper(gs_project) ='ARIENS' and (ls_Serialized_Ind ='B' or ls_Serialized_Ind ='O')) or (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC"  or isnull(lscusttype))) then  //10-Oct-2013 :Madhu Removed llBOMCount condition to generate packlist records with qty=1 
			llLoopCount = idw_pick.GetItemnumber(i,'quantity') /*loop once for each qty*/
			ldSetQty = 1 /*set each qty to 1*/
			
			
		Else /*All other projects */
		
			llLoopCount = 1 /*loop once*/
			ldSetQty = idw_pick.GetItemnumber(i,'quantity') /*set qty to total Qty*/
		
		End If
		
		// 08/16 - If checked for one carton per level 2 qty and we have a level 2 qty for this item master, we will loop once per each full carton and once for any remainder
		If tab_main.tabpage_pack.cbx_gen_level2_qty.Checked and ld_Qty2 > 0 Then
			
			llFullCarton = Truncate(ldSetQty/ld_Qty2,0)
			llpartialCarton = mod(ldSetQty,ld_Qty2) /* remainder*/
			
			llLoopCount = llFullcarton /*loop once for each full carton*/

			
			If llPartialCarton > 0 Then
				llLoopCount ++ /* loop once for a partial carton for the remainder*/
			End If
			
		End If
		
		For llLoopPos = 1 to llLoopCount
		
			If llLoopPos > 1 Then
				ll_row = idw_pack.InsertRow(0)
				llCarton = getCartonNo()
				llCarton++
				setCartonNo( llCarton )
			End If
			
			idw_pack.SetItem(ll_row,"component_ind",idw_pick.GetItemString(i,'component_ind'))
			idw_pack.SetItem(ll_row,"do_no", idw_main.GetItemString(1,"do_no"))
			idw_pack.SetItem(ll_row,"sku", lsSku)
			idw_pack.SetItem(ll_row,"supp_code", lsSupplier)
			idw_pack.SetITem(ll_row,'line_item_No',llLIneItemNo) /* 09/01 Pconkl */
			
			//21-Jul-2016 Madhu- Populate "DD.UF1" onto "DP.UF1" for H2O - START
			If upper(gs_project) ='H2O' Then
				lsFind = "Upper(Sku) = '" + Upper(lsSku) + "' and Line_Item_No =" +string(llLIneItemNo)+ " and supp_code = '" +lsSupplier +"'"
				llFindRow = idw_detail.Find(lsFind,1,idw_Detail.RowCount())
				
				idw_pack.setItem(ll_row,"user_field1",idw_detail.getItemString(llFindRow,'user_field1'))
			END If
			//21-Jul-2016 Madhu- Populate "DD.UF1" onto "DP.UF1" for H2O - END
			
			IF g.isCopy_Lot_No_to_Packlist = 'Y' then
				
				idw_pack.SetItem(ll_row,"pack_lot_no", lsLotNo)
				idw_pack.SetItem(ll_row,"pack_po_no", lsPoNo)			
				idw_pack.SetItem(ll_row,"pack_po_no2", lsPoNo2)					
				idw_pack.SetItem(ll_row,"pack_expiration_date", ldtExpDate)		
				idw_pack.setItem( ll_row, "Pack_Container_Id", lscontainerId)
				
			End IF
			
			// 12/15 - PCONKL - Mobile defaults*/
			if idw_Main.GetItemString(1,'mobile_status_ind') = 'C' or   idw_Main.GetItemString(1,'mobile_status_ind') = 'D' Then
				idw_Pack.SetItem(ll_row,'mobile_status_ind','R') /* Set pack status to released if mobile picking has been completed*/
				idw_main.setItem(1,'mobile_pack_status_ind','R') /* Header level packing status to Released*/
			End If
				
			idw_Pack.SetItem(ll_row,'Mobile_pack_mode','V') /*default to validate mode*/
			idw_pack.SetItem(ll_row,"outerpack_id",1) /* 04/16 - PCONKL - Default outerpack To 1 */
			
			//TimA 09/28/12 Pandora issue #471 need to populate the project and qa_check_ind so the report works on the first time printing
			idw_pack.SetItem(ll_row,"Project_Id",idw_pick.GetItemString(i,'project_id'))
			idw_pack.SetItem(ll_row,"qa_check_ind",idw_pick.GetItemString(i,'qa_check_ind'))
			
			//BCR 06-JAN-2012: For Geistlich...
			IF Upper(gs_project) = 'GEISTLICH' THEN
				idw_pack.SetItem(ll_row,"user_field1",idw_pick.GetItemString(i,'lot_no'))
			END IF
//			
//			// Begin - Dinesh -SIMS-107- 02/08/2023-Upper(gs_project) = "BOSCH") for pack  SSCC number
//				IF (Upper(gs_project) = "BOSCH") AND idw_pack.RowCount() > 0 then
//					ls_carton=''
//					For li_indx = 1 to idw_pack.RowCount()
//						ls_pack_sscc_no=idw_pack.GetItemString(li_indx, "pack_sscc_no")
//						ls_carton=idw_pack.GetItemString(li_indx, "carton_no")
//							If ls_pack_sscc_no='' or isnull(ls_pack_sscc_no)  Then
//								if ls_carton_prev <> ls_carton then
//									lsSSCC = f_get_sscc_number( gs_project, idw_pack.GetItemString(li_indx, "supp_code") )
//									
//								else
//									continue;
//								end if
//								ls_carton_prev = ls_carton
//								idw_pack.SetItem(li_indx, "pack_sscc_no", lsSSCC)
//							else
//							End if
//						Next
//				End if
			// End - Dinesh -SIMS-107- 02/08/2023-Upper(gs_project) = "BOSCH") for pack  SSCC number
			
			//11-JUNE-2018 :Madhu S20055 - KDO - Add ‘Pick Location’ to UF2 of Pack List.
			 IF Upper(gs_Project) ='KENDO' and lsSKU <> ls_prev_sku Then
				idw_pack.SetItem(ll_row,"user_field2",idw_pick.GetItemString(i,'l_code'))	
				ls_prev_sku = lsSKU
			End If
		
			// 08/16 - PCONKL - If we're generating by level 2 qty, Anything less then the last loop will be for a full carton. The last loop may be for a full carton or a partial depening on if the partial exists
			// 01/17 - Changed to check for level 2 qty > 1, not 0
			If tab_main.tabpage_pack.cbx_gen_level2_qty.Checked and ld_Qty2 > 1 Then
				If llLoopPOs < llLoopCount Then
					ldSetQty = ld_qty2
				Else
					if llPartialCarton > 0 Then
						ldSetQty = llPartialCarton
					Else
						ldSetQty = ld_qty2
					End If
				End If
			End If
			
			idw_pack.SetItem(ll_row,"quantity",idw_pack.GetITemNumber(ll_row,'Quantity') + ldSetQty ) /*add current pick row to whats in current pack row (we may be combining multiple pick rows into a single Pack) */
			
			
			//TimA 08/19/15 Commented out to remove from QA per Neha	
		//adiing part master level 2dimension for W&S project Nxjain 31-08-2015
				
		If Upper(Left((gs_project),3)) = 'WS-' Then 
				SELECT Length_2, Width_2, Height_2, Weight_2,standard_of_measure, qty_2
				INTO :ld_length, :ld_width, :ld_height, :ld_weight,:ls_std_measure, :ld_qty2
				FROM Item_Master 
				WHERE Project_id = :gs_project and
						SKU = :lsSKU and
						supp_code = :lsSupplier
				Using SQLCA;
			end if
			//nxjain 31-09-2015


			// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
			IF UPPER(gs_project) = 'PANDORA' THEN
				ld_length = 0
				ld_width  = 0
				ld_height = 0
				ld_gross_weight = 0
				
				idw_pack.Object.length.protect = 0
				idw_pack.Object.width.protect = 0
				idw_pack.Object.height.protect = 0
				idw_pack.Object.weight_gross.protect = 0
				idw_pack.Object.weight_net.protect = 1
				idw_pack.Object.cbm.protect = 0

				// ET3 - force netweight value
				If NOT IsNull(ld_weight) Then idw_pack.SetItem ( ll_row, 'weight_net',ld_weight )
				
			END IF
				
			IF SQLCA.sqlcode = 0 and (idw_pick.GetItemString(i,'component_ind') = 'Y' or idw_pick.GetItemString(i,'component_ind') = 'N' or ibMorkKitOrder = True) Then
			//IF SQLCA.sqlcode = 0 and (idw_serial.GetItemString(i,'component_ind') = 'Y' or idw_serial.GetItemString(i,'component_ind') = 'N') Then
				idw_pack.SetItem ( ll_row, 'length', ld_length)
				idw_pack.SetItem ( ll_row, 'width', ld_width )
				idw_pack.SetItem ( ll_row, 'height', ld_height)
				idw_pack.SetItem ( ll_row, 'weight_net',ld_weight )

				// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
				if UPPER(gs_project) = 'PANDORA' then
					idw_pack.SetItem ( ll_row, 'weight_gross', ld_gross_weight )
				else
					idw_pack.SetItem ( ll_row, 'weight_gross', ld_weight )
				end if
						
					
				If Upper(Left((gs_project),3)) = 'WS-' Then 
						ld_qty =idw_pack.GetITemNumber(ll_row,'Quantity')
						ld_cbm =( ((ld_qty/ ld_qty2) * (ld_length *ld_width *ld_height) )/1000000 )
						ld_gs_weight =( (ld_qty/ ld_qty2 ) * ld_weight )
						
						idw_pack.SetItem (ll_row,'cbm',round(ld_cbm,5) )
						idw_pack.SetItem ( ll_row, 'weight_gross', Round(ld_gs_weight,5) ) 
						idw_pack.SetItem ( ll_row, 'weight_net',Round(ld_weight,5 ))
					 else 
						idw_pack.SetItem (ll_row,'cbm',(Round(ld_length,0)*Round(ld_width,0)*Round(ld_height,0))) /* 06/00 PCONKL - set cbm*/
					end if 

			END IF
		
			IF gs_project = 'PANDORA' then //TimA #192			
				If idw_pick.GetItemString(i,'component_ind') = '*' or idw_pick.GetItemString(i,'component_ind') = 'B'  and ibMorkKitOrder = True Then //TimA Issue #192 leave the Children on the pack
					lsFind = "Sku = '" + idw_pick.GetITemString(i,'sku_parent') + "' and line_item_no = " + string(idw_pick.GetItemNumber(i,'line_item_no'))
					llFindRow = idw_pack.Find(lsFind,llFindRow,idw_pack.RowCount()) /* start with first parent*/
					If llFindRow > 0 Then
						idw_pack.SetItem(ll_row,"carton_no", idw_pack.GetItemString(llFindRow,'carton_no')) /*Set to same carton as Parent*/
						//JXLIM 05/06/2010 for PHXBRANDS
						IF Upper(gs_project) = 'PHXBRANDS' THEN
							idw_pack.SetItem(ll_row,"carton_type","Case")
						END IF
						//JXLIM 05/06/2010 end for PHXBRANDS.
					Else
						idw_pack.SetItem(ll_row,"carton_no",'0')
					End If
					llFindRow ++
				Else
				
					if lbSingleCarton then
						//Now leaving carton blank (for Run-world and EUT and GIGA)
						idw_pack.SetItem(ll_row, "carton_no", "")
					else
						idw_pack.SetItem(ll_row,"carton_no",wf_set_Pack_carton(ll_row)) /* 10/06 - PCONKL - assigning in single place for all projects*/
						//JXLIM 05/06/2010 for PHXBRANDS
						IF Upper(gs_project) = 'PHXBRANDS' THEN
							idw_pack.SetItem(ll_row,"carton_type","Case")
						END IF
						//JXLIM 05/06/2010 end for PHXBRANDS.
					end if
				end if				
			ELSE				
				//If it's a component child, we will want to put it in the same carton as the parent
				If idw_pick.GetItemString(i,'component_ind') = '*' or idw_pick.GetItemString(i,'component_ind') = 'B' or idw_pick.GetItemString(i,'component_ind') = 'W' Then /*component Child*/
					lsFind = "Sku = '" + idw_pick.GetITemString(i,'sku_parent') + "' and line_item_no = " + string(idw_pick.GetItemNumber(i,'line_item_no'))
					llFindRow = idw_pack.Find(lsFind,llFindRow,idw_pack.RowCount()) /* start with first parent*/
					If llFindRow > 0 Then
						idw_pack.SetItem(ll_row,"carton_no", idw_pack.GetItemString(llFindRow,'carton_no')) /*Set to same carton as Parent*/
						//JXLIM 05/06/2010 for PHXBRANDS
						IF Upper(gs_project) = 'PHXBRANDS' THEN
							idw_pack.SetItem(ll_row,"carton_type","Case")
						END IF
						//JXLIM 05/06/2010 end for PHXBRANDS.
					Else
						idw_pack.SetItem(ll_row,"carton_no",'0')
					End If
					llFindRow ++
				Else
			
					if lbSingleCarton then
						//Now leaving carton blank (for Run-world and EUT and GIGA)
						idw_pack.SetItem(ll_row, "carton_no", "")
					else
						idw_pack.SetItem(ll_row,"carton_no",wf_set_Pack_carton(ll_row)) /* 10/06 - PCONKL - assigning in single place for all projects*/
						//JXLIM 05/06/2010 for PHXBRANDS
						IF Upper(gs_project) = 'PHXBRANDS' THEN
							idw_pack.SetItem(ll_row,"carton_type","Case")
						END IF
						//JXLIM 05/06/2010 end for PHXBRANDS.
					end if

					//TAM 04-11-2013: For Strykerset carton number from pick...
					If Upper(gs_project)= 'STRYKER' and idw_pick.GetItemString(i,'user_field1') > '' Then 
						idw_pack.SetItem(ll_row,"carton_no", idw_pick.GetItemString(i,'user_field1'))
					END IF
			
				End If
			END IF //End if Pandora
			
			If gs_project ='HILLMAN' then idw_pack.SetItem(ll_row,"carton_no","01")	//29-Sep-2014 :Madhu- Set carton no#01 for HILLMAN

			//Dgm ETOM default is assign from Wharehouse if Item Master default is different.
			ls_wh_code = idw_main.object.wh_code[1]
			ls_std_measure_w = g.ids_project_warehouse.object.standard_of_measure[g.of_project_warehouse(gs_project,ls_wh_code)]
			IF ls_std_measure = ls_std_measure_w THEN
				idw_pack.Setitem(ll_row,"standard_of_measure",ls_std_measure)			
			//using level 2 dim parameters nxjain 31-08-2015
			ELSEif Not(	Upper(Left((gs_project),3)) = 'WS-') Then 
				idw_pack.Setitem(ll_row,"standard_of_measure",ls_std_measure_w)
				wf_convert(ls_std_measure_w, 1, ll_Row)
			END IF

			If gs_project = 'PANDORA' then
				//TimA 09/14/11 Pandora issue #226
				//Use User_field1 from Picking when generating the pack
				idw_pack.setitem(ll_row,'country_of_origin',idw_pick.getitemstring(i,'user_field1'))
			else
				idw_pack.setitem(ll_row,'country_of_origin',idw_pick.getitemstring(i,'country_of_origin'))
			End if
			
			IF NOT IsNull(idw_pack.GetITemNumber(ll_row,'Quantity')) THEN /*set gross wt*/
				IF gs_project = 'PANDORA' THEN
					idw_pack.SetItem ( ll_row, 'weight_gross', 0 )
				//using level 2 dim parameters and calulate with WS farmula  nxjain 31-08-2015
				ELSEif not (Upper(Left((gs_project),3)) = 'WS-') Then  
					 idw_pack.SetItem ( ll_row, 'weight_gross', (idw_pack.GetITemNumber(ll_row,'weight_net') * idw_pack.GetITemNumber(ll_row,'Quantity')))
				END IF
			end if	
			//TimA 07/11/14 Pandora issue #860
			//Because of MIM orders all Sch Codes that are DOS or NOS set the carton_type to a default value of Carton
			If gs_project = 'PANDORA' and (Upper(idw_other.GetItemString(1,"User_Field1") ) =  'DOS' or Upper(idw_other.GetItemString(1,"User_Field1") ) =  'NOS') Then
				idw_pack.SetItem ( ll_row,'Carton_Type', 'Carton')
			End if
			
			// 04/04 - PCONKL - For 3COM (HKG or SIN Warehouse), we want to default the Shipper Tracking ID to the ASN Number (Delivery MASter UF6)
			If upper(gs_project) = '3COM_NASH' and (upper(idw_main.GetITemString(1,'wh_code')) = '3COM-SIN' or upper(idw_main.GetITemString(1,'wh_code')) = '3COM-HKG') Then
				idw_pack.SetItem ( ll_row,'shipper_tracking_id', idw_Other.GetITEmString(1,'awb_bol_no'))
			End IF
		
		
			If llLoopPos <= llLoopCount  Then /* GAP 10/02 - need to bump the counter for GM_M  except for PDC orders*/
//				ll_row = idw_pack.InsertRow(0)
				//If idw_pick.GetItemNumber(i,'component_No') > 0  or (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC"  or isnull(lscusttype))) Then 
				If (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC"  or isnull(lscusttype))) Then 
					ilCartonNo ++
					lbNewCarton = True
					ll_row = idw_pack.InsertRow(0)
				End If
			End If
			
             //11-Sep-2014 :Madhu- Copy DD.UF2 onto Packlist.UF2 for ANKI -START
			  If gs_project ='ANKI' THEN
					lsFind = "Sku = '" + lsSku + "' and line_item_no = " + String(llLineItemNo) + " and supp_code = '" +lsSupplier +"'"
					ll_Findrow = idw_detail.find( lsFind, 0, idw_detail.rowcount())  // Get corresponding record/row from Delivery Detail based on above attributes
					
					idw_pack.setItem(ll_row,'user_field2',idw_Detail.getItemString(ll_Findrow,'user_field2'))  // Get DD.UF2 and copy onto generated pack list record.
			  END IF
			  //11-Sep-2014 :Madhu- Copy DD.UF2 onto Packlist.UF2 for ANKI -END   
		
		Next /*loop count*/
		
	Next /* Next Pick Row*/
	iw_window.SetMicroHelp("Ready")
End If		/* End of Non-Serialized rows from Pick List */

	// Turn of filter 
	ls_Filter = ""
	idw_pick.setfilter(ls_filter)
	idw_pick.filter( )

//MEA 03/08 - Moved out of loop to prevent out of memory during save.
wf_assignetom(2) //Assigning value of Standard_of Mesure to Radio Button	

li_foundrow = 1 /*search  for null rows - GAP 09/02*/
do while  li_foundrow >= 1
	li_foundrow =  idw_pack.Find("IsNull(carton_no)", 1, idw_pack.RowCount())
	if li_foundrow > 0 then idw_pack.DeleteRow(li_foundrow) /*delete null rows */
loop
idw_pack.Sort()
idw_pack.GroupCalc()

//Enable Components Checkbox if any components are present
//If idw_pick.Find("Component_no > 0 ",1,idw_pack.RowCount()) > 0 Then /*find in Pick, not available in Pack*/
If idw_pick.Find("sku <> sku_Parent ",1,idw_pick.RowCount()) > 0 Then /*find in Pick, not available in Pack*/
	tab_main.tabpage_pack.cbx_show_comp_pack.Enabled = True
	tab_main.tabpage_pack.cbx_show_comp_pack.Checked = True
Else
	tab_main.tabpage_pack.cbx_show_comp_pack.Enabled = False
	tab_main.tabpage_pack.cbx_show_comp_pack.Checked = False
End If

// 02/01 PCONKL - reset filter on Pick LIst based on showing components
wf_set_pick_filter('Set')

//03/07 - PONKL - Enable/Disable DIMS on PAcking List - Only want to enable first row for a carton
uf_enable_first_carton_row(0,"")
	
idw_pack.Setredraw(True) /*pconkl 10/00*/

//gap02-03 warning message for 'gm_m' when an order exceeds 200 pieces
//If idw_pack.RowCount() > 0 Then
//	if idw_pack.getItemNumber(idw_pack.RowCount(), 'compute_2') > 200 and  Upper(Left(gs_project,4)) = 'GM_M' and ((lscusttype  <> "PDC" and lscusttype <> "ACDELCOPDC") or isnull(lscusttype))  then 
//		MessageBox ( "Carton Warning for Delivery Order" , "This order exceeds 200 Cartons!", exclamation!  )
//	end if
//	
//end if

string ls_staging_location

IF Upper(gs_project) = "PHXBRANDS" OR  Upper(gs_project) = "SIKA" THEN
	
	Open(w_staging_location)
	
	ls_staging_location = message.StringParm 
	
	
//	idw_other.SetItem( 1, "user_field13", ls_staging_location)

	integer li_idx

	for li_idx =  1 to idw_pick.RowCount()
		idw_pick.SetItem( li_idx, "staging_location", ls_staging_location)
	next

	for li_idx =  1 to idw_pick_detail.RowCount()
		idw_pick_detail.SetItem( li_idx, "staging_location", ls_staging_location)		
	next	
	
	
END IF



//MEA - 01/16/2012

//No. of Carton in Other Info tab should be populated by getting the Total Cartons in Packing List tab after the packing list 
//is being generated

//TimA 09/11/12 Pandora issue #515.  All orders that have DOS in the Sch Cd needs they following set when putaway is generated.
IF Upper(gs_project) = "PANDORA" THEN
	IF idw_pack.RowCount() >= 1 THEN
		String lsOrder
		DateTime ldtToday
		if Upper(idw_other.GetItemString(1,"User_Field1") ) = 'DOS' Then
			lsOrder = idw_main.GetItemString(1,'invoice_no' )
			ldtToday = f_get_date("END")
			idw_other.SetItem( 1, "Carrier", 'MLOGSHLSHL' )			
			idw_other.SetItem( 1, "ship_via", 'SHUTTLE' )
			idw_other.SetItem( 1, "agent_info", 'Shuttle' )			
			idw_other.SetItem( 1, "transport_mode", 'GROUND')
			idw_other.SetItem( 1, "freight_terms", 'NA')		
			idw_other.SetItem( 1, "awb_bol_no", lsOrder )				
			idw_main.SetItem( 1, "request_date", ldtToday )
		end if
	END IF	
END IF	

wf_set_carton_type()  // Dinesh - 06242022 - S72575- Google - SIMS - Outbound Processing Changes (Carton_Type / Pack_PO_NO2 portion)

//IF Upper(gs_project) = "FLEX-SIN" THEN
//
//	for li_idx =  1 to idw_pack.RowCount()
//		idw_pack.SetItem(ll_row, "carton_no", "")
//	next		
//
//END IF	
	

//ET3 2012-09-17 Pandora 456 - Blank out DIMs; force users to enter values
IF UPPER(gs_project) = 'PANDORA' THEN
	string sVMsg = "A value of '0' is not valid"
	string sVRule = "Number(GetText()) > 0"
	
	idw_pack.Object.length.ValidationMsg = sVMsg
	idw_pack.SetValidate("length", sVRule) 
	
	idw_pack.Object.width.ValidationMsg = sVMsg
	idw_pack.SetValidate("width", sVRule)
	
	idw_pack.Object.height.ValidationMsg = sVMsg
	idw_pack.SetValidate("height", sVRule)
	
	idw_pack.Object.weight_gross.ValidationMsg = sVMsg
	idw_pack.SetValidate("weight_gross", sVRule)
	
	//idw_pack.Object.cbm.protect = 0
	idw_pack.Object.weight_net.background.Color = RGB(200,200,200)

END IF


//MEA - 1/13 - Do not default Carton Numbers for Stryker.
//TAM - 4/13 - Carton number now set from pick UF1 above.

//IF Upper(gs_project) = "STRYKER" AND idw_pack.RowCount() > 0 then
//	
//	string ls_null
//	SetNull(ls_null)
//	
//	For  li_indx = 1 to idw_pack.RowCount()
//	
//		idw_pack.SetItem( li_indx, "carton_no",  ls_null)
//		
//	Next
//	
//	
//END IF

//MEA - 1/18 - Roll-up for 

//If yes, we would create a packing row for each unique combination. 
//If not, roll up as we are currently doing today. We can base the column visibility on the packing tab based on the tracking indicators in Item master (same as Picking and Putaway).

//GailM 2/18/2019 S29552 F13773 I1745 Philips BlueHeart  - SIMS - Product Picked - Client Changes
//GailM 9/3/2019 S36484 F17554 Philips Batch GSIN
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
//IF (Upper(gs_project) = "PHILIPSCLS" OR Upper(gs_project) = "PHILIPS-DA") AND idw_pack.RowCount() > 0 then
IF (Upper(gs_project) = "PHILIPSCLS" OR Upper(gs_project) = "PHILIPS-DA" OR Upper(gs_project) = "BOSCH") AND idw_pack.RowCount() > 0 then  // Dinesh - 03/16/2023- SIMS-151- BOSCH Label change
	 IF (Upper(gs_project) = "BOSCH") then // Dinesh - 03/16/2023- SIMS-151- BOSCH Label change
	 else
		
			DateTime ldtPickEnd
			ldtPickEnd = f_get_date("END")
			idw_main.SetItem(1, "pick_complete",ldtPickEnd)
			idw_main.SetItem(1, "transport_mode", "LT")
			
			lsPrevGSIN = idw_main.GetItemString(1, "user_field4")
			If lsPrevGSIN <> '' Then
				If MessageBox(is_title,"GSIN already assigned as " + lsPrevGSIN + ".  Do you wish to overwrite?",Question!,YesNo!,2) = 1 Then
					idw_main.SetItem(1, "user_field4", f_get_gsin_number( gs_project, lsSupplier))
				End If
			Else
				idw_main.SetItem(1, "user_field4", f_get_gsin_number( gs_project, lsSupplier))
			End If
		END IF   // Dinesh - 03/16/2023- SIMS-151- BOSCH Label change

	For li_indx = 1 to idw_pack.RowCount()
		 // Begin - Dinesh - 03/16/2023- SIMS-151- BOSCH Label change
		 IF Upper(gs_project) = "BOSCH" then
			if Upper(idw_main.GetITemString(1,'User_Field22'))='SSCC' then  // Begin - Dinesh - 07/28/2023- SIMS-151- BOSCH Label change
				lsSSCC = f_get_sscc_number( gs_project, idw_pack.GetItemString(li_indx, "supp_code") )
				idw_pack.SetItem(li_indx, "pack_sscc_no", lsSSCC)
			else // Added condition on sending SSCC number to EDI for user_field22 null
				idw_pack.SetItem(li_indx, "pack_sscc_no",'')
			end if
		else
		 // End - Dinesh - 03/16/2023- SIMS-151- BOSCH Label change
		lsSSCC = f_get_sscc_number( gs_project, idw_pack.GetItemString(li_indx, "supp_code") )
		idw_pack.SetItem(li_indx, "pack_sscc_no", lsSSCC)
		idw_pack.SetItem(li_indx, "invoice_no", idw_main.GetItemString(1, "invoice_no"))
		idw_pack.SetItem(li_indx, "ord_status", idw_main.GetItemString(1, "ord_status"))
		idw_pack.SetItem(li_indx, "user_field4", idw_main.GetItemString(1, "user_field4"))
		idw_pack.SetItem(li_indx, "carton_type", "CS")
		end if
	Next
	lsGSIN = f_get_gsin_number( gs_project, lsSupplier) 
	idw_main.SetItem(1, "user_field4", lsGSIN)
End IF



SetPointer(Arrow!)
idw_pack.SetFocus()

ib_changed = True

tab_main.tabpage_pack.cbx_gen_level2_qty.Checked = False /* 08/16 - Pconkl */

//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pack' ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pack', 'End ue_generate_pack' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
end event

event type integer ue_confirm();// pvh 09/08/05 - modified to remove references to Gemini Tab

// 11/02 - Pconkl - change QTY to Decimal

integer li_return, liMsg, i_indx
Decimal	ldQty, ldPrice
DECIMAL ld_NxtSeq // 01/03/2011 ujh: S/N_P
long ll_totalrows,i, ll_new,llOwner, llCount,  llRowCount, llRowPos, llrc, llFindRow, llRecCount, llOwnerID, llOwnerID_Prev
long ll_na_component_no, ll_missing_sku_serial_cnt // 01/03/2011 ujh: S/N_P:
String ls_component_ind, ls_missing_sku_serial // 01/03/2011 ujh: S/N_P:
String	lsSku,lsSupplier,lsCoo,lsLoc,lsType,lsLot,lsPO,lsPO2,lsDoNo, lsordStat, lsMsg, lsFind, lsSendASN, ls_INActiveCustomerName, lsOwnerName
Boolean	lbCreateBackOrder, lbCreateInbound, lbSendASNAtreadyToShip 
Boolean lb_missing_sku_serial    // 01/03/2011 ujh: S/N_P:
DateTime	ldtToday
string lsRONO //dts 8/29/05
integer li_count
string ls_cust_code, lsSerial, lsSubInvLoc, ls_cust_type, lsShipID
Boolean lbReconfirmTransaction //TimA 04/05/11
Boolean lbReconfirm //TimA 04/15/2011 
Boolean lbb_BypassShipValidation //TAM 2014/10/23
DateTime ltdTransCreateDate, ldtTransCompleteDate //TimA 04/05/11
String lsTransType, lsTransStatus//TimA 04/05/11
Long	ll_method_trace_id, ll_method_trace_id2
String ls_initial_ord_status	// LTK 20110817
string ls_batch_error			//MEA 05/2013
String lsSerialSkuNo, lsNextSerialSkuNo, lsPalletId, ls_PONO2ControlledInd, ls_ContainerTrackingInd ,lsmac_id,lsserial_no //TimA 09/26/13
String ls_SerializedInd		//GailM - 01/04/2014 - LPN GPN is serialized B plus po_no2 and containerId controlled
String ls_VicsBolNo			//GailM - 01/04/2014 - LPN GPN with and withou serialized B must have a VicBolNo to confirm.  Hard stop if not assigned.
Long llSerialCount
String	lsShipment
Long ll_CI_Exception,liAdj
//TimA 04/15/2011 - capture the error message in of_Error_on_serial_no_exists for possible locking issues in SIMS
//Pandora
String ab_error_message_title, ab_error_message
//TimA 04/21/11 Pandora Issue#187
String  lsCI_Record, lsDM_Country, lsCustCountry, lsField1,ls_b2b_sps //25-Nov-2014 :Madhu- Added "ls_b2b_sps"
Integer liCreateIn		// Moved from below - LTK 20141218
Boolean lb_skip_auto_inbound	// LTK 20160310

//TimA 11/07/12 Pandora issue #476
String  lsRma, lsDefectTrack
Long llLineNo

String ls_error_message_title,	ls_error_message 
//TimA 02/13/15 Parms for the Functionality_Manager function
String ls_Parm1, ls_Parm2, ls_Parm3
SetNull(ls_Parm1)
SetNull(ls_Parm2)
SetNull(ls_Parm3)

DataStore	lds_serial

// TAM 2018/02 - S14838 - Dont allow reconfirm for OM orders
if Left(icb_confirm.Text,2) = 'Re'  and is_OM_Enabled_Ind = 'Y' then
	lsMsg = "You Cannot reconfirm an OM order? ~r~r"
	messagebox(is_title, lsMsg)
	Return -1
End If

lbReconfirmTransaction = True //TimA 04/05/11

ibEUFlag = False //TimA 09/28/12 Pandsora issue #514

// cawikholm 07/05/11 Added call to track user 
SetNull( ll_method_trace_id )
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Start ue_confirm: ' + is_dono ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Start ue_confirm:  ',is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

//TAM 04/2006 add a variable to indicate if Ready to Ship is allowed for a project.  This makes it easier toimpliment Ready to ship for multipler projects
// 11/09 - PCONKL - Setting based on project level indicator instead of hardcoding
string ls_allow_ready_to_ship = 'N'
//if gs_Project = '3COM_NASH'  or  gs_Project = 'LMC'  or  gs_Project = 'POWERWAVE' or  gs_Project = 'MAQUET'  or  gs_Project = 'HILLMAN' or  gs_Project = 'BLUECOAT' then
If g.ibreadyToShipEnabled Then
	ls_allow_ready_to_ship = 'Y'
end if

// TAM 2014/10/23 - Certain Projects that consolidate order do not use shipments and need to bypass the validation below.
// We are setting a variable to let them do so.

If gs_project = "BOSCH" THEN
	lbb_BypassShipValidation = True
Else
	lbb_BypassShipValidation = False
End If
	

// TAM 2014/10/23 - Allow bypass of Shipment Validation
// 04/14 - PCONKL - If sending a Websphere GI and not already confirming from Shipment tab, we cannot confirm an order if multiple orders on a shipment
//If g.ibSendWebSphereGoodsIssue and not ibConfirmShipment and  is_Ready_Or_Confirm <> 'READY'  Then	
If g.ibSendWebSphereGoodsIssue and not lbb_BypassShipValidation and not ibConfirmShipment and  is_Ready_Or_Confirm <> 'READY'  Then	
	
	lsShipment = idw_Main.GetitemString(1,'consolidation_no')
	If lsShipment > '' Then
		
		Select Count(*) into :llCOunt
		From Delivery_Master
		Where Project_id = :gs_Project and consolidation_no = :lsShipment and ord_status not in ('C','D','V');
		
		If llCount > 1 Then
			wf_display_message( "Multiple Orders exist for this Shipment. You must confirm from the Shipments tab.~r~rAll orders must be in 'Ready to Ship' status before confirming the shipment")
			REturn -1
		End If
		
	End If
	
End If

//GailM - 09/15/2017 - SIMSPEVS-841 - KDO not all SSCC numbers are being processed successfully
If gs_project = 'KENDO' and wf_check_sscc_no( ) = -1 Then
	wf_display_message(  'All SSCC numbers have not been created.  Please return to pack list and complete label printing. ' )
	Return -1
End If

//TimA 02/11/15 Don't allow confirming where carriers are listed in the lookup table
If gs_project = 'PANDORA' then
	ls_Parm1 = idw_main.GetItemString(1,'carrier')
	If f_functionality_manager(gs_Project,'ALLOWCONFIRM',gs_Tier_Desc,ls_Parm1 ,ls_Parm2, ls_Parm3)= 'N' then
		wf_display_message( 'Order has carrier ' + idw_main.GetItemString(1,'carrier') + ' you are not allowed to confirm.  Change the carrier')
	Return -1
	End if
End if
			
//TimA 10/22/12 Don't allow the confirm if the OTM status is blank
If isOTMEnabled = 'Y' Then
	If isnull(idw_main.GetITemString(1,'OTM_Status')) or idw_main.GetITemString(1,'OTM_Status') = '' Then

		wf_display_message( 'You must have an OTM Status') //MEA - 5/13 - Added Multi-Confirm
		//	MessageBox(is_title,'You must have an OTM Status')     

		tab_main.SelectTab(1)
		f_setfocus(idw_main,1,"OTM_Status")
		//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm ' + ' OTM Status Required' ) //08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + ' OTM Status Required' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
		Return -1
	End If
End if

// 09/14 - PCONKL - Mobile validations
If wf_check_Confirm_Mobile() < 0 Then
	Return -1
End If

If this.wf_pick_pack_qty_validation( true) < 0 Then Return -1 //19-MAR-2018 :Madhu DE3511 Mobile Pick Pack Qty validation

//31-May-2016 :Madhu- added to prevent AIR carrier for Dangerous goods -START
	If g.ibpreventaircarrierforhazardous Then
		If wf_check_carrier_dangerous_goods() = -1 Then
			MessageBox(is_title,"Dangerous goods# "+ is_dangerous_item +" is restricted to ship via AIR Carrier. ~n~rPlease select a different Carrier.")
			tab_main.SelectTab(2) 
			idw_other.SetColumn("carrier")
			idw_other.SetFocus()
			SetMicroHelp("Save failed!")
			Return -1
		End If
	End If
//31-May-2016 :Madhu- added to prevent AIR carrier for Dangerous goods -END

// ET3 2012-12-06 Pandora emergency implementation for embargoed countries
// ET3 2012-12-17 Extended to baseline and generalized function
string ls_embargoed, ls_country

ls_country = UPPER(TRIM( tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country")))

IF wf_embargoed_country_check( ls_country, TRUE ) THEN
	// shipping to this country is embargoed - prevent confirm
	Return -1
END IF

//TimA 12/12/13 Pandora issue #671  Require a hard stop on EU to EU CI type orders.
//This could be used for baseline to have an authorization signature to confirm and order
If ib_Authorize = True Then
	//Right now is_AuthorizeType is being set wf_is_country_eu_to_eu for CI try orders.
	IF wf_authorize( idw_main.getItemString(1,'do_no'), is_AuthorizeType ) = False THEN
		Return -1
	END IF
End if

// Jxlim 08/01/2013 use consolidation_no as shipment_id for trans_order_no at batch_transaction table record
If  	Upper(gs_project) = 'ARIENS' Then
	lsShipID = idw_main.GetItemString(1,'consolidation_no')
End If

// Jxlim 07/17/2013 SkuSerialHold validation; If Sku/Model is on Hold do not allow packing generation, initiated by Arien	
If  Upper(gs_project) = 'ARIENS' Then
	If wf_validate_skuserialhold() < 0 Then		
		Return -1 		
	End If
End If

// LTK 20160310  Add flag to skip creation of inbound half of warehouse transfer
if gs_project = "PANDORA" then
	lb_skip_auto_inbound = 	( f_retrieve_parm("PANDORA", "FLAG", "SKIP_AUTO_INBOUND") = 'Y' )
end if

// KRZ 11/11/09  If this is the Pandora Project,
If gs_project = "PANDORA" THEN
	//3/10 JAyres Check to see if Customer is Active
	ls_cust_code = idw_main.GetItemString(1,'cust_code')	
	//Dinesh - 04/12/2021 S54935- Google - SIMS – 947 change needed for Google SAP
	select count(*) into :liAdj from lookup_table with(nolock) where code_type='ORDER_CONFIRM_ADJ' and code_id=:ls_cust_code;
	
	If tab_main.tabpage_detail.dw_detail.RowCount() > 0 then
		FOR i_indx = 1 to tab_main.tabpage_detail.dw_detail.RowCount()
			llOwnerID 		= tab_main.tabpage_detail.dw_detail.GetItemNumber(i_indx,"owner_id")
	  		lsOwnername 	= tab_main.tabpage_detail.dw_detail.GetItemString(i_indx,"cf_owner_name")
			 //TimA 11/07/12 Pandora issue #476
			llLineNo  = tab_main.tabpage_detail.dw_detail.GetItemNumber(i_indx,"line_item_no")
			lsRma  = tab_main.tabpage_detail.dw_detail.GetItemString(i_indx,"User_Field8")
			lsDefectTrack  = tab_main.tabpage_detail.dw_detail.GetItemString(i_indx,"User_Field4")
			 
	   		If Right(Trim(lsOwnername), 3) = '(C)' Then
				if llOwnerID <> llOwnerID_Prev then //dts 4/9/15 - now only checking customer if the owner changes (and it never should).
					Select Distinct 	dbo.Customer.Cust_Name
					Into    	:ls_INActiveCustomerName
					FROM 		dbo.Owner,
								dbo.Customer
					Where 	dbo.Owner.Project_ID 		= dbo.Customer.Project_ID
						and  	dbo.Owner.owner_cd			= dbo.Customer.Cust_Code
						and 	dbo.Owner.Owner_ID 			= :llOwnerID
						and 	dbo.Customer.Customer_Type = 'IN' 
						and 	dbo.Owner.Project_ID 		= :gs_project;
				
					If NOT ( ls_INActiveCustomerName = '' or IsNULL(ls_INActiveCustomerName) ) Then
						If IsNULL(lsOwnername) Then lsOwnername = ''
						wf_display_message("Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Order Detail.~r~rPlease Enter an Active Owner then Save." ) //MEA - 5/13 - Added Multi-Confirm
						//MessageBox(is_title, "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Order Detail.~r~rPlease Enter an Active Owner then Save." )	
						//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm ' + "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Order Detail. Please Enter an Active Owner then Save." ) //08-Feb-2013  :Madhu commented
						f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Order Detail. Please Enter an Active Owner then Save." ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
						return -1
					End If
					llOwnerID_Prev = llOwnerID
				end if
			End If
			//TimA 11/07/12 Pandora issue #476
			//If detail record has RMA information and the Defect Track(user_field4) is null thow an error
			If lsRma = 'RM' then
				if lsDefectTrack = '' or Isnull(lsdefectTrack) then
					wf_display_message("Defective Tracking Number is required on line item no: " +  String (llLineNo)) //MEA - 5/13 - Added Multi-Confirm
					//MessageBox(is_title, "Defective Tracking Number is required on line item no: " +  String (llLineNo))	
					tab_main.selecttab( 3)
					tab_main.tabpage_detail.dw_detail.scrolltorow( i_indx )
					f_setfocus(idw_detail, i_indx, "user_field4")
					Return -1
				end if
			end if
			//dts 4/03/15 - for WMS Cut-over orders, setting the price to .01 if it is 0 (to avoid Price validation).
			If ls_cust_code = 'WMSCUTOVER' then
				ldPrice  = tab_main.tabpage_detail.dw_detail.GetItemNumber(i_indx,"Price")
				if ldPrice = 0 then
					tab_main.tabpage_detail.dw_detail.SetItem(i_indx,"Price", .01)
				end if
			end if
		Next /*Next detail Row*/
	End If /* Order Detail Customer */

	//3/10 JAyres Check to see if Customer is Active
	// dts 4/09/15 - skipping this check.  The Picking Owner is the same as the Detail owner (which was checked above.
//	If tab_main.tabpage_pick.dw_pick.RowCount() > 0 then
//		FOR i_indx = 1 to tab_main.tabpage_pick.dw_pick.RowCount()
//			llOwnerID 		=  tab_main.tabpage_pick.dw_pick.GetItemNumber(i_indx,"owner_id")
//			lsOwnername 	=  tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"cf_owner_name")
//			If Right(Trim(lsOwnername), 3) = '(C)' Then
//				Select Distinct 	dbo.Customer.Cust_Name
//				Into    			:ls_INActiveCustomerName
//				FROM 			dbo.Owner,
//		         				dbo.Customer
//				Where 			dbo.Owner.Project_ID 		= dbo.Customer.Project_ID
//					and    		dbo.Owner.owner_cd			= dbo.Customer.Cust_Code
//					and 			dbo.Owner.Owner_ID 		= :llOwnerID
//	    				and 			dbo.Customer.Customer_Type 	= 'IN' 
//					and 			dbo.Owner.Project_ID 		= :gs_project;
//				
//				If NOT ( ls_INActiveCustomerName = '' or IsNULL(ls_INActiveCustomerName) ) Then
//					If IsNULL(lsOwnername) Then lsOwnername = ''
//					wf_display_message("Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Picking List.~r~rPlease Enter an Active Owner then Save." ) //MEA - 5/13 - Added Multi-Confirm
//					//MessageBox(is_title, "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Picking List.~r~rPlease Enter an Active Owner then Save." )	
//					//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm ' +  "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Picking List. Please Enter an Active Owner then Save." ) //08-Feb-2013  :Madhu commented
//					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm','End ue_confirm ' +  "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Picking List. Please Enter an Active Owner then Save." ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
//					return -1
//				End If
//			End If
//		Next	
//	End If /* Picking List Customer */
	
	//Carrier and AWB are required
	If isnull(idw_Other.GetITemString(1,'carrier')) or w_do.idw_Other.GetITemString(1,'carrier') = '' Then
		wf_display_message('Carrier is Required.' ) //MEA - 5/13 - Added Multi-Confirm
//		MessageBox(is_title,'Carrier is Required.')
		tab_main.SelectTab(2)
		f_setfocus(idw_other,1,"carrier")
		//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm ' + ' Carrier is Required' ) //08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + ' Carrier is Required' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
		Return -1
	End If
	
//	If isnull(idw_Other.GetITemString(1,'awb_bol_no')) or w_do.idw_Other.GetITemString(1,'awb_bol_no') = '' Then
//	LTK 20150924  Changed above check so that awb_bol_no or carrier_pro_no must be populated per Dave
	If (isnull(idw_Other.GetITemString(1,'awb_bol_no')) or w_do.idw_Other.GetITemString(1,'awb_bol_no') = '') and &
		(isnull(idw_Other.GetITemString(1,'carrier_pro_no')) or Trim(w_do.idw_Other.GetITemString(1,'carrier_pro_no')) = '') Then
		
		//wf_display_message('Airway Bill is Required.' ) //MEA - 5/13 - Added Multi-Confirm
		wf_display_message('Air Waybill or Carrier Pro No is Required.' )	//	LTK 20150924  changed spelling per Dave and added pro no
		
		//MessageBox(is_title,'Airway Bill is Required.')
		tab_main.SelectTab(2)
		f_setfocus(idw_other,1,"awb_bol_no")
		//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm ' + 'Airway Bill is Required.' ) //08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + 'Airway Bill is Required.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
		Return -1
	End If
	
	// LTK 20110817	#258 Capture the initial status for possible reversion.
	ls_initial_ord_status = idw_main.getItemString(1,'ord_status')
	
	// Begin - Dinesh -12/22/2021- DE24075- Google - SIMS Production - Outbound order completed without Serial Numbers
	//int j
	//long llLineNum
	//string llserialno
	//If tab_main.tabpage_serial.dw_serial.RowCount() > 0 then
		//FOR j = 1 to tab_main.tabpage_serial.dw_serial.RowCount()
		//	llserialno = tab_main.tabpage_serial.dw_serial.GetItemString(j,"serial_no")
		//	llLineNum = tab_main.tabpage_serial.dw_serial.GetItemNumber(j,"line_item_no")
			//if llserialno = '' or Isnull(llserialno) then
					//wf_display_message("Serial Number is required on line item no: " +  String (llLineNum)) 
					//tab_main.selecttab(6)
				//	tab_main.tabpage_serial.dw_serial.scrolltorow(j)
				//	f_setfocus(idw_serial, j, "serial_no")
//					tab_main.tabpage_serial.dw_serial.Protect = TRUE
					
					//Return -1
			//end if
		//NEXT
	//end if
	
	// End - Dinesh -12/22/2021- DE24075- Google - SIMS Production - Outbound order completed without Serial Numbers
End If //Pandora

	//SARUN2016July26 To avoid blank status
	ls_initial_ord_status = idw_main.getItemString(1,'ord_status')
	
// LTK 20110609	Pandora #10, #235:  Additional validation for over/under picking.
if gs_project = "PANDORA" and idw_main.rowCount() > 0 and idw_detail.rowCount() > 0 then
	
		// LTK 20110616
		// Select the quantities from the database.  A bug exists that when pick quantities are changed and saved,
		// the detail dw is not retrieved again which can cause over/uder-picking.  This bug will be corrected in
		// the next release iteration.
		dec ld_sum_req_qty, ld_sum_alloc_qty
		String ls_do_no
		ls_do_no = idw_main.getItemString(1,'do_no')

		select sum(req_qty), sum(alloc_qty)
		into :ld_sum_req_qty, :ld_sum_alloc_qty
		from delivery_detail
		where do_no = :ls_do_no;
	
	
	//if idw_detail.object.compute_2[1] <> idw_detail.object.compute_3[1] then
	if ld_sum_req_qty <> ld_sum_alloc_qty then
		// Attempt to confirm when Required quantity does not equal Allocated quantity

		// MADE THIS BASELINE 07/07/2014 - GailM - Any project that uses under/over picking functionality should have this capability... not just Pandora
		// Determine if project settings allow over/under picking.
		String ls_over_pick_ind
		
		select over_pick_ind
		into :ls_over_pick_ind
		from project
		where project_id = :gs_project;

		//if idw_detail.object.compute_2[1] > idw_detail.object.compute_3[1] then
		if ld_sum_req_qty > ld_sum_alloc_qty then
			// PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship - Will be baseline for any warehouse - ShortShip takes precedence over underpickind
			if ib_ShortShipEnabled and getAuthorize( ls_do_no, 'SS' ) Then
				lbCreateBackOrder = true
			elseif IsNull(ls_over_pick_ind) or ( Upper(ls_over_pick_ind) <> 'U' and Upper(ls_over_pick_ind) <> 'B' ) then
				// Underpicked:		Required quantity > Allocated quantity
				// 07/12/11 Use ld_sum_req_qty and ld_sum_alloc_qty instead of idw_detail.object.compute_2[1] & idw_detail.object.compute_3[1]
				wf_display_message(gs_project + " does not allow underpicking.  Please re-pick this order.~r~r"  +&
										"Required quantity: " + String(ld_sum_req_qty) + "~r" +&
										"Allocated quantity: " + String(ld_sum_alloc_qty)) //MEA - 5/13 - Added Multi-Confirm
					//MessageBox(is_title, gs_project + " does not allow underpicking.  Please re-pick this order.~r~r"  +&
					//					"Required quantity: " + String(ld_sum_req_qty) + "~r" +&
					//					"Allocated quantity: " + String(ld_sum_alloc_qty), STOPSIGN!)
				Return -1
					//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm PANDORA' + ' Underpicked:		Required quantity > Allocated quantity' ) //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + gs_project + ' Underpicked:		Required quantity > Allocated quantity' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
			end if
		end if
	
		//if idw_detail.object.compute_2[1] < idw_detail.object.compute_3[1] then
		if ld_sum_req_qty < ld_sum_alloc_qty then
			// Overpicked:		Required quantity < Allocated quantity
			// 07/12/11 Use ld_sum_req_qty and ld_sum_alloc_qty instead of idw_detail.object.compute_2[1] & idw_detail.object.compute_3[1]
			// so it matches the if condition.
			if IsNull(ls_over_pick_ind) or ( Upper(ls_over_pick_ind) <> 'Y' and Upper(ls_over_pick_ind) <> 'B' ) then
				wf_display_message(gs_project + " does not allow overpicking.  Please re-pick this order.~r~r"  +&
									"Required quantity: " + String(ld_sum_req_qty) + "~r" +&
									"Allocated quantity: " + String(ld_sum_alloc_qty))    //MEA - 5/13 - Added Multi-Confirm
				
//				MessageBox(is_title, gs_project + " does not allow overpicking.  Please re-pick this order.~r~r"  +&
//									"Required quantity: " + String(ld_sum_req_qty) + "~r" +&
//									"Allocated quantity: " + String(ld_sum_alloc_qty), STOPSIGN! )
//				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm PANDORA' + ' Overpicked:		Required quantity < Allocated quantity' )	//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + gs_project + ' Overpicked:		Required quantity < Allocated quantity'  ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
				Return -1
			end if
		end if		/* End validation where req_qty < alloc_qty */
	end if		/* End validation when req_qty <> alloc_qty */

	// LTK 20140926  Deja Vu inventory can be mixed with non Deja vu inventory.  Now need to count Deja vu rows and ensure same number of rows are entered on the serial tab.
	// The current assumption is that Deja Vu inventory will not be mixed with serial inventory that is non Deja vu.
//	if ibDejaVu and idw_serial.rowcount() <> idw_pick.rowcount() then
//		wf_display_message(gs_project + " - All container IDs must be scanned and validated on Serial# Tab prior to confirmation.")
//		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + gs_project + ' DejaVu:		ContainerIDs must be validated.'  ,is_dono, ' ',' ',isinvoice_no) // GailM - 9/3/2014 - #883 - ContainerID			
//		Return -1
//	end if		/* End DejaVu containerID validation */

	// LTK 20140926  There is some question as to whether this validation should be excecuted for Pandora.  Until we get the definitive answer, surround the logic with a DB flag.
	if f_retrieve_parm("PANDORA", "FLAG", "VALIDATE_DEJAVU_DOCONFIRM") = 'Y' then
		if ibDejaVu then
			String ls_carton_id
			long ll_deju_vu_count, k, ll_pick_rows
	
			ll_pick_rows = idw_pick.rowcount()
			for k = 1 to ll_pick_rows
				ls_carton_id = Trim(idw_pick.Object.container_id[k])
				if NOT(IsNull(ls_carton_id) or ls_carton_id = '' or ls_carton_id = '-') then
					ll_deju_vu_count++
				end if
			next
			
			if ll_deju_vu_count > 0 and ll_deju_vu_count <> idw_serial.rowcount() then
				wf_display_message(gs_project + " - All container IDs must be scanned and validated on Serial# Tab prior to confirmation.")
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + gs_project + ' DejaVu:		ContainerIDs must be validated.'  ,is_dono, ' ',' ',isinvoice_no) // GailM - 9/3/2014 - #883 - ContainerID			
				Return -1
			end if
		end if		
	end if		/* End DejaVu containerID validation */
	
end if		/* End Pandora additional validation */

//TAM - 2014/09/19 - Honda - DejuVu validation for honda
if Upper(gs_project) =  'HONDA-TH' and ibDejaVu and idw_serial.rowcount() <> idw_pick.rowcount() then
	wf_display_message(gs_project + " - All Pallet IDs must be scanned and validated on Serial# Tab prior to confirmation.")
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + gs_project + ' DejaVu:		PalletIDs must be validated.'  ,is_dono, ' ',' ',isinvoice_no) // GailM - 9/3/2014 - #883 - ContainerID			
	Return -1
end if		/* End DejaVu containerID validation */

//24-Nov-2014 :Madhu- KLN B2B SPS Conversion validation for AMAZON orders- START
IF Upper(gs_project) ='KLONELAB' and Pos(Upper(idw_main.getitemstring(1,'cust_name')),'AMAZON') >0 THEN
	IF isnull(idw_main.getitemstring(1,'user_field4')) or idw_main.getitemstring(1,'user_field4')= '' THEN
		wf_display_message('ARN must be entered for Amazon shipments.' )
		tab_main.SelectTab(2)
		f_setfocus(idw_other,1,"user_field4")
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + 'user_field4 is Required.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
		Return -1		
	END IF
END IF
//24-Nov-2014 :Madhu- KLN B2B SPS Conversion validation for AMAZON orders- END

//6-MAR-2015 :Madhu- ANKI- Don't confirm, if CarriePro is not entered for LTL Frieght Terms -START
//21-Apr-2015 :TAM- ANKI- Changed from Freight terms to Transport Mode
//IF upper(gs_project)='ANKI' and Pos(upper(idw_main.getitemstring(1,'freight_terms')),'LTL') > 0 THEN
IF upper(gs_project)='ANKI' and Pos(upper(idw_main.getitemstring(1,'transport_mode')),'LTL') > 0 THEN
	IF isnull(idw_main.getitemstring(1,'carrier_pro_no')) or idw_main.getitemstring(1,'carrier_pro_no') ='' THEN
		wf_display_message('Carrier Pro should not be blank for LTL Transport Mode.')
		tab_main.selecttab( 2)
		f_setfocus(idw_other,1,"carrier_pro_no")
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + 'carrier_pro_no is Required.' ,is_dono, ' ',' ',isinvoice_no)
		Return -1
	END IF
END IF
//6-MAR-2015 :Madhu- ANKI- Don't confirm, if CarriePro is not entered for LTL Frieght Terms -END

// pvh 11/23/05 - gmt
ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 
lsDONO = idw_main.GetItemString(1,'Do_no') // 6/21/04 dts - moved from below
ls_VicsBolNo = idw_main.GetItemString(1,'Vics_Bol_No') 	//GailM - 01/04/2014 - VicsBolNo reqd for Pandora LPN GPNs

if ls_allow_ready_to_ship = 'Y'  and is_Ready_Or_Confirm = 'CONFIRM' then
	Select ord_status Into :lsOrdStat
	From Delivery_Master
	Where Project_ID = :gs_Project and Do_no = :lsDONo;
	
	if lsOrdStat <> 'R' or Left(icb_confirm.Text,2) = 'Re' Then
		is_Ready_Or_Confirm = 'BOTH'	
	end if
end if 


if is_Ready_Or_Confirm = 'READY' or is_Ready_Or_Confirm = 'BOTH'  then
	If idw_main.AcceptText() = -1 Then 
		tab_main.SelectTab(1) 
		idw_main.SetFocus()
		Return -1 
	End If
	
	If idw_other.AcceptText() = -1 Then 
		tab_main.SelectTab(2) 
		idw_main.SetFocus()
		Return -1 
	End If
	
//	// Check required fields for detail record
	If idw_detail.AcceptText() = -1 Then 
		tab_main.SelectTab(3) 
		idw_detail.SetFocus()
		Return -1 
	End If
	
	If idw_pick.AcceptText() = -1 Then
		tab_main.SelectTab(4) 
		idw_pick.SetFocus()
		Return -1 
	End If
	
	If tab_main.tabpage_serial.dw_serial.AcceptText() = -1 Then /* 01/01 PCONKL */
		tab_main.SelectTab(5) 
		idw_pick.SetFocus()
		Return -1 
	End If
	
	If idw_pack.AcceptText() = -1 Then
		tab_main.SelectTab(6) 
		idw_pack.SetFocus()
		Return -1 
	End If
	
	If ib_changed Then
		wf_display_message('Please save your changes first!')    //MEA - 5/13 - Added Multi-Confirm		
//		Messagebox(is_title,'Please save your changes first!')
		Return -1
	End If
	
	//02/04 - PCONKL - Make sure the order was not confirmed or Voided by another user 
	// 03 - 04 - allowing super users to re-confirm - bypass check
	
	If Left(icb_confirm.Text,2) <> 'Re' Then
		
		lbReconfirm = False //This is a confirming  TimA 04/15/2011
		if lsOrdStat = '' then  //may have been set earlier (for 3COM Confirm vs. Ready To Ship....)
			Select ord_status Into :lsOrdStat
			From Delivery_Master
			Where Project_ID = :gs_Project and Do_no = :lsDONo;
		end if
	
		If lsOrdStat = 'C' or lsOrdStat = 'D' Then  /*already Confirmed, can't Confirm*/
			wf_display_message('This Order was already confirmed or by another user. It can not be Confirmed!')    //MEA - 5/13 - Added Multi-Confirm
			//Messagebox(is_Title,'This Order was already confirmed or by another user. It can not be Confirmed!',StopSign!)
			ib_changed = False
			isle_order.TriggerEvent('Modified')
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + 'This Order was already confirmed or by another user. It can not be Confirmed!' )		//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This Order was already confirmed or by another user. It can not be Confirmed!' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
			Return -1
		ElseIf lsOrdStat = 'R' Then /*already  in Ready to Ship Status*/
			If Upper(gs_project) <> "STRYKER"  Then  //MEA - 7/12 - Do not do this for Stryker as per BoonHee.
				wf_display_message('This Order was already Placed in Ready to Ship status by another user. ~r~rClick OK to re-retrieve the order before confirming!')    //MEA - 5/13 - Added Multi-Confirm
				//Messagebox(is_Title,'This Order was already Placed in Ready to Ship status by another user. ~r~rClick OK to re-retrieve the order before confirming!',StopSign!)
				ib_changed = False
				isle_order.TriggerEvent('Modified')
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' This Order was already Placed in Ready to Ship status by another user.' )	//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' This Order was already Placed in Ready to Ship status by another user.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
				Return -1
			End If
		ElseIf lsOrdStat = 'V' Then /*already  Voided*/
			wf_display_message('This Order was already Voided by another user. It can not be Confirmed!')    //MEA - 5/13 - Added Multi-Confirm
			//Messagebox(is_Title,'This Order was already Voided by another user. It can not be Confirmed!',StopSign!)
			ib_changed = False
			isle_order.TriggerEvent('Modified')
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' This Order was already Voided by another user. It can not be Confirmed' )	//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' This Order was already Voided by another user. It can not be Confirmed' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
			Return -1
		End If
	Else
		//TimA 04/15/2011
		lbReconfirm = True  //This is a re-confirming order
	End If  /*Not super user re-confirming*/

	If idw_detail.rowcount() <= 0 then
		wf_display_message('You must enter at least one Detail Line Item before confirming this order!')    //MEA - 5/13 - Added Multi-Confirm
		//messagebox(is_title,'You must enter at least one Detail Line Item before confirming this order!')
		//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' You must enter at least one Detail Line Item before confirming this order' )	//08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' You must enter at least one Detail Line Item before confirming this order' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
		return -1
	end if
	//End If
	
	// 03/02 - Pconkl - for GM Hahn, we will allow them to confirm with no picking list so we can create
	//							KA44 discrepancy file if nothing was shipped for order
	//							We will confirm this in wf_check confirm that they really want to do this
	// 07/04 - PCONKL - Linksys as well, 08/04 - Logitech, 01/10 - Warner
	
	If  upper(gs_project) =  'LOGITECH' or  upper(gs_project) =  'WARNER' Then
	Else
		If idw_pick.RowCount() <= 0 Then
			wf_display_message('You must generate the Pick List before confirming this order!')    //MEA - 5/13 - Added Multi-Confirm
//			Messagebox(is_title,'You must generate the Pick List before confirming this order!')
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' You must generate the Pick List before confirming this order' )	//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' You must generate the Pick List before confirming this order' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
			Return -1
		End If
	End If
	
	//Jxlim 08/14/2013 Ariens prevent confirmation without pack generated
	If  Upper(gs_project) =  'ARIENS' or Upper(gs_project) =  'GEISTLICH' Then // Dinesh- 10/07/2020- S50329- Geistlich 4075 - Making Pack List confirmation mandatory while shipping order
		If idw_pack.RowCount() <= 0 Then
			wf_display_message('You must generate the Pack List before confirming this order!')   
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' You must generate the Pick List before confirming this order' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
			Return -1
		End If	
	End If
	
	
	// KRZ If this is the PANDORA project,
	If  upper(gs_project) =  'PANDORA' Then
		//If idw_pack.RowCount() <= 0 Then
		//If idw_pack.RowCount() <= 0 and ls_cust_code <> 'WMSCUTOVER' then //dts - skipping this validation for WMS Cut-over orders (where inventory is 'shipped' out of SIMS) // Dinesh - 03/16/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
		// Begin - Dinesh - 03/16/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
		If idw_pack.RowCount() <= 0  and  ls_cust_code <> 'WMSCUTOVER' then 	// Dinesh - 03/16/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
			wf_display_message('You must generate the PACK LIST and LOAD the order first before confirming this order!')    //MEA - 5/13 - Added Multi-Confirm
//			Return -1	
//		elseif  idw_pack.RowCount() > 0 and ls_cust_code <> 'WMSCUTOVER' then 	
//			wf_display_message('You must LOAD the order first before confirming this order!')    //MEA - 5/13 - Added Multi-Confirm
		// End Dinesh - 03/16/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' You must generate the Pack List before confirming this order' )		//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' You must generate the Pick List before confirming this order' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
			Return -1
		End If
		//TimA 07/31/12 Pandora issue #468 Check to see if the RDD is less than the complete date
		If IsNull(idw_main.GetItemDateTime(1, 'complete_date')) Then
			DateTime ldComplete, ldRDD
			ldComplete = ldtToday
			If Not IsNull(idw_main.GetItemDateTime(1, 'request_date')) Then
				ldRDD = idw_main.GetItemDateTime(1, 'request_date')
				//If ldRDD < ldComplete then
				If ldRDD < ldComplete and ls_cust_code <> 'WMSCUTOVER' then //dts - skipping this validation for WMS Cut-over orders (where inventory is 'shipped' out of SIMS)
					   wf_display_message('The Required Delivery Date cannot be before today~'s date.  Please change RDD/Time to a later date.')    //MEA - 5/13 - Added Multi-Confirm
//					   Messagebox(is_title,'The Required Delivery Date cannot be before today~'s date.  Please change RDD/Time to a later date.')
					idw_main.Object.request_date.Protect = FALSE
					idw_main.Modify("request_date.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
					Return -1
				End If
			End if

		
	End If

	End If
	
	// 07/04 - PCONKL - Moved check required from save to confirm to allow for user defined required fields that may not be present until confirmation

//--
	//MEA - Added Batch Confirm Mode
	
	if ib_batchconfirmmode then
		
		// Other Info tab
		If f_check_required_batch(is_title, idw_other, ls_batch_error) = -1 Then
			is_batch_message[UpperBound(is_batch_message)+1] =  idw_main.getItemString(1,'invoice_no') + ': ' + ls_batch_error
			Return -1
		End If
	
		// Check required fields for detail record
		If f_check_required_batch(is_title, idw_detail, ls_batch_error) = -1 Then
			is_batch_message[UpperBound(is_batch_message)+1] =  idw_main.getItemString(1,'invoice_no') + ': ' + ls_batch_error
			Return -1
		End If
	
		// Check required fields for picking list record
		If f_check_required_batch(is_title, idw_pick, ls_batch_error) = -1 Then
			is_batch_message[UpperBound(is_batch_message)+1] =  idw_main.getItemString(1,'invoice_no') + ': ' + ls_batch_error			
			Return -1
		End If
	
		// Check required fields for packing record
		If f_check_required_batch(is_title, idw_pack, ls_batch_error) = -1 Then
			is_batch_message[UpperBound(is_batch_message)+1] =  idw_main.getItemString(1,'invoice_no') + ': ' + ls_batch_error			
			Return -1
		End If
	
	Else
		
		// Other Info tab
		If f_check_required(is_title, idw_other) = -1 Then
			tab_main.SelectTab(2) 
			Return -1
		End If
	
		// Check required fields for detail record
		If ls_cust_code = 'WMSCUTOVER' Then                  //Akash Baghel......10/17/2023...... SIMS-338.....SIMS PIP/SIP - Re-enable WMS CUTOVER functionality
       Elseif f_check_required(is_title, idw_detail) = -1 Then
			tab_main.SelectTab(3) 
			Return -1
	  End If
	
		// Check required fields for picking list record
		If f_check_required(is_title, idw_pick) = -1 Then
			tab_main.SelectTab(4) 
			Return -1
		End If
	
		// Check required fields for packing record
		If f_check_required(is_title, idw_pack) = -1 Then
			tab_main.SelectTab(6) 
			Return -1
		End If
	
	End If
	
	//GailM 1/21/2018 - S14940 F5829 I469 - PAN SIMS to provide message on consolidation shipment at outbound
	If  upper(gs_project) =  'PANDORA' Then
		f_consolidated_shipment_message( lsDoNo )
	End If
	
	// If the autotask flag is NOT set,
	If not ib_autotask then
	
		// 03/04 - allowing super users to re-confirm
		If  Left(icb_confirm.Text,2) =  'Re' Then

			If messagebox(is_title,'Are you sure you want to RE-CONFIRM this order?',Question!,YesNo!,2) = 2 then
				Return -1
			Else
				//Jxlim 08/14/2013 Ariens
				If Upper(gs_Project) = 'ARIENS' Then					
					//Look to see if a transaction has already happend then prompt the user if they want to create one again
					Select Trans_Type, Trans_status, Trans_Create_Date, Trans_Complete_Date
					Into :lsTransType, :lsTransStatus, :ltdTransCreateDate, :ldtTransCompleteDate
					From batch_Transaction 
					Where Project_ID = :gs_Project and Trans_Type = 'SI' and Trans_Order_ID = :lsShipID and Trans_create_date =
					(SELECT Max(Trans_create_date) AS Trans_create_date 
					FROM batch_Transaction
					GROUP BY  Trans_Type, Project_ID,  Trans_Order_ID
					HAVING Project_ID = :gs_Project and Trans_Type = 'SI' and Trans_Order_ID = :lsShipID);				
				Else	
					//TimA 04/05/2011
					//Look to see if a transaction has already happend then prompt the user if they want to create one again
					Select Trans_Type, Trans_status, Trans_Create_Date, Trans_Complete_Date
					Into :lsTransType, :lsTransStatus, :ltdTransCreateDate, :ldtTransCompleteDate
					From batch_Transaction 
					Where Project_ID = :gs_Project and Trans_Type = 'GI' and Trans_Order_ID = :lsDONo and Trans_create_date =
					(SELECT Max(Trans_create_date) AS Trans_create_date 
					FROM batch_Transaction
					GROUP BY  Trans_Type, Project_ID,  Trans_Order_ID
					HAVING Project_ID = :gs_Project and Trans_Type = 'GI' and Trans_Order_ID = :lsDONo);				
				End If
								
				If lsTransStatus = 'N' or IsNull(ldtTransCompleteDate) then
					lsMsg = "A ship-confirmation batch transaction for this order already exists in New status.  Please Wait'"
					messagebox(is_title,lsMsg)
					//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' A ship-confirmation batch transaction for this order already exists in New status' )		//08-Feb-2013  :Madhu commented
					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' A ship-confirmation batch transaction for this order already exists in New status' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
					Return -1
				else
					//TimA 04/29/11 chaged the to Case Statement instead of If Conditions.  Also, added the '' when looking for the batch record
					Choose Case lsTransStatus
						Case ''
							lsMsg = "No ship-confirmation transaction was found? ~r~r"
							lsMsg += "Do you want to create one?" 
							if messagebox(is_title, lsMsg, Question!,YesNo!,2) = 2 then
								lbReconfirmTransaction = False
							else 
								lbReconfirmTransaction = True
							end if														
						Case 'C'
							lsMsg = "Would you like to create a ship-confirmation transaction? ~r~r"
							lsMsg += "This order was last confirmed on " + string(ltdTransCreateDate)
							if messagebox(is_title, lsMsg, Question!,YesNo!,2) = 2 then
								lbReconfirmTransaction = False
							else 
								lbReconfirmTransaction = True
							end if
					End Choose
				End if
			End if	
			
		Else
			
			if is_Ready_Or_Confirm = 'READY' then
				lsMsg = "Are you sure you want to Stage this order as 'Ready To Ship'?"
				
				//06-MAR-2019 :Madhu DE9245 PhilipsBlueHeart Pick Complete Validation - START
				//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
				IF (upper(gs_project) ='PHILIPSCLS' or upper(gs_project) ='PHILIPS-DA') and IsNull(idw_main.getItemDateTime( 1, 'pick_complete')) THEN
					wf_display_message("Pick Complete Date shouldn't be empty") //MikeA 08/2019 - S36465 - F17598 - Philips Outbound Delivery enhancement (Multi-Ready-To-Ship)
//					MessageBox(is_title, "Pick Complete Date shouldn't be empty", StopSign!)
					tab_main.SelectTab(1)
					f_setfocus(idw_main, 1, "pick_complete")
					Return -1
				END IF
				//06-MAR-2019 :Madhu DE9245 PhilipsBlueHeart Pick Complete Validation - END
				
			else
				lsMsg = "Are you sure you want to confirm this order?"
			end if
			
			// 08/13 - PCONKL - Don't show msg if in batch confirm mode
			If not ib_batchconfirmmode Then
				if messagebox(is_title, lsMsg, Question!,YesNo!,2) = 2 then
					//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Order in READY or Confirm' )		//08-Feb-2013  :Madhu commented
					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Order in READY or Confirm' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
					return -1
				End if
			End If
			
		End If
		
	// End if the autotask flag is NOT set.
	End If
	
	//09/01 - PCONKL - check project specific required fields before confirmation
	If wf_check_confirm() < 0 Then Return -1

	//02/08 - MA - For order type Z check that Delivery_Master.Cust_Code is a valid warehouse code.  It must be one of the warehouse codes found in Warehouse.WH_Code.  
 
	IF idw_main.GetItemString(1,'ord_type') = 'Z' THEN
		
		ls_cust_code = idw_main.GetItemString(1,'cust_code')
		if gs_project = 'PANDORA' then  
			// pandora ships to sub-inventory locations w/in a warehouse (customers of type 'WH'),
			// not the warehouse itself
			//  - Customer.UF2 is set to the Warehouse in which the Customer resides.
			lsSubInvLoc = ls_cust_code
			SELECT user_field2 INTO :ls_cust_code FROM customer
			WHERE project_id = 'PANDORA' and customer_type = 'WH' 
			and cust_code = :lsSubInvLoc;
			IF SQLCA.SQLCode <> 0 THEN
				//Jxlim 09/10/2010 Added Rollback to prevent block/lock
                    //Execute Immediate "ROLLBACK" using SQLCA; //TimA 04/28/11 Removed per code review discussion
				Messagebox ("Error checking Sub-inventory Location", "Check SIMS WH field (and Customer Type) in Customer Maintenance.~r~r" + SQLCA.SQLErrText)
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Check SIMS WH field (and Customer Type) in Customer Maintenance' )	//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Check SIMS WH field (and Customer Type) in Customer Maintenance' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
				RETURN -1
			END IF	
			IF isnull(ls_cust_code) or ls_cust_code = "" then
				Messagebox ("Delivery Order", "Invalid Sub-Inventory Location for selected Warehouse!  Check SIMS WH field in Customer Maintenance.")
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Invalid Sub-Inventory Location for selected Warehouse' )	//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Invalid Sub-Inventory Location for selected Warehouse' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
				RETURN -1
			END IF
			// 5/19/2010 - dts - From/To warehouses must be different.
			if ls_cust_code = idw_main.getitemstring(1, 'wh_code') then

				//TAM - 9/29/2010 - Allow Same warehouse for NYCSP -They are using this to rotate stock in kits without having to rebuild the whole kit.
				//TAM - 11/2/2014 - Added 'BOSCH' -  They are using this to capture serial number during conversion from Non Serial Tracking to Serial Tracking
//				if gs_project <> 'NYCSP' then
				if gs_project <> 'NYCSP' and gs_project<> 'BOSCH'  then
					MessageBox("Invalid Order", "Ship-To warehouse and Ship-From warehouse must be different.")
					//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Ship-To warehouse and Ship-From warehouse must be different' )		//08-Feb-2013  :Madhu commented
					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Ship-To warehouse and Ship-From warehouse must be different' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
					return -1
				end if
			end if
		end if //Pandora
		
		IF gs_project = 'STRYKER' THEN //MEA 6/12 - Stryker has it's own warehouse table it references in the lookup table.
		
			SELECT Count(*) INTO :li_count 
				FROM dbo.Lookup_Table  WITH (NOLOCK)
				  WHERE dbo.Lookup_Table.Project_ID = :gs_project AND 
							dbo.Lookup_Table.Code_type = 'STRWH' AND 
							  dbo.Lookup_Table.Code_ID = :ls_cust_code
						USING SQLCA;
	
			
		ELSE
			
			SELECT Count(*) INTO :li_count FROM Warehouse WHERE Warehouse.WH_Code = :ls_cust_code;
			
		END IF
		
		IF SQLCA.SQLCode <> 0 THEN 
			//Jxlim 09/10/2010 Added Rollback to prevent block/lock
               //Execute Immediate "ROLLBACK" using SQLCA; //TimA 04/28/11 Removed per code review discussion
			wf_display_message("Error checking Warehouse" + " : " + SQLCA.SQLErrText)    //MEA - 5/13 - Added Multi-Confirm		
			//Messagebox ("Error checking Warehouse", SQLCA.SQLErrText)
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Error checking Warehouse' )		//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Error checking Warehouse' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
			RETURN -1
		END IF

		IF li_count <= 0 then
			wf_display_message("Invalid Warehouse Code!")    //MEA - 5/13 - Added Multi-Confirm		
			//Messagebox ("Delivery Order", "Invalid Warehouse Code!")
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Invalid Warehouse Code' )		//08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Invalid Warehouse Code' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
			RETURN -1
		END IF
	ELSE // not ord type z...
		// 05/19/2010 - dts - For Pandora, if it's not a Z-order, ship-to can't be a WH-type customer...
		if gs_project = 'PANDORA' then  
			ls_cust_code = idw_main.GetItemString(1, 'cust_code')
			SELECT customer_type INTO :ls_cust_type FROM customer
			WHERE project_id = 'PANDORA' 
			and cust_code = :ls_cust_code;
			IF SQLCA.SQLCode <> 0 THEN 
				//Jxlim 09/10/2010 Added Rollback to prevent block/lock
                    //Execute Immediate "ROLLBACK" using SQLCA; //TimA 04/28/11 Removed per code review discussion
				Messagebox ("Error checking Customer Type", "Invalid Customer.~r~r" + SQLCA.SQLErrText)
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Error checking Customer Type' )		//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Error checking Customer Type' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				RETURN -1
			END IF	
			IF ls_Cust_Type = 'WH' then
				Messagebox ("Invalid Customer or Order Type", "Only Warehouse Transfers can be used to ship to warehouse sub-inventory locations.")
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Only Warehouse Transfers can be used to ship to warehouse sub-inventory locations' )	//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Only Warehouse Transfers can be used to ship to warehouse sub-inventory locations' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
				RETURN -1
			END IF		
		end if //Pandora
	END IF /* Ord Type = Z */

	// LTK 20110517	Uncommented Tim's Pandora Issue#187 code because user is ready for the change.
	//
	// LTK 20110602	Added database flag for #187 because Pandora is ready, not ready, etc. for this fix.  The validation 
	//						can now be turned on by setting code_descript = 'Y' for the column values in the select below.
	string ls_uf22_enabled

	select code_descript
	into :ls_uf22_enabled
	from lookup_table WITH (NOLOCK)
	where project_id = 'PANDORA'
	and code_type = 'FLAG'
	and code_id = 'UF22READY';

	//TimA 09/22/14 Pandora issue #585 Exclude curtain customers.
	select count(*)
	into :ll_CI_Exception
	from lookup_table WITH (NOLOCK)
	where project_id = 'PANDORA'
	and code_type = 'CI_EXCEPTION'
	and Code_Id = :ls_cust_code
	and User_Updateable_Ind = 'Y';
	
	
	//TimA 04/21/11 Pandora Issue#187
	//Mandate successful CI before completing Outbound
	IF gs_project = 'PANDORA' and Upper(Trim(ls_uf22_enabled)) = 'Y' and ll_CI_Exception = 0 then
		
		lsCI_Record = idw_Other.GetItemString(1,'user_field22') //New field - "CI Avail"
		If Isnull(lsCI_Record) then 
			lsCI_Record = ''
		End if
		
		//If lsCI_Record <> 'Y' then //CI - Commercial Invoice
		// LTK 20120525  Pandora #370 Now user_field22 must not be null and it must equal awb_bol_no
		if Trim(idw_main.Object.user_field22[1]) = "" or IsNull(idw_main.Object.user_field22[1]) or &
			Trim(Upper(idw_main.Object.awb_bol_no[1])) <> Trim(Upper(idw_main.Object.user_field22[1])) then

			// If the carrier is CH Robinson, then the CI *MUST* be sent regardless if the order is international, EU to EU, Customer.UF_1 in ( 'ENT', 'INTERNAL'), etc.
			// Mandate the CI for order where carrier is CH Robinson!
			String ls_carrier_name, ls_carrier_code
			Long ll_carrier_count

			if idw_other.RowCount() > 0 then
				ls_carrier_code = idw_other.Object.carrier[1]
	
				select carrier_name
				into :ls_carrier_name
				from carrier_master WITH (NOLOCK)
				where project_id = 'PANDORA'
				and carrier_code = :ls_carrier_code;
	
				if Len(ls_carrier_name) > 0 then
					select count(*)
					into :ll_carrier_count
					from lookup_table WITH (NOLOCK)
					where project_id = 'PANDORA'
					and code_type = 'CI_LT'
					and code_descript = :ls_carrier_name;
	
					if ll_carrier_count > 0 then
						// CH Robinson Carrier, mandate the CI
						MessageBox("Confirmation Error", "CI has not been sent with AWB/BOL info.  Please send CI to Pandora.")
						Return -1
					end if
				end if
			end if

			//Get contries from delivery_master and customer form comparison
			Select DM.country DM_Country, C.Country C_Country INTO 	:lsDM_Country, :lsCustCountry
			From delivery_master DM, Customer C 
			Where DM.project_id = 'Pandora' and Do_no = :lsDONO And DM.project_id = C.Project_ID And DM.User_Field2 = C.Cust_Code;		
			IF SQLCA.SQLCode <> 0 THEN 
				//TimA 04/22/11 Added Rollback to prevent block/lock
      	         //Execute Immediate "ROLLBACK" using SQLCA; //TimA 04/28/11 Removed per code review discussion
				Messagebox ("Error comparing countries", "There was a problem comparing the countries.~r~r" + SQLCA.SQLErrText)
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' There was a problem comparing the countries' )		//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' There was a problem comparing the countries' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				RETURN -1
			
			End if
			
			// ET3 20121220 Add clarity to function call
			string ls_to_country, ls_from_country
			ls_to_country   = lsDM_Country
			ls_from_country = lsCustCountry
				
			// LTK 20120202	Added the EU to EU country check.  If this is an international shipment and the shipment is not Euro to Euro countries require CI view.
			//If Trim(Upper(lsDM_Country)) <> Trim(Upper(lsCustCountry)) then //Compare Countries
			If wf_is_country_eu_to_eu(ls_from_country, ls_to_country)  then
				//TimA 09/28/12 Pandora issue #514 on EU to EU orders automaticly send a 3b18	
				ibEUFlag = True
				icb_ci_load_tender.triggerevent( clicked!)
			End if
			
			If Trim(Upper(lsDM_Country)) <> Trim(Upper(lsCustCountry)) and NOT wf_is_country_eu_to_eu(ls_from_country, ls_to_country) then //Compare Countries
				//Get User_Field1
				Select  C.User_Field1 INTO 	:lsField1
				From delivery_master DM, Customer C 
				Where DM.project_id = 'Pandora' 
				and Do_no = :lsDONO 
				And DM.project_id = C.Project_ID 
				And DM.Cust_Code = C.Cust_Code;
				
				IF SQLCA.SQLCode <> 0 THEN 
					//TimA 04/22/11 Added Rollback to prevent block/lock
      		         //Execute Immediate "ROLLBACK" using SQLCA; //TimA 04/28/11 Removed per code review discussion
					Messagebox ("Error Retreiving Sch CD", "Error retreiving scheduled code.~r~r" + SQLCA.SQLErrText)
					//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Error retreiving scheduled code' )	//08-Feb-2013  :Madhu commented
					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Error retreiving scheduled code' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added				
					RETURN -1		
				End if
				
				// LTK 20120202	Added the <> 'INTERNAL' check per Ian.
				//If lsField1 <> 'ENT' then
				If IsNull(lsField1) or ( Upper(Trim(lsField1)) <> 'ENT' and Upper(Trim(lsField1)) <> 'INTERNAL' ) then

//					Messagebox('Error','The Commercial Invoice is not yet available for this shipment.  Please print CI before continuing.')
//					f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' The Commercial Invoice is not yet available for this shipment' )					
//					//NO CI found stop confirm and exist
//					RETURN
//					
//					// LTK 20120525  Pandora #370 Commented out error message above and now display a new error message
					MessageBox("Confirmation Error", "CI has not been sent with AWB/BOL info.  Please send CI to Pandora.")
					Return -1
				End if
			End if

			//TAM 2018/11/12 - S25742 - Add logic to Force CI to send for FTZ shipments in SG. all 3 conditions must be met - START
			//all 3 conditions must be met
			//1. Same Ship From/Ship To countries
			//2. dm.uf2 (from Location) must be in lookup table
			//3. cust_Code must be in lookup table
			String	ls_uf2
			long ll_ftz_count
			If ls_from_country = ls_to_country then  
				ls_uf2 = idw_main.GetItemString(1,"user_field2")
				ls_cust_code = idw_main.GetItemString(1,"Cust_Code")
	
				select count(*) 
				into :ll_ftz_count
				from lookup_table WITH (NOLOCK)
				where project_id = 'PANDORA'
				and code_type = 'CI_FTZ' and (code_id = :ls_uf2 or code_id = :ls_cust_code);
				If ll_ftz_count >= 1 then //If found in lookup table
					ibEUFlag = True
					icb_ci_load_tender.triggerevent( clicked!)
				End If
			End if
			//TAM 2018/11/12 - S25742 - Add logic to Force CI to send for FTZ shipments in SG. all 3 conditions must be met - END

		End if		
	END IF //Pandora issue #187

	
////TAM 2009/07/02 Added order type 'Y' for PANDORA	
////09/07/09 TAM Remove logic to create inbound order for return defective (Commenting out in case they change their mind again)
//  
//	IF idw_main.GetItemString(1,'ord_type') = 'Y' and gs_project = 'PANDORA'THEN
//		ls_cust_code = idw_main.GetItemString(1,'cust_code')
//		if gs_project = 'PANDORA' then  
//			// pandora ships to sub-inventory locations w/in a warehouse (customers of type 'WH'),
//			// not the warehouse itself
//			//  - Customer.UF2 is set to the Warehouse in which the Customer resides.
//			lsSubInvLoc = idw_main.GetItemString(1,'user_field2')
//			SELECT user_field2 INTO :ls_cust_code FROM customer
//			WHERE project_id = 'PANDORA' and customer_type = 'WH' 
//			and cust_code = :lsSubInvLoc;
//			IF SQLCA.SQLCode <> 0 THEN 
//				Messagebox ("Error checking Sub-inventory Location", "Check SIMS WH field (and Customer Type) in Customer Maintenance.~r~r" + SQLCA.SQLErrText)
//				RETURN
//			END IF	
//			IF isnull(ls_cust_code) or ls_cust_code = "" then
//				Messagebox ("Delivery Order", "Invalid Sub-Inventory Location for selected Warehouse!  Check SIMS WH field in Customer Maintenance.")
//				RETURN
//			END IF
//		end if
//		SELECT Count(*) INTO :li_count FROM Warehouse WHERE Warehouse.WH_Code = :ls_cust_code;
//		IF SQLCA.SQLCode <> 0 THEN 
//			Messagebox ("Error checking Warehouse", SQLCA.SQLErrText)
//			RETURN
//		END IF
//
//		IF li_count <= 0 then
//			Messagebox ("Delivery Order", "Invalid Warehouse Code!")
//			RETURN
//		END IF
//	END IF
	
	
//TAM 03/10/2016 - Added validations for Packlist lottables.  If "Copy lottables from Picklist" is set on and Item master has track by lottable then validate that the packrow has a value.
	For i = 1 to idw_pack.RowCount()

		// If Copy Lottables flag is on at the project level
		If g.isCopy_Lot_No_to_Packlist = 'Y' Then

			// Validate LotNo
			If idw_pack.GetITemString(i,'Item_Master_Lot_Controlled_Ind') = 'Y' and ( idw_pack.GetITemString(i,'Pack_Lot_No') = '' or isNull(idw_pack.GetITemString(i,'Pack_Lot_No')))  Then
				Execute Immediate "Rollback Transaction" using SQLCA;
				messagebox(is_title, 'This is PackList is missing lot numbers.~r~nPlease Enter all lot Numbers.', StopSign!, OK!)
				tab_main.SelectTab(6) 
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This is PackList is missing lot numbers.  Please Enter all lot Numbers.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				return -1
			End If
			// Validate PoNo
			If idw_pack.GetITemString(i,'Item_Master_PO_Controlled_Ind') = 'Y' and ( idw_pack.GetITemString(i,'Pack_PO_No') = '' or isNull(idw_pack.GetITemString(i,'Pack_PO_No')))  Then
				Execute Immediate "Rollback Transaction" using SQLCA;
				messagebox(is_title, 'This is PackList is missing PO numbers.~r~nPlease Enter all PO Numbers.', StopSign!, OK!)
				tab_main.SelectTab(6) 
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This is PackList is missing PO numbers.  Please Enter all PO Numbers.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				return -1
			End If

			// Validate PoNo2
			If idw_pack.GetITemString(i,'Item_Master_PO_No2_Controlled_Ind') = 'Y' and ( idw_pack.GetITemString(i,'Pack_PO_No2') = '' or isNull(idw_pack.GetITemString(i,'Pack_PO_No2')))  Then
				Execute Immediate "Rollback Transaction" using SQLCA;
				messagebox(is_title, 'This is PackList is missing PO2 numbers.~r~nPlease Enter all PO2 Numbers.', StopSign!, OK!)
				tab_main.SelectTab(6) 
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This is PackList is missing PO2 numbers.  Please Enter all PO2 Numbers.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				return -1
			End If

			// Validate Container Id
			//08-FEB-2018 :Madhu S15632 - Added Container Id
			If idw_pack.GetITemString(i,'Item_Master_container_tracking_ind') = 'Y' and ( idw_pack.GetITemString(i,'Pack_container_Id') = '' or isNull(idw_pack.GetITemString(i,'Pack_container_Id')))  Then
				Execute Immediate "Rollback Transaction" using SQLCA;
				messagebox(is_title, 'This is PackList is missing Container Id numbers.~r~nPlease Enter all Container Id Numbers.', StopSign!, OK!)
				tab_main.SelectTab(6) 
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This is PackList is missing Container Id numbers.  Please Enter all Container Id Numbers.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				return -1
			End If
		End If// IF Copy Lottables
		
		
	Next /*Pack Row */

	
	
	//If capturing Serial #'s on outbound, make sure they've been entered
	//02/09 - PCONKL - Also include Serilaized_ind = 'B' - capturing at IB and OB but not writing to Content
	//12/09 - PCONKL - IF scanning everything (Pack Validation), coun t everything
	For i = 1 to idw_pick.RowCount() /*get the qty required on outbound*/
		
		If idw_pick.GetITemString(i,'serialized_ind') = 'O' or idw_pick.GetITemString(i,'serialized_ind') = 'B' or g.ibScanAllOrdersRequired Then
			// 03/29/2010 - for Pandora, Kitty Hawk Books parts set to 'B' are not scanned at outbound.
//			if not idw_pick.GetItemString(i, 'grp') = 'KHBOOKS' then
			if idw_pick.GetItemString(i, 'grp') = 'KHBOOKS' then
				continue
			Else
				// TAM 2014/11/25 - For Friedrich they want to scan every sku that is seriallized and start with a letter
				If upper(gs_project) = 'FRIEDRICH' and idw_pick.GetItemString(i,'serialized_ind') <> 'O' and  idw_pick.GetItemString(i,'serialized_ind') <> 'B' and  ((left(idw_pick.GetItemString(i,'sku'),1) < 'A' ) or (left(idw_pick.GetItemString(i,'sku'),1) > 'Z' )) Then
				//Skip
				Else
					ldQty = ldQty + idw_pick.GetItemNumber(i,'quantity')
				End IF
			end if
		End If
		
	Next /*Pick Row */
	
	If ldQty > 0 Then /*outbound qty required*/
	
		//filter out empty rows
		tab_main.tabpage_serial.dw_serial.SetFilter("(Not isnull(serial_no)) and (left(serial_no,1) <> '-')")
		tab_main.tabpage_serial.dw_serial.Filter()
		
		// 01/09 - PCONKL - Sum the Qty instead. LMC (and probably others at some point) may have qty > 1 associated with a serial scan (i.e. beginning scan of a pallet of 500)
		// 						By Default, the qty should be getting set to 1
			
		tab_main.tabpage_serial.dw_serial.SetFilter("") /*un-filter*/
		tab_main.tabpage_serial.dw_serial.Filter()
		
		llCount = 0
			
		llRowCount = tab_main.tabpage_serial.dw_serial.RowCount()

		Execute Immediate "Begin Transaction" using SQLCA; 
	
		For llRowPos = 1 to llRowCount
			SetMicroHelp("Checking Serial Number totals " + String(llRowPos) + " of " + String(llRowCount))
			//TimA 08/14/15 Pandora issue #892 only validate serialized_ind "B"
			//We still want to count serialized_Ind type "O" because they required but not validated
			If gs_project = 'PANDORA'	and  tab_main.tabpage_serial.dw_serial.GetITemString(llRowPos,'serialized_ind') = 'B' then
				//TimA 09/26/13 Pandora issue #654
				//Because of the LPN project we need to total the number of serial numbers in carton serail for each carton.  This is
				//for partial shipments.				
				lsSerialSkuNo = tab_main.tabpage_serial.dw_serial.getITemString(llRowPos,'sku')
				lsPalletId = tab_main.tabpage_serial.dw_serial.getITemString(llRowPos,'serial_no')
				If lsSerialSkuNo <> lsNextSerialSkuNo then //We only want to hit the database once for each SKU change
					Select Serialized_Ind, PO_NO2_Controlled_Ind, Container_Tracking_Ind 
					Into :ls_SerializedInd, :ls_PONO2ControlledInd, :ls_ContainerTrackingInd
					From Item_Master
					Where project_id = :gs_project and sku = :lsSerialSkuNo and supp_code = 'PANDORA';

				End if
				lsNextSerialSkuNo = lsSerialSkuNo
			End if
			//TimA 08/14/15 Pandora issue #892 only validate serialized_ind "B"
			//We still want to count serialized_Ind type "O" because they required but not validated

/*GailM 6/13/2019 S34614 F16590 - SIMS - Google - remove validations for printing BOL
			If gs_project = 'PANDORA' and ls_PONO2ControlledInd = 'Y' and ls_ContainerTrackingInd = 'Y' and tab_main.tabpage_serial.dw_serial.GetITemString(llRowPos,'serialized_ind') = 'B' then

				If isNull(ls_VicsBolNo) or ls_VicsBolNo = '' Then		// GailM - 1/6/2014 - 674 - Cannot blank
					Execute Immediate "Rollback Transaction" using SQLCA;
//TAM 2018/02 - S14838 Change 'LPN' to 'IP'
//					messagebox(is_title, 'This is an LPN Shipment.~r~nPlease Generate a VICS BOL for this shipment.', StopSign!, OK!)
					messagebox(is_title, 'This is an IP Shipment.~r~nPlease Generate a VICS BOL for this shipment.', StopSign!, OK!)
					tab_main.SelectTab(7)
					tab_main.tabpage_bol.cb_generate_bol.SetFocus()
//TAM 2018/02 - S14838 Change 'LPN' to 'IP'
//					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This is an LPN Shipment.  Please Generate a VICS BOL for this shipment.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'This is an IP Shipment.  Please Generate a VICS BOL for this shipment.' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
					return -1
				End If
//TAM 2018/02 - S14838 Remove this check.  We now have all the serial rows on the Serial tab and Carton_Serial is not used
//				If ls_SerializedInd = 'B' Then
//					//For LPN SKU's get the total count of serial numbers per cartons
//					Select COUNT(1) into :llSerialCount from Carton_Serial
//					//Where Project_Id = 'PANDORA' and Carton_Id = :lsPalletId
//					//TimA 12/19/13 with the Pallets being rolled up for LPN we need to look at the Pallet_Id field instead of carton
//					Where Project_Id = 'PANDORA' and Pallet_Id = :lsPalletId
//					Using SQLca;
//					
//					//GailM 01/04/2014 - Also set DONo in carton/serial for later use in 3b13 processing
//					//GailM 01/15/2014 - 668 - Do not change if werehouse transfer - carton_serial changed in wf_create_inbound
//					IF idw_main.GetItemString(1,'ord_type') <> 'Z' THEN
//						Update Carton_Serial Set DO_NO = :lsDoNo 
//							Where Project_id = :gs_project And Pallet_Id = :lsPalletId 
//							and Status_Cd <> 'D' 
//							Using SQLCA;
//					End If
//					
//					llCount +=llSerialCount
//					
//				Else		// NonLPN (Not serialized B) will use baseline count 
					llCount += tab_main.tabpage_serial.dw_serial.getITemNumber(llRowPos,'Quantity')
//				End If
			Else	
				//This is baseline counting of serail numbers and Non LPN type Pandora SKU's */
				
				llCount += tab_main.tabpage_serial.dw_serial.getITemNumber(llRowPos,'Quantity')
//			End if
			
			//09-Oct-2013 :Madhu - Added code for hard-stop -START
			lsmac_id = tab_main.tabpage_serial.dw_serial.getItemString(llRowPos,'mac_id')
			lsserial_no = tab_main.tabpage_serial.dw_serial.getITemString(llRowPos,'serial_no')
			If gs_project ='RIVERBED'  and ((IsNull(lsmac_id)) OR (left(lsmac_id,1) ='-') OR (IsNull(lsserial_no)) OR (left(lsserial_no,1)='-') OR (lsmac_id='') OR (lsserial_no ='')) then
				Execute Immediate "Rollback Transaction" using SQLCA; 
				messagebox(is_title,'All Outbound Serial Numbers/Item Scans must be entered before confirming the order!',StopSign!)
				tab_main.tabpage_serial.dw_serial.SetFilter("")
				tab_main.tabpage_serial.dw_serial.Filter()
				tab_main.Selecttab(6)
				tab_main.tabpage_serial.TriggerEvent('ue_retrieve')
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + 'All Outbound Serial Numbers/Item Scans must be entered before confirming the order!' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				return -1
			End if
			//09-Oct-2013 :Madhu - Added code for hard-stop -END
			
		Next
		//GailM - 01/04/2014 - Do not allow DONo entry if error condition...
		If ldQty <> llCount Then
			Execute Immediate "Rollback Transaction" using SQLCA; 
		Else
			Execute Immediate "Commit Transaction" using SQLCA; 
		End If			
		
		SetMicroHelp("")

		If ldQty > llCount Then /*not enough serial numbers entered*/
			//Jxlim 08/14/2012 May removed for clean up later
			//Jxlim 08/07/2012 Changed Physio project_ID to PHYSIO-XD and PHYSIO-MAA
			//Jxlim 06/12/2012 Physio and FireEye required hard stop
			//10/08 - PCONKL - Hard stop for COMCAST and LMC - scanning Pallets or cartons, optional for others
			// 09/09 - PCONKL - Added hardstop for Pandora
			//Jxlim 08/17/2012
			// 09/13 - PCONKL - Added Riverbed hard stop
			//01/14 - PCONKL - added hard stop for Freidrich
			//If gs_project = 'COMCAST' or gs_project = 'LMC' or gs_project = 'PANDORA'  or gs_project ='FIREEYE'  or gs_project ='RIVERBED' or gs_project ='FRIEDRICH' Then	 //or  Trim(left(gs_project, 6)) = 'PHYSIO' 
			//dts - 4/03/15 - skipping Serial Capture validation for Pandora WMS Cut-over orders
			//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
			If gs_project = 'COMCAST' or gs_project = 'LMC' or (gs_project = 'PANDORA' and ls_cust_code <> 'WMSCUTOVER')  or gs_project ='FIREEYE'  &
				or gs_project ='RIVERBED' or gs_project ='FRIEDRICH' or gs_project = 'PHILIPSCLS' or gs_project = 'PHILIPS-DA' Then	 //or  Trim(left(gs_project, 6)) = 'PHYSIO' 
				//  gs_project = 'PHYSIO AMS' or gs_project = 'PHYSIO MAA'  or gs_project = 'PHYSIO-XD' or gs_project = 'PHYSIO-MAA' or gs_project ='FIREEYE' Then				
				wf_display_message('All Outbound Serial Numbers must be entered before confirming the order!')    //MEA - 5/13 - Added Multi-Confirm		
				//messagebox(is_title,'All Outbound Serial Numbers must be entered before confirming the order!',StopSign!)
				liMsg = 2
				
			// 07/07 - PCONKL - Hardstop for Powerwave unless a Super User
			// 08/07 - dts - Added K&N to hard stop (unless Super User)
			// 12/07 - dts - Added NETAPP to hard stop (unless Super User)
			// 11/11 - PCONKL - For Nike, soft stop for Admin/Super - hardstop for others
						
			Elseif gs_project = 'POWERWAVE' or left(gs_project,4) = 'NIKE' Then
				
				if gs_role = '0' or gs_role = '-1' or (gs_role = '1' and left(gs_project,4) = 'NIKE' ) Then /*Super User - 02/08 - PCONKL - Added "-1" as Super Duper User*/
																															   /* Added Admin override just for NIKE as per Yati */
					liMsg =  Messagebox(is_title, "Not all Outbound Serial Numbers have been entered.~r~rAre you sure you want to continue?",Question!,YesNo!,2) 
				Else
					messagebox(is_title,'All Outbound Serial Numbers/Item Scans must be entered before confirming the order!',StopSign!)
					liMsg = 2
				End If
				
			Else	// 10/03 - PCONKL - make it a warning only
				liMsg =  Messagebox(is_title, "Not all Outbound Serial Numbers/Item Scans have been entered.~r~rAre you sure you want to continue?",Question!,YesNo!,2) 
			End If
			
			If liMsg = 2 Then
				tab_main.tabpage_serial.dw_serial.SetFilter("")
				tab_main.tabpage_serial.dw_serial.Filter()
				tab_main.Selecttab(6)
				tab_main.tabpage_serial.TriggerEvent('ue_retrieve')
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Not all Outbound Serial Numbers/Item Scans have been entered' )		//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Not all Outbound Serial Numbers/Item Scans have been entered' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added			
				return -1
			End If
			
		Elseif llCount > ldQTY Then /* Too many serial numbers scanned*/
			
			messagebox(is_title,'More Serial Numbers/Items scanned than Pick Qty. Please check',StopSign!)
			Return -1
			
		End If /*proper number of serial numbers scanned */
		
	End If /*serials required */
	
	
	// 02/02 PCONKL - If not everything was shipped, we will give the option to create a backorder.
	// 09/06 - PCONKL - Backorder ability controlled by Project level Indicator
	If idw_detail.Find("alloc_qty < req_qty",1,idw_detail.RowCount()) > 0 and g.isDeliveryBackOrder = 'Y' Then
		// 01/04 - PCONKL - 3COM will always create a back order - not optional per CSC
		// 03/04 - PCONKL - If re-confirming, we will give them the option to create a backorder, not force
		// TAM 04/2006 Allow K&N to use Ready to ship
		If ((ls_allow_ready_to_ship = 'N') or (ls_allow_ready_to_ship = 'Y' and left(icb_confirm.text,2) = 'Re')) Then
//		If ((Upper(gs_project) <> '3COM_NASH') or (Upper(gs_project) = '3COM_NASH' and left(icb_confirm.text,2) = 'Re')) Then
			liMsg =  MessageBox("Back Order?","One or more items of this order were not Shipped in full.~r~rWould you like to create a Back Order for the remaining item(s)?",Question!,yesNo!,1) 
		Else
			liMsg = 1
		End If
		Choose Case liMsg
			Case 1 /*create backorder*/
				lbCreateBackorder = True /*create after confirm is completed*/
			Case 2 /*no*/
			Case 3 /*Cancel confirm*/
				Return -1 /*dont confirm*/
		End Choose
	End If
	
	if is_Ready_Or_Confirm = 'READY' then 
		idw_main.setitem(1,'ord_status','R')
		// pvh gmt 12/28/05
		idw_Other.Setitem(1,'carrier_notified_date', ldtToday )
	end if

end if //is_Ready_Or_Confirm is 'READY' or 'BOTH'


//MEA - 10/15/12 - Added CONFIRM because the custom validation was not being called for Confirm.

if gs_project = 'KLONELAB' AND is_Ready_Or_Confirm = 'CONFIRM'  THEN
	If wf_check_confirm() < 0 Then Return -1
end if

if is_Ready_Or_Confirm = 'CONFIRM' or is_Ready_Or_Confirm = 'BOTH' then
	
	If is_Ready_Or_Confirm = 'CONFIRM' Then //'CONFIRM' only applies to 3COM 2nd step in 'READY' - 'CONFIRM' process
		// 08/13 - PCONKL - Don't show msg if in batch confirm mode
		If not ib_batchconfirmmode Then
			if messagebox(is_title,'Are you sure you want to CONFIRM this order?',Question!,YesNo!,2) = 2 then
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' + ' Ready_or_confirm is Confirm or Both' )		//08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' Ready_or_confirm is Confirm or Both' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added	
				return -1
			End if	
		End If
	end if
	
	If IsNull(idw_main.GetItemDateTime(1, 'complete_date')) Then
		// pvh gmt 12/28/05
		idw_main.setitem(1,'complete_date', ldtToday )
		
		//TimA 07/31/12 Pandora issue #468 if the ESD is blank make it the same as the complete date.
		If IsNull(idw_main.GetItemDateTime(1, 'schedule_date')) Then
			idw_main.setitem(1,'schedule_date', ldtToday )
		End if

	End If
	
	If idw_main.GetItemString(1,'ord_status') <> 'D' Then /* if reconfirming, status may have already been set to 'D', don't change back*/
		idw_main.setitem(1,'ord_status','C')
	End If
	
	//dts 03/05/07 - Set Shipment.Freight_ETD and, if fully enabled, shipment.Freight_ETA
	If g.ibTNTEnabled = True Then
		//Set_Shipment_Dates checks to see if ship dates need to be set...
		Set_Shipment_Dates()
	end if

	//TAM W&S 04/21/2011 on Warehouse transfers Added 1st Supplier Code to addresss Code for W&S		
	If  left(Upper(gs_project),3) = 'WS-'  and idw_main.GetItemString(1,'ord_type') = 'Z' THEN
		idw_main.SetItem(1, "address_code",  idw_detail.GetITemString(1,'Supp_Code'))
	End If

end if //is_Ready_Or_Confirm is 'CONFIRM' or 'BOTH'

//Sarun2013Sep11: Start : Riverbed compaint that their userfeild12(documentno) feild data replaced by last_username

IF gs_project <> 'RIVERBED' then
 // TAM 04/2006 Allow K&N to use Ready to ship
 If ls_allow_ready_to_ship = 'Y' and is_Ready_Or_Confirm = 'READY' and gs_project <> 'KLONELAB'  THEN
    //IF gs_Project = '3COM_NASH' and is_Ready_Or_Confirm = 'READY' THEN
	idw_other.object.user_field12[1] = idw_main.object.last_user[1]		//TAM 2005/09/07 changed from uf11 to uf12
	END IF
	
end if 
// pvh 11/07/05
//
// Update the supplier code in carton_serial to 3com 
if gs_project = '3COM_NASH' then
	
//	wf_save_carton_serial()	
	
//elseif gs_project = 'COMCAST' Then /* 10/08 - PCONKL - Update carton serial for Comcast - set Do_No */
	
//	Execute Immediate "Begin Transaction" using SQLCA; 
//	
//	//Need to update based on Pallet and Carton
//	Update Carton_Serial
//	Set do_no = :lsDONO
//	Where project_id = 'COMCAST' and Pallet_id in 
//			(Select serial_no from delivery_Serial_Detail where id_no in (select id_no from delivery_Picking_detail where do_no = :lsDONO));
//			
//	Update Carton_Serial
//	Set do_no = :lsDONO
//	Where project_id = 'COMCAST' and Carton_id in 
//			(Select serial_no from delivery_Serial_Detail where id_no in (select id_no from delivery_Picking_detail where do_no = :lsDONO));
//			
//	Execute Immediate "COMMIT" using SQLCA;
	
end if
// 	

// ET3 2012-11-29 Pandora 533 (and baseline) - set confirmation_user. Unset if confirm or save fails.
// ET3 2013-01-17 Lock this field from changes on a 'reconfirm' action
IF idw_main.GetItemString(1, 'confirmation_user') = '' OR IsNull(idw_main.GetItemString(1, 'confirmation_user')) THEN
	idw_main.SetItem(1, 'confirmation_user', gs_userid )
END IF

/*********************************************************************************************************************/
/*	26-Aug-2013 : Madhu- Moved the code from Below to Here to do the validation against Serial No before to  hit DB  -START                              */
/*********************************************************************************************************************/
// LTK 20110823	Pandora #258 move the serial number deletion logic to a Pandora specific nvo and call it prior to making the create IB warehouse transfer order.
	//BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
	// ET3 2012-06-14: Use indicator g.ibSNChainOfCustody for generic test
	//if (Upper(gs_project) = "PANDORA" OR Upper(gs_project) = "BLUECOAT") and (is_Ready_Or_Confirm = 'READY' or  is_Ready_Or_Confirm = 'BOTH')  then
	if g.ibSNChainOfCustody and (is_Ready_Or_Confirm = 'READY' or  is_Ready_Or_Confirm = 'BOTH')  then
		n_pandora_delivery_service lnvo_pandora_ds
		lnvo_pandora_ds = Create n_pandora_delivery_service
		
		//TimA 08/29/13 Because of the Pandora LPN project serail numbers are now deleted in the sweeper after the 3b13 is generated.
		//Because if the serial numbers are deleted here then the 3b13 contains no serial numbers because we have to look them up based on cartons.
		If gs_project <> 'PANDORA' then
			//Note this is a base line call to a Pandora named variable
			li_return = lnvo_pandora_ds.of_delete_serials(lbReconfirm, ls_initial_ord_status, lsDONo, ll_method_trace_id, this)
		End if
		
		Destroy lnvo_pandora_ds

		if li_return < 0 then
			// Error occurred, halt the confirmation process
			//This returns a different error code because it's after the ue_save above
			Return -2
		end if
		
	end if		// end #258
/*********************************************************************************************************************/
/*	26-Aug-2013 : Madhu- Moved the code from Below to Here to do the validation against Serial No before to  hit DB  -END		                            */
/*********************************************************************************************************************/


//If iw_window.Trigger Event ue_save() = 0 Then


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 	Missing confirmation changes - moving the update of the datawindows, creation of the inbound order and 
// the confirm files into one transaction.  LTK 20141215
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int li_update_rc
String ls_update_error
String ls_msg_display_after_transaction		// Display this message after the commit/rollback so blocking doesn't occur
boolean lb_branching_message = true
String ls_user_msg

// Copied this block from below.  Now need to determine the response from the following messagebox, which is used for code branching, outside of the transaction.  Missing confirmation changes - LTK 20141215 
If (is_Ready_Or_Confirm <> 'READY') AND (idw_main.GetItemString(1,'ord_type') = 'Z' and upper(gs_project) <> 'DIEBOLD')  or (upper(gs_Project) = 'BOBCAT' and idw_main.GetItemString(1,'ord_type') = 'C') Then 

	//lbCreateInbound = true

	//If idw_main.GetItemString(1,'ord_type') = 'Z' then 
	// LTK 20160310  Added skip auto inbound flag check which is defaulted to FALSE for all projects but Pandora, in which case it's configurable
	If idw_main.GetItemString(1,'ord_type') = 'Z' and NOT lb_skip_auto_inbound then 
		//check to see if Associated Inbound order was already created...
		Select max(ro_no) 
		Into :lsRONO
		From Receive_Master
		Where Project_ID = :gs_Project 
		and Do_no = :lsDONo;
		
		if not isnull(lsRONO) Then
			if messagebox("Auto-Receipt", "Inbound Order already exists for this Order.  Create another associated Inbound Order?", Question!, YesNo!, 2) = 2 then
				//lbCreateInbound = false
				lb_branching_message = false
			end if
		end if
	end if
end if


// Moved the following block from below to here, above the begin transaction.  This block opens a window and displays a messagebox which 
// would cause blocking if left inside of the transaction.  Missing confirmation changes - LTK 20141215 
if (is_Ready_Or_Confirm = 'READY' or  is_Ready_Or_Confirm = 'BOTH')  Then

	//TimA 04/05/11
	//On reconfirms on insert into batch if user agrees
	If lbReconfirmTransaction = True then
		//TimA 04/09/14 Pandora issue #36
		//Note:  This can be a baseline change but all the NVO's in the sweeper need to be modified to pass the Trans_Parm paramater.  
		//So for right now it's just for Pandora
		if upper(gs_project) = 'PANDORA' and lbReconfirm = True then
			//Call the function that will retrieve detail records to select for Re-Confirm
			IF wf_select_reconfirm_records( idw_main.GetITemString(1,'Do_No') ) = False THEN
				//No detail records selected
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Order ' + lsDoNo + " Pandora, no detail records selected. ",lsDoNo, ' ',' ',isinvoice_no)		// 	Missing confirmation changes - LTK 20141215
				Return -1
			END IF
		
			If isDetailRecordsToReConfirm = Upper('ALL' ) Then
				//All the detail records selected so do normal processing.  If not this variable will be delimited with line numbers.
				SetNull(isDetailRecordsToReConfirm )
			End if
		Else
			//Set the varable to null for all non Pandora projects
			SetNull(isDetailRecordsToReConfirm )
		End if
	end if
end if


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 	Missing confirmation changes - LTK 20141215
//
//	Do not open windows or display messageboxes between the begin/end of the following transaction.
//
//												*** BEGINNING OF TRANSACTION ***
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Execute Immediate "Begin Transaction" using SQLCA; 

li_update_rc = idw_main.update()

if li_update_rc = 1 then
	li_update_rc = idw_other.update()
	if li_update_rc < 0 then
		ls_update_error = SQLCA.SQLErrText
		//Execute Immediate "Rollback Transaction" using SQLCA;
		//f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Other datawindow (idw_other) update failure:  ' + ls_update_error,is_dono, ' ',' ',isinvoice_no)
		// Rolling back below 
		ls_msg_display_after_transaction = 'Other datawindow (idw_other) update failure:  ' + ls_update_error
	end if
else
	ls_update_error = SQLCA.SQLErrText
	//Execute Immediate "Rollback Transaction" using SQLCA;
	//f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Main datawindow (idw_main) update failure:  ' + ls_update_error,is_dono, ' ',' ',isinvoice_no)
	// Rolling back below 
	ls_msg_display_after_transaction = 'Main datawindow (idw_main) update failure:  ' + ls_update_error
end if


if li_update_rc = 1 then


/*********************************************************************************************************************/
/*	26-Aug-2013 : Madhu- Moved the following code to above	                                                               -COMMENTED                                    */
/*********************************************************************************************************************/

//	// LTK 20110823	Pandora #258 move the serial number deletion logic to a Pandora specific nvo and call it prior to making the create IB warehouse transfer order.
//	//BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
//	// ET3 2012-06-14: Use indicator g.ibSNChainOfCustody for generic test
//	//if (Upper(gs_project) = "PANDORA" OR Upper(gs_project) = "BLUECOAT") and (is_Ready_Or_Confirm = 'READY' or  is_Ready_Or_Confirm = 'BOTH')  then
//	if g.ibSNChainOfCustody and (is_Ready_Or_Confirm = 'READY' or  is_Ready_Or_Confirm = 'BOTH')  then
//		n_pandora_delivery_service lnvo_pandora_ds
//		lnvo_pandora_ds = Create n_pandora_delivery_service
//		
//		//TimA 08/29/13 Because of the Pandora LPN project serail numbers are now deleted in the sweeper after the 3b13 is generated.
//		//Because if the serial numbers are deleted here then the 3b13 contains no serial numbers because we have to look them up based on cartons.
//		If gs_project <> 'PANDORA' then
//			//Note this is a base line call to a Pandora named variable
//			li_return = lnvo_pandora_ds.of_delete_serials(lbReconfirm, ls_initial_ord_status, lsDONo, ll_method_trace_id, this)
//		End if
//		
//		Destroy lnvo_pandora_ds
//
//		if li_return < 0 then
//			// Error occurred, halt the confirmation process
//			//This returns a different error code because it's after the ue_save above
//			Return -2
//		end if
//		
//	end if		// end #258

	/* dts 2010/05/24 - moved from below in an effort to get pandora inbound half of wh x-fer created every time (without killing SIMS/dropping network).
		- I expect limited benefit since all we're saving is the time to create the batch_transactions
		- This will call wf_create_inbound before displaying the message that the order has been confirmed, but the order will have already been confirmed and saved.
		- a side-effect is that we won't have to manage batch transaction creation (as much) on a 'Re-Confirm' to create the Inbound
		  */
	
/*********************************************************************************************************************/
/*	26-Aug-2013 : Madhu- Moved the following code to above	                                                               -COMMENTED                                    */
/*********************************************************************************************************************/

	If (is_Ready_Or_Confirm <> 'READY') AND (idw_main.GetItemString(1,'ord_type') = 'Z' and upper(gs_project) <> 'DIEBOLD')  or (upper(gs_Project) = 'BOBCAT' and idw_main.GetItemString(1,'ord_type') = 'C') Then 
		
		//lbCreateInbound = true
		lbCreateInbound = lb_branching_message		// 	Missing confirmation changes - LTK 20141215
		
// Moved the following block above, before the begin transaction so blocking would not occur.  Missing confirmation changes - LTK 20141215
//
//		If idw_main.GetItemString(1,'ord_type') = 'Z' then 
//			
//			//check to see if Associated Inbound order was already created...
//			Select max(ro_no) Into :lsRONO
//			From Receive_Master
//			Where Project_ID = :gs_Project and Do_no = :lsDONo;
//			
//			if not isnull(lsRONO) Then
//				
//				if messagebox("Auto-Receipt", "Inbound Order already exists for this Order.  Create another associated Inbound Order?", Question!, YesNo!, 2) = 2 then
//					lbCreateInbound = false
//				end if
//				
//			end if
//			
//		end if
//		
		
		// LTK 20160310  Pandora, skip auto creation of warehouse transfer (if configuration is on)
		if Upper(gs_Project) = "PANDORA" and lb_skip_auto_inbound then
			lbCreateInbound = FALSE
		end if		
		
		
		//MEA - 6/12 - Don't do this for Stryker - Warehouse is only for reference as per BoonHee.
		if Upper(gs_Project) = "STRYKER" then
			lbCreateInbound = false
		end if		
		
		if lbCreateInbound then
			
			SetPointer(Hourglass!)
			//dts 10/12/12 - added trace to provide hints regarding why Inbound Half of WH X-fers sometimes are not created.
			SetNull(ll_method_trace_id2)
			//f_method_trace(ll_method_trace_id2, this.ClassName(), 'Order ' + lsDoNo + ': in ue_confirm, calling wf_create_inbound...') //08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Order ' + lsDoNo + ': in ue_confirm, calling wf_create_inbound...' ,lsDoNo, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
			ls_error_message_title = ''
			ls_error_message = ''
			//Integer liCreateIn		// Moved above to higher level
			liCreateIn = wf_create_inbound(idw_main,ls_error_message_title,ls_error_message)
			//TimA 02/01/13  There has been a problem with creating the inbound side of the warehouse transfer.
			//Try it onec then if an error wait 2 seconds and try it again.
			If liCreateIn < 0 then
				liCreateIn = 0
				Sleep(2) //Wait 2 seconds and try it again
				//Try again
				liCreateIn = wf_create_inbound(idw_main,ls_error_message_title,ls_error_message)
				If liCreateIn < 0 then
					//Failed a second time 
					Execute Immediate "Rollback Transaction" using SQLCA;		// 	Missing confirmation changes - LTK 20141215
					MessageBox(ls_error_message_title, 'There was an error creating the inbound record for this order.  Please wait a couple minutes and try the confirm again. ' + ls_error_message)
					//f_method_trace(ll_method_trace_id2, this.ClassName(), 'Order ' + lsDoNo + ': in ue_confirm, wf_create_Inbound failed Wait a couple minutes. ' + ls_error_message) //08-Feb-2013  :Madhu commented
					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Order ' + lsDoNo + ': in ue_confirm, wf_create_Inbound failed Wait a couple minutes.' + ls_error_message,lsDoNo, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
					Return -2
				End if
				//f_method_trace(ll_method_trace_id2, this.ClassName(), 'Order ' + lsDoNo + ': in ue_confirm, wf_create_Inbound failed trying again. ' + ls_error_message) //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Order ' + lsDoNo + ': in ue_confirm, wf_create_Inbound failed trying again.' + ls_error_message,lsDoNo, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
			else
				//f_method_trace(ll_method_trace_id2, this.ClassName(), 'Order ' + lsDoNo + ': in ue_confirm, back from wf_create_inbound...') //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Order ' + lsDoNo + ': in ue_confirm, back from wf_create_Inbound ...',lsDoNo, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
			End if
		end if
		
		SetPointer(Arrow!)
		
	end if /* Save successful*/

		
	// 08/01 PCONKL - Send an EDI Goods Issue transaction if necessary
	// pvh - 02.21.06 moved to boneyard
	//lu_edi_confirm = Create u_nvo_edi_confirmations
	//lu_edi_confirm.uf_goods_issue_confirmation(idw_main, idw_detail,idw_pick, idw_Pack)
	
	// 06/21/04 - dts - 'CONFIRM' implies 3COM Confirm step (which skips ASN)
	/* 06/02/2006 - tam - Needed to changed logic.
		K&N sends ASN at Confirm and Both
		3COM sends ASN at Ready or Both 
		All others send at Both only
	*/
	
	//11/09 - PCONKL - now setting Ready to Ship at project level, don't want to have to hardocde new projects to send ASN at confirmation, just set those that want to send at Ready To Ship
	//	If gs_project = '3COM_NASH' or gs_project = 'LMC' or gs_project = 'HILLMAN' then /*These projects send the ASN at Ready to Ship*/
	//26-Jul-2016 :Madhu- Added 'H2O' for Ready To Ship
	//21-Sep-2016: Madhu- Removed 'Kendo' and let use BaseLine Logic for ReadyToShip process.
	// GailM S19941 6/11/2018 Faber-Cast Ready-to-Ship 
	If gs_project = 'LMC' or gs_project = 'HILLMAN' or gs_project =  'ASPEN'  or gs_project='H2O'  or gs_project = 'FABER-CAST' then /*These projects send the ASN at Ready to Ship*/  //TAM 2016/04 added aspen
		lbSendASNAtReadyToShip = True
	End If
	
	lsSendASN = 'N'
	
	if is_Ready_Or_Confirm = 'BOTH' then 
		lsSendASN = 'Y' // Send all Projects at Both
	ElseIf is_Ready_Or_Confirm = 'READY' and lbSendASNAtReadyToShip Then /*Sent at Ready, Not confirm*/
		lsSendASN = 'Y'
	Elseif is_Ready_Or_Confirm = 'CONFIRM' and not lbSendASNAtReadyToShip Then /*Sent at confirm and not ready*/
		lsSendASN = 'Y'
	End If
	
	// 09/06 - PCONKL - Added a new Transaction for Ready to Shp - Identical to Goods Issue except for transaction Type (RS)
	if (is_Ready_Or_Confirm = 'READY' or  is_Ready_Or_Confirm = 'BOTH')  Then



//		LTK 20141216  Moved the select reconfirm record logic from below to above the begin transaction.  Database blocking will occur if windows or messageboxes are opened within the confirm transaction.
//
//		//TimA 04/05/11
//		//On reconfirms on insert into batch if user agrees
		If lbReconfirmTransaction = True then
//			//TimA 04/09/14 Pandora issue #36
//			//Note:  This can be a baseline change but all the NVO's in the sweeper need to be modified to pass the Trans_Parm paramater.  
//			//So for right now it's just for Pandora
//			if upper(gs_project) = 'PANDORA' and lbReconfirm = True then
//				//Call the function that will retrieve detail records to select for Re-Confirm
//				IF wf_select_reconfirm_records( idw_main.GetITemString(1,'Do_No') ) = False THEN
//					//No detail records selected
//					Execute Immediate "Rollback Transaction" using SQLCA;		// 	Missing confirmation changes - LTK 20141215
//					f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'Order ' + lsDoNo + " Pandora, no detail records selected. ",lsDoNo, ' ',' ',isinvoice_no)		// 	Missing confirmation changes - LTK 20141215
//					Return -1
//				END IF
//			
//				If isDetailRecordsToReConfirm = Upper('ALL' ) Then
//					//All the detail records selected so do normal processing.  If not this variable will be delimited with line numbers.
//					SetNull(isDetailRecordsToReConfirm )
//				End if
//			Else
//				//Set the varable to null for all non Pandora projects
//				SetNull(isDetailRecordsToReConfirm )
//			End if

			//25-Nov-2014 :Madhu- If UF21 =SPS don't create any Pre-ship files for KLN- START
			ls_b2b_sps= upper(idw_main.getitemstring(1,'user_field21'))
			//TAM - 2019/07/05 - DE11405 - Exclude PhilipsCLS from resending RS records
			//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order			////MikeA - 2019/08/13 - DE12161 - philipsCLS PBH: PPBH file not generate
  			IF ((Upper(gs_project) = 'PHILIPSCLS' or Upper(gs_project) = 'PHILIPS-DA') and Left(icb_confirm.Text,2) <>  'Re') OR ((Upper(gs_project) <> 'PHILIPSCLS' and Upper(gs_project) <> 'PHILIPS-DA')) THEN
				//Execute Immediate "Begin Transaction" using SQLCA; 						// 	Missing confirmation changes, comment line out - LTK 20141215
				//Begin S54935-Google - SIMS – 947 change needed for Google SAP
				if liAdj > 0 then
					
				else
				Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
									Values(:gs_Project, 'RS', :lsDONO,'N', :ldtToday, :isDetailRecordsToReConfirm );
				//Execute Immediate "COMMIT" using SQLCA;									// 	Missing confirmation changes, comment line out - LTK 20141215
			   end if
		      END IF 
			//25-Nov-2014 :Madhu- If UF21 =SPS don't create any Pre-ship files for KLN- END
		End if
	End If
	
	if lsSendASN = 'Y' then
		
		//TimA 04/05/11
		//On reconfirms on insert into batch if user agrees
		If lbReconfirmTransaction = True then
			
			// 03/04 - PCONKL - All new GI's will be genreated in Batch Mode. Instead of the Client writing out the transaction
			//							the client will write transaction record and the Sweeper will generate the confirmation records
			If Upper(gs_project) = 'ARIENS' Then  //Jxlim 08/01/2013 Ariens; Sending shipment confirmation (SIxxx.dat)
				//Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/					// 	Missing confirmation changes, comment line out - LTK 20141215
				Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
									Values(:gs_Project, 'SI', :lsShipID,'N', :ldtToday, :lsDONO);
				//Execute Immediate "COMMIT" using SQLCA;																														// 	Missing confirmation changes, comment line out - LTK 20141215
			Else			
				
				//25-Jan-2016 :Madhu Added to prevent duplicate Entries into Batch Transaction - START
		IF wf_batch_validation(lsDONO) =0 and upper(gs_project) <> 'BOSCH' THEN
					
				//Begin S54935-Google - SIMS – 947 change needed for Google SAP
			if liAdj > 0 then
				//Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/					// 	Missing confirmation changes, comment line out - LTK 20141215
				Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
				Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
								Values(:gs_Project, 'MM', :lsDONO,'N', :ldtToday, 'Outbound' );
				Execute Immediate "COMMIT" using SQLCA;
			else
						
						//Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/					// 	Missing confirmation changes, comment line out - LTK 20141215
						//TimA 04/24/14 Pandora issue #36 added the isDetailRecordsToReConfirm to pass selected rows it needed
						Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
									Values(:gs_Project, 'GI', :lsDONO,'N', :ldtToday, :isDetailRecordsToReConfirm );
						//Execute Immediate "COMMIT" using SQLCA;							// 	Missing confirmation changes, comment line out - LTK 20141215
						
				//25-Jan-2016 :Madhu Added to prevent duplicate Entries into Batch Transaction - END
			End If
			
		End if
				
		End If
		
			// 2006/01/10 - TAM - Write a MARC GT Goods Issue for everyone but 3COM(done below)
			If gs_project <> '3COM_NASH' Then
				//Begin S54935-Google - SIMS – 947 change needed for Google SAP
				if liAdj > 0 then
					
				else
				// GS = Create Marc Goods Issue
				//Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/					// 	Missing confirmation changes, comment line out - LTK 20141215
				//TimA 04/24/14 Pandora issue #36 added the isDetailRecordsToReConfirm to pass selected rows it needed
				Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
								Values(:gs_Project, 'GS', :lsDONO,'N', :ldtToday, :isDetailRecordsToReConfirm );
				//Execute Immediate "COMMIT" using SQLCA;																														// 	Missing confirmation changes, comment line out - LTK 20141215
				End If
			 End if
			
			// 04/14 - PCONKL - If project enabled, post a GI transaction to Websphere - unless we are confirming at the shipment level, then we will generate a single transaction for the shipment at the end of the shipment process
			If g.ibSendWebSphereGoodsIssue and not ibConfirmShipment Then	
// 2014/11/25 TAM if Bosch, Don't send a GI for manual orders.
				If gs_project = 'BOSCH'  and( idw_Main.GetItemNumber(1,'edi_batch_seq_no') = 0 or isNull(idw_Main.GetITemNumber(1,'edi_batch_seq_no')))Then
				else
					uf_send_websphere_GI("ORDER")
				End If
			End If
		
		end if
		
	end if

	// 08/04 - PCONKL - Only create MARC GI when confirmed (not ready to ship)
	//If (is_Ready_Or_Confirm = 'CONFIRM' or  is_Ready_Or_Confirm = 'BOTH') and &
	//	gs_project = '3COM_NASH' and idw_Main.GetItemString(1,'wh_Code') = '3COM-NL' and Left(icb_confirm.Text,2) <> 'Re' Then
		
	If (is_Ready_Or_Confirm = 'CONFIRM'  and gs_project = '3COM_NASH' and &
		idw_Main.GetItemString(1,'wh_Code') = '3COM-NL' and Left(icb_confirm.Text,2) <> 'Re' ) or &
		(is_Ready_Or_Confirm = 'BOTH' and gs_project = '3COM_NASH' and idw_Main.GetItemString(1,'wh_Code') = '3COM-NL' ) Then
	//Begin S54935-Google - SIMS – 947 change needed for Google SAP
		if liAdj > 0 then
			
				else
				// GS = Create Marc Goods Issue
				//Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/					// 	Missing confirmation changes, comment line out - LTK 20141215
				Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
									Values(:gs_Project, 'GS', :lsDONO,'N', :ldtToday, '');
				//Execute Immediate "COMMIT" using SQLCA;	
				// 	Missing confirmation changes, comment line out - LTK 20141215
		end if
	End If
	
	//Enable export to carrier button - will only be visible for certain carriers
	tab_main.tabpage_carrier.cb_export_to_carrier.Enabled = True
	
	//MEA - 5/13 - Added Multi-Confirm
	if not ib_batchconfirmmode then
	
		if is_Ready_Or_Confirm = 'READY' then
			//wf_display_message("Order Staged as 'Ready To Ship'!")
			ls_msg_display_after_transaction = "Order Staged as 'Ready To Ship'!"		// 	Missing confirmation changes - LTK 20141215
//			MessageBox(is_title, "Order Staged as 'Ready To Ship'!")
		else
			//wf_display_message("Order confirmed!")
			ls_msg_display_after_transaction = "Order confirmed!"		// 	Missing confirmation changes - LTK 20141215
//			MessageBox(is_title, "Order confirmed!")
		end if
		
	else
		//MikeA 08/2019 - S36465 - F17598 - Philips Outbound Delivery enhancement (Multi-Ready-To-Ship)
		if is_Ready_Or_Confirm = 'READY' then
			wf_display_message(idw_main.getItemString(1,'invoice_no') + ': ' + "Order Staged as 'Ready To Ship' Successfully!")
		else
			wf_display_message(idw_main.getItemString(1,'invoice_no') + ': ' + "Order confirmed Successfully!")
		end if
	end if
	
	
	
Else

	idw_main.SetItem(1, 'confirmation_user', '' )   // unset - save failed

	//ue_save() failed...
	if is_Ready_Or_Confirm = 'READY' then
		//wf_display_message("Order 'Ready To Ship' Staging failed!")    //MEA - 5/13 - Added Multi-Confirm
		ls_user_msg = "Order 'Ready To Ship' Staging failed! "		// 	Missing confirmation changes - LTK 20141215
//		MessageBox(is_title, "Order 'Ready To Ship' Staging failed!")
	else
		//wf_display_message("Order confirm failed!")    //MEA - 5/13 - Added Multi-Confirm
		ls_user_msg = "Order confirm failed! " 	// 	Missing confirmation changes - LTK 20141215
//		MessageBox(is_title, "Order confirm failed!")
	end if

	idw_main.setitem(1,'ord_status','P') /*08/02 - Pconkl*/
	//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm ' + 'Order Confirm failed' ) //08-Feb-2013  :Madhu commented
	Execute Immediate "Rollback Transaction" using SQLCA;		// 	Missing confirmation changes - LTK 20141215
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm ' + 'Order Confirm failed:  ' + ls_msg_display_after_transaction,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
	MessageBox(is_title, ls_user_msg)			// 	Missing confirmation changes - LTK 20141215
	Return -2
	
End If //ue_save() = 0...


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 	Missing confirmation changes - LTK 20141215
//
//												*** END OF TRANSACTION ***
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Execute Immediate "Commit Transaction" using SQLCA; 	

// If inbound order was successfully created, add that information to the ue_confirm result message
if lbCreateInbound and liCreateIn = 0 then
	ls_msg_display_after_transaction = "Matching inbound Order successfully created for " + is_warehouse_of_create_inbound + " ~r~r" + ls_msg_display_after_transaction
end if

//MikeA 08/2019 - S36465 - F17598 - Philips Outbound Delivery enhancement (Multi-Ready-To-Ship)
//Only display if there are errors or warnings after transaction.

if trim(ls_msg_display_after_transaction) <> '' And Not IsNull(ls_msg_display_after_transaction) then
	wf_display_message(ls_msg_display_after_transaction)			// 	Missing confirmation changes - LTK 20141215
end if

/* dts 2010/05/24 - moved above, before inserting batch transactions...
		// dts - 08/26/05 - Also Creating Inbound order if Order Type is Z (Warehouse Transfer)
		// 2009/07/01 - TAM Need to add Order Type Y for return replacements for pandora
		
		If (is_Ready_Or_Confirm <> 'READY') AND (idw_main.GetItemString(1,'ord_type') = 'Z' and upper(gs_project) <> 'DIEBOLD')  or (upper(gs_Project) = 'BOBCAT' and idw_main.GetItemString(1,'ord_type') = 'C') Then 
			lbCreateInbound = true
			If idw_main.GetItemString(1,'ord_type') = 'Z' then 
				//check to see if Associated Inbound order was already created...
				Select max(ro_no) Into :lsRONO
				From Receive_Master
				Where Project_ID = :gs_Project and Do_no = :lsDONo;
				if not isnull(lsRONO) Then
					if messagebox("Auto-Receipt", "Inbound Order already exists for this Order.  Create another associated Inbound Order?", Question!, YesNo!, 2) = 2 then
						lbCreateInbound = false
					end if
				end if
			end if
			if lbCreateInbound then
				SetPointer(Hourglass!)
				lsRONO = wf_create_inbound(idw_main)
			end if
			SetPointer(Arrow!)
		end IF
*/

// 02/02 Pconkl - Create backorder if requested
If lbCreateBackorder Then
	This.TriggerEvent("ue_backOrder")
End If

//TimA 03/21/14 Emergency fix for Pandora.  After the confirm Any order that has the following if condition criteria below set the ord_status to D and the Delivery date same as complete date.
//Per Dave
If gs_project = 'PANDORA' then
	Boolean lb_Delivered
	lb_Delivered = False
	If Left(isinvoice_no,1 ) = 'X' then
		lb_Delivered = True
	End if
	If Left(idw_main.GetItemString(1,'cust_code'),7 ) = 'CB_DRVR' then
		lb_Delivered = True
	End if
	If RIGHT(Trim(idw_main.GetItemString(1,'cust_code' ) ),2 ) = 'HT' then
		lb_Delivered = True
	End if
	If lb_Delivered = True Then
		idw_main.setitem(1,'ord_status','D' )
		idw_main.setitem(1,'delivery_date', ldtToday )
		idw_main.update( )
	End if
End if
//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_confirm' )		//08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added	
//TimA 12/19/13 Pandora issue #671
//Set the Authorize flag to false if the order has been confirmed successfully
ib_Authorize = False

wf_check_status()		// 	Missing confirmation changes - LTK 20141215

Return 0
end event

event ue_select_customer();Str_parms	lstrparms
long ll_rowcount, llRowPos
String ls_current_warehouse

// 11/00 PCONKL - Select a customer from popup

IF gs_project = "PANDORA" THEN

	ls_current_warehouse = idw_main.GetItemString(1, "wh_code")

	OpenWithParm(w_select_customer, ls_current_warehouse)
	
ELSE

	Open(w_select_customer)
	
END IF

lstrparms = message.PowerobjectParm

If Not lstrparms.Cancelled Then
	
	If Lstrparms.String_arg[1] > '' Then
		SetPointer(Hourglass!)
		idw_main.SetItem(1,"cust_code",lstrparms.String_arg[1])
		
		If Not isvalid(ids_default_address) Then
			ids_default_address = Create datastore
		END IF	
			
		IF ids_default_address.DataObject <> 'd_customer_maintenance' THEN 	
			ids_default_address.DataObject = 'd_customer_maintenance'
			ids_default_address.SetTransObject(sqlca)
		End If
			
		ids_default_address.Retrieve(gs_project, lstrparms.String_arg[1]) 			
		idw_main.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "cust_name"))
		idw_main.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
		idw_main.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
		idw_main.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
		idw_main.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
		idw_main.SetItem(1, "address_code",'DEFAULT')
		idw_main.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
		idw_main.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
		idw_main.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
		idw_main.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
		idw_main.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
		idw_main.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))
		idw_main.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))

		//gap 04-03 Set PDL and POs for "VALEOD"
		If Upper(gs_project) = 'VALEOD' Then	
			idw_main.SetItem(1, "cust_order_no", ids_default_address.GetItemString(1, "user_field2")) 	//PDL
			idw_main.SetItem(1, "user_field8", ids_default_address.GetItemString(1, "user_field6")) 	//POs
		End if
		
		//If idwc_address.Retrieve(gs_project, lstrparms.String_arg[1]) < 1 Then
		//	idwc_address.InsertRow(0)
		//End If
		
		//gap02-03 add default location to the address code drop down
		ll_rowcount =  idwc_address.Retrieve(gs_project,lstrparms.String_arg[1]) 
		idwc_address.InsertRow(1)
		idwc_address.setitem(1,"address_code", "DEFAULT")
		idwc_address.setitem(1,"address_1", ids_default_address.GetItemString(1, "address_1")) 
		
		//gap 02-03 Check to see if a customer has multiple locations except for "return to sender"
		if ll_rowcount > 0 then  
			MessageBox ( "Customer with multiple addresses", "This customer has multiple addresses!", Exclamation!)
			idw_main.SetFocus()
			idw_main.Setcolumn("address_code")		
		else
			idw_main.SetFocus()
			idw_main.Setcolumn("cust_order_no")
		end if
		
		if gs_project = 'PANDORA' then
			
//			messagebox("Tempo!!", "set a UF to the warehouse (look it up from customer).") 
			idw_main.SetItem(1, "user_field3", lstrparms.String_arg[1])
							
				// 09/09 - PCONKL - Retrieve and set default To Project from Customer User Field 10
				Select USer_Field10 into :isPandoraToProject
				From Customer
				Where Project_id = 'Pandora' and cust_code = :lstrparms.String_arg[1];
				
				If idw_detail.RowCount() > 0 Then
					For llRowPos = 1 to idw_Detail.RowCount()
						idw_Detail.SetITem(llRowPos,'user_field5',isPandoraToProject)
					Next
				End If
				
		end if
		
		ib_changed = True
		SetPointer(Arrow!)
	Else /*no code entered*/
		idw_main.SetFocus()
		idw_main.Setcolumn("cust_code")
	End If
		
Else /*Cancelled*/
	
		idw_main.SetFocus()
		idw_main.Setcolumn("cust_code")
End If			


end event

event ue_backorder();
String	lsOrderNo, lsNewOrder, lsInvType, lsShipRef, lsWarehouse, lsCustomer,	&
			lsCustname, lsAddr1, lsAddr2, lsAddr3, lsAddr4, lsCity, lsState,lsZip, lsDistrict, lsCountry,	&
			lsCarrier, 	lsShipVia, lsAgent, lsCustomsDoc, lsRemarks,	lsCustOrder, lsOrdType,	lsTransportMode,	&
						lsUSer1, lsUser2, lsUser3, lsUser4, lsUser5, lsuser6, lsUser7, lsUser8, lsFreightTerms, lsOrigDONO, lsBOInd,lsSourceType //10-Dec-2015 Madhu Added SourceType
			
Long		llRowCount,	llRowPos, llNewRow, llBatchSeq, llPriority, llNewBatchSeq
			
Int		liOrderSuffix,liShipCnt			//843

DateTime	ldtReqDate, ldtSchedDate
			
DataStore	ldsDetail

//Create a back Order for the current Order

//Capture any necessary header fields
lsOrigDONO = idw_main.GetItemString(1,"do_no")
lsOrderNo = idw_main.GetItemString(1,"invoice_no")
lsInvType = idw_main.GetItemString(1,"inventory_type")
lsShipRef = idw_main.GetItemString(1,"ship_ref")
lsWarehouse = idw_main.GetItemString(1,"wh_code")
lsCustomer = idw_main.GetItemString(1,"cust_code")
lsCustName = idw_main.GetItemString(1,"Cust_Name")
lsaddr1 = idw_main.GetItemString(1,"Address_1")
lsaddr2 = idw_main.GetItemString(1,"Address_2")
lsaddr3 = idw_main.GetItemString(1,"Address_3")
lsaddr4 = idw_main.GetItemString(1,"Address_4")
lsCity = idw_main.GetItemString(1,"City")
lsState = idw_main.GetItemString(1,"State")
lsZip = idw_main.GetItemString(1,"Zip")
lsDistrict = idw_main.GetItemString(1,"District")
lsCountry = idw_main.GetItemString(1,"Country")
lsCarrier = idw_main.GetItemString(1,"carrier")
lsShipVia = idw_main.GetItemString(1,"ship_via")
lsAgent = idw_main.GetItemString(1,"agent_info")
lsCustomsDoc = idw_main.GetItemString(1,"customs_doc")
lsRemarks = idw_main.GetItemString(1,"remark")
lsCustOrder = idw_main.GetItemString(1,"Cust_order_no")
lsOrdType = idw_main.GetItemString(1,"ord_type")
lstransportMode = idw_main.GetItemString(1,"Transport_mode")
lsfreightTerms = idw_main.GetItemString(1,"Freight_Terms") /* 10/03 - PCONKL */
lsUser1 = idw_main.GetItemString(1,"User_field1") /* 01/04 - PCONKL */
lsUser2 = idw_main.GetItemString(1,"User_field2") /* 01/04 - PCONKL */
lsUser3 = idw_main.GetItemString(1,"User_field3")
lsUser4 = idw_main.GetItemString(1,"User_field4")
lsUser5 = idw_main.GetItemString(1,"User_field5")
lsUser6 = idw_main.GetItemString(1,"User_field6")
lsUser7 = idw_main.GetItemString(1,"User_field7")
lsUser8 = idw_main.GetItemString(1,"User_field8")
llBatchSeq = idw_main.GetItemNumber(1,"edi_batch_seq_no")
llPriority = idw_main.GetItemNumber(1,"priority") /* 01/04 - PCONKL */
ldtReqDate = idw_main.GetItemDateTime(1,"Request_Date") /* 01/04 - PCONKL */
ldtSchedDate = idw_main.GetItemDateTime(1,"Schedule_Date") /* 01/04 - PCONKL */
lsSourceType =idw_main.GetItemString(1,"Source_Type") //10-Dec-2015 Madhu Added Source Type

// GailM - 07/07/2014 - PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship
// GailM - 07/10/2014 - 843 - Changed liBackOrder to liShipCnt to identify a shipment number.  Original order = 1, First Backorder = 2, Second...etc
liShipCnt = idw_main.GetItemNumber(1,"ship_cnt")
If isnull(liShipCnt) Then liShipCnt = 1
liShipCnt ++

//Capture Detail info where req qty < shipped qty
ldsDetail = Create Datastore
ldsDetail.DataObject = 'd_do_detail'
llRowCOunt = idw_detail.RowCount()
For llRowPos = 1 to llRowCount
	If idw_detail.GetITemNumber(llRowPos,'alloc_qty') < idw_detail.GetITemNumber(llRowPos,'req_qty') Then
		idw_detail.RowsCopy(llRowPos, llRowPos, Primary!, ldsDetail,1, Primary!)
		ldsDetail.SetItem(1,"req_qty", (idw_detail.GetITemNumber(llRowPos,'req_qty') - idw_detail.GetITemNumber(llRowPos,'alloc_qty')))
		ldsDetail.SetItem(1,"alloc_qty",0)
	End If /*not all shipped*/
Next /*next existing detail row*/

This.TriggerEvent("ue_new")

//Set the info on the new order

lsNewOrder = Trim(Left(lsOrderNo,27)) /* 08/01 - Pconkl - default new order to same number as original*/

IF gs_project = "PANDORA" THEN
	
	IF left(lsNewOrder, 2) = "MT" THEN
		
		lsNewOrder = Mid(lsNewOrder, 3)
		
	END IF
	
END IF


isle_order.text = lsNewOrder
isle_order2.text = lsNewOrder
Idw_main.SetITem(1,"invoice_no",lsNewOrder)

//12/07 - PCONKL - added option at order type level to either retain the original order type or set to Backorder
Select backorder_type_ind into :lsBOInd
From Delivery_ORder_Type
Where Project_id = :gs_project and ord_type = :lsOrdType;

If lsBOInd = 'Y' Then /*retain original order type*/
	Idw_main.SetItem(1,"ord_type",lsOrdType)
Else /*Backorder*/
	Idw_main.SetItem(1,"ord_type",'B') 
End If

Idw_main.SetITem(1,"Inventory_Type",lsInvType)
Idw_Main.SetITem(1,"ship_ref",lsShipRef)
Idw_Main.SetITem(1,"wh_code",lsWarehouse)
Idw_Main.SetITem(1,"cust_code",lsCustomer)
Idw_Main.SetITem(1,"cust_name",lsCustname)
Idw_Main.SetITem(1,"address_1",lsaddr1)
Idw_Main.SetITem(1,"address_2",lsaddr2)
Idw_Main.SetITem(1,"address_3",lsaddr3)
Idw_Main.SetITem(1,"address_4",lsaddr4)
Idw_Main.SetITem(1,"City",lsCity)
Idw_Main.SetITem(1,"State",lsstate)
Idw_Main.SetITem(1,"zip",lsZip)
Idw_Main.SetITem(1,"district",lsDistrict)
Idw_Main.SetITem(1,"Country",lsCountry)
Idw_Main.SetITem(1,"carrier",lsCarrier)
Idw_Main.SetITem(1,"ship_via",lsShipVia)
Idw_Main.SetITem(1,"agent_info",lsAgent)
Idw_Main.SetITem(1,"customs_doc",lsCustomsDoc)
Idw_Main.SetITem(1,"cust_order_no",lsCustOrder)
Idw_Main.SetITem(1,"transport_Mode",lsTransportMode)
Idw_Main.SetITem(1,"freight_Terms",lsFreightTerms) /* 10/03 - PCONKL */
Idw_Main.SetITem(1,"User_field1",lsUSer1)
Idw_Main.SetITem(1,"User_field2",lsUSer2)
Idw_Main.SetITem(1,"User_field3",lsUSer3)
Idw_Main.SetITem(1,"User_field4",lsUSer4)
Idw_Main.SetITem(1,"User_field5",lsUSer5)
Idw_Main.SetITem(1,"User_field6",lsUSer6)
Idw_Main.SetITem(1,"User_field7",lsUSer7)
Idw_Main.SetITem(1,"User_field8",lsUSer8)
Idw_Main.SetITem(1,"edi_batch_seq_no",llBatchSeq)
Idw_Main.SetITem(1,"Priority",llPriority)
Idw_Main.SetITem(1,"request_Date",ldtReqDate)
Idw_Main.SetITem(1,"schedule_Date",ldtSchedDate)

Idw_Main.SetITem(1,"remark",lsRemarks)

Idw_Main.SetITem(1,"ship_cnt",liShipCnt)			//843

//10-Dec-2015 Madhu Added Source Type - START
If Pos(lsSourceType,'/B') > 0 THEN
	idw_main.SetItem(1,"Source_Type",lsSourceType)
else
	idw_main.SetItem(1,"Source_Type",lsSourceType +" /B")
End IF
//10-Dec-2015 Madhu Added Source Type - END

//Set Detail Info...
ldsDetail.RowsCopy(1,ldsDetail.RowCount(),Primary!,idw_detail,1,Primary!)

// 10/03 - PCONKL - We also need to copy any Alternate Addresses for this order (3COM)
If Not isValid(ids_Alt_Addresses) Then
	ids_Alt_Addresses = Create Datastore
	ids_Alt_Addresses.DataObject = 'd_do_address'
	ids_Alt_Addresses.SetTransObject(SQLCA)
End If

llRowCount = ids_alt_Addresses.Retrieve(lsOrigDONO)
If llRowCount > 0 Then
	ids_Alt_addresses.RowsCopy(1,llRowCount,Primary!,ids_Alt_addresses,(llrowCount + 1),Primary!)
	//remove DO_NO from new records. The new DONO will be added in ue_save when the new order is saved
	For llRowPos = (llrowCount + 1) To ids_Alt_addresses.RowCOunt()
		ids_Alt_addresses.SetITem(llRowPos,'do_no','')
	Next
End IF

//4-MAR-2019 :Madhu PHILIPSBlueHeart create EDI Expansion records for Back Order.
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
IF llBatchSeq > 0 and (upper(gs_project) ='PHILIPSCLS' OR upper(gs_project) ='PHILIPS-DA') Then 
	llNewBatchSeq =  g.of_next_db_seq(gs_project,'EDI_Outbound_Header','EDI_Batch_Seq_No')
	wf_create_edi_outbound_expansion(lsOrderNo, llBatchSeq, llNewBatchSeq)
END IF

ib_changed = True
This.Title = "Delivery Back Order"

// dts 05/08 - don't allow user to change order no if order was electronically received.
if idw_Main.GetItemNumber(1, "edi_batch_seq_no") > 0 then
	Messagebox("Back Order Created", "A Back Order has been created!~r~r The order number is the same and can not be changed since the order was received electronically.")
	isle_order.DisplayOnly = True
	isle_order2.DisplayOnly = True
else
	Messagebox("Back Order Created","A Back Order has been created!~r~r The order number is the same.~r~rPlease make any necessary updates to the new order and Save.")
end if
idw_main.SetFocus()
idw_main.SetColumn("ord_date")

// GailM - 7/21/2014 - Auto-Save backorder - Pandora Issue 
	This.triggerEvent('ue_save')

	
end event

event ue_load_carrier();// 03/03 - Pconkl - Load carrier default information for exporting order to carrier program

String	lsCarrier
Boolean	lbSetDw

lsCarrier = idw_main.GetITemString(1,'Carrier')

//tab_main.Tabpage_carrier.Enabled = True /*always enable so we can export generic labels*/

Choose Case Upper(lsCArrier)
	CAse 'FEDEX' /*enabled for these carriers*/
	//	tab_main.Tabpage_carrier.Enabled = True
		tab_main.tabpage_carrier.cb_export_to_carrier.Text = 'Export to Fedex'
		tab_main.tabpage_carrier.cb_carrier_Labels.Enabled = False
	Case 'UPS' //GAP 10-03
		tab_main.tabpage_carrier.cb_export_to_carrier.Text = 'Export to UPS'
		tab_main.tabpage_carrier.cb_carrier_Labels.Enabled = False
	Case Else
	   tab_main.tabpage_carrier.cb_export_to_carrier.Text = 'Export Labels'
		tab_main.tabpage_carrier.cb_export_to_carrier.Enabled = False
		tab_main.tabpage_carrier.cb_carrier_Labels.Enabled = True
End Choose

//Only enable export if order has been packed GAP 9/02, 01/03 - or complete/Delivered (for HAHN)
// Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status // Added 'L'
If Idw_Main.GetItemString(1,'ord_status') = 'A' or &
	Idw_Main.GetItemString(1,'ord_status') = 'L' or & 
	 Idw_Main.GetItemString(1,'ord_status') = 'C' or &
	 Idw_Main.GetItemString(1,'ord_status') = 'D' Then
			tab_main.tabpage_carrier.cb_export_to_carrier.Enabled = True
Else
	tab_main.tabpage_carrier.cb_export_to_carrier.Enabled = False
End If

// We're only going to actually retrieve any default values if the carrier tab is selected

If ibCarrierSelected Then /*set in tab changing event of tab main*/

	//we only need to load if we haven't loaded before or the carrier has changed since the last time we loaded
	If idw_carrier.RowCount()	<= 0 Then
		lbSetDw = True
	Else
		If idw_carrier.GetItemString(1,'code_Type') <> idw_main.GetItemString(1,'carrier') Then
			lbSetDw = True
		End If
	End If
	
	If lbSetDW Then /* Load the proper DW for this carrier*/
	
		Choose Case Upper(idw_main.GetItemString(1,'carrier'))
			Case 'FEDEX'
				idw_carrier.visible = true
				idw_carrier.Dataobject = 'd_carrier_default_fedex'
				idw_carrier.setTransObject(SQLCA)
				idw_Carrier.Retrieve(gs_Project)
			Case 'UPS'
				idw_carrier.visible = true
				idw_carrier.Dataobject = 'd_carrier_default_ups'
				idw_carrier.setTransObject(SQLCA)
				idw_Carrier.Retrieve(gs_Project)
			Case else
				idw_carrier.visible = false
				//idw_carrier.Dataobject = 'd_lookup_default'
				//idw_carrier.setTransObject(SQLCA)
				//idw_Carrier.Retrieve(gs_Project)
		End Choose
		
		tab_main.tabpage_carrier.cb_save_carrier_defaults.Enabled = False
		
	End If /*load Carrier DW */

	ibCarrierSelected = False

End If

end event

event ue_carrier_labels;
//Print a carrier label for 'EACH' - depending on the carrier. 
//We will use one label format for all carriers and hide/show fields as appropriate. This will allow us to print the labels
//in the same order as the Pick List

// 11/02 - Pconkl - Leave llUnitQty as Long since we can only loop in hole numbers

Long ll_cnt, i, j, llRow, llUnitQty, llLineItemNo,llFindCount, llRC
Decimal	ld_weight
String ls_address,lsfind
String ls_sku , ls_description, ls_supplier, lsTransportMode, lsInvoiceNO
String ls_inventory_type_desc,ls_etom
String	lsaddr1,lsaddr2,lsaddr3,lsaddr4,lscity,lsstate,lszip,lscountry,lsname

SetPointer(HourGlass!)
If idw_pack.AcceptText() = -1 Then
	Return 
End If

If ib_changed then /* we want to make sure the validation routine is run before printing*/
	Messagebox(is_title,'Please save changes before printing Carrier Labels.')
	Return
End If

//No row means no Print
ll_cnt = idw_pack.rowcount()
If ll_cnt = 0 Then
	MessageBox(is_title," No labels to print!")
	Return
End If

//Clear the Report Window (hidden datawindow)
idw_packLabels.Reset()

idw_packlabels.SetRedraw(False)

// 07/00 PCONKL - Get The Ship from info from the Project Table
Select Client_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country
Into	:lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry
From Project
Where Project_id = :gs_project
Using Sqlca;


//Loop through each row in Tab pages and grab the coresponding info
For i = 1 to ll_cnt
	
	ls_sku = idw_pack.getitemstring(i,"sku")
	lsInvoiceNO = idw_main.getitemstring(1,"Invoice_no")
	ls_supplier = idw_pack.getitemstring(i,"supp_code")
	llLineItemNo = idw_pack.GetITemNumber(i,'line_item_no')

	//Get SKU, Description and Quantities  04/05/00 PCONKL - include user field5 as pdc_whse_loc
	// 02/02 - PConkl - include hazardous text cd
		
	select description, weight_1
	into :ls_description, :ld_weight
	from item_master 
	where project_id = :gs_project and sku = :ls_sku and supp_code = :ls_supplier ;
		
	ls_description = trim(ls_description)
	
	lsTransPortMode= idw_main.GetITemString(1,'transport_Mode') /* used for printing haz mat info*/
			
	//Set all Items on the Report by grabbing info from tab pages
	
	//For Saltillo, Print a label for each unit (loop for qty)
	If Upper(Left(gs_project,4)) = 'GM_M'  Then
		llUnitQty = idw_pack.getitemNumber(i,"quantity")
	Else
		llUnitQty = 1 /*only one label per pack row*/
	End If
	
	For llRow = 1 to llUnitQty
			
		j = idw_packLabels.InsertRow(0)
	
		idw_packLabels.setitem(j,"invoice_no",idw_main.getitemString(1,"invoice_no"))
		idw_packLabels.setitem(j,"freight_terms",idw_main.getitemString(1,"freight_terms"))	
		idw_packLabels.setitem(j,"cust_code",idw_main.getitemString(1,"cust_code")) 
		idw_packLabels.setitem(j,"city",idw_main.getitemString(1,"city"))
		idw_packLabels.setitem(j,"country",idw_main.getitemString(1,"country"))
		idw_packLabels.setitem(j,"ord_date",idw_main.getitemDateTime(1,"ord_date"))
		idw_packLabels.setitem(j,"complete_date",idw_main.getitemDateTime(1,"complete_date"))
		idw_packLabels.setitem(j,"sku",ls_sku)
		idw_packLabels.setitem(j,"description",ls_description)
		idw_packLabels.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_net")) /*take from displayed pask list instead of DB*/
		idw_packLabels.setitem(j,"weight",idw_pack.getitemDecimal(i,"weight_gross"))
		idw_packLabels.setitem(j,"standard_of_measure",idw_pack.getitemString(i,"standard_of_measure"))
		idw_packLabels.setitem(j,"carrier",idw_main.getitemString(1,"carrier"))
		idw_packLabels.setitem(j,"ship_via",idw_main.getitemString(1,"ship_via"))
		idw_packLabels.setitem(j,"sch_cd",idw_main.getitemString(1,"user_field1")) 
		idw_packLabels.setitem(j,"awb_bol_nbr",idw_main.getitemString(1,"awb_bol_no"))
		idw_packLabels.setitem(j,"shipping_instructions",idw_main.getitemString(1,"shipping_instructions"))
		idw_packLabels.setitem(j,"ship_ref",idw_main.getitemString(1,"ship_ref"))
	
		idw_packLabels.setitem(j,"project_id",gs_project) /* 12/01 PCONKL */
	
		//For English to Metrtics changes added L or K based on E or M
		ls_etom=idw_packLabels.getitemString(j,"standard_of_measure")
	
		idw_packLabels.setitem(j,"picked_quantity",idw_pack.getitemNumber(i,"quantity")) 
		idw_packLabels.setitem(j,"volume",idw_pack.getitemDecimal(i,"cbm")) 
		If idw_pack.getitemDecimal(i,"cbm") > 0 Then
			idw_packLabels.setitem(j,'dimensions',string(idw_pack.getitemDecimal(i,"length")) + ' x ' + string(idw_pack.getitemDecimal(i,"width")) + ' x ' + string(idw_pack.getitemDecimal(i,"height"))) /* 02/01 - PCONKL*/
		End If

//		idw_packLabels.setitem(j,"component_ind",idw_pack.getitemstring(i,"component_ind")) /* 02/01 - PCONKL - sort component master to top*/
		
		idw_packLabels.setitem(j,"cust_name",idw_main.getitemString(1,"cust_name"))
		idw_packLabels.setitem(j,"delivery_address1",idw_main.getitemString(1,"address_1"))
		idw_packLabels.setitem(j,"delivery_address2",idw_main.getitemString(1,"address_2"))
		idw_packLabels.setitem(j,"delivery_address3",idw_main.getitemString(1,"address_3"))
		idw_packLabels.setitem(j,"delivery_address4",idw_main.getitemString(1,"address_4"))
		idw_packLabels.setitem(j,"delivery_state",idw_main.getitemString(1,"state"))
		idw_packLabels.setitem(j,"delivery_zip",idw_main.getitemString(1,"zip"))
		
		// 07/00 PCONKL - Ship from info is coming from Project Table
		idw_packLabels.setitem(j,"ship_from_name",lsName)
		idw_packLabels.setitem(j,"ship_from_address1",lsaddr1)
		idw_packLabels.setitem(j,"ship_from_address2",lsaddr2)
		idw_packLabels.setitem(j,"ship_from_address3",lsaddr3)
		idw_packLabels.setitem(j,"ship_from_address4",lsaddr4)
		idw_packLabels.setitem(j,"ship_from_city",lsCity)
		idw_packLabels.setitem(j,"ship_from_state",lsstate)
		idw_packLabels.setitem(j,"ship_from_zip",lszip)
		idw_packLabels.setitem(j,"ship_from_country",lscountry)
		
		idw_packLabels.setitem(j,"piece_count",'Piece ' + String(llRow) + ' of ' + String(llUnitQty))
		
		//Computed Tracking No - update to DElivery mAster as well
		idw_packLabels.setitem(j,"carrier_tracking_no",'12345678')
				
	Next /*Label for each unit (QTY Loop*/
	
Next /*Packing Row */

//Send the report to the Print report window
idw_packLabels.Sort()
idw_packLabels.GroupCalc()

idw_packlabels.SetRedraw(True)

If idw_packlabels.RowCount() > 0 Then
	OpenWithParm(w_dw_print_options,idw_packLabels) 
Else
	Messagebox(is_title,'No Labels to Print.')
End If

end event

event ue_create_workorder();// 11/02 - PCOnkl - Change QTY fields to Decimal

Long	llRowPos, llRowCOunt, llCount, llWONO,	llLineITemNo, llOwner, llFindRow
		
Decimal	ldReqQty

String	lsWONO, lsOrder, lsInvoiceNo,	lsWarehouse, lsSKU, 	lsSUpplier, lsErrText, lsDONO
			
Boolean	lbCreateWO, lbWOEligible

DateTime	ldtToday

// pvh 02.15.06 - gmt
if idw_main.rowcount() > 0 then
	ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 
else
	ldtToday = f_getLocalWorldTime( gs_default_wh )
end if
//ldtToday = DateTime(today(),Now())

llLineItemNo = 0


// 09/02 - Pconkl - If any of items that weren't picked in full are components, 
// we can create a work order to create the remaining components from the children

// 08/04 - PCONKL - We may now be blowing out components on the DO Pick List instead of creating a workorder
//							this is based on the Component Type field on the Item MAster

llRowCount = idw_detail.RowCount()
For llRowPos = 1 to llRowCount
	
	If idw_detail.GetITemNUmber(llRowPos,'alloc_qty') < idw_detail.GetITemNUmber(llRowPos,'req_qty') Then /*not all allocated*/
	
		// 11/03 - PCONKL - If the Pick Row doesn't exist, check the Item Master
		llFindRow = idw_pick.Find("Upper(SKU) = '" + Upper(idw_detail.GetITemString(llRowPos,'sku')) + "'",1,idw_pick.RowCOunt()) 
		If llFindRow > 0 Then 
			
			If idw_Pick.GetITemString(llFindRow,'component_ind') = 'Y' and (idw_Pick.GetITemString(llFindRow,'component_Type') = 'W' or isnull(idw_Pick.GetITemString(llFindRow,'component_Type'))) Then
				lbWOEligible = True /*eligible to create a WO*/
			End If
			
		Else /* No Pick Row for this SKU, get Component Ind from ITem Master */
			
			lsSKU = idw_detail.GetITemString(llRowPos,'SKU')
			lsSupplier = idw_detail.GetITemString(llRowPos,'Supp_code')
			
			SElect Count(*) into :llCount
			FRom ITem_MAster
			Where Project_ID = :gs_project and sku = :lsSKU and supp_code = :lsSupplier and component_ind = 'Y';
			
			If lLCount > 0 Then lbWOEligible = True /*eligible to create a WO*/
			
		End If /* Pick Row Found */
		
		If lbWOEligible Then
			
			If Messagebox(is_title,'One or more Component Items were not picked in full.~r~rWould you like to create a Work Order for the remaining items?',Question!,YesNo!,1) = 1 Then
				lbCreateWO = True
			End If
			Exit
			
		End If /*WO Eligible*/
		
	End If /*Not all allocated*/
	
Next /*Detail Row*/

If lbCreateWO Then
	
	lsDONO = idw_main.GetITemString(1,'do_no') /* 11/03 - PCONKL - need 1 to 1 relationship between DO and WO */
	lsInvoiceNO = idw_main.GEtITemString(1,'invoice_no')
	
	//See if we already have a workorder for this Delivery Order, If so, we can only update if in New Status (Not picked or putaway)
	// 11/03 - PCONKL - search by do_no instead of Invoice_no - need to maintain 1 to 1 between WO and DO
		
	Select Count(*) Into :llCOunt
	From WorkOrder_Master
	//where Project_id = :gs_project and Do_No = :lsDoNO;
	where Project_id = :gs_project and Do_No = :lsDoNO and ord_type <> 'P'; /* 02/06 - PCONKL - ord_type = 'P' is packaging created from Receive Order*/

	
	If llCount > 0 Then
		MessageBox(is_title,'There is already a Work Order created for this Delivery Order.~rYou will need to update it manually.')
	Else
	
		//Create the Work ORder Header
		
		//Next ID
		llWOno = g.of_next_db_seq(gs_project,'WorkOrder_Master','WO_No')
		If llWOno <= 0 Then
			messagebox(is_title,"Unable to retrieve the next available order Number!")
			Return 
		End If
	
		lsWONO = Trim(Left(gs_project,9)) + String(llWOno,"0000000")
		lsORder = Right(lsWONO,7)
		lsWarehouse = idw_main.GetITemString(1,'wh_code')
				
		Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/

		Insert into Workorder_MAster (wo_no, project_id, ord_type, ord_date, Delivery_Invoice_NO, workorder_number, ord_status, wh_code, priority, do_no, last_user, last_Update)
								Values (:lsWONO, :gs_project, "O", :ldtToday, :lsInvoiceNo, :lsOrder, "N", :lsWarehouse, 1, :lsDONO, :gs_userid, :ldtToday)
		Using SQLCA;			
		
		If sqlca.sqlcode <> 0 Then
			lsErrText = sqlca.sqlerrtext /*text will be lost after rollback*/
			Execute Immediate "ROLLBACK" using SQLCA;
			Messagebox(is_title,"Unable to create new WorkOrder MASTER record.!~r~r" + lsErrText)
			Return
		End If
	
		For llRowPos = 1 to llRowCount /*Each Detail*/
			
			lsSKU = idw_detail.GetITemString(llRowPos,'SKU')
						
			If idw_detail.GetITemNUmber(llRowPos,'alloc_qty') < idw_detail.GetITemNUmber(llRowPos,'req_qty') Then /*not all allocated*/
				If idw_pick.Find("Upper(SKU) = '" + Upper(lsSKU) + "' and component_ind = 'Y'",1,idw_pick.RowCOunt()) > 0 Then
				
					//Insert a WorkOrder Detail Record
					llLineITemNo ++
					
					lsSupplier = idw_detail.GetITemString(llRowPos,'Supp_code')
					llOwner = idw_detail.GetITemNumber(llRowPos,'owner_id')
					llLineITemNo = idw_detail.GetITemNumber(llRowPos,'line_item_no')
					ldReqQty = idw_detail.GetITemNumber(llRowPos,'req_qty') - idw_detail.GetITemNumber(llRowPos,'alloc_qty')
					
					Insert Into workorder_Detail (wo_no, line_item_no, SKU, supp_code, Owner_ID, SKU_Parent, Component_ind, Req_qty, Alloc_Qty)
					Values								(:lsWONO, :llLineITemNo, :lsSKU, :lsSUpplier, :llOwner, :lsSKU, "Y", :ldReqQty, 0)
					Using SQLCA;
					
					If sqlca.sqlcode <> 0 Then
						lsErrText = sqlca.sqlerrtext /*text will be lost after rollback*/
						Execute Immediate "ROLLBACK" using SQLCA;
						Messagebox(is_title,"Unable to create new WorkOrder DETAIL record.!~r~r" + lsErrText)
						Return
					End If
				
				End If /*component*/
			End If /*Not all allocated*/
			
		Next /*Detail Row*/
		
		Execute Immediate "COMMIT" using SQLCA;
		If sqlca.sqlcode <> 0 Then
			//Jxlim 09/10/2010 Added Rollback to prevent block/lock
               Execute Immediate "ROLLBACK" using SQLCA;
			MessageBox(is_title,"Unable to Commit changes! No changes made to Database!")
			Return 
		End If
		
		Messagebox(is_title, "Workorder #: " + lsOrder + " has been created.")
		
	End If /*doesn't already exist*/
End If /*work order requested*/

end event

event ue_process_shipments();u_nvo_shipments	lu_Shipments
String	lsShipNo
Str_parms	lstrParms
integer liRtn

lu_shipments = Create u_nvo_Shipments

//Validate that necessary fields are present before creating/Updating Shipment
//message is in validate function
liRtn = lu_shipments.uf_validate_outbound(idw_Main, idw_Pack) 
if liRtn < 0 then 
	if liRtn = -2 then
		//Enabling ship-to address so they can get out of catch 22 (need a zip but can't enter one)
		tab_main.tabpage_main.tab_address.tabpage_shipto.dw_ShipTo.Enabled = True
	end if
	return 
end if
If ib_changed Then
	messagebox(is_title,'Please save changes first!',StopSign!)
	return
End If
lsShipNo = lu_shipments.uf_create_outbound_Shipment(idw_main, idw_Detail, idw_Pack)

If lsShipNo <> "-1" Then
	if isvalid(w_shipments) then
		messagebox(is_title, "The shipments window is already open. Use 'Search' to open desired shipment.")
	end if
	lstrparms.String_Arg[1] = lsShipNo
	OpenSheetwithparm(w_shipments,lStrparms, w_main, gi_menu_pos, Original!)
End If

end event

event ue_update_serial_id();
//Re-map ID NO from old delivery_Picking_detail to New on Delivery_Serial records

String	lsDONO
Long	llArrayCount, llArrayPos, llNewID, llFindRow, llRowCount, llRC

lsDONO = idw_Main.GetITemString(1,'do_no')

llArrayCount = UpperBound(isSerialSKU[])
llRowCount = idw_serial.RowCount()

//For each old delivery Picking, get the new ID and update Serial DW
For llArrayPos = 1 to llArrayCount
	
	Select Min(id_NO) into :llNewID
	FRom Delivery_Picking_Detail
	Where do_no = :lsDONO and Line_Item_no = :ilSerialLine[llArrayPos] and Sku = :isSerialSKU[llarrayPos];
	
	If llNewID > 0 Then
		
		//Update any DElivery_Serial Rows with new ID
		llFindRow = idw_serial.Find("id_no = " + String(ilSerialID[llArrayPos]),1,llRowCount)
		Do While llFindRow > 0 
		
			idw_serial.SetItem(llFindRow,'id_no',llNewID)
			
			llFindRow ++
			If llFindRow > llRowCount Then Exit
			llFindRow = idw_serial.Find("id_no = " + String(ilSerialID[llArrayPos]),llFindRow,llRowCount)
		
		Loop
		
	End If

Next

//Save changes to Serial DW
Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
llRC = tab_main.tabpage_serial.dw_serial.Update()
If llRC = 1 Then
	Execute Immediate "COMMIT" using SQLCA;
Else
	Execute Immediate "ROLLBACK" using SQLCA;
End If

ibserialsupdated = False
end event

event ue_notes();Str_parms	lstrParms

lstrparms.String_Arg[1] = gs_project
lstrparms.String_Arg[2] = is_dono
lstrParms.String_arg[3] = Trim( tab_main.tabpage_main.sle_order.text )
Openwithparm(w_do_notes, lStrparms)

end event

event ue_generate_pick_server();//Pick list generated from Websphere



Long ll_row, ll_cnt,i, llRowCount, llRowPos, llBatchPickID, ll_owner_id
string ls_sku,	lsMsg, lsXML, lsXMLResponse, lsReturnCode, lsReturnDesc, lsCrap, lsCrap2, lssku, lssupplier, lsownername, ls_inactivecustomername, lsPickSort
String lsOrderType
Boolean	lbKeepBatch, lbEdgePackaging
Integer	liMsg, liFileNo, li_idx, liPos, liRet
str_parms	lstrparms, lstrNull
Long	ll_method_trace_id
DatawindowChild	ldwc

String lsOrigSQL, lsWhere, lsNewSQL		//883

//TimA 09/19/12 Pandora issue #471
String ls_QA_Check_Ind
Long ll_QACount, ll_QA_HRI_Count
String ls_List_of_Skus, ls_sku_or_skus,ls_Get_sku 

//GailM 06/18/2018 S19742 Special Packaging
String lsSpPackSKU[], lsSpPackMsg, lsSpPackMsgAll
Long llSpPackCount = 0

//TimA Pandora #476
String lsDONO
Long llNotesCount, llNotesPos

//TimA 11/13/13 Pandora issue #637
String lsPickPONO2
Long llPickRowCount, llModifiedCount, llDeleteCount,llPickCount
dwItemStatus l_status
Boolean lbLPN
String lsFind
Long llLineItemNo, k, ll_found_row,liRC
String ls_commodity, ls_Supp_Code

If idw_main.AcceptText() = -1 Then 
	tab_main.SelectTab(1) 
	idw_main.SetFocus()
	return 
End If

If idw_other.AcceptText() = -1 Then 
	tab_main.SelectTab(2) 
	idw_main.SetFocus()
	return 
End If

If idw_detail.AcceptText() = -1 Then 
	tab_main.SelectTab(3) 
	idw_detail.SetFocus()
	return 
End If

If idw_pick.AcceptText() = -1 Then
	tab_main.SelectTab(4) 
	idw_pick.SetFocus()
	return 
End If

//TimA 11/12/13 Pandora issue #637 check to see if this a LPN Sku
//GailM 6/25/2017 S20849 F8117 I1026 Google - SIMS - Footprints - Movements of partial containers -  Enabled to allow Footprint GPNs
lbLPN = false 		//Is this an LPN sku?
If ib_LPN_PickByPallet = False then //Don't check this if we already identified it is LPN
	If idw_detail.rowcount( ) = 1 then
		lsSku =  idw_detail.GetItemString(1,"SKU")
		if gs_Project = 'PANDORA' then		//LPN Pandora only
			select count(*) into :liRC
			from item_master
			where project_id  ='PANDORA'
			and serialized_ind = 'B' and po_no2_controlled_ind = 'Y' 
			and container_tracking_ind = 'Y'  and sku = :lsSku;
			if liRC > 0  then
				lbLPN = true
				ib_LPN_PickByPallet = True
			end if
		end if
	End if
End if
//TAM 01/2018 - S14838 - Skip this validation-
//TimA 11/11/13 #637 New LPN Picking by pallet
lsPickPONO2 = tab_main.tabpage_pick.sle_palletno.text

If isnull(lsPickPONO2 ) or lsPickPONO2 = '' then
	//GailM 6/25/2017 S20849 F8117 I1026 Google If pallet was not entered, do generic
	//	If lbLPN = True then
	//		MessageBox(is_title, "LPN Orders need to be picked by pallet")
	//		Return
	//	End if
	//	lsPickPONO2 = ''
else

	ib_LPN_PickByPallet = True //Note this only gets set to false when the order is retrieved again
	llModifiedCount = idw_pick.modifiedcount( )
	If llModifiedCount > 0 then
		MessageBox(is_title, "Please save your changes after each pallet pick.")
		Return
	End if
		//tab_main.tabpage_pick.sle_palletno.setfocus( )
		//tab_main.tabpage_pick.sle_palletno.SelectText(1,Len(tab_main.tabpage_pick.sle_palletno.Text))
		for i = 1 to idw_pick.RowCount()
			llPickCount = tab_main.tabpage_pick.dw_pick.RowCount()
			SetMicroHelp("Checking duplicate pallets " + String(i) + " of " + String(llPickCount))
			lsFind = " po_no2 = '" + lsPickPONO2  + "'"
			ll_found_row = idw_pick.Find(lsFind, 1, i )
			if ll_found_row > 0 then
				MessageBox(is_title, "This Pallet has already been picked in this order")
				Return
			End if
		Next
		//Clear the sle after the pallet number has been captured
		tab_main.tabpage_pick.sle_palletno.text = ''
End if


// ET3 2012-12-06 Pandora emergency implementation for embargoed countries
// ET3 2012-12-17 Extended to baseline and generalized function
string ls_embargoed, ls_country
ls_country = UPPER(TRIM( tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.getitemstring(1,'country')))

IF wf_embargoed_country_check( ls_country, TRUE ) THEN
	// shipping to this country is embargoed - for now prevent pick
	return
END IF


// cawikholm 07/05/11 Added call to track user 
SetNull( ll_method_trace_id )
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Start ue_generate_pick_server: ' + is_dono ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'Start ue_generate_pick_server:' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

// 05/02 PCONKL - If this Order is being batch Picked, changing the list here will have an effect on the batch - give option to keep in Batch
llBatchPickID = idw_main.GetITemNumber(1,'batch_pick_id')
lbKeepBatch = False
If llBatchPickID > 0 Then
	lsMsg = 'This order is currently setup to be Batch Picked (Batch Pick ID # ' + string(llBatchPickID) +  ').~rAny changes made here will affect the batch.~r~r'
	lsMsg += 'Would you like to leave this order on this Batch?~r~r'
	lsMsg += "'Yes'    - Keep order on Batch~r"
	lsMsg += "'No'     - Remove Order from Batch~r"
	lsMsg += "'Cancel' - No changes to Pick List"
	liMsg = MessageBox(is_title,lsMsg,Question!,yesNoCancel!,1)
	Choose Case liMsg
		Case 1 /*yes*/
			lbKeepBatch = True /*we will reassign the Batch Pick ID after regenerating*/
		CAse 2 /*No*/
			lbKeepBatch = False
			idw_Main.SetITem(1,'batch_Pick_id',0) /*remove the master from the batch*/
		Case Else /*cancel*/
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server ' + lsMsg + ' Choose Cancel Batch Pick' ) //08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server ' + lsMsg + ' Choose Cancel Batch Pick' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
			REturn
	End CHoose
End If /*setup for batch Picking*/

If idw_pick.RowCount() > 0 and lsPickPONO2 = '' Then 
	//TimA 11/13/13 Pandora issue #637
	If ib_LPN_PickByPallet = True then
			If MessageBox(is_title, "There are Manually picked pallets on this order.  Clicking generate now will DELETE ALL! the current picking rows.  ARE YOU SURE?", Question!, YesNo!,2) = 2 then
				Return
			End if
	End if
	Choose Case MessageBox(is_title, "Delete existing records?", Question!, YesNo!,2)
		Case 2
			//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server ' + ' - Delete existing records ' + ' Choose No' ) //08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server ' + ' - Delete existing records ' + ' Choose No' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
			ibEscape = TRUE
			Return
		Case 1
			SetPointer(HourGlass!)
			idw_pick.SetRedraw(False)
			
			idw_pick.SetFilter('')
			idw_pick.Filter()

			ll_cnt = idw_pick.RowCount()
			For ll_row = ll_cnt to 1 Step -1
				idw_pick.DeleteRow(ll_row)
			Next
			ib_changed = True
			idw_pick.SetRedraw(True)
			
			// 01/01 PCONKL - Clear any outbound serial #'s
			tab_main.tabpage_serial.dw_serial.Reset()
			
			If iw_window.Trigger Event ue_save() = -1 Then Return
	End Choose
End If

If ib_changed Then
	messagebox(is_title,'Please save changes before generating Pick list!')
	//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server ' + 'Please save changes before generating Pick list!' ) //08-Feb-2013  :Madhu commented
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server ' + 'Please save changes before generating Pick list!' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
	return
End If

//3/10 JAyres Check to see if Customer is Active
If gs_project = 'PANDORA' then
	
	FOR li_idx = 1 to idw_detail.RowCount()
		
		
		ll_Owner_ID = idw_detail.GetItemNumber(li_idx, "owner_id")
		lsOwnername = idw_detail.GetItemString(li_idx,"cf_owner_name")
		ls_INActiveCustomerName = '' 
		 		
		
		If Right(Trim(lsOwnername), 3) = '(C)' Then
			
			Select Distinct dbo.Customer.Cust_Name
			Into    	:ls_INActiveCustomerName
			FROM 	dbo.Owner,
		         		dbo.Customer
			Where 	dbo.Owner.Project_ID 		= dbo.Customer.Project_ID
			and    	dbo.Owner.owner_cd			= dbo.Customer.Cust_Code
			and 		dbo.Owner.Owner_ID 		= :ll_Owner_ID 
	    		and 		dbo.Customer.Customer_Type 	= 'IN' 
			and 		dbo.Owner.Project_ID 		= :gs_project;
	
			If NOT ( ls_INActiveCustomerName= '' or IsNULL( ls_INActiveCustomerName) ) Then
				If IsNull( lsOwnername  ) then  lsOwnername = ''
				MessageBox(is_title, "Owner Name: "+   lsOwnername + " is INACTIVE at Row "+string(li_idx) +" of Order Detail.~r~rPlease Enter an Active Owner then Regenerate." )	
				//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server ' + "Owner Name: "+   lsOwnername + " is INACTIVE at Row "+string(li_idx) +" of Order Detail. Please Enter an Active Owner then Regenerate." ) //08-Feb-2013  :Madhu commented
				f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server ' + "Owner Name: "+   lsOwnername + " is INACTIVE at Row "+string(li_idx) +" of Order Detail. Please Enter an Active Owner then Regenerate." ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
				return
		
			End If
			
		End If
	Next
	
End If

// pvh - 11/21/06 - because we did a generate...calc allocatted qty
setCalcAllocated( true )

tab_main.SelectTab(4) 
idw_detail.Sort()
//idw_pick.SetRedraw(False)

//31-May-2016 :Madhu- added to prevent AIR carrier for Dangerous goods -START
	If g.ibpreventaircarrierforhazardous Then
		If wf_check_carrier_dangerous_goods() = -1 Then
			MessageBox(is_title,"Dangerous goods# "+ is_dangerous_item +" is restricted to ship via AIR Carrier. ~n~rPlease select a different Carrier.")
			tab_main.SelectTab(2) 
			idw_other.SetColumn("carrier")
			idw_other.SetFocus()
			SetMicroHelp("Save failed!")
			Return
		End If
	End If
//31-May-2016 :Madhu- added to prevent AIR carrier for Dangerous goods -END

// 04/16  PCONKL - Added option to override default pick sort order
lsPickSort = idw_Main.GetITemString(1,'Pick_Sort_Order')
If lsPickSort = 'PROJECT' or lsPickSort = "" or isnull(lsPickSort) Then /*use Project Level Sort Order*/
	If g.is_pick_sort_order > ' ' Then
		lsPickSort = g.is_pick_sort_order
	Else
		lsPickSort = "Complete_Date A"
	End If
End If 

// 11/05 - PCONKL - Building Pick List from Websphere now
iuoWebsphere = CREATE u_nvo_websphere_post
linit = Create Inet
lsXML = iuoWebsphere.uf_request_header("DOPickRequest", "ProjectID='" + gs_Project + "'" +  " pono2='" + lsPickPONO2 + "'" + " PickSortOrder = '" + lsPickSort + "'" )
//lsXML = iuoWebsphere.uf_request_header("DOPickRequest", "ProjectID='" + gs_Project + "' PickSortOrder='" + lsPickSort + "'")
lsXML += 	'<DONO>' + idw_main.GetITemstring(1,'do_no') +  '</DONO>' 
lsXML = iuoWebsphere.uf_request_footer(lsXML)

//Messagebox("",lsXML)

w_main.setMicroHelp("Generating Pick List on Application server...")

lsXMLResponse = iuoWebsphere.uf_post_url(lsXML)

//TimA 11/07/12 Get the DoNo Pandora #476
lsDONO = idw_main.GetITemstring(1,'do_no')

//Debug - write XML to File
//integer iFileNo
//lsCrap = lsXMLResponse
//iFileNo = FileOPen("C:\Temp\Crap.txt",StreamMode!,Write!,LockReadWrite!,Replace!)
//
//If Len(lsCrap) > 32765 Then
//	Do While Len(lsCrap) > 0
//		lsCrap2 = Left(lsCrap,32765)
//		FileWrite(liFileNo,lsCrap2)
//		lsCrap = Right(lsCrap,(Len(lsCrap) - Len(lsCrap2)))
//	Loop
//Else
//	FileWrite(liFileNo,lsCrap)
//End If
//
//FileClose(liFileNo)

w_main.setMicroHelp("Pick List generation complete")

//Check for Valid Return...
//If we didn't receive an XML back, there is a fatal exception error
If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
	Messagebox("Websphere Fatal Exception Error","Unable to generate Pick List: ~r~r" + lsXMLResponse,StopSign!)
	//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server ' + "Websphere Fatal Exception Error - Unable to generate Pick List:" ) //08-Feb-2013  :Madhu commented
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server ' + "Websphere Fatal Exception Error - Unable to generate Pick List:" ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
	Return 
End If

//Check the return code and return description for any trapped errors
lsReturnCode = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"returncode")
lsReturnDesc = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"errormessage")

Choose Case lsReturnCode
		
	Case "-99" /* Websphere non fatal exception error*/
		
		Messagebox("Websphere Operational Exception Error","Unable to generate Pick List: ~r~r" + lsReturnDesc,StopSign!)
		//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server ' + "Websphere Operational Exception Error - Unable to generate Pick List:" ) //08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server ' + "Websphere Operational Exception Error - Unable to generate Pick List:" ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
		Return 
	
	Case Else
		
		If lsReturnDesc > '' Then
			Messagebox("",lsReturnDesc)
		End If
			
End Choose

//import XML into DW
If pos(Upper(lsXMLResponse),"DOPICKRECORD") > 0 Then
	idw_Pick.modify("datawindow.import.xml.usetemplate='dopickresponse'")
	idw_Pick.ImportString(xml!,lsXMLResponse)
	ib_changed = True
Else
	messageBox(is_title, 'No pick rows were generated')
End If

idw_pick.SetRedraw(True)

////JXLIM 11/19/2012 Pandora FWD Pick BRD #464 Prompted message for auto stcok transfer order when the order is pick and save.  Should the message go to after saving ..... moved to ue_save for now
//If   Upper(gs_project) ='PANDORA' Then
//	MessageBox('Auto Stock Transfer', 'SIMS has auto created the FWD Pick stock transfer orders')
//End If

// 05/02 - Pconkl - If we are keeping it in the batch, update with batch Pick ID
If lbKeepbatch Then
	llRowCOunt = idw_pick.RowCount()
	llBatchPickID = idw_main.GetITemNumber(1,'batch_pick_id')
	For llRowPos = 1 to llRowCount
		idw_Pick.SetITem(llRowPos,'Batch_pick_id',llBatchPickID)
	Next
End If

//Notify users of shortages...
If pos(lsXMLResponse,'DOPickShort') > 0 Then
	lstrparms.String_arg[1] = lsXMLResponse
	OpenWithParm(w_pick_exception,lstrparms)
End If
	
idw_pick.Sort()
idw_pick.GroupCalc()

// 11/02 - PCOnkl - Hide or show lot, po, etc. if necessary
idw_Pick.TriggerEvent('ue_hide_unused')

//Enable serial tab if there are any outbound serial # required
tab_main.tabpage_serial.Enabled = False
tab_main.tabpage_pick.cbx_show_comp.Enabled = False

llRowCOunt = idw_pick.RowCount()
If llRowCount > 0 Then
	For llRowPos = 1 to llRowCount
		//TimA 09/18/12 Pandora issue #471
		If upper(gs_project) = 'PANDORA' then
			ls_Get_sku = idw_pick.GetItemString(llRowPos, 'sku')
			ls_QA_Check_Ind = idw_pick.GetItemString(llRowPos, 'qa_check_ind')	
			ls_Supp_Code = idw_pick.GetItemString(llRowPos,"supp_code")	
			If Not Isnull(ls_QA_Check_Ind) or ls_QA_Check_Ind <> "" Then
				If ls_QA_Check_Ind = 'M' Then
					ll_QACount ++
					//Only list 20 GPN's
					If ll_QACount < 20 then
						ls_List_of_Skus  +=  ls_Get_sku + '~r'				
					End if
				ElseIf ls_QA_Check_Ind = 'H' Then
					ll_QA_HRI_Count ++
				End if
			End if
		End If
		
		SELECT User_Field5
				INTO :ls_commodity
				FROM Item_Master with (noLock)
				WHERE Project_id = :gs_project and
						SKU = :ls_Get_sku and
						supp_code = :ls_Supp_Code
				Using SQLCA;
		If pos (Upper(is_BoxIDLookup ),  ',' + ls_commodity + ',', 1 ) > 0 then
		//If ls_commodity = 'HD' Then
			idw_pick.Setitem(llRowPos,'user_field5',ls_commodity )
			//idw_pick.Setitem(llRowPos,'user_field5','HD')
		End if
		If idw_pick.GetItemString(llRowPos,'serialized_ind') = 'O' or idw_pick.GetItemString(llRowPos,'serialized_ind') = 'B' Then /* 02/09- PCONKL - Added type of B (IB and OB capture) */
			tab_main.tabpage_serial.Enabled = True
			Exit
		End If
	Next
End If

//GailM 8//18/2014 - Pandora Issue 883 - DejaVu ContainerID will use Serial# tab to scan containerIDs
If UPPER(gs_project) = 'PANDORA' and ibDejaVu then
	// Are there any containerIDs?
	lsFind = " NOT isnull(container_id) and container_id <> '' and container_id <> '-'"
	ll_found_row = idw_pick.Find(lsFind, 1, idw_pick.RowCount())
	if ll_found_row > 0 Then
		if NOT isvalid(idsEdiContainers) Then
			idsEdiContainers = Create datastore
		end if
		idsEdiContainers.reset()
		idsEdiContainers.dataobject = "d_edi_batch_trans_out_detail"
		idsEdiContainers.SetTransObject(SQLCA)
		lsOrigSQL = idsEdiContainers.GetSQLSelect()
		lsWhere = " where dbo.EDI_Outbound_Detail.Project_ID = '" + gs_Project + "'" 	/*always tackon project */ 
		lsWhere += " and dbo.EDI_Outbound_Detail.EDI_Batch_Seq_No = " + String(idw_main.GetItemNumber(1,'Edi_Batch_Seq_No') )
		lsWhere += " and container_id IS NOT NULL and container_id <> '' and container_id <> '-' "
		lsNewSQL = lsOrigSql + lsWhere
		
		idsEdiContainers.SetSqlSelect(lsNewSQL)
		idsEdiContainers.Retrieve()
		If idsEdiContainers.RowCount() > 0 Then
			if f_retrieve_parm("PANDORA", "FLAG", "VALIDATE_DEJAVU_DOCONFIRM") = 'Y' then
				ibDejaVu = true
				
				tab_main.tabpage_serial.enabled = true
				tab_main.tabpage_serial.cb_generate_ob_serial.enabled = true
				tab_main.tabpage_serial.cb_undo.enabled = true
				tab_main.tabpage_serial.cb_ob_serial_insert.enabled = true
				tab_main.tabpage_serial.cb_ob_serial_delete.enabled = true
			else
				ibDejaVu = false
			end if
		End If
	End If
End If

//TAM 2014/09/19 - HONDA-TH  - Used DejaVu indicator to Valide PONO(Pallet ID.  For Pandora they use Container ID.
If UPPER(gs_project) = 'HONDA-TH' and ibDejaVu then
	// Are there any containerIDs?
	lsFind = " NOT isnull(po_no) and po_no <> '' and po_no <> '-'"
	ll_found_row = idw_pick.Find(lsFind, 1, idw_pick.RowCount())
	if ll_found_row > 0 Then
		if NOT isvalid(idsEdiContainers) Then
			idsEdiContainers = Create datastore
		end if
		idsEdiContainers.reset()
		idsEdiContainers.dataobject = "d_edi_batch_trans_out_detail"
		idsEdiContainers.SetTransObject(SQLCA)
		lsOrigSQL = idsEdiContainers.GetSQLSelect()
		lsWhere = " where dbo.EDI_Outbound_Detail.Project_ID = '" + gs_Project + "'" 	/*always tackon project */ 
		lsWhere += " and dbo.EDI_Outbound_Detail.EDI_Batch_Seq_No = " + String(idw_main.GetItemNumber(1,'Edi_Batch_Seq_No') )
		lsWhere += " and po_no IS NOT NULL and po_no <> '' and po_no <> '-' "
		lsNewSQL = lsOrigSql + lsWhere
		
		idsEdiContainers.SetSqlSelect(lsNewSQL)
		idsEdiContainers.Retrieve()
		If idsEdiContainers.RowCount() > 0 Then
			ibDejaVu = true
			tab_main.tabpage_serial.enabled = true
			tab_main.tabpage_serial.cb_generate_ob_serial.enabled = true
			tab_main.tabpage_serial.cb_undo.enabled = true
			tab_main.tabpage_serial.cb_ob_serial_insert.enabled = true
			tab_main.tabpage_serial.cb_ob_serial_delete.enabled = true
		End If
	End If
End If





//Enable Components Checkbox if any components are present
//If idw_pick.Find("Component_no > 0",1,idw_pick.RowCount()) > 0 Then
If idw_pick.Find("component_ind='Y'",1,idw_pick.RowCount()) > 0 Then
	tab_main.tabpage_pick.cbx_show_comp.Enabled = True
Else
	tab_main.tabpage_pick.cbx_show_comp.Enabled = False
End If

// 02/01 PCONKL - Filter Pick list to not show components if box is not checked
If tab_main.tabpage_pick.cbx_show_comp.Enabled Then
	tab_main.tabpage_pick.cbx_show_comp.Checked = True
Else
	tab_main.tabpage_pick.cbx_show_comp.Checked = False
End If

wf_set_pick_filter('Set')

idw_pick.SetRedraw(true)

//02/04 - PCONKL
// pvh - 05/05/06 - use gmt
datetime ldtToday
ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 

If isnull(idw_main.GetITemDateTime(1,'pick_start')) Then
	idw_main.SetItem(1,'pick_start', ldtToday )
//	//idw_main.SetItem(1,'pick_start',Now())
End If

This.TriggerEvent('ue_refresh')


// 09/02 - Pconkl - If components wre not picked in full, we may create a work order
This.TriggerEvent('ue_create_workorder')

wf_post_pick_list_generate(0)

//GailM 6/19/2018 S19742 F7864 I898 Google - Edge Packaging - SIMS Changes - GPN level mapping replaced with Commodity code level
If UPPER(gs_project) = 'PANDORA' Then
	liRet = wf_set_special_packaging_comments()
	If liRet <> 0 Then
		messagebox("Setting Special Packaging Comments","Could not set Special Packaging Comments")
	Else
		// Show all relevant QA Check messages
		If Len(isHriList) > 0 Then
			MessageBox("High Risk Inventory Alert!", isHriComment)
		End If
		If Len(isDangerList) > 0 Then
			MessageBox("Dangerous Material Alert!", isDangerComment + isDangerList)
		End If
		If Len(isDefectList) > 0 Then
			MessageBox("Defective Packaging Alert!", isDefectComment + isDefectList)
		End If
		If Len(isDriveList) > 0 Then		//Obsolete
			MessageBox("SSD/Stegodon Drives Alert!", isDriveComment + isDriveList)
		End If
		If Len(isEdgeList) > 0 Then
			MessageBox("Edge Packaging Alert!", isEdgeComment )
		End If
	End If

Long ll_rows
	for k = 1 to llRowCOunt
		ls_sku = idw_pick.GetItemString(k,"sku")
		lsSupplier = idw_pick.GetItemString(k,"supp_code")
		llLineItemNo = idw_pick.GetItemNumber(k,"Line_Item_No")

		lsFind = " Upper(sku) = '" + Upper(ls_sku)  + "' and line_item_no = " + String(llLineItemNo)
		lsFind += " and Upper(supp_code) = '" + Upper(lsSupplier) + "'"

		ll_found_row = idw_detail.Find(lsFind, 1, ll_rows)
		if ll_found_row > 0 then
				//TimA 11/12/13 #637 New functionality for picking by pallets
				If ib_LPN_PickByPallet = True then
					llModifiedCount = idw_pick.modifiedcount( )
					l_status = idw_pick.GetItemStatus(  k, 0, Primary!)
					If l_status = NewModified! then
						////TimA 11/13/13 Pandora issue #637
						//Only update the qa_check_ind in the new rows that have been picked
						idw_pick.Object.qa_check_ind[k] = idw_detail.Object.qa_check_ind[ll_found_row]
					End if
				Else
					idw_pick.Object.qa_check_ind[k] = idw_detail.Object.qa_check_ind[ll_found_row]
				End if
		end if
	next

	
	//TimA 11/07/12 Pandora issue #476
	//Let the use know there is RMA information
    llNotesCount = idsNotes.Retrieve(gs_project,lsDONO,'RM')
	If llNotesCount > 0 then
		MessageBox("RMA Number", "This is a RMA order.  Return Tracking Numbers are needed for shipment.  Please see Notes for RMA Number and RMA Instructions ")
		tab_main.selecttab(3) //Go to the Detail tab
	end if	
End If
// end of Pandora #S19742

// 08/16 - PCONKL - For Kendo, we want to default the Pick As to the carton pick (second row) if it exists
If gs_project = 'KENDO' Then
	
	This.SetRedraw(False)
	SetPointer(Hourglass!)
	
	llRowCount = idw_Pick.RowCOunt()
	For llRowPos = 1 to llRowCount
				
		SetMicroHelp("Calculating 'Pick As' for row " + String(llRowPos) + " of " + String(llRowCount))
		ldwc.Reset()
		
		idw_pick.SetRow(llRowPos)
		idw_Pick.Setcolumn('sku') /* need to lose focus on UF2 to re-trigger itemfocused chage for each row */
		idw_Pick.Setcolumn('User_Field2')
				
		idw_Pick.Getchild("user_field2",ldwc)
		
		If ldwc.RowCount() > 1 Then
			idw_Pick.SetItem(llRowPos,'User_Field2',ldwc.GetITemString(2,'pick_as'))
		End If
		
	Next
	
	This.SetRedraw(True)
	SetPointer(Arrow!)
	SetMicroHelp("Ready")
	
End If

//GailM 3/23/2020 DE15259 Google - Footprints containers on multiple orders and SN issue - Warn if Footprint GPN will block processing
If gs_project = 'PANDORA' Then
	//messagebox("Picklist Generated for Pandora","Check all pick rows for footprint and if the pallet will block another order from processing.  Rows: " + string(idw_Pick.RowCount()))
	llRowCount = idw_Pick.RowCOunt()
	For llRowPos = 1 to llRowCount
		If f_is_sku_foot_print(idw_Pick.GetItemString(llRowPos,"sku"), idw_Pick.GetItemString(llRowPos,"supp_code")) Then
			lstrparms = lstrNull
			lstrparms = f_is_footprint_allocated(idw_Pick.GetItemString(llRowPos,"po_no2"),idw_Pick.GetItemString(llRowPos,"container_id"),idw_Pick,isWareHouse,idw_Pick.GetItemString(llRowPos,"sku"))
			If lstrparms.String_Arg[1] <> "" Then
				If lsMsg = "" Then
					lsMsg = "A pallet for a footprint GPN cannot be split if a~r~nportion is already allocated by another order.~r~n~r~n"
				End If
				If lstrparms.String_Arg[2] = "S" Then
					lsOrderType = "Outbound Order "
				ElseIf lstrparms.String_Arg[2] = "O" Then
					lsOrderType = "Stock Owner Change "
				ElseIf lstrparms.String_Arg[2] = "I" Then
					lsOrderType = "Stock Transfer "
				End If
				lsMsg += "Row: " + String(llRowPos) + " - PalletID " + idw_Pick.GetItemString(llRowPos,"po_no2") + &
						" is already allocated in " + lsOrderType + lstrparms.String_Arg[1] + "~r~n" 
			End If
		End If
	Next
	If lsMsg <> "" Then
		lsMsg += "~r~nIf you save the pick list now, both orders will be blocked from further processing."
		MessageBox("Footprint GPN warning message", lsMsg)
	End If
End If

//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate_pick_server' )	//08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_pick_server', 'End ue_generate_pick_server' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

end event

event ue_edit_warehouse_address();// ue_edit_warehouse_address()

if gs_project <> 'PHXBRANDS' Then return

if idw_bol.DataObject = "" or isNull( idw_bol.DataObject ) then
	messagebox("Edit Warehouse Address", "You must Generate BOL before editing warehouse address!", stopsign! )
	return
end if

if idw_bol.rowcount() <=0 then
	messagebox("Edit Warehouse Address", "No rows found to edit.", stopsign! )
	return
end if

str_parms theparms

// get the current address and load the parms
string addr
long theRow

theRow = idw_bol.getrow()
theparms.string_arg[1] = idw_bol.object.warehouse_wh_name[ theRow  ]
theparms.string_arg[2]  = idw_bol.object.warehouse_address_1[ theRow  ]
theparms.string_arg[3]  = idw_bol.object.warehouse_address_2[ theRow  ]
theparms.string_arg[4]  = idw_bol.object.warehouse_address_3[ theRow  ]
theparms.string_arg[5]  = idw_bol.object.warehouse_address_4[ theRow  ]
theparms.string_arg[6]  = idw_bol.object.warehouse_city[ theRow  ]
theparms.string_arg[7]  = idw_bol.object.warehouse_state[ theRow  ]
theparms.string_arg[8]  = idw_bol.object.warehouse_zip[ theRow  ]

openwithparm( w_edit_warehouse_address, theparms )
theparms = message.powerobjectparm

if theparms.Cancelled then return 

if UpperBound( theparms.string_arg ) > 0 then
	idw_bol.object.warehouse_wh_name[ theRow  ]		=	theparms.string_arg[1] 
	idw_bol.object.warehouse_address_1[ theRow  ]		=	theparms.string_arg[2] 
	idw_bol.object.warehouse_address_2[ theRow  ]		=	theparms.string_arg[3] 
	idw_bol.object.warehouse_address_3[ theRow  ]		=	theparms.string_arg[4] 
	idw_bol.object.warehouse_address_4[ theRow  ]		=	theparms.string_arg[5] 
	idw_bol.object.warehouse_city[ theRow  ]					=	theparms.string_arg[6] 
	idw_bol.object.warehouse_state[ theRow  ]				=	theparms.string_arg[7] 
	idw_bol.object.warehouse_zip[ theRow  ]					=	theparms.string_arg[8] 
end if

end event

event ue_select_warehouse();
Str_parms	lstrparms
long ll_rowcount

// 11/00 PCONKL - Select a customer from popup

string ls_current_warehouse

//TAM - 9/29/2010 - Allow Same warehouse for NYCSP -They are using this to rotate stock in kits without having to rebuild the whole kit.
//TAM - 11/2/2014 - Added 'BOSCH' -  They are using this to capture serial number during conversion from Non Serial Tracking to Serial Tracking
//if gs_project <> 'NYCSP' then
if gs_project <> 'NYCSP' and gs_project<> 'BOSCH'  then
	ls_current_warehouse = ""
else
	ls_current_warehouse = idw_main.GetItemString(1, "wh_code")
end if	

OpenWithParm(w_select_warehouse, ls_current_warehouse)

lstrparms = message.PowerobjectParm

If Not lstrparms.Cancelled Then
	
	If Lstrparms.String_arg[1] > '' Then
		SetPointer(Hourglass!)
		
		idw_main.SetItem(1,"cust_code",lstrparms.String_arg[1])
		
		If Not isvalid(ids_default_address) Then
			ids_default_address = Create datastore			
		END IF
		
		IF ids_default_address.DataObject <> 'd_maintanence_warehouse' THEN
			ids_default_address.DataObject = 'd_maintanence_warehouse'
			ids_default_address.SetTransObject(sqlca)
		END IF
			
		ids_default_address.Retrieve( lstrparms.String_arg[1]) 			
		
		idw_main.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "wh_name"))
		idw_main.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
		idw_main.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
		idw_main.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
		idw_main.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
		idw_main.SetItem(1, "address_code",'DEFAULT')
		idw_main.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
		idw_main.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
		idw_main.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
		idw_main.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
		idw_main.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
		idw_main.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))
		idw_main.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))

		
		//If idwc_address.Retrieve(gs_project, lstrparms.String_arg[1]) < 1 Then
		//	idwc_address.InsertRow(0)
		//End If
		
		//gap02-03 add default location to the address code drop down
		ll_rowcount =  idwc_address.Retrieve(gs_project,lstrparms.String_arg[1]) 
		idwc_address.InsertRow(1)
		idwc_address.setitem(1,"address_code", "DEFAULT")
		idwc_address.setitem(1,"address_1", ids_default_address.GetItemString(1, "address_1")) 
		
		//gap 02-03 Check to see if a customer has multiple locations except for "return to sender"
		if ll_rowcount > 0 then  
			MessageBox ( "Customer with multiple addresses", "This customer has multiple addresses!", Exclamation!)
			idw_main.SetFocus()
			idw_main.Setcolumn("address_code")		
		else
			idw_main.SetFocus()
			idw_main.Setcolumn("cust_order_no")
		end if
		
		ib_changed = True
		SetPointer(Arrow!)
	Else /*no code entered*/
		idw_main.SetFocus()
		idw_main.Setcolumn("cust_code")
	End If
		
Else /*Cancelled*/
	
		idw_main.SetFocus()
		idw_main.Setcolumn("cust_code")
End If			


end event

event ue_select_customer_3rdparty();Str_parms	lstrparms
long ll_rowcount, llRowPos
String ls_current_warehouse

// 10/31/2012 hdc - initial deposition

OpenWithParm( w_select_customer, "3P" )  //only display third party customers

lstrparms = message.PowerobjectParm

If Not lstrparms.Cancelled Then //user picked something
	
	If Lstrparms.String_arg[1] > '' Then
		SetPointer(Hourglass!)
		
		If Not isvalid(ids_default_address) Then
			ids_default_address = Create datastore
		END IF	
			
		IF ids_default_address.DataObject <> 'd_customer_maintenance' THEN 	
			ids_default_address.DataObject = 'd_customer_maintenance'
			ids_default_address.SetTransObject(sqlca)
		End If
			
		ids_default_address.Retrieve(gs_project, lstrparms.String_arg[1]) 		//read all the data for the selected customer
		
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "name", ids_default_address.GetItemString(1, "cust_name"))		
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))	
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))	

		ib_changed = True
		SetPointer(Arrow!)
	Else /*no code entered*/
		tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.SetFocus()
	End If
	
Else /*Cancelled*/
	tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.SetFocus()
End If			


end event

event ue_select_customer_rt();Str_parms	lstrparms
long ll_rowcount, llRowPos
String ls_current_warehouse

// 10/31/2012 hdc - initial deposition

//OpenWithParm( w_select_customer, "RT" )  
Open(w_select_customer)  

lstrparms = message.PowerobjectParm

If Not lstrparms.Cancelled Then //user picked something
	
	If Lstrparms.String_arg[1] > '' Then
		SetPointer(Hourglass!)
		
		If Not isvalid(ids_default_address) Then
			ids_default_address = Create datastore
		END IF	
			
		IF ids_default_address.DataObject <> 'd_customer_maintenance' THEN 	
			ids_default_address.DataObject = 'd_customer_maintenance'
			ids_default_address.SetTransObject(sqlca)
		End If
			
		ids_default_address.Retrieve(gs_project, lstrparms.String_arg[1]) 		//read all the data for the selected customer
		
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "name", ids_default_address.GetItemString(1, "cust_name"))		
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))	
		tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))	

		ib_changed = True
		SetPointer(Arrow!)
	Else /*no code entered*/
		tab_main.tabpage_main.tab_address.tabpage_rt.SetFocus()
	End If
	
Else /*Cancelled*/
	tab_main.tabpage_main.tab_address.tabpage_rt.SetFocus()
End If			


end event

event ue_generate_carrier_pro();
Datastore lds_Consolidation
Long ll_method_trace_id,  llCarrierCount, llCarrierFound,  lirc
String ls_carrier_pro, ls_Carrier_code, ls_prefix, ls_suffix, ls_check_ind, ls_remainder, ls_pro, lsMsg, ls_scac, ls_color, ls_Carrier_Code_Group
Decimal ld_remainder
DwItemStatus  l_pro_status
Boolean lb_pro_generated
Boolean lb_using_next_range	// LTK 20150417
String lsWh_Code, lsFilterString, lsFind
String lsPro_Algorithm
String  as_type
Decimal ld_current_range_start,ld_current_range_end,ld_pro, ld_next_range_start, ld_next_range_end
String lsConsolidationNo
String lsCarrierProNo
String lsDoNo
Boolean lbConsolidationFound, lbFoundOnAnotherOrder
Long llConsolidationCount
Long i ,ll_RowCount
String sql_syntax, Errors
string lsConsolMsg

SetNull( ll_method_trace_id )
f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_carrier_pro', 'Start generating Carrier Pro Nbr:' ,is_dono, ' ',' ',isinvoice_no)

lb_pro_generated = False

lsConsolidationNo = Nz(idw_Other.GetItemString(1,'Consolidation_No' ),'' )
ls_carrier_pro = Nz(idw_other.GetItemString(1,'Carrier_Pro_No' ), '' )

// LTK 20151223 This condition is now a hard stop.
if Len( ls_carrier_pro ) > 0 then
	MessageBox( is_title, 'Unable to assign a new Pro Number because this order already has a Pro Number assigned.', Exclamation! )
	Return
end if

//TimA 09/23/15 Making change to deal with orders that are on a shipment
If lsConsolidationNo <> '' Then
	lbConsolidationFound = True
	//Messagebox asking if they want to change the carrier pro number
	//dts - 2015-12-08 - moved from below (so we can use it in both parts of the ls_carrier_pro = '' condition)...
	lds_Consolidation = Create datastore
	sql_syntax = "SELECT Consolidation_No,Carrier_Pro_no, Ord_Status,* FROM Delivery_Master " + &
						"WHERE Project_Id = '" + gs_project + "'" + &
						" AND Consolidation_No = '" + lsConsolidationNo + "'" + &
						" AND Ord_Status NOT IN ('C','D','V')"				
	lds_Consolidation.Create(SQLCA.SyntaxFromSQL(sql_syntax, "", Errors ))
	lds_Consolidation.SetTransObject(SQLCA )	
	ll_RowCount = lds_Consolidation.Retrieve( )	
	If ls_carrier_pro = '' Then
		lsDoNo = idw_main.GetItemString(1,'Do_No' )
		//There is a Consolidation number on this order.  Is assigned to a shipment.
		//Check to see if there was a pro number assign while this order has been open
		If ls_carrier_pro = '' Then
			SELECT Carrier_Pro_No into :ls_carrier_pro 
			FROM Delivery_Master WHERE Project_Id = :gs_project and Do_No = :lsDoNo
			using SQLCA;
			ls_carrier_pro = Nz(ls_carrier_pro,'' )
			If ls_carrier_pro <> '' Then
				//There has been a carrier pro number assigned since this order was open.
				idw_other.SetItem(1, "Carrier_Pro_No", ls_carrier_pro )
				Return
			End if
		End if
//		Moved above...
//		lds_Consolidation = Create datastore
//		sql_syntax = "SELECT Consolidation_No,Carrier_Pro_no, Ord_Status,* FROM Delivery_Master " + &
//							"WHERE Project_Id = '" + gs_project + "'" + &
//							" AND Consolidation_No = '" + lsConsolidationNo + "'" + &
//							" AND Ord_Status NOT IN ('C','D','V')"				
//		lds_Consolidation.Create(SQLCA.SyntaxFromSQL(sql_syntax, "", Errors ))
//		lds_Consolidation.SetTransObject(SQLCA )	
//		ll_RowCount = lds_Consolidation.Retrieve( )	
		
		For i = 1 to ll_RowCount
			ls_carrier_pro = Nz(lds_Consolidation.GetItemString(i, 'Carrier_Pro_No' ), '' )
			If ls_carrier_pro <> '' Then
				lbFoundOnAnotherOrder = True
				Exit
			End if
		Next
	else //carrier_pro is already populated.

// LTK 20151223  Commented the following block out and modified/moved to above, outside of this current if block.  
// It is now a hard stop for Pandora when carrier_pro_no is populated and the button is clicked.
//		
//
//		if ll_RowCount > 1 then //this Order is part of a consolidation. Include that in the msgbox
//			lsConsolMsg = ' (and is part of a consolidated shipment)'
//		else
//			lsConsolMsg = ''
//		end if
//		//If Messagebox(is_title,'This order already has a Pro Number assigned and is part of a consolidation shipment~r~rDo you want to continue?',Exclamation!,YesNo!,2 ) = 2 Then
//		If Messagebox(is_title,'This order already has a Pro Number assigned' + lsConsolMsg + '~r~rDo you want to continue?',Exclamation!,YesNo!,2 ) = 2 Then
//			Return 
//		else
//			f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_carrier_pro', 'A new number is being generated on a consolidation order that already has one:' ,is_dono, ' ',' ',isinvoice_no)
//			ls_carrier_pro = ''
//		End if

	End if
End if

If lbConsolidationFound = False or ls_carrier_pro = '' Then
	ids_carrier_Pro_warehouse = Create datastore
	ids_carrier_Pro_warehouse.dataobject ='d_maintenance_carrier_pro_warehouse'
	ids_carrier_Pro_warehouse.SetTransObject(SQLCA)
	
	lsWh_Code = idw_main.GetItemString(1,'wh_code')
	ls_carrier_code = idw_other.Object.carrier[1]
	
	SELECT Carrier_Group into :ls_Carrier_Code_Group 
	FROM Carrier_Master WHERE Project_Id = :gs_project and Carrier_Code = :ls_carrier_code
	using SQLCA;
	
	if IsNull(ls_carrier_code) or Len(Trim(ls_carrier_code)) = 0 then
		MessageBox("Carrier Pro Nbr", "Please enter a carrier before assigning a Pro No." , StopSign!)
		Return
	end if
	
	//llCarrierCount = ids_carrier.Retrieve(gs_project, ls_carrier_code)
	llCarrierCount = ids_carrier_Pro_warehouse.Retrieve(gs_project, ls_Carrier_Code_Group)
	
	If llCarrierCount > 0 Then
		  //First look for the warehouse.  If not found then check to see if there is a default of "All"
			  lsFind = "Upper(wh_Code) = '" + Upper(lsWh_Code) + "'"
		llCarrierFound = ids_carrier_Pro_warehouse.Find(lsFind,1,ids_carrier_Pro_warehouse.RowCount())
		If llCarrierFound = 0 Then
			lsFind = "Upper(wh_Code) = 'ALL'"
			llCarrierFound = ids_carrier_Pro_warehouse.Find(lsFind,1,ids_carrier_Pro_warehouse.RowCount())
		End if	
		
	End if
	If llCarrierCount > 0 and llCarrierFound = 0 Then 
		MessageBox("Carrier Pro Nbr", 'This carrier: ' +  ls_carrier_code + '  and the warhouse ' + Upper(lsWh_Code) + ' has not been configured for Pro generation. ~r~r' + &
		'Please configure at Carrier Maintenance screen.', StopSign!)
		Return
	Elseif llCarrierCount = 0 then
		MessageBox("Carrier Pro Nbr", 'This carrier: ' +  ls_carrier_code + '  has not been configured for Pro generation. ~r~r' + &
		'Please configure at Carrier Maintenance screen.', StopSign!)
		Return	
	End if
	
	//dts - 2015-12-04 - changing these to use llCarrierFound instead of llCarrierCount
	ls_prefix= Nz(ids_carrier_Pro_warehouse.GetitemString(llCarrierFound, "pro_nbr_prefix"),'' )
	ls_suffix= Nz(ids_carrier_Pro_warehouse.GetitemString(llCarrierFound,  "pro_nbr_suffix"),'' )
	ld_current_range_start= ids_carrier_Pro_warehouse.GetitemDecimal(llCarrierFound,"pro_nbr_current_range_start")  //Begining Pro Nbr
	ld_current_range_end= ids_carrier_Pro_warehouse.GetitemDecimal(llCarrierFound, "pro_nbr_current_range_end")	//Ending Pro Nbr
	ld_next_range_start= ids_carrier_Pro_warehouse.GetitemDecimal(llCarrierFound, "pro_nbr_next_range_start")		//Next Begining Pro Nbr
	ld_next_range_end= ids_carrier_Pro_warehouse.GetitemDecimal(llCarrierFound, "pro_nbr_next_range_end")	     //Next Ending Pro Nbr
	lsPro_Algorithm= ids_carrier_Pro_warehouse.GetitemString(llCarrierFound, "Pro_Algorithm")	     //Pro Algorithm
	
	
	//TimA 09/15/15 we now incriment the + 1 just before the SetItem below
	ld_pro =ld_current_range_start   //Next sequential increment by 1 from current
	//ld_pro =(ld_current_range_start + 1)  //Next sequential increment by 1 from current
	ls_pro = String(ld_pro)
	
	If ld_pro = ld_current_range_end Then
	//	MessageBox("Carrier Pro Nbr", 'This carrier ' +  ls_carrier_code + '  is approaching end of range for Pro generation. ~r~r' +&  		// LTK 20150415  Reword message
		MessageBox("Carrier Pro Nbr", 'Warning:  This carrier ' +  ls_carrier_code + '  is at the end of range for Pro generation. The last Pro No is being used. ~r~r' +&
							'Please reload next range at Carrier Maintenance screen.', Exclamation!)
		//Return		// LTK 20150415  The range end is a valid number, allow to be used and display the warning message
	elseif ld_pro > ld_current_range_end then
		// LTK 20150417  Added this elseif.  Attempt to roll the Carrier Pro No to the next range and warn the user
		lb_using_next_range = TRUE
	
		if Not IsNull( ld_next_range_start ) and Not Isnull( ld_next_range_end ) then
			//TimA 09/15/15 we now incriment the + 1 just before the SetItem below
			ld_pro = ld_next_range_start  
			//ld_pro =(ld_next_range_start + 1)  //Next sequential increment by 1 from current
			ls_pro = String(ld_pro)
	
			if ld_pro > ld_next_range_end then
				MessageBox("Carrier Pro Nbr", 'Warning:  This carrier ' +  ls_carrier_code + '  is passed the end of the Next Range for Pro generation. ~r~r' +&
									'Please reload ranges at Carrier Maintenance screen.', Stopsign!)
				Return
			end if
		else
			MessageBox("Carrier Pro Nbr", 'Warning:  This carrier ' +  ls_carrier_code + '  is passed the end of range for Pro generation. Attempted to roll to Next Range but it is not set up. ~r~r' +&
								'Please reload ranges at Carrier Maintenance screen.', Stopsign!)
			Return
		end if
	
		MessageBox("Carrier Pro Nbr", 'Warning:  This carrier ' +  ls_carrier_code + '  is passed the end of range for Pro generation. The Next Range is being used. ~r~r' +&
						'Please reload ranges at Carrier Maintenance screen.', Exclamation!)
	
	End if
	
	//TimA 05/21/15 Modified the stored procedure sp_check_digit_build to include the Carrier Pro numbers cal
	Choose case lsPro_Algorithm
		Case 'None'  //No Check Digit needed
			ls_scac = Left(Trim(ls_carrier_code), 4)
			ls_carrier_pro = ls_pro
			If  ls_scac = 'TAXA'  Then //Use SCAC code as prefix and No Check Digit
				ls_prefix = ls_scac
				ls_carrier_pro = ls_prefix + ls_pro
			End if
		Case Else
			//TimA 09/08/15 added Prefix and Suffix
			sqlca.sp_check_digit_build(gs_project,as_type, lsPro_Algorithm , ld_pro , ls_carrier_pro ) 
	End choose
	
	//TimA 09/08/15 added Prefix and Suffix
	ls_carrier_pro = Trim(ls_prefix + ls_carrier_pro + ls_suffix )
	ib_changed = True			
	
	//MessageBox('Carrier Pro Nbr', "Carrier Pro Nbr for " +  ls_carrier_code + ' is ' +  ls_carrier_pro)
	If IsNull(ls_carrier_pro) or Trim(ls_carrier_pro) = '' Then
		MessageBox("Carrier Pro Nbr", 'This carrier ' +  ls_carrier_code + '  has not been configured for Pro generation. ~r~r' +&
						  'Please configure at Carrier Maintenance screen.', StopSign!)
		Return
	End If
	
End if

idw_other.SetItem(1, "Carrier_Pro_No", ls_carrier_pro) //Set Carrier Pro Nbr; Store it to Delivery_Master table

//If lbConsolidationFound = True then
If lbConsolidationFound = True and ll_RowCount > 1 then //dts - 2015-12-08 - added condition on Row Count (don't need to run the update if this is the only order)
	//TimA 09/23/15
	//Update the other orders with the Pro number that are on the same concolidation
	UPDATE Delivery_Master 
	SET Carrier_Pro_no = :ls_carrier_pro
	WHERE Project_Id = :gs_project
	AND Consolidation_No = :lsConsolidationNo
	Using SQLCA;
End if

//There wasn't another pro number found go ahead and incriment.
If lbFoundOnAnotherOrder = False Then
	//Jxlim 02/24/2014 Update carrier maintenance after setting value from carrier pro generation on other info tab
	//Update carrier master upon completion of carrier pro nbr on other info tab
	l_pro_status = idw_other.GetItemStatus(1, "carrier_pro_no", Primary!)		
	If l_pro_Status = NewModified! OR l_pro_Status = DataModified! Then
		lb_pro_generated = True	
		//ids_carrier.SetItem(1,"pro_nbr_current_range_start",  ld_pro)  //Increment and store the current sequence number	
		// LTK 20150417  Commented line above out.  Now we are possibly using the Next Range
		if lb_using_next_range then
			//TimA 09/15/15 the was moved from above.  Do the +1 here
			ld_pro = (ld_pro + 1 )
			//dts - 2015-12-08 - use llCarrierFound instead of llCarrierCount
			ids_carrier_Pro_warehouse.SetItem(llCarrierFound,"pro_nbr_next_range_start",  ld_pro)  //Increment and store the current sequence number	
		else
			//TimA 09/15/15 the was moved from above.  Do the +1 here		
			ld_pro = (ld_pro + 1 )
			//dts - 2015-12-08 - use llCarrierFound instead of llCarrierCount
			ids_carrier_Pro_warehouse.SetItem(llCarrierFound,"pro_nbr_current_range_start",  ld_pro)  //Increment and store the current sequence number	
			//pro_nbr_next_range_start
		end if
	
	End if
End if
//Save it here asap instead of ue_save
//Jxlim 02/24/2014 Update carrier maintenance after setting value from carrier pro generation on other info tab
//Update carrier master upon completion of carrier pro nbr on other info tab
ls_color =String(67108864 ) //ButtonFace
If lb_pro_generated = True Then	
	Execute Immediate "Begin Transaction" using SQLCA; /*Jxlim 02/21/2014 - Auto Commit Turned on to eliminate DB locks*/
	
	liRC =ids_carrier_Pro_warehouse.Update()
	If liRC = 1 Then
		Execute Immediate "COMMIT" using SQLCA;
		//Jxlim 04/23/2014 Ariens want the field to remain enabled
//		tab_main.tabpage_other.cb_assign_pro.enabled=False
//		idw_other.Object.carrier_pro_no.protect=True
//		idw_other.SetTabOrder("carrier_pro_no", 0)		
//		idw_other.Modify("carrier_pro_no.Background.Color = '" +  ls_color + "'")
	Else
		Execute Immediate "ROLLBACK" using SQLCA;
		lsMsg = "Unable to save Carrier Records!~r~r"
		If Not isnull(SQLCA.SQLErrText) Then /*if errtext is null, we get no msg - datastores dont return error codes like DW's*/
			lsMsg += SQLCA.SQLErrText
		End If
		MessageBox(is_title, lsMsg)
		SetMicroHelp("Save failed!")
	End If
End If

f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate_carrier_pro', 'End Generating Carrier Pro Nbr:' ,is_dono, ' ',' ',isinvoice_no)




end event

event ue_pick_pallet();//GailM 6/25/2017 S20849 F8117 I1026 Google - SIMS - Footprints - Movements of partial containers
String lsPalletNo, lsFilter, lsSKU, lsFind
Int liRow, liFound
Long llReqQty, llPickQty
Boolean lbCancelled
Datastore ldsFromPallet, ldsToPallet, ldsPickContainer
Str_parms	lstrParms
Str_parms	lstrReturnParms

ldsFromPallet = Create datastore
ldsFromPallet.dataobject = 'd_pick_pallet'
ldsFromPallet.SetTransObject(SQLCA)

ldsToPallet = Create datastore
ldsToPallet.dataobject = 'd_pick_pallet'
ldsToPallet.SetTransObject(SQLCA)

ldsPickContainer = Create datastore
ldsPickContainer.dataobject = 'd_do_picking'
ldsPickContainer.SetTransObject(SQLCA)

idw_pick.Rowscopy( ilCurrPickRow, ilCurrPickRow, Primary!, ldsPickContainer, 1, Primary!)

If ldsPickContainer.rowcount() = 1 Then
	llPickQty = ldsPickContainer.GetItemNumber( 1, "quantity" )
	lsSKU = ldsPickContainer.GetItemString( 1, "SKU" )
	lsFind = "SKU = '" + lsSKU + "' "
	liFound = idw_detail.Find( lsFind, 1, idw_detail.rowcount() )
	if liFound > 0 Then
		llReqQty = idw_detail.GetItemNumber( liFound, "req_qty" )
	Else
		messagebox("Error", "Cannot find sku required quantity")
	End If
	
	ldsFromPallet.Retrieve( isPallet )
	//To allow Pharmacy to pick individual serial numbers from the pallet remove filter for the containerID
	//Until a checkbox for Pharmacy is created leave it off
	ibPharmacyProcessing = FALSE		//Turn it on here when needed.  GailM 12/02/2019 Add check for Pharmacy Processing
//	If Not lbPharmacyProcessing Then
//		lsFilter = "carton_id = '" + isContainer + "' "
//		ldsFromPallet.SetFilter( lsFilter )
//		ldsFromPallet.filter( )
//	End If
	
	lstrparms.String_Arg[1] = isPallet
	lstrparms.String_Arg[2] = isContainer
	lstrparms.String_Arg[3] = isinvoice_no
	lstrparms.String_Arg[4] = isWhCode
	lstrparms.String_Arg[5] = idw_main.GetItemString( 1, "ord_type" )
	lstrparms.String_Arg[6] = idw_pick.GetItemString( ilCurrPickRow, 'color_code')
	lstrparms.String_Arg[7] = idw_pick.GetItemString( ilCurrPickRow, 'mixed_type')
	lstrparms.String_Arg[8] = idw_pick.GetItemString(ilCurrPickRow, "l_code")
	lstrparms.integer_arg[1] = ilCurrPickRow
	lstrparms.Boolean_arg[1] = ibPharmacyProcessing
	lstrparms.Long_Arg[1] = llReqQty
	lstrparms.Long_Arg[2] = llPickQty
	lstrparms.Datastore_Arg[1] = ldsFromPallet
	lstrparms.Datastore_Arg[2] = ldsToPallet
	lstrparms.Datastore_Arg[3] = ldsPickContainer
	lstrparms.Datawindow_Arg[1] = idw_pick
	lstrparms.Datawindow_Arg[2] = idw_pick_detail
	
	OpenWithParm(w_pick_pallet, lstrparms)
	
	//lstrReturnParms = Message.PowerobjectParm

	ldsFromPallet = lstrparms.Datastore_Arg[1]
	ldsToPallet = lstrparms.Datastore_Arg[2]
	lbCancelled = lstrparms.cancelled
	
	If lbCancelled Then
		messagebox("Cancelled","The process has been cancelled.")
	End If
Else
	messagebox("ue_pick_pallet error","Did not receive one container row from the pick list.  Please investigate.")
End If


end event

event ue_move_pallet();//GailM 6/25/2018 S20849 F8117 I1026 Google - SIMS - Footprints - Movements of partial containers
//GailM 11/20/2018 DE7355 Move extra contains from a pallet when not all containers are being shipped to maintain full pallet integrity
//We are expecting the color_code on each pick row to be "6" which indicates this is a full container from the pallet and will be exempt from pallet id change
String lsFind, lsMessage
String lsContainers[], lsMoveContainers[]
String lsContainer, lsNewPallet, lsSKU
String lsOrderType, lsDoNo, isInvoiceNo
Long llAdjustNo
Int liPickRows, liPickRow, liContentRows, liContentRow, liContainerRows, liContainerRow, liExists, liMoveNbr
Int liContentSummaryRow, liContentSummaryRows, liFound, liModified
Int liSerialRow, liSerialRows, liTotalSerialsChanged, liMoveRow, liMoveRows, aiRC, aiRec, liRC
datastore ldsAdjustment, ldsNewContentSummary,ldsSerial, ldsContent
datetime ldtToday

lsDoNo = idw_main.GetItemString(1, "do_no")
isInvoiceNo = idw_main.GetItemString(1, "invoice_no")
isWhCode = idw_main.GetItemString(1, "wh_code")
ldtToday = f_getLocalWorldTime( isWhCode ) 

//Get containers to remain in pallet
liPickRows = idw_pick.rowcount()
For liPickRow = 1 to liPickRows
	If idw_pick.GetItemString(liPickRow,"po_no2") = isPallet Then
		lsContainers[liPickRow] = idw_pick.GetItemString(liPickRow, "container_id")
		lsSKU = idw_pick.GetItemString(liPickRow, "sku")
	End If
Next

liContainerRows = UpperBound(lsContainers)
liMoveNbr = 1
liTotalSerialsChanged = 0

ldsNewContentSummary = Create u_ds_ancestor
ldsNewContentSummary.dataobject = 'd_content_summary_pallet'
ldsNewContentSummary.SetTransObject(SQLCA)

ldsContent = Create u_ds_ancestor
ldsContent.dataobject = 'd_content_pallet'
ldsContent.SetTransObject(SQLCA)

ldsSerial = Create datastore
ldsSerial.dataobject = 'd_serial_container'
ldsSerial.SetTransObject(SQLCA)

ldsAdjustment = Create u_ds_ancestor
ldsAdjustment.dataobject =  'd_container_adjustment'
ldsAdjustment.SetTransObject(SQLCA)

ldsAdjustment.Reset( )

liContentSummaryRows = ldsNewContentSummary.Retrieve( gs_project, isWhCode, lsSKU, isPallet, isContainer, gsFootprintBlankInd )		//All content summary rows for the pallet
liContentRows = ldsContent.Retrieve( gs_project, isWhCode, lsSKU, isPallet)		//All content rows for the pallet

For liContentSummaryRow = 1 to liContentSummaryRows 
	lsContainer = ldsNewContentSummary.GetItemString(liContentSummaryRow, "container_id")
	liExists = 0
	For liContainerRow = 1 to liContainerRows
		If lsContainers[liContainerRow] = lsContainer Then
			liExists = 1
			Continue
		End If
	Next
	If liExists = 0 Then 
		lsMoveContainers[liMoveNbr] = lsContainer
		liMoveNbr ++
	End If
Next

sqlca.sp_check_digit_build(gs_project,"SSCC_No", "" , 0 , lsNewPallet ) 

liMoveRows = UpperBound(lsMoveContainers)
liSerialRows = ldsSerial.Retrieve( gs_project, isWhCode, lsSKU, isPallet)

For liMoveRow = 1 to liMoveRows
	lsContainer = lsMoveContainers[liMoveRow]
	lsFind = "container_id = '" + lsContainer + "' "
	aiRec = ldsNewContentSummary.Find(lsFind, 1, liContentSummaryRows)
	liFound = ldsContent.Find(lsFind, 1, liContentRows)
	If aiRec > 0 and liFound > 0 Then
		ldsNewContentSummary.SetItem(aiRec, "po_no2", lsNewPallet)
		ldsContent.SetItem(liFound, "po_no2", lsNewPallet)
		
		/* Populate the adjustment with content summary record */
		aiRC = ldsAdjustment.InsertRow(0)
		ldsAdjustment.SetItem( aiRC, "project_id", ldsNewContentSummary.GetItemString( aiRec, "project_id" ))
		ldsAdjustment.SetItem( aiRC, "sku", ldsNewContentSummary.GetItemString( aiRec, "sku" ))
		ldsAdjustment.SetItem( aiRC, "supp_code", ldsNewContentSummary.GetItemString( aiRec, "supp_code" ))
		ldsAdjustment.SetItem( aiRC, "owner_id", ldsNewContentSummary.GetItemNumber( aiRec, "owner_id" ))
		ldsAdjustment.SetItem( aiRC, "old_owner", ldsNewContentSummary.GetItemNumber( aiRec, "owner_id" ))
		ldsAdjustment.SetItem( aiRC, "country_of_origin", ldsNewContentSummary.GetItemString( aiRec, "country_of_origin" ))
		ldsAdjustment.SetItem( aiRC, "old_country_of_origin", ldsNewContentSummary.GetItemString( aiRec, "country_of_origin" ))
		ldsAdjustment.SetItem( aiRC, "wh_code", ldsNewContentSummary.GetItemString( aiRec, "wh_code" ))
		ldsAdjustment.SetItem( aiRC, "l_code", ldsNewContentSummary.GetItemString( aiRec, "l_code" ))
		ldsAdjustment.SetItem( aiRC, "inventory_type", ldsNewContentSummary.GetItemString( aiRec, "inventory_type" ))
		ldsAdjustment.SetItem( aiRC, "old_inventory_type", ldsNewContentSummary.GetItemString( aiRec, "inventory_type" ))
		ldsAdjustment.SetItem( aiRC, "serial_no", ldsNewContentSummary.GetItemString( aiRec, "serial_no" ))
		ldsAdjustment.SetItem( aiRC, "lot_no", ldsNewContentSummary.GetItemString( aiRec, "lot_no" ))
		ldsAdjustment.SetItem( aiRC, "old_lot_no", ldsNewContentSummary.GetItemString( aiRec, "lot_no" ))
		ldsAdjustment.SetItem( aiRC, "ro_no", ldsNewContentSummary.GetItemString( aiRec, "ro_no" ))
		ldsAdjustment.SetItem( aiRC, "po_no", ldsNewContentSummary.GetItemString( aiRec, "po_no" ))
		ldsAdjustment.SetItem( aiRC, "old_po_no", ldsNewContentSummary.GetItemString( aiRec, "po_no" ))
		ldsAdjustment.SetItem( aiRC, "po_no2", lsNewPallet )
		ldsAdjustment.SetItem( aiRC, "old_po_no2", isPallet )
		ldsAdjustment.SetItem( aiRC, "old_quantity",  ldsNewContentSummary.GetItemNumber( aiRec, "avail_qty" ))
		ldsAdjustment.SetItem( aiRC, "quantity", ldsNewContentSummary.GetItemNumber( aiRec, "avail_qty" ))
		ldsAdjustment.SetItem( aiRC, "reason", "Pallet Split")
		ldsAdjustment.SetItem( aiRC, "ref_no", lsDoNo)
		ldsAdjustment.SetItem( aiRC, "adjustment_type", "900")
		ldsAdjustment.SetItem( aiRC, "last_user", gs_userid)
		ldsAdjustment.SetItem( aiRC, "last_update", ldtToday)
		ldsAdjustment.SetItem( aiRC, "container_id", ldsNewContentSummary.GetItemString( aiRec, "container_id" ))
		ldsAdjustment.SetItem( aiRC, "expiration_date", ldsNewContentSummary.GetItemString( aiRec, "expiration_date" ))
		ldsAdjustment.SetItem( aiRC, "old_expiration_date", ldsNewContentSummary.GetItemString( aiRec, "expiration_date" ))
	
		// Update po_no2 in serial table
		For liSerialRow = 1 to liSerialRows
			If ldsSerial.GetItemString(liSerialRow, "carton_id") = lsContainer Then
				ldsSerial.SetItem(liSerialRow, "po_no2", lsNewPallet)
				ldsSerial.SetItem(liSerialRow, "update_date", ldtToday)
				ldsSerial.SetItem(liSerialRow, "update_user", gs_userid)
				liTotalSerialsChanged ++
			End If
		Next
		
	Else
		messagebox("Error updating content summary","Could not find container " + lsContainer + " in content summary.")
	End If
	
Next

lsMessage = "There will be " + string(liMoveRows) + " containers moved from palletID " + isPallet + " to new palletID " + lsNewPallet + ".~n~rDo you wish to continue with split?"
If MessageBox("Move containers from Pallet", lsMessage, Question!, YesNo!) = 1 Then
	Execute Immediate "Begin Transaction" using SQLCA;
	liRC = ldsSerial.update()
	If liRC = 1 Then
		liRC = ldsContent.update()
		If liRC = 1 Then
			//liRC = ldsNewContentSummary.update()		We should not have to save the content summary in this case.
			If liRC = 1 Then
				liRC = ldsAdjustment.update()
				If liRC = 1 Then
					lsMessage = "Pallet split has been successful~r~r New PalletID " + lsNewPallet
					Execute Immediate "Commit" Using Sqlca;
					
					select max(adjust_no) into :llAdjustNo from Adjustment 
					Where project_id = :gs_project and sku = :lsSku and last_user = :gs_userid and last_update = :ldtToday;
					
					//Remove color from pick list
					For liContainerRow = 1 to liContainerRows
						lsFind = "container_id = '" + lsContainers[liContainerRow] + "' "
						liFound = idw_pick.Find(lsFind, 1, liPickRows)
						If liFound > 0 Then
							idw_pick.SetItem(liFound,"color_code","0")
							idw_pick.SetItemStatus(liFound, "color_code", Primary!, NotModified! )
						End If
					Next
					
					lsMessage += "~r~rSee Adjustments " + string( llAdjustNo - liMoveRows +1 ) + " thru " + string( llAdjustNo ) + ". "
					f_method_trace_special( gs_project, 'w_do - ue_move_pallet' , lsMessage, lsDoNo,'','',isInvoiceNo)
					Messagebox("Pallet Split Process", lsMessage)
					
					//Print PALLET LEVEL label	
					If messagebox("Print Pallet Level Labels","Do you wish to print the Pallet Level Label?", Question!, YesNo!) = 1 Then
						liRC = f_print_pallet_level_labels( lsContainers, lsMoveContainers, lsSKU, isWhCode, isPallet, lsNewPallet )
					End If										
				Else
					lsMessage = "Error occurred while saving Adjustment  records~r~r" 
					Execute Immediate "Rollback" using SQLCA;
					f_method_trace_special( gs_project,  'w_do - ue_move_pallet'  , lsMessage, lsDoNo,'','',isInvoiceNo)
					Messagebox("Pallet Split Process", lsMessage)
				End If
			Else
				lsMessage = "Error occurred while saving Content Summary records~r~r" 
				Execute Immediate "Rollback" using SQLCA;
				f_method_trace_special( gs_project,  'w_do - ue_move_pallet'  , lsMessage, lsDoNo,'','',isInvoiceNo)
				Messagebox("Pallet Split Process", lsMessage)
			End If
		Else
			lsMessage = "Error occurred while saving Content records~r~r" 
			Execute Immediate "Rollback" using SQLCA;
			f_method_trace_special( gs_project,  'w_do - ue_move_pallet'  , lsMessage, lsDoNo,'','',isInvoiceNo)
			Messagebox("Pallet Split Process", lsMessage)
		End If
	Else
		lsMessage = "Error occurred while saving Serial records~r~r" 
		Execute Immediate "Rollback" using SQLCA;
		f_method_trace_special( gs_project,  'w_do - ue_move_pallet'  , lsMessage, lsDoNo,'','',isInvoiceNo)
		Messagebox("Pallet Split Process", lsMessage)
	End If
End If





end event

event ue_pick_mixed();//GailM 5/8/2019 DE10131 Google - SIMS - Footprints - Movements of Mixed Containers
String lsPalletNo, lsFilter, lsSKU, lsFind, lsSelect, lsWhere, lsSelect2, lsMixedType, lsLocation, lsLocType
Int liRow, liFound, li_Pos, li_Pos1, li_Pos2, li_Ret
Long llReqQty, llPickQty
Boolean lbCancelled
Datastore ldsFromPallet, ldsToPallet, ldsPickContainer
Str_parms	lstrParms
Str_parms	lstrReturnParms

lsSKU = idw_pick.GetItemString(ilCurrPickRow,'sku')
lsLocation = idw_pick.GetItemString(ilCurrPickRow,'l_code')

ldsFromPallet = Create datastore
ldsFromPallet.dataobject = 'd_pick_mixed'
ldsFromPallet.SetTransObject(SQLCA)
/*
lsSelect = ldsFromPallet.GetSQLSelect()

li_Pos =  Pos(lsSelect, "WHERE", 1)
li_Pos1 =  Pos(lsSelect, "ORDER", 1)
li_Pos2 = Len(lsSelect)

lsWhere = " WHERE PROJECT_ID = '" + gs_Project + "' and wh_code = '" +isWhCode + "' and sku = '" + lsSKU + "' " +&
				" and po_no2 = :palletno and carton_id = '" + isContainer + "' "

lsSelect = Left(lsSelect, li_Pos - 1) + lsWhere + Right(lsSelect, li_Pos2 - li_Pos1 + 2 )

li_Ret = ldsFromPallet.SetSqlSelect(lsSelect)
//ldsFromPallet.SetTransObject(SQLCA)

lsSelect2 = ldsFromPallet.GetSQLSelect()
*/
ldsFromPallet.Retrieve(gs_Project,isWhCode,lsSKU,isPallet,isContainer,lsLocation)	



ldsToPallet = Create datastore
ldsToPallet.dataobject = 'd_pick_mixed'
ldsToPallet.SetTransObject(SQLCA)

ldsPickContainer = Create datastore
ldsPickContainer.dataobject = 'd_do_picking'
ldsPickContainer.SetTransObject(SQLCA)

idw_pick.Rowscopy( ilCurrPickRow, ilCurrPickRow, Primary!, ldsPickContainer, 1, Primary!)

If ldsPickContainer.rowcount() = 1 Then
	llPickQty = ldsPickContainer.GetItemNumber( 1, "quantity" )
	lsSKU = ldsPickContainer.GetItemString( 1, "SKU" )
	lsFind = "SKU = '" + lsSKU + "' "
	liFound = idw_detail.Find( lsFind, 1, idw_detail.rowcount() )
	if liFound > 0 Then
		llReqQty = idw_detail.GetItemNumber( liFound, "req_qty" )
	Else
		messagebox("Error", "Cannot find sku required quantity")
	End If

// DE11156 Get Mixed Container Type - P = Pallet, C = Container, S = Loose Serials
If isPallet <> gsFootPrintBlankInd and isContainer = gsFootPrintBlankInd Then
	lsMixedType = "P"
ElseIf isPallet = gsFootPrintBlankInd and isContainer <> gsFootPrintBlankInd Then
	lsMixedType = "C"
ElseIf isPallet = gsFootPrintBlankInd and isContainer = gsFootPrintBlankInd Then
	lsMixedType = "S"
Else
	lsMixedType = "N"
End If

ibPharmacyProcessing = FALSE
lsLocType = getLocationType(isWhCode, lsLocation)
If lsLocType = "Z" Then ibPharmacyProcessing = TRUE	//Pharmacy - DAKitting
	
		lstrparms.String_Arg[1] = isPallet
		lstrparms.String_Arg[2] = isContainer
		lstrparms.String_Arg[3] = isinvoice_no
		lstrparms.String_Arg[4] = isWhCode
		lstrparms.String_Arg[5] = idw_main.GetItemString( 1, "ord_type" )
		lstrparms.String_Arg[6] = idw_pick.GetItemString(ilCurrPickRow, "color_code")
		lstrparms.String_Arg[7] = lsMixedType
		lstrparms.String_Arg[8] = lsLocation
		lstrparms.integer_arg[1] = ilCurrPickRow
		lstrparms.Boolean_arg[1] = ibPharmacyProcessing
		lstrparms.Long_Arg[1] = llReqQty
		lstrparms.Long_Arg[2] = llPickQty
		lstrparms.Datastore_Arg[1] = ldsFromPallet
		lstrparms.Datastore_Arg[2] = ldsToPallet
		lstrparms.Datastore_Arg[3] = ldsPickContainer
		lstrparms.Datawindow_Arg[1] = idw_pick
		lstrparms.Datawindow_Arg[2] = idw_pick_detail
		
		OpenWithParm(w_pick_pallet, lstrparms)
		
		//lstrReturnParms = Message.PowerobjectParm

		ldsFromPallet = lstrparms.Datastore_Arg[1]
		ldsToPallet = lstrparms.Datastore_Arg[2]
		lbCancelled = lstrparms.cancelled
	
	If lbCancelled Then
		messagebox("Cancelled","The process has been cancelled.")
	End If
Else
	messagebox("ue_pick_mixed error","Did not receive enough data from the pick list.  Please investigate.")
End If


end event

event ue_enter_serial_numbers();//GailM 9/5/2019 S37314 F17337 I1304 Google Footprints GPN Conversion Process
//We are expecting the color_code on each pick row to be "9" which indicates this is a footprint GPN but has less than full number of serial numbers in serial number inventory table
String lsFind, lsMessage
String lsContainers[], lsMoveContainers[]
String lsContainer, lsNewPallet, lsSKU, lsLocation
String lsOrderType, lsDoNo, isInvoiceNo
Long llAdjustNo, llReqQty
Boolean lbCancelled, lbPharmacyProcessing
Int liPickRows, liPickRow, liContentRows, liContentRow, liContainerRows, liContainerRow, liExists, liMoveNbr
Int liContentSummaryRow, liContentSummaryRows, liFound, liModified
Int liSerialRow, liSerialRows, liTotalSerialsChanged, liMoveRow, liMoveRows, aiRC, aiRec, liRC
datastore ldsAdjustment, ldsNewContentSummary,ldsSerial, ldsContent
datetime ldtToday

Datastore ldsFromPallet, ldsToPallet, ldsPickContainer
Str_parms	lstrParms
Str_parms	lstrReturnParms

ldsFromPallet = Create datastore
ldsFromPallet.dataobject = 'd_pick_pallet'
ldsFromPallet.SetTransObject(SQLCA)

ldsToPallet = Create datastore
ldsToPallet.dataobject = 'd_pick_pallet'
ldsToPallet.SetTransObject(SQLCA)

ldsPickContainer = Create datastore
ldsPickContainer.dataobject = 'd_do_picking'
ldsPickContainer.SetTransObject(SQLCA)

idw_pick.Rowscopy( ilCurrPickRow, ilCurrPickRow, Primary!, ldsPickContainer, 1, Primary!)

lsDoNo = idw_main.GetItemString(1, "do_no")
isInvoiceNo = idw_main.GetItemString(1, "invoice_no")
isWhCode = idw_main.GetItemString(1, "wh_code")
ldtToday = f_getLocalWorldTime( isWhCode ) 
ibPharmacyProcessing = FALSE

If ldsPickContainer.rowcount() = 1 Then
	lsSKU = ldsPickContainer.GetItemString( 1, "SKU" )
	lsLocation = ldsPickContainer.GetItemString(1, "l_code")
	llReqQty = ldsPickContainer.GetItemNumber(1, "quantity")
	lsFind = "SKU = '" + lsSKU + "' "
	llReqQty = f_footprint_serial_numbers(lsSKU, isWhCode, lsLocation, isPallet, isContainer, llReqQty)
	llReqQty = ABS(llReqQty)	//Positive value
	If llReqQty > 0 Then
		For liPickRow = 1 to llReqQty
			liSerialRow = ldsFromPallet.InsertRow(0)
			ldsFromPallet.SetItem(liSerialRow, "po_no2", isPallet)
			ldsFromPallet.SetItem(liSerialRow, "carton_id", isContainer)
			ldsFromPallet.SetItem(liSerialRow, "serial_no", "")
		Next
	Else
		// If the user wishes to change the pallet or container ID, allow the add window, otherwise
		//messagebox("Pallet/Container Splitting", "No serial numbers can be entered.")
	End If
	
	lstrparms.String_Arg[1] = isPallet
	lstrparms.String_Arg[2] = isContainer
	lstrparms.String_Arg[3] = isinvoice_no
	lstrparms.String_Arg[4] = isWhCode
	lstrparms.String_Arg[5] = idw_main.GetItemString( 1, "ord_type" )
	lstrparms.String_Arg[6] = idw_pick.GetItemString( ilCurrPickRow, 'color_code')
	lstrparms.String_Arg[7] = idw_pick.GetItemString( ilCurrPickRow, 'mixed_type')
	lstrparms.String_Arg[8] = idw_pick.GetItemString(ilCurrPickRow, "l_code")
	lstrparms.integer_arg[1] = ilCurrPickRow
	lstrparms.Boolean_arg[1] = ibPharmacyProcessing
	lstrparms.Long_Arg[1] = llReqQty
	lstrparms.Long_Arg[2] = llReqQty
	lstrparms.Datastore_Arg[1] = ldsFromPallet
	lstrparms.Datastore_Arg[2] = ldsToPallet
	lstrparms.Datastore_Arg[3] = ldsPickContainer
	lstrparms.Datawindow_Arg[1] = idw_pick
	lstrparms.Datawindow_Arg[2] = idw_pick_detail
	
	OpenWithParm(w_pick_pallet, lstrparms)
	
	//lstrReturnParms = Message.PowerobjectParm

	ldsFromPallet = lstrparms.Datastore_Arg[1]
	ldsToPallet = lstrparms.Datastore_Arg[2]
	lbCancelled = lstrparms.cancelled
	
	If lbCancelled Then
		messagebox("Cancelled","The process has been cancelled.")
	End If
Else
	messagebox("ue_enter_serial_numbers error","Did not receive one container row from the pick list.  Please investigate.")
End If

//MessageBox(is_title,"You will be asked to scan serial numbers for this pick row.~n~r~n~rWork in Progress.")

end event

event ue_tms_unlock();

idw_main.Object.otm_status.Protect = FALSE
idw_Main.SetTabOrder("OTM_status",20)
idw_main.Modify("otm_status.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	
idw_main.Object.load_id.Protect = False
idw_main.Modify("load_id.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	
idw_other.object.carrier.protect=False









end event

event ue_pro_unlock();//Begin - 03/09/21- Dinesh - S54604 - SIMS -  Google - Unlock the Assign Pro Nbr field

	idw_other.Object.carrier_pro_no.Protect = FALSE
	idw_other.Object.carrier_pro_no.Edit.DisplayOnly = False
	idw_other.Modify("carrier_pro_no.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
end event

public subroutine of_space ();
end subroutine

public function integer wf_set_pick_filter (string as_action);
//Pick list may be filtering component info. Most logic needs to process these rows anyway.
// so we may have to unfilter the pick list before processing and refilter afterwords.

Choose Case as_action
		
	Case 'Remove' /*remove existing filter*/
		
		idw_pick.SetFilter('')
		
	Case 'Set' /* Re-set*/
		
		If tab_main.tabpage_pick.cbx_show_comp.Checked Then
			idw_pick.SetFilter('')
		Else
			//idw_pick.SetFilter('sku=sku_parent')	
			idw_pick.SetFilter('Isnull(Component_ind) or Upper(Component_Ind) in ("Y","N","")')
		End If

End Choose

idw_pick.Filter()
idw_pick.GroupCalc()

Return 0
end function

public subroutine wf_bol_adjust ();string ls_add2,ls_add3,ls_wh_add3,ls_wh_add4
integer li_x,li_add3_y,li_city_y,li_add2_y,li_country_y
ls_add2=idw_bol.object.project_address_2[ 1 ]
ls_add3=idw_bol.object.project_address_3[ 1 ]
ls_wh_add3=idw_bol.object.warehouse_address_3[ 1 ]
ls_wh_add4=idw_bol.object.warehouse_address_4[ 1 ]

IF ISNULL(ls_add3) THEN
	li_add3_y = integer(idw_bol.object.project_address_3.Y)
	li_city_y = integer(idw_bol.object.project_city.Y)
	li_country_y = integer(idw_bol.object.project_country.Y)
	idw_bol.object.project_city.Y = li_add3_y
 	idw_bol.object.project_state.Y = li_add3_y
 	idw_bol.object.project_zip.Y = li_add3_y
	idw_bol.object.project_country.Y = li_city_y
	idw_bol.object.po_compute.Y = li_country_y
	ib_generate = true
END IF	
end subroutine

public function integer wf_set_pack_filter (string as_action);
//Pack list may be filtering component info. Most logic needs to process these rows anyway.
// so we may have to unfilter the pick list before processing and refilter afterwords.

Choose Case Upper(as_action)
		
	Case 'REMOVE' /*remove existing filter*/
		
		idw_pack.SetFilter('')
		
	Case 'SET' /* Re-set*/
		
		If tab_main.tabpage_pack.cbx_show_comp_pack.Checked Then
			idw_pack.SetFilter('')
		Else
//			idw_pack.SetFilter("component_ind Not in ('*','B')")	
			idw_pack.SetFilter('Isnull(Component_ind) or Upper(Component_Ind) in ("Y","N","")')
		End If

End Choose

idw_pack.Filter()
idw_pack.GroupCalc()

Return 0
end function

public function integer wf_check_valid ();Long i,ll_status
dwItemStatus l_status
idw_pick.Title = w_do.Title
 ll_status = 1
	FOR i=1 TO idw_pick.Rowcount()
		l_status= idw_pick.GetitemStatus(i,0,Primary!)
		IF l_status = DataModified! or  l_status = NewModified! THEN
			
//08/0100 - PCONKL - For now we are going to allow a '-' for a serialized item to allow for existing inventory with No Serial #'s			
//			IF idw_pick.Getitemstring(i,'serialized_ind') = 'Y' THEN
//				 ll_status=i_nwarehouse.of_check_blanks(idw_pick,i,'serial_no',is_title)				
//			END IF	 
			IF	idw_pick.Getitemstring(i,'lot_controlled_ind') = 'Y' THEN
					 ll_status=i_nwarehouse.of_check_blanks(idw_pick,i,'lot_no',is_title)					
			END IF
			
			IF	idw_pick.Getitemstring(i,'po_controlled_ind') = 'Y' THEN
					ll_status=i_nwarehouse.of_check_blanks(idw_pick,i,'po_no',is_title)					
			END IF
		END IF
		IF ll_status <> 1 THEN EXIT
	NEXT

 
return ll_status
end function

public function integer wf_check_confirm ();// 03/04 - PCONKL - moved to UO 

U_nvo_custom_validations	lu_validate

lu_validate = Create U_nvo_custom_validations

Return	lu_validate.uf_check_Confirm()


end function

public function integer wf_coo_validation (datawindow adw_serial, integer al_row);//wf_coo_validation
// This is exclusive validation for 3com
// When user enter Serial scan it does validation
// DGM 10/21/2003

// 05/04 - PCONKL - Changed validating tables to load at project setup into shared pool
// 03/03/06 - pvh replaced messagebox with doDisplayMessage, operators can scan through standard messages

String ls_sku, ls_supplier, ls_process_type, ls_serial_no, ls_syntax, ls_null, ls_carton, ls_coo
integer i,ll_max,ll_coo_find
Boolean lb_carton_scan,lb_sku_scan
long ll_find ,ll_desg_find
SetNull(ls_null)
ll_max= Upperbound(i_nwarehouse.ids_tables)

ls_sku = adw_serial.object.sku[al_row]
ls_supplier = adw_serial.object.supp_code[al_row]
ls_process_type=trim(upper(adw_serial.object.item_master_user_field4[al_row]))

IF ls_process_type <> 'BCC' and ls_process_type <> 'BNC' THEN Return 0

//Check for Carton scan or SKU Scan
ls_serial_no= upper(adw_serial.object.serial_no[al_row])
IF NOT ISNULL(ls_serial_no) THEN
		
	IF mid(ls_serial_no,1,1) <> 'C' and mid(ls_serial_no,1,1) <> 'M' and &
		mid(ls_serial_no,1,1) <> 'A' and mid(ls_serial_no,1,1) <> 'P' and mid(ls_serial_no,1,1) <> '3' THEN /* 07/04 - PCONKL - added A,P,3 to exclusion list */
		
			lb_carton_scan = TRUE
			ls_syntax = "serial_division = '" + mid(ls_serial_no,1,1) + "' and serial_supplier= '" &
							+ mid(ls_serial_no,4,1) + "'"
			ll_desg_find=i_nwarehouse.of_any_tables_filter(g.ids_coo_translate,ls_syntax)				
			IF  ll_desg_find <= 0 THEN
				doDisplayMessage(This.title,ls_serial_no + " Does not have a valid COO match.")
				//Messagebox(This.title,ls_serial_no + " Does not have a valid COO match.",StopSign!)
				adw_serial.object.serial_no[al_row] = ls_null
				adw_serial.POST ScrollTORow(al_row)
				adw_serial.POST Setcolumn('serial_no')
				Return 0
			END IF
			//ls_syntax = "prefix = '" + mid(ls_serial_no,1,3) + "'"
			ls_syntax = "prefix = '" + mid(ls_serial_no,1,3) + "' and SKU='" + ls_sku + "' and supp_code='" + ls_supplier + "'"
			IF i_nwarehouse.of_any_tables_filter(g.ids_item_serial_prefix,ls_syntax) <= 0 	THEN 
				doDisplayMessage(This.title,ls_serial_no + " is not a valid Serial number for part " +ls_sku)
//				Messagebox(This.title,ls_serial_no + " is not a valid Serial number for part " +ls_sku,StopSign!)
				adw_serial.object.serial_no[al_row] = ls_null
				adw_serial.POST ScrollTORow(al_row)
				adw_serial.POST Setcolumn('serial_no')
				Return 0
			END IF	
	ELSE	
		lb_sku_scan = TRUE
		Return 0
	END IF	
END IF
	
	
//Updating packing list coo
ll_find = 1
	
IF NOT ISNULL(adw_serial.object.carton_no[al_row]) THEN
   ls_carton =  adw_serial.object.carton_no[al_row]
ELSEIF This.tab_main.tabpage_serial.sle_carton_no.Text > '' and  ISNULL(adw_serial.object.carton_no[al_row]) THEN
	ls_carton = This.tab_main.tabpage_serial.sle_carton_no.Text
ELSE
	Messagebox(this.title,"Please enter the carton Number")
	Return 0
END IF	
			 
ls_syntax = "carton_no = '"+ ls_carton + "' and sku = '" + ls_sku + "' and supp_code = '" + ls_supplier + "'"
ll_find = idw_pack.Find(ls_syntax,ll_find ,idw_pack.Rowcount())
		
//05/05 - PCONKL - Packing Row not found, this is probably a child sku and only the parent is displayed on the PL
//						 get the Parent from the Pick List and update the parent on the PL
If ll_Find = 0 Then
			
	ls_syntax = "Line_Item_No = " + String(adw_serial.getITemNumber(al_row,'Line_Item_No')) + " and Component_ind = 'Y'"
	ll_find = idw_pick.Find(ls_syntax,1,idw_pick.Rowcount())
	
	If ll_Find > 0 Then
		ls_syntax = "carton_no = '"+ ls_carton + "' and sku = '" + idw_pick.GetITemString(ll_Find,'sku') + "' and supp_code = '" + idw_pick.GetITemString(ll_Find,'Supp_Code') + "'"
		ll_find = idw_pack.Find(ls_syntax,1 ,idw_pack.Rowcount())
	End If
	
End If /*sku not found on PL */
			
IF ll_find > 0 and  ll_desg_find > 0 THEN
	
	ls_coo= g.ids_coo_translate.object.Designating_Code[ll_desg_find]
	ls_syntax =  "iso_country_cd = '" + ls_coo + "'"	
	ll_coo_find= i_nwarehouse.of_any_tables_filter(g.ids_Country,ls_syntax)
	
	IF ll_coo_find  <= 0 	THEN
		doDisplayMessage(this.title,"Country of Origin not found for updating pack list")
		//Messagebox(this.title,"Country of Origin not found for updating pack list")
		Return 0
	ELSE
		//Get the 2 char from country table & assign it to pack list
		ls_coo=g.ids_Country.object.Designating_Code[ll_coo_find]
		idw_pack.object.country_of_origin[ll_find]=ls_coo
	END IF	
			
END IF

Return 1




end function

public subroutine wf_assignetom (integer ai_number); String ls_wh
long ll_row,i
CHOOSE CASE ai_number 
	CASE 0 //Called for a new record
 		tab_main.tabpage_pack.rb_eng.Enabled= false
		tab_main.tabpage_pack.rb_metric.Enabled= false 
	CASE 1 //Called for initialisation just after Retrivel
		IF idw_pack.Rowcount() > 0 THEN
			tab_main.tabpage_pack.rb_eng.Enabled= TRUE
			tab_main.tabpage_pack.rb_metric.Enabled= TRUE 
			IF idw_pack.object.standard_of_measure[1] = 'E' THEN
				tab_main.tabpage_pack.rb_eng.Checked = TRUE
				tab_main.tabpage_pack.cb_ci_load_tender.Enabled= False // Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer
			ELSE
				tab_main.tabpage_pack.rb_metric.Checked = TRUE
			END IF
		END IF		
	CASE 2 //Called For Genrate & Insert Values
		tab_main.tabpage_pack.rb_eng.Enabled= TRUE
		tab_main.tabpage_pack.rb_metric.Enabled= TRUE 
		/* dts 05/29/08 - why are we looping thru here? It's just switching btwn rb_eng and rb_metric (in the case of mixed)
		   - should just grab Standord Of Measure from WH
			  or 1st packing record (which should be the same)
		For i = 1 to idw_pack.Rowcount()
		 IF idw_pack.object.standard_of_measure[i]= 'E' THEN
				tab_main.tabpage_pack.rb_eng.Checked = TRUE
			ELSE
				tab_main.tabpage_pack.rb_metric.Checked = TRUE
			END IF	
		NEXT	
		*/
		tab_main.tabpage_pack.rb_eng.Checked = TRUE
		IF idw_pack.Rowcount() > 0 THEN
			IF idw_pack.object.standard_of_measure[1]= 'M' THEN
				tab_main.tabpage_pack.rb_metric.Checked = TRUE
			END IF
		End If
END CHOOSE

	
	
end subroutine

public subroutine wf_check_status ();str_multiparms lstr_parms
integer i
long ll_rtn, llcount
string lsStatus //6/21/04 dts
string lsFindStr
string ls_dw_color
String ls_load_Id 
String lsSerialValFlag
 ib_enable_bol=false

//Delivery Main information
i=1
lstr_parms.string_arg1[i]="ord_date";i++
//lstr_parms.string_arg1[i]="complete_date";i++
lstr_parms.string_arg1[i]="ord_type";i++
lstr_parms.string_arg1[i]="priority";i++
lstr_parms.string_arg1[i]="wh_code";i++
lstr_parms.string_arg1[i]="inventory_type";i++
lstr_parms.string_arg1[i]="line_of_business";i++
lstr_parms.string_arg1[i]="cust_code";i++
lstr_parms.string_arg1[i]="cust_order_no";i++
lstr_parms.string_arg1[i]="Cust_Name";i++
lstr_parms.string_arg1[i]="Address_1";i++
lstr_parms.string_arg1[i]="Address_2";i++
lstr_parms.string_arg1[i]="Address_3";i++
lstr_parms.string_arg1[i]="Address_4";i++
lstr_parms.string_arg1[i]="District";i++
lstr_parms.string_arg1[i]="City";i++
lstr_parms.string_arg1[i]="State";i++
lstr_parms.string_arg1[i]="Zip";i++
lstr_parms.string_arg1[i]="Country";i++
lstr_parms.string_arg1[i]="back_order_no";i++
lstr_parms.string_arg1[i]="address_code";i++
lstr_parms.string_arg1[i]="contact_person";i++
lstr_parms.string_arg1[i]="fax";i++
lstr_parms.string_arg1[i]="tel";i++
// GailM 06/15/2015 - Add named fields for display on dw_main
lstr_parms.string_arg1[i]="account_nbr";i++
lstr_parms.string_arg1[i]="asn_number";i++
lstr_parms.string_arg1[i]="sli_nbr";i++
lstr_parms.string_arg1[i]="client_cust_po_nbr";i++
lstr_parms.string_arg1[i]="client_cust_so_nbr";i++
lstr_parms.string_arg1[i]="seal_nbr";i++
lstr_parms.string_arg1[i]="fob";i++
lstr_parms.string_arg1[i]="dock_code";i++
lstr_parms.string_arg1[i]="document_codes";i++
lstr_parms.string_arg1[i]="fob_bill_duty_party";i++
lstr_parms.string_arg1[i]="fob_bill_duty_acct";i++
lstr_parms.string_arg1[i]="fob_bill_freight_party";i++
lstr_parms.string_arg1[i]="fob_bill_freight_to_acct";i++
lstr_parms.string_arg1[i]="container_nbr";i++
lstr_parms.string_arg1[i]="routing_nbr";i++
lstr_parms.string_arg1[i]="equipment_nbr";i++
lstr_parms.string_arg1[i]="from_wh_loc";i++
lstr_parms.string_arg1[i]="shipping_route";i++
// End of Named Fields

lstr_parms.string_arg1[i]="request_date";i++
lstr_parms.string_arg1[i]="pick_start";i++
lstr_parms.string_arg1[i]="pick_complete";i++
lstr_parms.string_arg1[i]="schedule_date";i++
lstr_parms.string_arg1[i]="edm_generate_datetime";i++ //TimA 12/28/11 New Field for OTM
//lstr_parms.string_arg1[i]="delivery_date";i++
lstr_parms.string_arg1[i]="scanner_id";i++
lstr_parms.string_arg1[i]="scanner_status";i++
lstr_parms.string_arg1[i]="receive_date"
//Delivery other information
i=1
lstr_parms.string_arg2[i]="invoice_no";i++
lstr_parms.string_arg2[i]="ship_ref";i++
lstr_parms.string_arg2[i]="carrier";i++
lstr_parms.string_arg2[i]="freight_terms";i++
lstr_parms.string_arg2[i]="ship_via";i++
lstr_parms.string_arg2[i]="user_field1";i++
lstr_parms.string_arg2[i]="freight_cost";i++
lstr_parms.string_arg2[i]="ctn_cnt";i++
lstr_parms.string_arg2[i]="weight";i++
lstr_parms.string_arg2[i]="shipping_carton_volume";i++
lstr_parms.string_arg2[i]="transport_mode";i++ 
lstr_parms.string_arg2[i]="agent_info";i++ 
lstr_parms.string_arg2[i]="freight_etd";i++
lstr_parms.string_arg2[i]="freight_eta";i++
lstr_parms.string_arg2[i]="freight_atd";i++
lstr_parms.string_arg2[i]="freight_ata";i++
lstr_parms.string_arg2[i]="awb_bol_no";i++
lstr_parms.string_arg2[i]="customs_doc";i++
lstr_parms.string_arg2[i]="trader_id";i++
lstr_parms.string_arg2[i]="contract_owner_id";i++
lstr_parms.string_arg2[i]="factory_id";i++
lstr_parms.string_arg2[i]="user_field2";i++
lstr_parms.string_arg2[i]="user_field3";i++
lstr_parms.string_arg2[i]="user_field4";i++
lstr_parms.string_arg2[i]="user_field5";i++
lstr_parms.string_arg2[i]="user_field6";i++
lstr_parms.string_arg2[i]="user_field7";i++
lstr_parms.string_arg2[i]="user_field8";i++
lstr_parms.string_arg2[i]="user_field9";i++
lstr_parms.string_arg2[i]="user_field10";i++
lstr_parms.string_arg2[i]="scanner_id";i++
lstr_parms.string_arg2[i]="scanner_status";i++
lstr_parms.string_arg2[i]="remark"

//Delivery Detail information
i=1
lstr_parms.string_arg3[i]="line_item_No";i++
lstr_parms.string_arg3[i]="sku";i++
lstr_parms.string_arg3[i]="supp_code";i++
lstr_parms.string_arg3[i]="alternate_sku";i++
lstr_parms.string_arg3[i]="req_qty";i++
lstr_parms.string_arg3[i]="uom";i++
lstr_parms.string_arg3[i]="price";i++
lstr_parms.string_arg3[i]="tax";i++
lstr_parms.string_arg3[i]="user_field1";i++
lstr_parms.string_arg3[i]="user_field2";i++	
lstr_parms.string_arg3[i]="user_field3";i++
lstr_parms.string_arg3[i]="user_field4";i++
lstr_parms.string_arg3[i]="user_field5";i++
lstr_parms.string_arg3[i]="user_field6";i++
lstr_parms.string_arg3[i]="user_field7";i++
lstr_parms.string_arg3[i]="user_field8";i++
lstr_parms.string_arg3[i]="currency_code";i++
lstr_parms.string_arg3[i]="Pick_lot_no";i++
lstr_parms.string_arg3[i]="Pick_po_no";i++
lstr_parms.string_arg3[i]="Pick_po_no2";i++
lstr_parms.string_arg3[i]="User_line_Item_No";i++
lstr_parms.string_arg3[i]="Customer_SKU";i++
lstr_parms.string_arg3[i]="line_total_amt";i++
lstr_parms.string_arg3[i]="line_tax_amt";i++
lstr_parms.string_arg3[i]="line_discount_amt";i++
lstr_parms.string_arg3[i]="client_cust_line_no";i++
lstr_parms.string_arg3[i]="vat_identifier";i++
lstr_parms.string_arg3[i]="mark_for_name";i++
lstr_parms.string_arg3[i]="mark_for_address_1";i++
lstr_parms.string_arg3[i]="mark_for_address_2";i++
lstr_parms.string_arg3[i]="mark_for_address_3";i++
lstr_parms.string_arg3[i]="mark_for_address_4";i++
lstr_parms.string_arg3[i]="mark_for_city";i++
lstr_parms.string_arg3[i]="mark_for_state";i++
lstr_parms.string_arg3[i]="mark_for_zip";i++
lstr_parms.string_arg3[i]="mark_for_country"


// GailM 06/15/2015 - Add named fields for display on dw_main
//lstr_parms.string_arg3[i]="CI_Value";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Currency";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Cust_Line_Nbr";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Client_Cust_Invoice";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Cust_PO_Nbr";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Delivery_Nbr";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Internal_Price";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Client_Inv_Type";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Permit_Nbr";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Buyer_Part";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Vendor_Part";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="UPC";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="EAN";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="GTIN";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Department_Name";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Division";i++							Not yet added to DW
//lstr_parms.string_arg3[i]="Packaging_Characteristics";							Not yet added to DW


// Pick information
i=1
lstr_parms.string_arg4[i]="line_item_no";i++
lstr_parms.string_arg4[i]="sku";i++
lstr_parms.string_arg4[i]="supp_code";i++
lstr_parms.string_arg4[i]="country_of_origin";i++
lstr_parms.string_arg4[i]="l_code";i++
lstr_parms.string_arg4[i]="inventory_type";i++
lstr_parms.string_arg4[i]="serial_no";i++
lstr_parms.string_arg4[i]="lot_no";i++
lstr_parms.string_arg4[i]="po_no";i++
lstr_parms.string_arg4[i]="po_no2";i++
lstr_parms.string_arg4[i]="container_id";i++ /*11/02 - PConkl */
lstr_parms.string_arg4[i]="expiration_date";i++ /*11/02 - PConkl */
lstr_parms.string_arg4[i]="cntnr_length";i++ /*02/03 - PCONKL */
lstr_parms.string_arg4[i]="cntnr_Width";i++ /*02/03 - PCONKL */
lstr_parms.string_arg4[i]="cntnr_height";i++ /*02/03 - PCONKL */
lstr_parms.string_arg4[i]="cntnr_weight";i++ /*02/03 - PCONKL */
lstr_parms.string_arg4[i]="quantity";i++
lstr_parms.string_arg4[i]="user_field1";i++
lstr_parms.string_arg4[i]="user_field2"

//Pack information
i=1
lstr_parms.string_arg5[i]="carton_no";i++
lstr_parms.string_arg5[i]="carton_type";i++
lstr_parms.string_arg5[i]="line_item_no";i++
lstr_parms.string_arg5[i]="sku";i++
lstr_parms.string_arg5[i]="supp_code";i++
lstr_parms.string_arg5[i]="country_of_origin";i++
//lstr_parms.string_arg5[i]="free_form_serial_no";i++
lstr_parms.string_arg5[i]="type_of_product";i++
lstr_parms.string_arg5[i]="quantity";i++
lstr_parms.string_arg5[i]="length";i++
lstr_parms.string_arg5[i]="width";i++
lstr_parms.string_arg5[i]="height";i++
//lstr_parms.string_arg5[i]="cbm";i++
lstr_parms.string_arg5[i]="weight_net";i++
lstr_parms.string_arg5[i]="weight_gross";i++
lstr_parms.string_arg5[i]="shipper_tracking_id";i++
lstr_parms.string_arg5[i]="user_field1";i++
lstr_parms.string_arg5[i]="user_field2";i++

// GailM 06/15/2015 - Add named fields for display on dw_main
//lstr_parms.string_arg5[i]="InterPack_Count";i++						Not yet added to DW
//lstr_parms.string_arg5[i]="InterPack_Type";i++							Not yet added to DW
lstr_parms.string_arg5[i]="Pack_SSCC_No";i++
//lstr_parms.string_arg5[i]="Outerpack_Type";i++						Not yet added to DW
lstr_parms.string_arg5[i]="Outerpack_SSCC_No";i++
//lstr_parms.string_arg5[i]="Outerpack_ID";i++							Not yet added to DW


isle_order.DisplayOnly = True
isle_order2.DisplayOnly = True /*04/02 - PCONKL*/
isle_order.TabOrder = 0

icb_confirm.Text = '&Confirm' /* 03/04 - PCONKL - text might have been changed to allow for a re-confirmation*/

//TimA 05/08/13 Setting this varable to true for all customers.  Pandora handles it's setting in wf_lock
bChange_cf_owner_name_Allowed = True

// 08/04 - TAM - Notes enabled only if available
		
select Count(*)
into :llcount
from delivery_notes
where project_id = :GS_Project and do_no = :is_dono ;
		
// TAM - 2018/08 - S22531 - Button to lock/unlock load is visible to pandora only and will be set below
icb_lock_load.Enabled = False
icb_lock_load_google.Enabled = False // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status

If llcount > 0 then
	icb_notes.Enabled = True
Else
	icb_notes.Enabled = False
End If

lsStatus = idw_main.GetItemString(1,"ord_status")
tab_main.tabpage_main.cb_open_ro.visible=False				//SARUN2016FEB10:RO_Open
IF idw_main.GetItemString(1,'ord_type') = 'Z' THEN
	if gs_project = 'PANDORA' then
		tab_main.tabpage_main.cb_do_select_customer.text = 'TO &Location:'
		if lsStatus = 'D' OR lsStatus = 'C' then tab_main.tabpage_main.cb_open_ro.visible=True				//SARUN2016FEB10:RO_Open
	else
		tab_main.tabpage_main.cb_do_select_customer.text = 'TO &Warehouse:'
	end if
ELSE
	tab_main.tabpage_main.cb_do_select_customer.text = 'C&ustomer Code:'
END IF

// TAM W&S 2010/12 Lock Down Fields for Wine and Spirit
If left(gs_project,3) = 'WS-'   then
	idw_detail.object.req_qty.protect = true
	idw_detail.object.uom.protect = true    
	idw_detail.SetTabOrder("req_qty", 0)
	idw_detail.SetTabOrder("uom", 0)
	idw_detail.object.user_field4.protect = true
	idw_detail.object.user_field5.protect = true
	idw_detail.object.user_field6.protect = true
	idw_detail.object.user_field7.protect = true
	idw_detail.SetTabOrder("user_field4", 0)
	idw_detail.SetTabOrder("user_field5", 0)
	idw_detail.SetTabOrder("user_field6", 0)
	idw_detail.SetTabOrder("user_field7", 0)
END IF

lsStatus = idw_main.GetItemString(1,"ord_status")

// 11/11 - PCONKL - Toggle Text on HOLD button depending on the current status
If lsStatus = 'H' Then
	icb_hold.Text = 'Remove &Hold'
Else
	icb_hold.Text = '&Hold'
End If

Choose Case lsStatus
		
	Case "N"
		
		i_nwarehouse.of_settab(idw_main,lstr_parms,1) //DGM 010401
      	i_nwarehouse.of_settab(idw_other,lstr_parms,2) //DGM 010401 		
      	i_nwarehouse.of_settab(idw_detail,lstr_parms,3) //DGM 010401 
		i_nwarehouse.of_settab(idw_pick,lstr_parms,4) //DGM 010401
		i_nwarehouse.of_settab(idw_pack,lstr_parms,5) //DGM 010401
		
		im_menu.m_file.m_save.Enabled = True
		im_menu.m_file.m_print.Enabled = False
		im_menu.m_file.m_refresh.Enabled = True
		If ib_edit Then
			im_menu.m_record.m_delete.Enabled = True
			im_menu.m_file.m_retrieve.Enabled = True
		Else
			im_menu.m_record.m_delete.Enabled = False
			im_menu.m_file.m_retrieve.Enabled = False
		End If
		
		tab_main.tabpage_other.Enabled = True
		tab_main.tabpage_detail.Enabled = True
		
		tab_main.tabpage_bol.Enabled = false /* 05/04/00 PCONKL*/
		If ib_edit Then
			tab_main.tabpage_pick.Enabled = True
			tab_main.tabpage_pack.Enabled = True
		Else
			tab_main.tabpage_pick.Enabled = False
			tab_main.tabpage_pack.Enabled = False		

		End If
		
		If isTMSstatus = "Z" Then		//GailM 11/19/2018 S25773 - TMS eligible but overridden (NA)
			tab_main.tabpage_Carrier.Enabled = true
		Else
			tab_main.tabpage_Carrier.Enabled = false
		End If
		
		tab_main.tabpage_Trax.Enabled = false
		
//		icb_dn.Enabled = False
		If ib_edit Then
			icb_void.Enabled = True
			icb_confirm.Enabled = True
			icb_hold.Enabled = True
			//temp - icb_ReadyToShip???
		Else
			icb_void.Enabled = False
			icb_confirm.Enabled = False
			icb_hold.Enabled = False
		End If

		tab_main.tabpage_main.cb_do_select_customer.visible=True /* 11/00 PCONKL */
		tab_main.tabpage_main.cb_do_select_customer.bringtoTop=True
		tab_main.tabpage_main.cb_do_pod.enabled=False 
		
		icb_det_insert.Enabled = True
		icb_det_delete.Enabled = True
		icb_pick_insert.Enabled = True
		icb_pick_copy.Enabled = True /* 08/00 PCONKL */
		icb_pick_delete.Enabled = True
		icb_pick_generate.Enabled = True
		icb_pick_print.Enabled = True
		icb_LMSRoute.Enabled = True /* 1/30/04 dts */
		icb_LMSRate.Enabled = True /* 1/30/04 dts */
		icb_pack_insert.Enabled = True
		icb_pack_delete.Enabled = True
		icb_pack_copy.Enabled = True
		tab_main.tabpage_pack.cb_pack_generate.Enabled = True
		tab_main.tabpage_pack.cb_import_pack.Enabled = False
		icb_pack_print.Enabled = True
		icb_Shipment.Enabled = False
		icb_ship_docs.Enabled = False
//		tab_main.tabPage_detail.cb_ship_all.Enabled = True
		
		icb_pick_unallocate.enabled =False   //27-SEP-2017 :Madhu PEVS-848 KDO Return to Stock
		
		// 01/01 PCONKL - Enable updating of Outbound Serial #'s
		// 01/09 - Don't want to allow manual updating for LMC
		If gs_project = 'LMC' Then
			tab_main.tabpage_serial.rb_manual.Enabled = False
		Else
			tab_main.tabpage_serial.rb_manual.Enabled = True
		End If

		

		tab_main.tabpage_serial.rb_barcode.Enabled = True
		tab_main.tabpage_serial.sle_barcodes.Enabled = True
		tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = False
		tab_main.tabpage_serial.cb_ob_serial_insert.Enabled = False
		tab_main.tabpage_serial.cb_ob_serial_Delete.Enabled = False
		tab_main.tabpage_serial.cb_undo.Enabled = False
		wf_assignetom(0) //Disable the Engish to Metrics Radio Buttons 
		
		IF Upper(gs_project) = "EUT" OR Upper(gs_project) = "RUN-WORLD"  OR Upper(gs_project) = "GIGA" THEN
			idw_main.SetTabOrder("Delivery_date",15)			
		ELSE
			idw_main.SetTabOrder("Delivery_date",0) /* 03/02 - Delivery_Date only enabled after confirmation*/
		END IF
		
	
		//04/02 - PCONKL - We will allow the user to update the Order Number field in a new status
		// 04/08 - dts - ...but not if it's been electronically received.
		IF idw_main.object.edi_batch_seq_no[1] > 0 THEN
			isle_order2.DisplayOnly = True
		ELSE
			isle_order2.DisplayOnly = False
		end if
		
		//07.04 - PCONKl - Enable alt ADdress tabs
		wf_address_tab_enable(True)

	// TAM W&S 2010/12 Lock Down Fields for Wine and Spirit
		If left(gs_project,3) = 'WS-'   then
			idw_detail.SetTabOrder("req_qty", 0)
			idw_detail.SetTabOrder("uom", 0)
			idw_detail.SetTabOrder("user_field4", 0)
			idw_detail.SetTabOrder("user_field5", 0)
			idw_detail.SetTabOrder("user_field6", 0)
			idw_detail.SetTabOrder("user_field7", 0)
		END IF

		//MEA - 09/2011 - For Trax change
		wf_enable_trax_data_entry()
		
		// 11/11 - PCONKL - Enable Hold button for Admin/Super
		If gs_role <> '2' Then
			icb_hold.Enabled = True
		End If

		
		// 11/11 - PCONKL - Disable Custom1 (Export for Nike)
		If left(gs_Project,4) = 'NIKE' Then
			
			tab_main.tabpage_Main.cb_custom1.enabled = False

			if idw_main.getitemnumber(1, "edi_batch_seq_no") > 0 then
				idw_detail.object.req_qty.protect = true
				idw_detail.object.uom.protect = true

				icb_det_insert.Enabled = False
				icb_det_delete.Enabled = False			
				

			else
				idw_detail.object.req_qty.protect = false

			end if

		End IF
		
		//11/12 - MEA - Added Validate for Stryker
		If gs_Project = 'STRYKER' Then
			tab_main.tabpage_Main.cb_custom1.enabled = False
			icb_confirm.enabled = False
			tab_main.tabpage_main.st_validation_msg.text = ""
		End IF

		//12/12/12 - TAM - Added Button for W&S
		If left(Upper(gs_project),3) = 'WS-' then
			tab_main.tabpage_Main.cb_custom1.enabled = False
		End IF
		
		//Jxlim 08/23/2013 Ariens serial validation button 
		If 	Upper(gs_project) = 'ARIENS' Then
			icb_serial.Enabled = True
		End if
		
		//GailM 06/15/2015 Enable named fields
		wf_named_field_enable(true)
		
		// GailM 06/15/2015 Set is_nfNextTab to determine next tab column on idw_main
		is_nfNextTab = wf_tab_next(lstr_parms)
		
		icb_import_ib.Enabled = True  //GailM 8/26/2015 - Enable detail button only for New status

		tab_main.tabpage_pack.cb_calc_carton_count.Enabled = False /* 08/16 - PCONKL*/
		
		If Upper(gs_project) ='REMA' Then tab_main.tabpage_Main.cb_custom1.enabled = False //26-MAR-2018 :Madhu Rema -Update process for printing pallet labels		
		
	// GailM - 08/06/2014 - Pandora Issue 888 Added status Z (Order is being confirmed  by another - display only)
	//27-Jul-2016 :Madhu- Moved "Z" to below - to lock order same as completed.
	// DINESH - 03/16/2023- sims-73- Google - SIMS - Load Lock and New Loading Status // Added Loading "L" status
	Case "P", "I", "A","Q","L" /* 11/11 - PCONKL - added 'Q' for Nike to denote time between exporting to scanner and re-
importing*/

      	i_nwarehouse.of_settab(idw_main,lstr_parms,1) 
     	i_nwarehouse.of_settab(idw_other,lstr_parms,2) 
		i_nwarehouse.of_settab(idw_detail,lstr_parms,3) 
      	i_nwarehouse.of_settab(idw_pick,lstr_parms,4) 
      	i_nwarehouse.of_settab(idw_pack,lstr_parms,5) 
	
		im_menu.m_file.m_save.Enabled = True
		im_menu.m_file.m_retrieve.Enabled = True
		im_menu.m_file.m_print.Enabled = True
		im_menu.m_file.m_refresh.Enabled = True
		im_menu.m_record.m_delete.Enabled = True
		
		tab_main.tabpage_other.Enabled = True
		tab_main.tabpage_detail.Enabled = True
		tab_main.tabpage_pick.Enabled = True
		tab_main.tabpage_pack.Enabled = True
		tab_main.tabpage_bol.Enabled = True 
		// Begin - 02072022- Dinesh - S66897- Google - SIMS - CBOL Changes
		if gs_project='PANDORA' then
			tab_main.tabpage_bol.Enabled = False   
		end if	
		// End - 02072022- Dinesh - S66897- Google - SIMS - CBOL Changes
		tab_main.tabpage_Carrier.Enabled = True

		
		
		wf_enable_trax() /*enable or disable trax page depening on warehouse setting*/
		
//		icb_dn.Enabled = True
		icb_void.Enabled = True
		icb_confirm.Enabled = True
		icb_ReadyToShip.Enabled = True /* 6/21/04 dts */
		icb_det_insert.Enabled = True
		icb_det_delete.Enabled = True
		icb_pick_insert.Enabled = True
		icb_pick_copy.Enabled = True 
		icb_pick_delete.Enabled = True
		icb_pick_generate.Enabled = True
		icb_pick_print.Enabled = True
		icb_LMSRoute.Enabled = True /* 1/30/04 dts */
		icb_LMSRate.Enabled = True /* 1/30/04 dts */
		icb_pack_insert.Enabled = True
		icb_pack_delete.Enabled = True
		icb_pack_copy.Enabled = True
		// GailM S20849 Do not allow pack list generation if container needs split
		if ibSplitContainerRequired = True Then
			tab_main.tabpage_pack.cb_pack_generate.Enabled = False
		else
			tab_main.tabpage_pack.cb_pack_generate.Enabled = True
		End If
		icb_pack_print.Enabled = True
		icb_ship_docs.Enabled = True
		tab_main.tabpage_main.cb_do_select_customer.visible=True /* 11/00 PCONKL */
		tab_main.tabpage_main.cb_do_select_customer.bringtoTop=True
//		tab_main.tabPage_detail.cb_ship_all.Enabled = True
		tab_main.tabpage_main.cb_do_pod.enabled=False 
		tab_main.tabpage_pack.cb_import_pack.Enabled = True
		
		icb_import_ib.Enabled = False  //GailM 8/26/2015 - Enable detail button only for New status
		icb_pick_unallocate.enabled =True //27-SEP-2017 :Madhu PEVS-848 KDO Return to Stock
		
		// 05/04 - PCONKL - Shipments only enabled in Packing
	// Begin - Dinesh - 03/17/2023 - SIMS-53- Google - SIMS - Load Lock and New Loading Status
	if gs_project='PANDORA' then
			
		If lsStatus = 'L' Then
			icb_Shipment.Enabled = True
		Else
			icb_Shipment.Enabled = False
		End If
	// End - Dinesh - 03/17/2023 - SIMS-53- Google - SIMS - Load Lock and New Loading Status
	else
		If lsStatus = 'A' Then
			icb_Shipment.Enabled = True
		Else
			icb_Shipment.Enabled = False
		End If
	end if
		
			
		
		// 08/04 - TAM - Notes enabled only if available
		
		select Count(*)
		into :llcount
		from delivery_notes
		where project_id = :GS_Project and do_no = :is_dono ;
		
		If llcount > 0 then
			icb_notes.Enabled = True
		Else
			icb_notes.Enabled = False
		End If
			 
		IF lsStatus <> 'A' THEN wf_assignetom(0)//Disable the Engish to Metrics Radio Buttons 
		// Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		If gs_project='PANDORA' THEN
			IF lsStatus <> 'L' THEN wf_assignetom(0)//Disable the Engish to Metrics Radio Buttons 
		End if
		
		// 01/01 PCONKL - Enable updating of Outbound Serial #'s
		// 01/09 - Don't want to allow manual updating for LMC
		
		// 12/09 - PCONKL - Enable Serial Tab if scanning all items (pack val)
		// GailM 8/20/2014 Pandora 883 DejaVu - scan container IDs
		if g.ibscanallordersrequired or ibDejaVu Then 
				tab_main.tabpage_serial.Enabled = True
				tab_main.tabpage_serial.sle_carton_no.Enabled = True
		End If
			
		If gs_project = 'LMC' Then
			tab_main.tabpage_serial.rb_manual.Enabled = False
		Else
			tab_main.tabpage_serial.rb_manual.Enabled = True
		End If
		
		tab_main.tabpage_serial.rb_barcode.Enabled = True
		tab_main.tabpage_serial.sle_barcodes.Enabled = True
		// GailM S20849 Do not allow pack list generation if container needs split
		if ibSplitContainerRequired = True Then
			tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = False
		Else
			tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = True
		End If
		tab_main.tabpage_serial.cb_ob_serial_insert.Enabled = True
		tab_main.tabpage_serial.cb_ob_serial_Delete.Enabled = True
		tab_main.tabpage_serial.cb_undo.Enabled = True
		tab_main.tabpage_serial.dw_serial.Object.DataWindow.ReadOnly= False
		
		IF Upper(gs_project) = "EUT" OR Upper(gs_project) = "RUN-WORLD" OR Upper(gs_project) = "GIGA" THEN
			idw_main.SetTabOrder("Delivery_date",15) 
		ELSE
			idw_main.SetTabOrder("Delivery_date",0) /* 03/02 - Delivery_Date only enabled after confirmation*/
		END IF
	
	
		// 07/04 - PCONKl - Enable alt ADdress tabs
		wf_address_tab_enable(True)
		
		// 09/04 - PCONKL - Enable Complete Date for IAE only
		If Upper(gs_Project) = 'IAE' Then
			idw_main.SetTabOrder("Complete_date",999)
		End If
		
		// TAM W&S 2010/12 Lock Down Fields for Wine and Spirit
		If left(gs_project,3) = 'WS-'   then
			idw_detail.SetTabOrder("req_qty", 0)
			idw_detail.SetTabOrder("uom", 0)
			idw_detail.SetTabOrder("user_field4", 0)
			idw_detail.SetTabOrder("user_field5", 0)
			idw_detail.SetTabOrder("user_field6", 0)
			idw_detail.SetTabOrder("user_field7", 0)
		END IF
		
		// 11/11 - PCONKL - Enable Hold button for Admin/Super
		If gs_role <> '2' Then
			icb_hold.Enabled = True
		End If
		
		// 11/11 - PCONKL - Enable Custom1 (Export for Nike)
		// 01/12 - MEA	- Export function to remain active as per Yati
		
//		If left(gs_Project,4) = 'NIKE' and lsStatus <> 'A' Then
//			tab_main.tabpage_Main.cb_custom1.enabled = True
//		Else
//			tab_main.tabpage_Main.cb_custom1.enabled = False
//		End IF

		If left(gs_Project,4) = 'NIKE'  Then

			if idw_main.getitemnumber(1, "edi_batch_seq_no") > 0 then
				idw_detail.object.req_qty.protect = true
				idw_detail.object.uom.protect = true

				icb_det_insert.Enabled = False
				icb_det_delete.Enabled = False					
			else
				idw_detail.object.req_qty.protect = false
			end if
		End IF
		
		//11/12 - MEA - Added Validate for Stryker
		If gs_Project = 'STRYKER' Then
			tab_main.tabpage_Main.cb_custom1.enabled = True
			
			IF  trim(idw_main.GetItemString(1, "user_field22")) = "Y" then
				icb_confirm.enabled = True
			Else
				icb_confirm.enabled = False
			End If
			tab_main.tabpage_main.st_validation_msg.text = ""
		End IF

		//12/12/12 - TAM - Added Button for W&S
		If left(Upper(gs_project),3) = 'WS-' then
			//tab_main.tabpage_Main.cb_custom1.enabled = False
			tab_main.tabpage_Main.cb_custom1.enabled = True //Tam -  Allow button select at this time
		End IF
				
		//MEA - 09/2011 - For Trax change
		wf_enable_trax_data_entry()
		
		//Jxlim 08/23/2013 Ariens serial validation button 
		If 	Upper(gs_project) = 'ARIENS' Then
			icb_serial.Enabled = True
		End if
		
		//GailM 06/15/2015 Enable named fields
		wf_named_field_enable(true)

		// GailM 06/15/2015 Set is_nfNextTab to determine next tab column on idw_main
		is_nfNextTab = wf_tab_next(lstr_parms)
		
		tab_main.tabpage_pack.cb_calc_carton_count.Enabled = True /* 08/16 - PCONKL*/
		
		//GailM 06/20/2017 - Determine if pick rows have container tracked records - Pandora SIMSPEVS-605
		If 	Upper(gs_project) = 'PANDORA' Then
			wf_check_container_scanned()
		End If

		//GailM - 11/01/2017 - SIMSPEVS-825 Riverbed 2D Matrix barcode for Serial Numbers 
		If f_retrieve_parm( gs_project , "FLAG", "SERIAL_2DBARCODE_SCANNING") = 'Y' then
			If Upper(gs_project) = 'RIVERBED' Then
				tab_main.tabpage_serial.rb_2dbarcode.visible = True
			End If
		End If
	
	If Upper(gs_project) ='REMA' Then tab_main.tabpage_Main.cb_custom1.enabled = True //26-MAR-2018 :Madhu Rema -Update process for printing pallet labels		
		
//27-Jul-2016 :Madhu- Added "Z" to lock an order to avoid updating an order.
CASE "C" , "D", "R","Z" /* 03/25/10 dts - HOLD status moved below to act like VOID */ 
		
		i_nwarehouse.of_settab(idw_main)
		idw_main.SetTabOrder("receive_date",10) //dgm 010401
		idw_main.SetTabOrder("Delivery_date",15) 
		
      	i_nwarehouse.of_settab(idw_other,lstr_parms,2) //DGM 010401 
		
		idw_other.SetTabOrder("invoice_no",0) //DGM 010401
		idw_other.SetTabOrder("trader_id",0)
		idw_other.SetTabOrder("contract_owner_ID",0)
		idw_other.SetTabOrder("factory_id",0)
		
	   	i_nwarehouse.of_settab(idw_detail)
      	i_nwarehouse.of_settab(idw_pick)
     
	  	IF Upper(gs_project) = 'STRYKER' and lsStatus = 'R' then //MEA - 7/12 Disable for Stryker - As Per BoonHee
	
		Else	
   		   i_nwarehouse.of_settab(idw_pack)
		End If
//		
//		IF Upper(gs_project) = 'STRYKER' Then
//
//			IF  trim(idw_main.GetItemString(1, "user_field22")) = "Y" then
//				icb_confirm.enabled = True
//			Else
//				icb_confirm.enabled = False
//			End If
//
//			tab_main.tabpage_main.st_validation_msg.text = ""
//		End If
				
		im_menu.m_file.m_save.Enabled = True
		im_menu.m_file.m_retrieve.Enabled = True
		im_menu.m_file.m_print.Enabled = True
		im_menu.m_file.m_refresh.Enabled = False
		im_menu.m_record.m_delete.Enabled = False
		
		tab_main.tabpage_other.Enabled = True
		tab_main.tabpage_detail.Enabled = True
		tab_main.tabpage_pick.Enabled = True
		tab_main.tabpage_pack.Enabled = True
		tab_main.tabpage_bol.Enabled = True 
		// Begin - 02072022- Dinesh - S66897- Google - SIMS - CBOL Changes
		if gs_project='PANDORA' then
			tab_main.tabpage_bol.Enabled = False   
		end if
		// End - 02072022- Dinesh - S66897- Google - SIMS - CBOL Changes
		wf_enable_trax() /*enable or disable trax page depening on warehouse setting*/
		tab_main.tabpage_main.cb_do_select_customer.visible=False 
//		icb_dn.Enabled = True
		icb_void.Enabled = False
		icb_Shipment.Enabled = True
		If lsStatus = 'C' Then
			tab_main.tabpage_main.cb_do_pod.enabled=True 
		Else
			tab_main.tabpage_main.cb_do_pod.enabled=False 
		End If
		
		// 02/04 - PCONKL - We will give a Super user the ability to re-confirm an order - sometimes necessary for resending confirmation files
		// 02/08 - PCONKL - Added "-1" as Super Duper User
		If (gs_role = '0' or gs_role = '-1') and lsStatus <> 'H' Then /* Super User and order not in Hold Status*/
		
			icb_confirm.Enabled = True
			//  TAM 2005/03/23 Check original status(IS_STATUS_DB) from UE_SAVE.  IS_STATUS_DB = NULL the first time in
			//  	A Problem was introduced trying to prevent multiple users from confirming
//			if lsStatus <> 'R' then
			//7-MAR-2019 :Madhu DE9280 change to Re-confirm
			if lsStatus <> 'R' and (is_status_db <> 'R' or isNull(is_status_db))then
				icb_confirm.Text = 'Re-&Confirm'
			elseif lsStatus = 'C' and is_status_db ='R' then
				icb_confirm.Text = 'Re-&Confirm'
			end if
			//  TAM 2005/03/23 See Above
			is_status_db = lsStatus 
			
		Else /*Not Super USer*/
			
			if lsStatus = 'R' then
				icb_confirm.Enabled = True
			else
				icb_confirm.Enabled = False
			end if			
			
		End If

		// TAM 2018/02 - S14838 - Get the OM Status
		String ls_wh_code 
		ls_wh_code = idw_main.GetItemString(1,'wh_code') 

		SELECT OM_Enabled_Ind  
		INTO :is_OM_Enabled_Ind  
		FROM Warehouse  with(nolock)
		WHERE  Wh_Code = :ls_wh_code   ;
				
		icb_ReadyToShip.enabled = false /* 6/21/04 dts		*/
		icb_det_insert.Enabled = False
		icb_det_delete.Enabled = False
		icb_pick_insert.Enabled = False
		icb_pick_copy.Enabled = False 
		icb_pick_delete.Enabled = False
		icb_pick_generate.Enabled = False
		icb_pick_print.Enabled = True
		icb_LMSRoute.Enabled = False /* 1/30/04 dts */
		icb_LMSRate.Enabled = False /* 1/30/04 dts */
		icb_pack_insert.Enabled = False
		icb_pack_delete.Enabled = False
		tab_main.tabpage_pack.cb_pack_generate.Enabled = False
		tab_main.tabpage_pack.cb_import_pack.Enabled = False
		icb_pack_copy.Enabled = False
		icb_pack_print.Enabled = True
		icb_ship_docs.Enabled = True
		icb_hold.Enabled = False 
//		tab_main.tabPage_detail.cb_ship_all.Enabled = False
		icb_pick_unallocate.enabled =False //27-SEP-2017 :Madhu PEVS-848 KDO Return to Stock
			
		// 12/09 - PCONKL - Enable Serial Tab if scanning all items (pack val)
		if g.ibscanallordersrequired Then 
				tab_main.tabpage_serial.Enabled = True
		End If
		
		// 01/01 PCONKL - disable updating of Outbound Serial #'s
		tab_main.tabpage_serial.rb_manual.Enabled = FAlse
		tab_main.tabpage_serial.rb_barcode.Enabled = FAlse
		tab_main.tabpage_serial.sle_barcodes.Enabled = FAlse
		tab_main.tabpage_serial.sle_carton_no.Enabled = FAlse
		tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = False
		tab_main.tabpage_serial.cb_ob_serial_insert.Enabled = False
		tab_main.tabpage_serial.cb_ob_serial_Delete.Enabled = False
		tab_main.tabpage_serial.cb_undo.Enabled = False
		
		tab_main.tabpage_serial.dw_serial.Object.DataWindow.ReadOnly= True
		
//		//04/02 - Pconkl - Enable POD if order is confirmed and delivery_date Entered
//		If lsStatus = 'C' or lsStatus = 'D' and &
//			(Not isnull(idw_main.GetITemDateTime(1,'delivery_Date'))) Then
//				tab_main.tabpage_main.cb_do_pod.Enabled  = True
//		End If
		
		//07.04 - PCONKl - disable alt ADdress tabs
		wf_address_tab_enable(False)

		// TAM W&S 2010/12 Allow Update of Detail User_field3 (Permit Number) after confirm for Wine and Spirit
		If left(gs_project,3) = 'WS-'   then
			idw_detail.SetTabOrder("user_field3", 10)
		END IF

		// MEA PHILIPS-SG 2011/10 Allow Update of Detail User_field4 (Permit Number) after confirm for Philips-SG
		// 12/12 - PCONKL - added TPV
		// 6/13 - MEA - Added FUNAI
		//TAM 2015/01/26 Added Gibson
		//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
		//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
		If gs_project = 'PHILIPS-SG' or gs_project ='PHILIPSCLS' or gs_project ='PHILIPS-DA' or gs_project = 'TPV' OR gs_project = 'FUNAI'  OR gs_project = 'GIBSON'  then
			idw_detail.SetTabOrder("user_field4", 10)
		END IF

		// 11/11 - PCONKL - Disable Custom1 (Export for Nike)
		If left(gs_Project,4) = 'NIKE' Then
			tab_main.tabpage_Main.cb_custom1.enabled = False
		End IF
		
		IF gs_project = 'STRYKER' and lsStatus = 'R' then
			tab_main.tabpage_pack.cb_pack_generate.Enabled = True
		End IF
		
		//11/12 - MEA - Added Validate for Stryker
		If gs_Project = 'STRYKER' Then
			tab_main.tabpage_Main.cb_custom1.enabled = True

			IF  trim(idw_main.GetItemString(1, "user_field22")) = "Y" then
				icb_confirm.enabled = True
			Else
				icb_confirm.enabled = False
			End If

			tab_main.tabpage_main.st_validation_msg.text = ""
		End IF

		//12/12/12 - TAM - Added Button for W&S
		If left(Upper(gs_project),3) = 'WS-' then
			tab_main.tabpage_Main.cb_custom1.enabled = True
		End IF
				
		//Jxlim 08/23/2013 Ariens serial validation button 
		If 	Upper(gs_project) = 'ARIENS' Then
			icb_serial.Enabled = False
		End if

//SARUN2014JAN31 Start: Including invoice print function for NYX		
		If upper(gs_Project) = 'NYX' Then	
			
			If  lsStatus = 'C' and idw_main.GetItemString(1,'wh_code')  = 'NYX-AU' Then
				tab_main.tabpage_Main.cb_custom1.enabled = True
				tab_main.tabpage_Main.cb_custom1.visible = True			
			Else
				tab_main.tabpage_Main.cb_custom1.enabled = False
				tab_main.tabpage_Main.cb_custom1.visible = False			
			End IF
			
		End If /* NYX */
//SARUN2014JAN31 End: Including invoice print function for NYX		
		
		//GailM 06/15/2015 Enable named fields
		wf_named_field_enable(false)
		
		// GailM 06/15/2015 Set is_nfNextTab to determine next tab column on idw_main
		is_nfNextTab = wf_tab_next(lstr_parms)
		
		icb_import_ib.Enabled = False  //GailM 8/26/2015 - Enable detail button only for New status
		
		tab_main.tabpage_pack.cb_calc_carton_count.Enabled = False /* 08/16 - PCONKL*/
		
		If Upper(gs_project) ='REMA' Then tab_main.tabpage_Main.cb_custom1.enabled = True //26-MAR-2018 :Madhu Rema -Update process for printing pallet labels		
		
	CASE "V", "H"

		i_nwarehouse.of_settab(idw_main)
	   i_nwarehouse.of_settab(idw_other)
      i_nwarehouse.of_settab(idw_detail) 
      i_nwarehouse.of_settab(idw_pick)
      i_nwarehouse.of_settab(idw_pack)
		
		im_menu.m_file.m_save.Enabled = False
		im_menu.m_file.m_retrieve.Enabled = False
		im_menu.m_file.m_print.Enabled = False
		im_menu.m_file.m_refresh.Enabled = False
		im_menu.m_record.m_delete.Enabled = False
		
		tab_main.tabpage_other.Enabled = True
		tab_main.tabpage_detail.Enabled = True
		tab_main.tabpage_pick.Enabled = True
		tab_main.tabpage_pack.Enabled = True
		tab_main.tabpage_bol.Enabled = false 
		tab_main.tabpage_Carrier.Enabled = false
		tab_main.tabpage_Trax.Enabled = false
      
//		icb_dn.Enabled = False
		icb_void.Enabled = False
		icb_confirm.Enabled = False
		icb_ReadyToShip.Enabled = False
		icb_det_insert.Enabled = False
		icb_det_delete.Enabled = False
		icb_pick_insert.Enabled = False
		icb_pick_copy.Enabled = False 
		icb_pick_delete.Enabled = False
		icb_pick_generate.Enabled = False
		icb_pick_print.Enabled = False
		icb_LMSRoute.Enabled = False /* 1/30/04 dts */
		icb_LMSRate.Enabled = False /* 1/30/04 dts */
		icb_pack_insert.Enabled = False
		icb_pack_delete.Enabled = False
		icb_pack_copy.Enabled = False
		tab_main.tabpage_pack.cb_pack_generate.Enabled = False
		tab_main.tabpage_pack.cb_import_pack.Enabled = False
		icb_pack_print.Enabled = False
		icb_ship_docs.Enabled = False
		tab_main.tabpage_main.cb_do_select_customer.visible=false 
		
		// 01/01 PCONKL - disable updating of Outbound Serial #'s
		tab_main.tabpage_serial.rb_manual.Enabled = FAlse
		tab_main.tabpage_serial.rb_barcode.Enabled = FAlse
		tab_main.tabpage_serial.sle_barcodes.Enabled = FAlse
		tab_main.tabpage_serial.sle_carton_no.Enabled = FAlse
		tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = False
		tab_main.tabpage_serial.cb_ob_serial_insert.Enabled = False
		tab_main.tabpage_serial.cb_ob_serial_Delete.Enabled = False
		tab_main.tabpage_serial.cb_undo.Enabled = False
		tab_main.tabpage_main.cb_do_pod.enabled=False
		icb_pick_unallocate.enabled =False //27-SEP-2017 :Madhu PEVS-848 KDO Return to Stock
		
		//07.04 - PCONKl - disable alt ADdress tabs
		wf_address_tab_enable(False)
		
		// 11/11 - PCONKL - Disable Hold button if Void but enable if in Hold (for Admin/Super)
		If lsStatus = 'V' Then
			icb_hold.Enabled = False
		Else
			if gs_role <> '2' Then
				icb_hold.Enabled = True
			End If
		End If
		
		// 11/11 - PCONKL - Disable Custom1 (Export for Nike)
		If left(gs_Project,4) = 'NIKE' Then
			tab_main.tabpage_Main.cb_custom1.enabled = False
		End IF
		
		//Jxlim 08/23/2013 Ariens serial validation button 
		If 	Upper(gs_project) = 'ARIENS' Then
			icb_serial.Enabled = False
		End if
				
		//GailM 06/15/2015 Enable named fields
		wf_named_field_enable(false)

		// GailM 06/15/2015 Set is_nfNextTab to determine next tab column on idw_main
		is_nfNextTab = wf_tab_next(lstr_parms)
		
		icb_import_ib.Enabled = False  //GailM 8/26/2015 - Enable detail button only for New status
		
		tab_main.tabpage_pack.cb_calc_carton_count.Enabled = False /* 08/16 - PCONKL*/
		
		If Upper(gs_project) ='REMA' Then tab_main.tabpage_Main.cb_custom1.enabled = False //26-MAR-2018 :Madhu Rema -Update process for printing pallet labels		
		
End Choose

if g.ibTNTEnabled then //dts 04/05/07 - now doing this only if Track & Trace is enabled...
	//See if order is already on a shipment or if it qualifies to be added to an existing shipment.
	wf_check_shipment()
end if

IF gs_project = '3COM_NASH' THEN
	IF idw_main.object.edi_batch_seq_no[1] > 0 THEN
		idw_other.Object.user_field6.Edit.DisplayOnly = TRUE
	ELSE
		idw_other.Object.user_field6.Edit.DisplayOnly = False
	END IF
END IF

//TimA 01/03/12 OTM Project
ib_ConfirmButtonStatus = icb_confirm.visible
wf_enable_otm_status()

//TAM 04/2016  Garmin Only allows Shipments(Consolidstion Number present) to be confirmed at the Shipment tab
// 01/17 - PCONKL - Added Kendo
//04-MAY-2018 :Madhu S18653 - Rema Back/Duplicate Order Process
IF (gs_project = 'GARMIN' or gs_project = 'KENDO' or gs_project ='REMA') and idw_Shipments.RowCount() > 1 and  (idw_main.getitemstring(1,'Consolidation_No') <>'' and Not isNull(idw_main.getitemstring(1,'Consolidation_No')))  THEN
	tab_main.tabpage_main.cb_do_confirm.Enabled = False
End If

//GailM 2/18/2019 S29552 F13773 I1745 Philips BlueHeart  - SIMS - Product Picked - Client Changes
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
IF gs_project = 'PHILIPSCLS' or gs_project ='PHILIPS-DA' THEN
	If lsStatus = 'N' or lsStatus = 'P' or lsStatus = 'A' Then
		tab_main.tabpage_main.cb_do_confirm.enabled = FALSE
	End If
End If


IF gs_project = 'PANDORA' THEN
	//TimA 01/28/15 Pandora issue #859 Hid the button for changing box ID's on completed orders.
	If lsStatus = 'C' or lsStatus = 'D' or lsStatus = 'V'  then
		tab_main.tabpage_pick.cb_replace_boxid.visible = False
	else
		//If if is turned on in the Lookup table don't show the button. is_ShowBoxChange is set in the post open event
		If is_ShowBoxChange = 'Y' then
			tab_main.tabpage_pick.cb_replace_boxid.visible = True
		else
			tab_main.tabpage_pick.cb_replace_boxid.visible = False
		End if
	End if
	IF idw_main.object.edi_batch_seq_no[1] > 0  THEN
		wf_lock(true)
		
		//TimA 07/03/12 Pandora issue #433
		//Lock these fields on Electronicly created orders.  F10 will inlock these also.
		idw_main.Object.request_date.Protect = TRUE
		idw_main.Modify("request_date.Background.Color = '" +  idw_main.object.datawindow.color + "'")
		idw_main.Object.schedule_date.Protect = TRUE
		idw_main.Modify("schedule_date.Background.Color = '" +  idw_main.object.datawindow.color + "'")
		idw_main.Object.edm_generate_datetime.Protect = TRUE
		idw_main.Modify("edm_generate_datetime.Background.Color = '" +  idw_main.object.datawindow.color + "'")
		//Begin - Dinesh - 12/14/2021- S65679- Google SIMS TMS change: Ready by date to be read only
		idw_main.Object.ready_by_date.Protect = TRUE
		idw_main.Modify("ready_by_date.Background.Color = '" +  idw_main.object.datawindow.color + "'")
		//End - Dinesh - 12/14/2021- S65679- Google SIMS TMS change: Ready by date to be read only
		
	ELSE
		wf_lock(false)
		
		//We need to lock this down regardless of type.
		//Still able to unlock using F10
		
		ls_dw_color = idw_main.object.datawindow.color
		idw_other.Object.user_field7.Protect = true
		idw_other.Modify("user_field7.Background.Color = '" +  ls_dw_color + "'")

				//TimA 07/03/12 Pandora issue #433
		//UnLock these fields on Manualy created orders.
		
		//22-Mar-2016 :Madhu- Lock following feilds on manual orders. - START
		If upper(gs_project) ='PANDORA' and (idw_main.getitemstring(1,'OTM_Status') ='P' OR idw_main.getitemstring(1,'OTM_Status') ='R'  OR  idw_main.getitemstring(1,'OTM_Status') ='H') Then
			idw_main.Object.request_date.Protect = TRUE
			idw_main.Modify("request_date.Background.Color = '" +  ls_dw_color + "'")
			idw_main.Object.schedule_date.Protect = TRUE
			idw_main.Modify("schedule_date.Background.Color = '" +  ls_dw_color + "'")
		Else
			idw_main.Object.request_date.Protect = FALSE
			idw_main.Modify("request_date.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
			idw_main.Object.schedule_date.Protect = FALSE
			idw_main.Modify("schedule_date.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
		End If
		//22-Mar-2016 :Madhu- Lock following feilds on manual orders. - END	
		
		//TimA 07/31/12 Pandora isue #460 don't unlock the original RDD
		//idw_main.Object.edm_generate_datetime.Protect = FALSE
		//idw_main.Modify("edm_generate_datetime.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
		//10-Dec-2015 :Madhu - Editable carrier field for NON-OTM Orders -START
		String lsOTMStatus,lsCarrier
		lsOTMStatus = idw_main.getitemstring(1,'OTM_Status')
		lsCarrier =idw_main.getitemstring(1,'Carrier')
		
		If upper(gs_project)='PANDORA' and lsOTMStatus='N' and lsCarrier='MLOGUNKUNK' and lsStatus <>'C' and lsStatus <>'V' and lsStatus <>'D' THEN
			idw_other.object.carrier.protect=False
		ELSE
			//TimA 03/14/13 Pandora issue #562.  Lock the carrier field on Manually created orders.
			idw_other.Object.carrier.Protect = TRUE	
			idw_other.Modify("carrier.Background.Color = '" + idw_main.object.datawindow.color + "'")		
		END IF //10-Dec-2015 :Madhu - Editable carrier field for NON-OTM Orders -END	
		
	END IF
	
	//TimA 05/06/13 Lock the cust_order_no F10 will unlock
	idw_main.Object.cust_order_no.Protect = TRUE	
	idw_main.Modify("cust_order_no.Background.Color = '" + idw_main.object.datawindow.color + "'")		
	
	// LTK 20110527	user_field22 - lock down here...can be unlocked via F10.
	idw_other.Object.user_field22.Protect = TRUE
	idw_other.Modify("user_field22.Background.Color = '" +  idw_main.object.datawindow.color + "'")
	
	// LTK 20150109	user_field20 - lock down here...can be unlocked via F10.
	idw_other.Object.user_field20.Protect = TRUE
	idw_other.Modify("user_field20.Background.Color = '" +  idw_main.object.datawindow.color + "'")
	
	// ET3 2012-06-20  issue 430: lock user_field16
	idw_other.Object.user_field16.Protect = TRUE
	idw_other.Modify("user_field16.Background.Color = '" +  idw_main.object.datawindow.color + "'")
	
	// ET3 2013-01-31  issue 517: MIM receipt ack - lock receipt related fields
	string lsTemp
	IF IsValid(idw_other) THEN 
		lsTemp = idw_other.GetItemString(1,'user_field17')
		IF LEN(TRIM(lsTemp)) > 0 THEN idw_other.Object.user_field17.Protect = TRUE
		lsTemp = STRING(idw_other.GetItemDateTime(1,'receive_date'))
		IF LEN(TRIM(lsTemp)) > 0 THEN idw_main.Object.receive_date.Protect = TRUE
	END IF

	// LTK 20150423	carrier_pro_no - lock down here...can be unlocked via F10.
	//TimA 10/27/2015
	idw_other.Object.carrier_pro_no.Protect = False
	idw_other.Object.carrier_pro_no.Edit.DisplayOnly = True
	idw_other.Modify("carrier_pro_no.Background.Color = '" +  idw_main.object.datawindow.color + "'")

	// TAM 08/21/2018 - S22531 load Id- Unlock only upon an F10.  
	idw_main.Object.load_id.Protect = True
	idw_main.Modify("load_id.Background.Color = '" +   idw_main.object.datawindow.color + "'")	

//TAM 2018/08 - S22531 - set Lock Load Button tgext and visibility	
	String ls_uf1		
	ls_uf1 = Trim(idw_main.GetItemString(1,"user_field1"))
	isloadId = Trim(idw_main.GetItemString(1,"load_id"))
	 // TAM 2018/12/10 S25773 - LOAD_ID = 'NA' is Not eligable for lock/unlock
	 //11/19 - PCONKL - F19222/DE13597 - add 'GND'
//	If ls_uf1 = 'DOS' or  ls_uf1 = 'PIU' or ls_uf1 = 'NOS' or isloadId = '' or isNull(isloadId) then 	//Not eligable for lock/unlock
	If ls_uf1 = 'DOS' or  ls_uf1 = 'PIU' or ls_uf1 = 'NOS' or ls_uf1 = 'GND' or isloadId = '' or isNull(isloadId) or isloadId = 'NA' then 	//Not eligable for lock/unlock
		tab_main.tabpage_pack.cb_lock_load.visible = False
		tab_main.tabpage_other.cb_lock_load_google.visible = True  // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
	Else
		tab_main.tabpage_pack.cb_lock_load.visible = False  //Set to novisible and only make visible if conditions are met
		tab_main.tabpage_other.cb_lock_load_google.visible = False  // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
		//GailM 10/15/2018 Temporarily use flag to disable this function until other testing is done
		//21-Jan-2018 :Madhu DE8262 TMS Make Visiblle "Unlock Load" button, if an Order is re-retrived.
		If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT" THEN
			if idw_Pack.RowCount() > 0 and idw_main.getitemstring(1,'Load_Lock') ='Y' and (isLoad_Status = '' or isLoad_Status='NOLOCK')  then  
				//icb_lock_load.Text = 'Unlock Load'
				icb_lock_load_google.Text = 'Unlock Load'  // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
				tab_main.tabpage_pack.cb_lock_load.visible = False // Lock button turn off for Google - dinesh 03/16/2023
				tab_main.tabpage_other.cb_lock_load_google.visible = True // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
				//icb_lock_load.Enabled = True
				icb_lock_load_google.Enabled = True  // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
				isLoad_Status = 'NOLOCK'
			End If
			if idw_Pack.RowCount() > 0 and idw_main.getitemstring(1,'Load_Lock') ='N' and (isLoad_Status = ''  or isLoad_Status ='LOCK' ) then 
					//icb_lock_load.Text = 'Lock Load'
					icb_lock_load_google.Text = 'Lock Load'  // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
					tab_main.tabpage_pack.cb_lock_load.visible = False // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status // lock button turn off
					tab_main.tabpage_other.cb_lock_load_google.visible = True // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
					//icb_lock_load.Enabled = True
					icb_lock_load_google.Enabled = True  // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
					isLoad_Status = 'LOCK'
			End If
			
			//if idw_Pack.RowCount() = 0 and idw_main.getitemstring(1,'Load_Lock') ='Y' and isLoad_Status = 'LOCK'   then   // Dinesh-  07/27/2021-Google TMS change: Google - SIMS Load Lock Changes 
			   if idw_Pack.RowCount() = 0 and idw_main.getitemstring(1,'Load_Lock') ='Y' and (isLoad_Status = ""  or isLoad_Status ='NOLOCK')  then  
					//icb_lock_load.Text = 'Unlock Load'
					icb_lock_load_google.Text = 'Unlock Load'
					tab_main.tabpage_pack.cb_lock_load.visible = False // Lock load button turn off for google - // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
					tab_main.tabpage_other.cb_lock_load_google.visible = True // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
					//icb_lock_load.Enabled = True
					icb_lock_load_google.Enabled = True  // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
					isLoad_Status = 'NOLOCK' // Dinesh - 07/27/2021-Google TMS change: Google - SIMS Load Lock Changes
				End If
			
			// Begin - Dinesh - 07/27/2021- S59638- Google TMS change: Google - SIMS Load Lock Changes
			if idw_Pack.RowCount() = 0 and idw_main.getitemstring(1,'Load_Lock') ='N' and (isLoad_Status = ""  or isLoad_Status ='LOCK')  then  
					//icb_lock_load.Text = 'Lock Load'
					icb_lock_load_google.Text = 'Lock Load'  // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
					tab_main.tabpage_pack.cb_lock_load.visible = False // Lock load button turn off for google - // DINESH - 03/16/2023- sims-53- G
					tab_main.tabpage_other.cb_lock_load_google.visible = true // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
					//icb_lock_load.Enabled = True
					icb_lock_load_google.Enabled = True // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
					isLoad_Status = 'LOCK'
			End If
			// End - Dinesh - 07/27/2021- S59638- Google TMS change: Google - SIMS Load Lock Changes
		End If
	End If	//Not eligable for lock/onluck

	 // TAM 2018/12/10 S25773 - Only Show tab if Load Plan is Present
	isloadId = idw_main.getItemString( 1, 'Load_Id')
	If IsNull(isloadId) or isloadId ='' or isloadId =' ' or isloadId = 'NA' Then  // TAM 2018/12/10 S25773 - Dont Show tab if Load Plan is Exempt 'NA'
		tab_main.tabpage_load_plan.visible =False
	else
		tab_main.tabpage_load_plan.visible =True			
	end If
	
	isTMSstatus = f_is_non_tms(ls_uf1, isloadId, isWareHouse)			//Has a TMS eligible order been excepted by an NA in LoadId?  25773
	If isTMSstatus = "Z" Then
		idw_other.Object.Carrier.Protect = FALSE
			idw_other.Modify("Carrier.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	End If
//TAM 2019/01 - DE8052 Lock Carrier if TMS
	If isTMSstatus = "T" Then
		idw_other.Object.Carrier.Protect = True
	End If

//TAM 2019/03 - DE9566 - Add New TMS status for TMS Load Planning
	If isTMSstatus = "L" Then
		idw_other.Object.Carrier.Protect = True
	End If

//GailM 5/29/2018 S19731 F8404 I1143 Google SIMS Prevent Line Deletion in order detail screen
	If (gs_role = '-1' or gs_role = '0')  Then
		icb_det_delete.Enabled = True
	Else
		icb_det_delete.Enabled = False
	End If

END IF	

//10/09 - PCONKL - Lock Order Date for electronic orders
If idw_Main.GetITemNumber(1,'edi_batch_seq_no') > 0 Then
	
	idw_main.SetTabOrder("ord_date",0) 
	
				//02/10 - FOr Warner, Disable Add delete buttons for electronic orders
				If gs_project = 'WARNER' Then
					icb_det_insert.Enabled = False
					icb_det_delete.Enabled = False
					//Jxlim 06/28/2010 Disable detail dw Warner on EDI - for electronic orders.		
					idw_detail.object.datawindow.ReadOnly = "Yes"
				End If
ELSE		
		idw_detail.object.datawindow.ReadOnly = "NO"
		//Jxlim 06/28/2010 end of modified code.
End If

//02/08 - PConkl - For Super Duper Users (IT Team), allow to un-confirm an order by changing the status dropdown
// Begin - DINESH - 03/16/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
if gs_project='PANDORA' then
	If (gs_role = '-1' or gs_role = '0') and (lsStatus = 'C' or lsStatus = 'D' or lsStatus = 'V' or lsStatus = 'R' or lsStatus = 'A' or lsStatus = 'L' ) Then  // Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status // Added 'L'
		
		idw_Main.SetTabOrder("ord_status",10)                                                                                                                        // Added lsStatus='A'
	Else
		idw_Main.SetTabOrder("ord_status",0) 
	End If
// End - DINESH - 03/16/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
else
	If (gs_role = '-1' or gs_role = '0') and (lsStatus = 'C' or lsStatus = 'D' or lsStatus = 'V' or lsStatus = 'R') Then // DINESH - 03/16/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		
		idw_Main.SetTabOrder("ord_status",10)                                                                                                                        // Added lsStatus='A'
	Else
		idw_Main.SetTabOrder("ord_status",0) 
	End If
end if
	
	
// 11/02 - PConkl - Hide unused fields on Picking
idw_Detail.TriggerEvent('ue_hide_unused') /* 10/09 - PCONKL - added lottables to pick to detail tab. Dont show if not trackable or EDI order */
idw_Pick.TriggerEvent('ue_hide_unused')

idw_trax.TriggerEvent('ue_enable')

//MEA 03/08 - Dropdown for GM_Montry and SLI-POOL for Order Detail UserField 1

IF Upper(gs_Project) = "GM_MONTRY" OR Upper(gs_Project) = "SLI-POOL" THEN

	if Trim(idw_detail.object.user_field1.TabSequence) = "0" then
		idw_detail.Object.user_field1.dddw.UseAsBorder = "No"
	else
		idw_detail.Object.user_field1.dddw.UseAsBorder = "Yes"
	end if

END IF

//MStuart - BabyCare EMC Functionality - 083011
If upper(gs_project) = 'BABYCARE' Then
	wf_check_status_emc()
End If


// 09/11 – PCONKL – For Comcast, only admin and Super Users can void orders
IF Upper(gs_Project) = "COMCAST" and gs_role = '2' Then
                icb_void.Enabled = False
End If

// LTK 20120525  Pandora #370
// LTK 20140202  Added Physio
if upper(gs_project) = 'PANDORA' or upper(gs_project) = 'PHYSIO-MAA' or upper(gs_project) = 'PHYSIO-XD' then
	wf_set_state_ci_lt_button()
end if

// 04/14 - PCONKL - Shipments Tab only enabled if more than one order on shipment
tab_Main.tabpage_Shipments.cb_remove_from_Shipment.Enabled = False
If idw_Shipments.RowCount() > 1 Then
	
	tab_main.tabpage_shipments.Enabled = True
	
	If idw_Shipments.Find("ord_status <> 'R'",1, idw_Shipments.RowCount()) > 0 Then
		tab_main.tabpage_shipments.cb_confirm_shipment.enabled = False
	Else
		tab_main.tabpage_shipments.cb_confirm_shipment.enabled = True
	End If
	
Else
	tab_main.tabpage_shipments.Enabled = False
End If

// GailM 09/27/2014 PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship
isWarehouse = idw_main.GetItemString(1, "wh_code")
lsFindStr = "wh_code = '" + isWarehouse + "'"
i = g.ids_project_warehouse.Find(lsFindStr,1,g.ids_project_warehouse.rowcount())
If i > 0 Then
	If g.ids_project_warehouse.GetItemString(i, "Short_Ship_Ind") = 'Y' Then
		ib_ShortShipEnabled = true
		tab_main.tabpage_main.st_shipment_nbr.visible = true
		tab_main.tabpage_main.st_shipment.visible = true
		tab_main.tabpage_main.st_shipment.text = String(idw_main.GetItemNumber(1, "Ship_Cnt"))
		If lsStatus = 'H' Then
			ib_under_picked = true
			tab_main.tabpage_main.cb_do_confirm.Enabled = False
			is_AuthorizeType = "SS"		// Short Ship Authorization
		End If
	Else
		ib_ShortShipEnabled = false
		tab_main.tabpage_main.st_shipment_nbr.visible = false
		tab_main.tabpage_main.st_shipment.visible = false
	End If
End If

//01/16 - PCONKL - Enable Invoice (custom button) for H2O if ecommerce order
IF gs_project = 'H2O' THEN
	
	if idw_main.GetItemString(1,'ord_type') = 'E'  and idw_Pick.RowCount() > 0 Then /* Ecommerce Order*/
		tab_main.tabpage_main.cb_custom1.enabled = TRUE
	Else
		tab_main.tabpage_main.cb_custom1.enabled = False
	End If
	
End If

// 09/14 - PCONKL - Enable/Disable MObile based on warehouse flag

wf_check_status_Mobile()

// 2019/08 - MikeA - S36602 - I2406 - Riverbed - SKU scanning validation
// 2019/10/29 - GailM Added S36602 back in for 19.7 RDS
// 2019/11/11 - MikeA DE13515 - Added Flag around SKU scanning validation 

if gs_project ='RIVERBED'  then
	
	lsSerialValFlag = f_retrieve_parm("RIVERBED","SERIAL_VAL","SERIAL_OUT_VAL","CODE_DESCRIPT")

	//Check if enabled
	IF Upper(lsSerialValFlag) = 'Y' THEN &
		POST Function wf_riverbed_enable_serial_tabpage()
end if 


// Nxjain : calculate the Gross Weight and net column in Order Detail screen for Dana-TH 01/11/2016
//20-May-2016 :Madhu - cloned DANA-RAY with DANA-TH
if gs_project ='DANA-TH' or gs_project ='DANA-RAY' then
		wf_check_dana()
end if 
//end nxjain

tab_main.tabpage_pack.cbx_gen_level2_qty.Checked = False /* 08/16 - Pconkl */

//17-APR-2017 :Madhu PEVS-561- KDO-Disable "ReadyToShip" button, if ShipToCountry is USA -START
If upper(gs_project) ='KENDO' and idw_main.rowcount( ) >0 and (upper(idw_main.getitemstring( 1, "country")) ='US') Then
		icb_ReadyToShip.Enabled = False
End If
//17-APR-2017 :Madhu PEVS-561- KDO-Disable "ReadyToShip" button, if ShipToCountry is USA -END

Return
end subroutine

public subroutine wf_clear_screen ();// pvh 09/08/05 - modified to remove references to Gemini Tab

idw_main.Reset()
idw_other.Reset()
idw_detail.Reset()
idw_pick.Reset()
idw_pack.Reset()
ids_content.Reset()
idw_pick_detail.Reset()
tab_main.tabpage_Serial.dw_serial.Reset() /* 1/01 Pconkl */
tab_main.tabpage_main.tab_address.TriggerEvent('ue_reset') /* 07/04 - PCONKL - reset alt addresses, will retrieve as needed*/

icb_void.Enabled = False
icb_confirm.Enabled = False
icb_Hold.Enabled = False
icb_Shipment.Enabled = False
icb_Notes.Enabled = False
icb_ReadyToShip.Enabled = False
icb_ship_docs.Enabled = False

isle_order.Text = ""

tab_main.SelectTab(1) 

// Enable the order number field.
tab_main.tabpage_main.sle_order.enabled = true

Return

end subroutine

public function integer wf_validation ();//20-MAR-2018 :Madhu DE3511 - PackQty <> PickQty Validation
//Wrapped PickQty, Pack Qty validation into wf_pick_pack_qty_validation()
integer yesno
string ls_order, ls_sku, ls_supp_code, ls_osku, ls_sku_description, ls_msgtext, lsfind
string ls_prev_sku, ls_prev_osku, ls_prev_supp, ls_prev_loc, ls_whcode, ls_loc, ls_NDescription, ls_message
long ll_cnt, i, lllineitemno, llnewrow,llfindrow, llprevlineitemno, ll_row, j, k, ll_pick_qty
long ll_scnt, s, ll_findrow, ll_pick_qyt
decimal ldquantity, ldweight, ldlength, ldwidth, ldheight, ldgirth, ldord_qty, ldpick_qty
decimal ldserializedqty, ldserialqty, ldpickqty, ldscanty, ld_pack_qty1, ldScanQty, ldallocqty
boolean lbvalidate
datastore ldsdimensions
long ll_text_length  //Dhirendra
String ls_prefix
// 10/08/2010 - must default crossdock_ind since datawindow considers it required, even though it's not.
if isnull(idw_main.GetItemString(1, "crossdock_ind")) or trim(idw_main.GetItemString(1, "crossdock_ind")) ='' then
	idw_main.SetItem(1, 'crossdock_ind', 'N')
end if

//Jxlim 06/02/201
if isnull(idw_main.GetItemString(1, "ignore_shelflife_ind")) or trim(idw_main.GetItemString(1, "ignore_shelflife_ind")) ='' then
	idw_main.SetItem(1, 'ignore_shelflife_ind', 'N')
end if

//Jxlim 07/16/2010

//// Begin 01/25/2022 - S64720 -Dinesh - Buy sell purchase order since datawindow considers it required, even though it's not.
if isnull(idw_main.GetItemString(1, "user_field21")) or trim(idw_main.GetItemString(1, "user_field21")) ='' then
	idw_main.SetItem(1, 'user_field21', '')
end if
//// End 01/25/2022 - S64720- Dinesh - Buy sell purchase order since datawindow considers it required, even though it's not.
ids_compare_underscanned = Create datastore
ids_compare_underscanned.Dataobject = 'd_do_compare_underscanned' 
ids_compare_underscanned.SetTransObject(sqlca)
ids_compare_underscanned.reset()

ls_order = idw_main.GetItemString(1,"do_no")

// pvh 12/08/05
doResetSupplierArrays()

If idw_main.AcceptText() = -1 Then 
	tab_main.SelectTab(1) 
	idw_main.SetFocus()
	return -1
End If

If idw_other.AcceptText() = -1 Then 
	tab_main.SelectTab(2) 
	idw_other.SetFocus()
	return -1
End If

If idw_detail.AcceptText() = -1 Then 
	tab_main.SelectTab(3) 
	idw_detail.SetFocus()
	return -1
End If

If idw_pick.AcceptText() = -1 Then
	tab_main.SelectTab(4) 
	idw_pick.SetFocus()
	return -1
End If

If idw_pack.AcceptText() = -1 Then
	tab_main.SelectTab(5) 
	idw_pack.SetFocus()
	return -1
End If

If tab_main.tabpage_serial.dw_Serial.AcceptText() = -1 then
	Return -1
End If

SetMicroHelp("Checking required fields...")

// Check required fields for master record
If f_check_required(is_title, idw_main) = -1 Then
	tab_main.SelectTab(1) 
	return -1
End If

//Warehouse doesn't trap in required
If isNull(idw_main.GeTItemString(1,'wh_code')) or idw_main.GeTItemString(1,'wh_code') = '' Then
	MessageBox(is_Title,'Warehouse is required!')
	tab_main.selecttab(1)
	idw_Main.SetFocus()
	idw_Main.SetColumn('wh_Code')
	Return -1
End If

// 04/03 - PCONKL - If Delivery Date is entered, it can't be less than Complete Date
If Not isnull(idw_Main.GetITemDateTime(1,'Delivery_Date')) Then
	If idw_Main.GetITemDateTime(1,'Delivery_Date') < idw_Main.GetITemDateTime(1,'Complete_Date') Then
		MessageBox(is_Title,'Delivery Date can not be earlier than Complete Date')
		tab_main.selecttab(1)
		idw_Main.SetFocus()
		idw_Main.SetColumn('delivery_Date')
		Return -1
	End If
End If

// Check for order detail records
idw_detail.Sort()
ll_cnt = idw_detail.RowCount()
For i = 1 to ll_cnt 

	SetMicroHelp("Checking order detail record " + String(i) + " of " + String(ll_cnt))
	ls_sku = idw_detail.GetItemString(i, "sku")
	ls_supp_code = idw_detail.GetItemString(i, "supp_code")
	ls_osku = idw_detail.GetItemString(i, "alternate_sku")
	llLineItemNo = idw_detail.GetItemnumber(i, "line_Item_No")
	ldquantity = idw_detail.GetItemnumber(i, "req_qty")
	
	// 12/09 - PCONKL - Need to allow zero qty for Warner
	//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
	IF (ldquantity = 0 or isnull(ldquantity)) and gs_project <> 'WARNER' and gs_project <> 'PHILIPSCLS' and gs_project <> 'PHILIPS-DA' THEN  //GailM 29552
		Messagebox(is_title,"Please enter a value for Required quantity!",StopSign!)
		tab_main.selecttab(3)
		return -1
	End IF	
	
	// Check SKU Dimensions againts Carrier & Schedule Codes (SATILLO ONLY) - GAP 9/02
	If Upper(Left(gs_project,4)) = 'GM_M' Then
		If IsValid(idw_other.object.carrier) and (NOT IsNull(idw_other.object.carrier[1]) ) and idw_other.object.carrier[1]='FEDEX' then 
			//Get Dimensions/Weight for entered sku	gap 9/02
			select Weight_1, Length_1, Width_1, Height_1, Description
			into :ldWeight, :ldLength, :ldWidth, :ldHeight, :ls_sku_Description
			from Item_master with(nolock)
			where project_id = :gs_project and SKU = :ls_sku;
			
			// - Make sure dimensions are in proper order (lengh > width > height)	 gap 9/02	
			ldsDimensions = Create DataStore
			ldsDimensions.dataobject = 'd_dimension_sort'
			llNewRow = ldsDimensions.InsertRow(0)
			ldsDimensions.SetItem(llNewRow,'dimension',ldLength)
			llNewRow = ldsDimensions.InsertRow(0)
			ldsDimensions.SetItem(llNewRow,'dimension',ldWidth)
			llNewRow = ldsDimensions.InsertRow(0)
			ldsDimensions.SetItem(llNewRow,'dimension',ldHeight)
			ldsDimensions.Sort()
			ldLength = ldsDimensions.GetITemNumber(1,'dimension')
			ldWidth = ldsDimensions.GetITemNumber(2,'dimension')
			ldHeight = ldsDimensions.GetITemNumber(3,'dimension')
			ldGirth = ldLength + (2*ldHeight) + (2*ldWidth)
			
				IF (ldWeight > 2200 or ldGirth > 300 or ldLength > 119)  then 	/*CANNOT SHIP FEDEX*/ 
					ls_msgText = "Item " + ls_sku + " "+ ls_sku_Description + ",  dimensions/weight exceed FedEx limits: 'CANNOT-SHIP-FEDEX', please check!"
					Messagebox(is_title,ls_msgText, StopSign!)
					tab_main.selecttab(3)
					f_setfocus(idw_detail, i, "sku")
					return -1
				else
					IF ldLength = 0  or ldHeight = 0 or ldWidth = 0 or ldWeight = 0 then /* flag sku with 0 dimensions/weight*/
						ls_msgText = "Item " + ls_sku + " " + ls_sku_Description + ",  has 0 in one or more dimensions/weight!  Click 'OK' to accept and save or 'CANCEL' to review schedule code and item dimensions!"
						yesno = Messagebox(is_title,ls_msgText,Exclamation!,OKCancel!,2 )
						tab_main.selecttab(3)
						f_setfocus(idw_detail, i, "sku")
						if yesno <> 1 then return -1
					end if
				
					CHOOSE CASE idw_other.object.user_field1[1] 
					CASE "B", "E/TRK", "F", "L", "N" , "Q" 	/*FEDEX GROUND*/
					IF ldLength > 108 or ldGirth > 130 or ldWeight > 150 then 
						ls_msgText = "Item " + ls_sku + " " + ls_sku_Description + ",  dimensions exceed FEDEX/GROUND limits!, Click 'OK' to automatically change the schedule code on this order to: (V - FEDEX / 2ND DAY AIR)"
						yesno = Messagebox(is_title,ls_msgText,Exclamation!,OKCancel!,2 )
						tab_main.selecttab(3)
						f_setfocus(idw_detail, i, "sku")
						if yesno <> 1 then return -1
						// cascade to next fedex service code /*FEDEX 2ND DAY AIR*/
						idw_other.object.ship_via[1] = 'AIR / 2ND DAY'
						idw_other.object.user_field1[1] = 'V - FEDEX / 2ND DAY AIR'
						idw_other.object.Freight_Terms[1] = 'PREPAID'
					end if
					END CHOOSE
				end if
		End If // FEDEX
	End If /* GM */
	
	// 05/04 - PCONKL - Validate Over/Under Picking
	ldord_qty = idw_detail.getitemnumber(i,'req_qty')
	ldpick_qty = idw_detail.getitemnumber(i,'Alloc_qty')
	If ldpick_qty = 0 Then 	//Check for existence of a pick row for this line item
		lsFind = "Line_Item_No = " + string(idw_detail.getitemnumber(i, 'line_item_no'))
		llFindRow  = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
		If llFindRow = 0 Then ldpick_qty = -1 
	End If
	
	// Test for Over/Under PickingI
	If ib_LPN_PickByPallet then
		//TimA 11/15/13 Pandora issue #637 - On LPN orders we don't want to check for Over Under picking 
	Else
		/* GailM 06/27/2014 Pandora Issue 843 - Under Picking by Warehouse/Short Ship - ShortShip takes precedence over underpick*/
		if ldord_qty < ldpick_qty  and ldord_qty > 0 and ldpick_qty >= 0 and  (g.is_allow_overPick <> 'Y' AND g.is_allow_overPick <> 'B') Then 
			Messagebox(is_title,"Picked QTY is greater than Ordered Qty~rand over picking is not allowed!",StopSign!)
			tab_main.selecttab(4)
			f_setfocus(idw_pick, i, "sku")
			return -1
		End If
	
		if ldord_qty > ldpick_qty  and ldord_qty > 0 and idw_pick.rowcount() > 0 Then 	// and ldpick_qty >= 0 (removed_
			If ( ib_ShortShipEnabled 	) Then						
				If ( getAuthorize( ls_order, 'SS')  ) Then
					ib_under_picked = true
					ib_ShortShipUnlocked = true
				End If
				If NOT ib_under_picked Then		// Do not check twice
					If Messagebox(is_title,"This order is under picked.  On save, the order will be locked.~r~n" + &
						"Contact your supervisor to unlock and confirm this order.~r~n" + &
						"Do you want to continue?",Question!,YesNo!) = 1 Then
						idw_main.setitem( 1,"ord_status", "H")
						ib_under_picked = true
						wf_lock(true)
						tab_main.tabpage_main.cb_do_confirm.Enabled = False
						tab_main.selecttab(1)
					Else
						tab_main.selecttab(4)
						f_setfocus(idw_pick, i, "sku")
						return -1
					End If
				End If
			Elseif (g.is_allow_overPick <> 'U' AND g.is_allow_overPick <> 'B') Then
				Messagebox(is_title,"Picked QTY is Less than Ordered Qty~rand under picking is not allowed!",StopSign!)
				tab_main.selecttab(4)
				f_setfocus(idw_pick, i, "sku")
				return -1
			end if
		else
			if idw_pick.rowcount() = 0 and ib_ShortShipEnabled and getAuthorize( ls_order, 'SS') and NOT ib_ShortShipUnlocked then		//  Pick list has been deleted....  Remove authorize if necessary
				If ( remAuthorize( ls_order, 'SS')  ) Then   // Pick List deleted, remove authentication
					ib_under_picked = false
				End If
			end if
		end if
	End if
	
	// Check for duplicate records
	If ls_sku = ls_prev_sku and ls_osku = ls_prev_osku and ls_prev_supp = ls_supp_code and llLineItemNo = llPrevLineItemNo Then
		Messagebox(is_title,"Found duplicate order detail item, please check!", StopSign!)
		tab_main.selecttab(3)
		f_setfocus(idw_detail, i, "sku")
		return -1
	End If
	
	ls_prev_sku = ls_sku
	ls_prev_osku = ls_osku
	ls_prev_supp = ls_supp_code
	llPrevLineItemNo = llLineItemNo

Next

ls_prev_loc = "XXXXXXXXXX"
ll_row = 1

// 02/05 - PCONKL - Allow for user to delete rows with 0 Qty
If idw_pick.Find("quantity = 0",1,idw_pick.RowCount()) > 0 Then
	If Messagebox(is_title,'Do you want to delete the non-pickable rows (qty = 0)?',Question!,yesNo!,2) = 1 Then
		idw_pick.SetRedraw(false)
		for i = ll_Cnt to 1 Step -1
			If idw_Pick.GetITemNumber(i,'quantity') = 0 Then
				idw_pick.DeleteRow(i)
			End If
		Next
		idw_pick.SetRedraw(True)
	End If
End IF

ldSerializedQty = 0

//11-Mar-2014 :Madhu- Added to remove filter on Packlist. -START
//If we're on TRAX tab- re-set filter on pack- to avoid display duplicate records on TRAX
IF tab_main.SelectedTab =9 Then wf_set_pack_filter('Set')

//Validate Outbound Serial #'s
llPrevLineItemNo = 0
lbValidate = False

ll_cnt = tab_main.tabpage_serial.dw_serial.RowCount()
For i = 1 to ll_cnt
	
	//10/07 - PCONKL - Now validating against Project level indicator instead of hardcoding for project
	//11/09 - PCONKL - Allowing Serials to be generated first
	If g.ibCartonSerialvalidationRequired and idw_pack.RowCount() > 0 Then
				
		If (isnull(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no')) or tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no') = "" ) and &
			tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no') > "" Then
		
				MessageBox(is_title,"Carton Number required for Serial Numbers!")
				f_setfocus(tab_main.tabpage_serial.dw_serial, i, "carton_no")
				Return -1
			
		Else 
			
			If ibSerialCartonNoChanged  Then		/* 01/18 - GailM - S14978 */
						//Do nothing
			Else
				//Dhirendra -S59788 PANDORA-overpack caton type packing screen functionality -Start	
				IF gs_project ='PANDORA' then 
					if tab_main.tabpage_serial.dw_serial.GetITemString(i,'container_tracking_ind') ='Y' THEN
					// lsFind = "Upper(carton_no) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no')) + "'"
						lsFind = "Upper(pack_container_id) = '" +tab_main.tabpage_serial.dw_serial.GetITemString(i,'container_id')+ "'" 
					else 
						ll_text_length =(len(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no')) -1)
						ls_prefix	 = left(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no'),1)
						IF ls_prefix = 'T'  Then
							  lsFind = "Upper(pack_container_id) = '" +Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no'))+ "'" 
						else 
							lsFind = "Upper(carton_no) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no')) + "'"
						END IF
					End if
				else //non-Pandora
					lsFind = "Upper(carton_no) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'carton_no')) + "'" 
					//	lsFind += "and Upper(supp_code) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'supp_code')) + "'" 
					lsFind += " and Line_Item_No = " + String(tab_main.tabpage_serial.dw_serial.GetITemNumber(i,'line_item_no')) 
				
					//Sku is either parent or child SKU - determine from Pick List
					// 05/07 - PCONKL - Include line number in find since a child sku may be attched to multiple parents
					llFindRow = idw_pick.Find("Upper(sku) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'sku')) + "' and line_item_no = " + String(tab_main.tabpage_serial.dw_serial.GetITemNumber(i,'line_item_no')) ,1,idw_pick.RowCount())
					If llFindRow > 0 Then
						lsFind += " and Upper(sku) = '" + Upper(idw_pick.GetITemString(llFindRow,'sku_Parent')) + "'" 
					Else
						lsFind += " and Upper(sku) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetITemString(i,'sku')) + "'"
					End If
				END IF 
				 //Dhirendra -S59788 PANDORA-overpack caton type packing screen functionality -EN
				If idw_Pack.Find(lsFind,1,idw_Pack.RowCount()) < 1 Then
						
					MessageBox(is_title,"Pack Row not found for this Carton/Line/SKU/Supplier!")
					tab_main.selecttab(6)
					f_setfocus(tab_main.tabpage_serial.dw_serial, i, "carton_no")
					Return -1
						
				End If
			End If	
		End If
			
	End If /*need to validate Carton Serial match */
	
	//Check for Dups
	//Dont validate for dups if serial # = '-', it wont be saved to DB anyway
	// 11/09 - PCONKL - Ignore where starts with "N/A" Too
	If tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no') = '-' or Left(tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no'),3) = 'N/A' Then Continue
	
	//BCR 29-JUN-2011: Prevent leading and trailing spaces in Serial No entries...
	If LEFT(tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no'), 1) = ' ' THEN 
		MessageBox(is_title, "Please remove leading spaces from Serial Number!", StopSign!)	
		tab_main.SelectTab(6) 
		f_setfocus(tab_main.tabpage_serial.dw_serial, i, "serial_no")
		Return -1
	END IF
	
	If RIGHT(tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no'), 1) = ' ' THEN 
		MessageBox(is_title, "Please remove trailing spaces from Serial Number!", StopSign!)	
		tab_main.SelectTab(6) 
		f_setfocus(tab_main.tabpage_serial.dw_serial, i, "serial_no")
		Return -1
	END IF

	
	// 11/09/10 - dts - Pandora allows duplicate Serial #s, just not duplicate SKU/Serial combos...
	lsFind = "serial_no = '" + tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no') + "'"

	//TAM 2014/09/26 - Honda allows duplicates as well, Just not duplicate SKU/Serial combos....	
	//	if gs_project = 'PANDORA' then
	if gs_project = 'PANDORA' or gs_project = 'HONDA-TH' then
			// KZUV.COM - Add the additional SKU constraint for Pandora.
			lsFind += " and sku = '" + tab_main.tabpage_serial.dw_serial.GetITemString(i,'sku') + "'"
			
			If tab_main.tabpage_serial.dw_serial.Find(lsFind, i + 1, ll_cnt + 1) > 0 Then
				MessageBox("Validation Error","Duplicate SKU/Serial Number found for this Order!")
				f_setfocus(tab_main.tabpage_serial.dw_serial, i, "serial_no")
				Return -1
			End If	
		else
			If tab_main.tabpage_serial.dw_serial.Find("serial_no = '" + tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no') + "'",i + 1, ll_cnt + 1) > 0 Then
			MessageBox("Validation Error","Duplicate Serial Number found for this Order!")
			f_setfocus(tab_main.tabpage_serial.dw_serial, i, "serial_no")
			Return -1
		End If	
	end if
Next /*Serial Row */

//Delete any rows with no serial #'s (blank or '-')
tab_main.tabpage_serial.dw_Serial.SetRedraw(False)

//Unfilter (we are only showing rows where the serial # is required
tab_main.tabpage_serial.dw_serial.SetFilter('')
tab_main.tabpage_serial.dw_serial.Filter()
ll_cnt = tab_main.tabpage_serial.dw_serial.RowCount()

For i = ll_cnt to 1 step -1 //hdc 1/11/2013 Physio-MAA can have blank serials and it's not an empty record; check more fields
	if (isnull(tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no')) &
		or tab_main.tabpage_serial.dw_serial.GetITemString(i,'serial_no') = '-')  then 
		tab_main.tabpage_serial.dw_serial.DeleteRow(i)
	End If
NExt

tab_main.tabpage_serial.dw_serial.SetRedraw(True)
ibPackModified = False

// Validate picking records
ll_cnt = idw_pick.RowCount()
ls_whcode = idw_main.getitemstring(1,'wh_code')

For i = 1 to ll_cnt
	j = 0
	
	// 10/00 PCONKL - Dont validate Component Children
	If idw_pick.GetItemString(i,'component_ind') = '*' or idw_pick.GetItemString(i,'component_ind') = 'B' or idw_pick.GetItemString(i,'component_ind') = 'W' Then Continue
	
	If IsNull(idw_pick.GetItemString(i, "do_no")) Then
		idw_pick.SetItem(i, "do_no", idw_main.GetItemString(1, "do_no"))
	End If
	ls_sku = idw_pick.GetItemString(i, "sku")
	ls_supp_code = idw_pick.GetItemString(i, "supp_code")
	
	// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier
	lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "'"
	If g.is_allow_alt_supplier_pick = "N" Then
		lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
	End If
	
	j = idw_detail.Find(lsFind, j, idw_detail.RowCount())
	If j > 0 Then
		k = 0
		If idw_pick.GetItemString(i, "sku_pickable_ind") = 'Y' Then /*if sku is non pickable, location will be set to N/A - dont validate*/
			ls_loc = idw_pick.GetItemString(i, "l_code")
			
			If ls_loc = '' or  IsNull(ls_loc) Then
				MessageBox(is_title, "Location is required!", StopSign!)	
				tab_main.SelectTab(4) 
				f_setfocus(idw_pick, i, "l_code")
				Return -1				
			End If
		
		End If /* Pickable SKU*/
	Else
	End If
Next

//24-APR-2019 :Madhu S32730 Picking and Packing Quantity Validation
IF this.wf_pick_pack_qty_validation(false) < 0 Then Return -1
	
	
//Jxlim 10/05/2010 Change qty from pick table to delivery detail table.
//JXLIM 06/29/2010 Warner under scanned warning message
IF gs_project = 'WARNER' THEN
	//Check if there are any under scan sku
	ldSerialQty = 0
	ll_cnt = idw_Serial.RowCount()
	For i = 1 to ll_Cnt
		ldSerialQty += idw_Serial.GetITemNumber(i,'quantity')
	Next
	
	ldPickQty = 0
	ll_cnt = idw_detail.RowCount()
	For i = 1 to ll_Cnt
		If idw_detail.GetITemString(i,'Component_ind') <> 'Y' Then
			ldPickQty += idw_detail.getitemnumber(i,'Alloc_qty')
		End If
	Next
	
	string ls_findserialSku
	long ll_FindSerialrow, ll_srow1, ll_srow2
	If ldSerialQty < ldPickQty Then		
		ll_scnt = idw_Serial.RowCount()
		For s = 1 to ll_sCnt
			ls_sku 	 	  = idw_Serial.GetITemString(s,'sku')
			ldScanQty	  = idw_Serial.GetITemNumber(s,'quantity')
			lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Alloc_qty > " + String(ldScanQty)
			ll_Findrow = idw_detail.Find(lsFind, 1, idw_detail.RowCount())
			//if found the under scanned sku collect the info into message.
			If ll_Findrow > 0 Then	
				ldAllocQty = idw_detail.GetITemNumber(ll_findrow,'Alloc_qty')	
				ls_NDescription = idw_detail.GetITemString(ll_findrow,'native_description')					
				
				lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "'"						
				
				ll_srow1 = ids_compare_underscanned.find(lsFind, 1,ids_compare_underscanned.rowcount())							
				If ll_srow1 < 1 then
					ll_srow2 = ids_compare_underscanned.insertrow(0)
					ids_compare_underscanned.setitem(ll_srow2,'sku',ls_sku)
					ids_compare_underscanned.setitem(ll_srow2,'scan', ldScanQty)	
					ids_compare_underscanned.setitem(ll_srow2,'pick', ldAllocQty )
					ids_compare_underscanned.setitem(ll_srow2,'native_description', ls_NDescription)
				Else			
					ldScanQty = ids_compare_underscanned.getitemnumber(ll_srow1,'scan') + ldScanQty
					ids_compare_underscanned.setitem(ll_srow1,'scan', ldScanQty)
					
					ldAllocQty = ids_compare_underscanned.getitemnumber(ll_srow1,'pick')
					ids_compare_underscanned.setitem(ll_srow1,'pick', ldAllocQty )
					ids_compare_underscanned.setitem(ll_srow1,'native_description', ls_NDescription)
				End if						
			End If
		Next
		
		// Validate if scan qty < picking records quantity
		long ll_scan_cnt
		Decimal ld_scan_qty, ld_alloc_qty
		ll_scan_cnt = ids_compare_underscanned.rowcount()
		For i = 1 to ids_compare_underscanned.rowcount()				
			ld_alloc_qty	     = ids_compare_underscanned.getitemnumber(i,'pick')
			ld_scan_qty		 = ids_compare_underscanned.getitemnumber(i,'scan')
			ls_sku 	 	 	 = ids_compare_underscanned.getitemstring(i,'sku')
			ls_NDescription  = ids_compare_underscanned.getitemstring(i,'native_description')
			if ld_scan_qty < ld_alloc_qty  then
				ls_message += "SKU: " + ls_sku + " " + ls_NDescription + " Scanned Qty: "+ String(ld_scan_qty) + " Allocated Qty: " + String(ld_alloc_qty) + "~r" 
			end if
		Next
		//Prompt message and prevent from saving when it is under scanned
		if ld_scan_qty < ld_alloc_qty  then					
			MessageBox("Under Scanned", "Not all Items have been scanned on the Serial Tab, Please Check!!!!!" + "~r~r" + ls_Message)
			Return -1
		end if		
	End If	
END IF

//Begin -04062022-  Dinesh - S69824- Google -  SIMS - Saudi Arabia Shipments
//			If Upper(gs_project) = 'PANDORA' then
//						string ls_DONO,ls_country
//						long ll_count
//							ls_DONO = idw_Main.GetITemString(1,'do_no')
//							ls_whcode = idw_Main.GetITemString(1,'wh_code')
//							select Country into :ls_country from Delivery_Master where Project_ID = :gs_project and do_no=:ls_DONO and Country='NL' USING SQLCA;
//						
//							if ls_country='NL' then
//								Select count(*) INTO :ll_count FROM lookup_table with (NoLock) 
//								Where Project_ID = :gs_project AND Code_Type = 'SAUDI_ARABIA_SHIPMENT' AND code_id=:ls_whcode USING SQLCA;
//							
//									if ll_count <= 0 then
//										
//										messagebox('Alert',"This is a Saudi Arabia Shipment and this warehouse is not allowed to ship to this country. Please contact Google to cancel this order.")
//										return -1
//									end if
//							end if
//					End if
//					End -04062022-  Dinesh - S69824- Google -  SIMS - Saudi Arabia Shipments
//
//11-APR-2018 :Madhu S18131 - 1 COO Per Line Item No of an International Order
If upper(gs_project) ='PANDORA' and wf_multiple_coo_validation(idw_main.GeTItemString(1,'wh_code')) < 0 Then Return -1

SetMicroHelp("Validation complete!")

Return 0
end function

public function integer wf_update_content ();// *** 08/06 - PCONKL - Moved this function outside of the Begin Trans->Commit. Do not add any database updates ***

long i, j, k,shit, ll_currow, ll_totalrows, ll_content_cnt,ll_owner_id,llComponent,llID,llLineItemNo, llFindRow, llSerialArrayPos, llNull[]
string ls_sku,ls_whcode,ls_lcode,ls_itype,ls_sno,ls_lno, ls_dono, ls_status, ls_ro,ls_pono,ls_supp_code, lsZone
String ls_coo, ls_po_no2,ls_find_string , lsCompInd,lsSkuParent, lsFindHold, lsContID, lsFind, lsNull[]
DateTime	ldtExpDate
Decimal ld_req, ld_avail, ldContLength, ldContWidth, ldContHeight, ldContWeight

dwitemstatus ldis_status

// 09/04 - PCONKL - As part of the BOM chld explosion on the Pick List, We will show the parent and children but only
//							allocated children. The parents are basically just placeholders on the Pick list.
//							However, we still need to build the Pick Detail records since Parent Serial Number records are linked 
//							to the pick detail and not the pick. 
//
//							We need to maintain the Pick Detail records without touching Content in any way since there won't be any stock at the parent level

// 05/04 - PCONKL Reset Serial Update Array
llSerialArraypos = 0
isSerialSKU[] = lsNull[]
ilSerialLine[] = llNull[]
ilSerialID[] = llNull[]
ibSerialsUpdated = False

ids_content.Reset()
ids_content.SetFilter("")
idw_pick_detail.Reset()
idw_pick.Sort()

ls_whcode = idw_main.getitemstring(1,'wh_code')
ls_dono = idw_main.getitemstring(1,'do_no')
ls_status = idw_main.getitemstring(1,'ord_status')

// pvh 02.15.06  - gmt
datetime ldtToday
ldtToday = f_getLocalWorldTime( ls_whcode ) 
//ldtToday = DateTime(today(), Now())
// eom

// Retrieve related content records for all modified rows
// not being reset before each retrieve (return 2 in retrievstart event!!!!)

for i = 1 to idw_pick.rowcount()
	
	// 08/04 - PCONKL - Ignore Component records where component_no = 0 - Just a placeholder for the childeren being blown out (replacing Workorder)
	//							No need to retrieve content records - they won't exist anyway.
	If idw_pick.getitemstring(i, 'Component_ind') = 'Y'  and idw_pick.getitemstring(i, 'l_code') = 'N/A' and (idw_pick.getitemNumber(i,'Component_no') = 0 or isnull(idw_pick.getitemNumber(i,'Component_no'))) Then Continue
	
	ldis_status = idw_pick.getitemstatus(i,0,Primary!)
	if ldis_status <> NewModified! and ldis_status <> DataModified! then continue
	
	ls_sku = idw_pick.getitemstring(i,'sku')
	ls_supp_code = idw_pick.getitemstring(i,'supp_code')
	ls_coo = idw_pick.getitemstring(i,'country_of_origin')
	ll_owner_id = idw_pick.getitemnumber(i,'owner_id')
	ls_po_no2 = idw_pick.getitemstring(i,'po_no2')
	lsContID = idw_pick.getitemstring(i,'container_id')
	ldtExpDate = idw_pick.GetITemDateTime(i,'expiration_date')
	ls_lcode = idw_pick.getitemstring(i,'l_code')
	// 10/00 PCONKL - If capturing serial # on outbound, ignore value on Pick List
	If idw_pick.getitemstring(i,'serialized_ind') = 'O' Then
		ls_sno = '-'
	Else
		ls_sno = idw_pick.getitemstring(i,'serial_no')
	End If
	ls_lno = idw_pick.getitemstring(i,'lot_no')
	ls_pono = idw_pick.getitemstring(i,'po_no')
	ls_itype = idw_pick.getitemstring(i,'inventory_type')
		
	// 08/02 - PCONKL - We only want to retrieve the rows once - we may have multiple pick rows that will retrieve the same content rows (only line item different).
	ls_find_string = "Upper(sku) = '" + Upper(ls_SKU) + "' and Upper(supp_code) = '" + Upper(ls_supp_Code) + "'"
	ls_find_string += " and owner_id = " + String(ll_owner_id) + " and upper(country_of_origin) = '" + Upper(ls_coo) + "'"
	ls_Find_String += " and Upper(l_code) = '" + Upper(ls_lCode) + "' and Upper(serial_no) = '" + Upper(ls_sno) + "'"
	ls_Find_String += " and Upper(lot_no) = '" + Upper(ls_lno) + "' and Upper(po_no) = '" + Upper(ls_pono) + "'"
	ls_Find_String += " and Upper(po_no2) = '" + Upper(ls_po_no2) + "' and Upper(inventory_type) = '" + Upper(ls_itype) + "'"
	ls_Find_String += " and Upper(container_id) = '" + Upper(lsCOntId) + "' and String(expiration_date,'mm/dd/yyyy hh:mm:ss') = '" + String(ldtExpDate,'mm/dd/yyyy hh:mm:ss') + "'" /* 11/02 - PConkl */
		
	If ids_Content.Find(ls_find_String,1,ids_Content.RowCount()) <=0 Then
		ll_content_cnt = Ids_Content.retrieve(gs_project, ls_whcode, ls_sku, ls_supp_code,ll_owner_id,ls_coo,ls_lcode, ls_sno, ls_lno, ls_pono,ls_po_no2, ls_itype, lsContID, ldtExpDate)
	End If
	
next

// Return original values of modified old records to content table

for i = 1 to idw_pick.rowcount() /*For each Pick Row*/

	If idw_pick.getitemstring(i,'sku_pickable_ind',Primary!,True) = 'N' Then Continue /* 09/01 PCONKL - content was not touched if SKU is non pickable*/
	
	ldis_status = idw_pick.getitemstatus(i,0,Primary!)
	if ldis_status <> DataModified! and ls_status <> "V" then Continue

	// 06/00 PCONKL - Find is case sensitive!!!
	ls_sku = Upper(idw_pick.getitemstring(i,'sku',Primary!,True))
	ls_supp_code = Upper(idw_pick.getitemstring(i,'supp_code',Primary!,True))
	ll_owner_id = idw_pick.getitemnumber(i,'owner_id',Primary!,True)
	ls_coo = Upper(idw_pick.getitemstring(i,'country_of_origin',Primary!,True))
	ls_po_no2 = Upper(idw_pick.getitemstring(i,'po_no2',Primary!,True))
	ls_lcode = Upper(idw_pick.getitemstring(i,'l_code',Primary!,True))
	// 10/00 PCONKL - If capturing serial # on outbound, ignore value on Pick List
	If idw_pick.getitemstring(i,'serialized_ind') = 'O' Then
		ls_sno = '-'
	Else
		ls_sno = Upper(idw_pick.getitemstring(i,'serial_no',Primary!,True))
	End If
	ls_lno = Upper(idw_pick.getitemstring(i,'lot_no',Primary!,True))
	ls_itype = idw_pick.getitemstring(i,'inventory_type',Primary!,True)
	ls_pono = Upper(idw_pick.getitemstring(i,'po_no',Primary!,True))
	lsContID = Upper(idw_pick.getitemstring(i,'container_ID',Primary!,True)) 
	ldtExpDate = idw_pick.getitemDateTime(i,'expiration_Date',Primary!,True) 
	lsCompind = Upper(idw_pick.getitemstring(i,'component_ind')) 
	llComponent = idw_pick.getitemnumber(i,'component_no') 
	// pvh - 01/11/06
	llLineItemNo = idw_pick.getitemnumber(i,'Line_Item_no',Primary!,True) 
	lsZone = Upper(idw_pick.getitemstring(i,'Zone_ID',Primary!,True)) /* 05/05 PCONKL */
	
	//02/03 - PCONKL - Container DIMS will be updated back to Content
	ldContlength = idw_pick.getitemnumber(i,'cntnr_length')
	ldContWidth = idw_pick.getitemnumber(i,'cntnr_width')
	ldContheight = idw_pick.getitemnumber(i,'cntnr_height')
	ldContWeight = idw_pick.getitemnumber(i,'cntnr_Weight')
	
	idw_pick_detail.retrieve(ls_dono, ls_sku, ls_supp_code,ll_Owner_Id,ls_coo,ls_lcode, ls_itype, ls_sno, ls_lno, ls_pono,ls_po_no2,llLineItemNo, lsContID, ldtExpDate,llComponent, lsZone)
	
	ll_totalrows = idw_pick_detail.RowCount()
	If ll_totalrows <= 0 Then
		MessageBox(is_title, "System error 10002, please contact system support!", StopSign!)
		Return -1
	End If
	
	// 09/04 - PCONKL - If this is a parent placeholder for children items being exploded (replacing WO), We don't want to
	//							update COntent (it was never allocated) but we still need to delete the Pick Detail Records. They will be
	//							rebuilt below.
	If idw_pick.getitemstring(i, 'Component_ind',Primary!,True) = 'Y'  and idw_pick.getitemstring(i, 'l_code',Primary!,True) = 'N/A'  and (idw_pick.getitemNumber(i,'Component_no',Primary!,True) = 0 or isnull(idw_pick.getitemNumber(i,'Component_no',Primary!,True))) Then 
	Else		
		
		ls_find_string =  "Upper(sku) = '" + ls_sku + "' and Upper(supp_code) = '"  + ls_supp_code + & 
	   						"' and Upper(l_code) = '" + ls_lcode + "' and upper(country_of_origin) = '" + ls_coo + "'" + &
								" and owner_id = " + string(ll_owner_id) + " and Upper(po_no2) = '" + ls_po_no2 + &
								"' and Upper(serial_no) = '" + ls_sno + "' and upper(lot_no) = '" + ls_lno + "' and upper(po_no) = '" + ls_pono +  "' and inventory_type = '" + ls_itype + "'" + &
								" and Upper(container_ID) = '" + lsContID + "' and String(expiration_date,'mm/dd/yyyy hh:mm:ss') = '" + string(ldtExpDate,'mm/dd/yyyy hh:mm:ss') + "'"
	
		// 10/00 Pconkl - Include component info in Find so we can update a specific component, set to 0 if not a component
		If Not isnull(llComponent) Then
			ls_find_string +=	" and component_no = " + string(llComponent)
		End If
	
		k = ids_content.Find(ls_find_string, 1, ids_content.RowCount())
		If k	<= 0 Then
			ll_content_cnt = ids_content.retrieve(gs_project, ls_whcode, ls_sku, ls_supp_code,ll_Owner_id,ls_coo,ls_lcode, ls_sno, ls_lno, ls_pono, ls_po_no2,ls_itype, lsContID, ldtExpDate)
		End If
	
		for j = 1 to ll_totalrows /*for each Pick Detail Row*/
		
			ls_ro = idw_pick_detail.GetItemString(j,'ro_no')
			ll_currow = ids_content.Find(ls_find_string + "and inventory_type ='"+ls_itype+"' and ro_no = '" + ls_ro + "'",1, ids_content.RowCount()) /* 11/02 - Pconkl - Include RO_NO in Find*/
			If ll_currow <= 0 Then
			
				ll_currow = ids_content.InsertRow(0)
				ids_content.setitem(ll_currow,'project_id',gs_project)
				ids_content.setitem(ll_currow,'ro_no',ls_ro)
				ids_content.setitem(ll_currow,'sku',ls_sku)
				ids_content.setitem(ll_currow,'supp_code',ls_supp_code)
				ids_content.setitem(ll_currow,'wh_code',ls_whcode)
				ids_content.setitem(ll_currow,'owner_id',ll_owner_id)
				ids_content.setitem(ll_currow,'country_of_origin',ls_coo)
				ids_content.setitem(ll_currow,'po_no2',ls_po_no2)
				ids_content.setitem(ll_currow,'Container_ID',lsCOntID) /*11/02 - PConkl */
				ids_content.setitem(ll_currow,'Expiration_date',ldtExpDate) /*11/02 - PConkl */
				ids_content.setitem(ll_currow,'l_code',ls_lcode)
				ids_content.setitem(ll_currow,'inventory_type',ls_itype)
				ids_content.setitem(ll_currow,'serial_no',ls_sno)
				ids_content.setitem(ll_currow,'lot_no', ls_lno)
				ids_content.setitem(ll_currow,'po_no', ls_pono)
				ids_content.setitem(ll_currow,'reason_cd', '')
				ids_content.setitem(ll_currow,'avail_qty', 0)
				ids_content.setitem(ll_currow,'component_qty', 0)
				ids_content.setitem(ll_currow,'last_user',gs_userid)
				ids_content.setitem(ll_currow,'last_update', ldtToday )
				If isnull(llComponent) Then llComponent = 0 /* 06/01 PConkl */
				ids_content.setitem(ll_currow,'component_no',llComponent) /* 10/00 PCONKL */
				ids_content.setitem(ll_currow,'complete_date',idw_pick_detail.GetItemDateTime(j,'complete_date'))
			
				// 02/03 - PCONKL - Container Dimensions and Weight need to be returned to Content
				ids_content.setitem(ll_currow,'cntnr_Length', ldContLength)
				ids_content.setitem(ll_currow,'cntnr_Width', ldContWidth)
				ids_content.setitem(ll_currow,'cntnr_Height', ldContHeight)
				ids_content.setitem(ll_currow,'cntnr_Weight', ldContWeight)
						
			End If /* no existing content record*/
		
			// 10/00 PCONKL - If it's a component child, update the component qty, otherwise update available QTy
			//If lsCompInd = '*' or lsCompInd = 'B' Then /*Component Child, update Component_qty*/
			If lsCompInd = '*'  Then /*Component Child, update Component_qty*/
				ids_content.setitem(ll_currow,'component_qty', &
					ids_content.getitemnumber(ll_currow, "component_qty") + &
					idw_pick_detail.GetItemNumber(j,'quantity'))
			Else /*not a component child, update available qty*/
				ids_content.setitem(ll_currow,'avail_qty', &
					ids_content.getitemnumber(ll_currow, "avail_qty") + &
					idw_pick_detail.GetItemNumber(j,'quantity'))
			End If /*component? */
			
		next /*Next Pick Detail*/
	
	End If /* Not a component parent placeholder*/
	
	for j = ll_totalrows to 1 Step -1
		
		//10/00 PCONKL - delete delivery serial rows first
		llID = idw_pick_detail.GetITemNumber(j,'id_no')
		
		// 05/04 - PCONKL - We don't want to delete serial rows if we're just modifying a Pick.
		//							We will need to re link the Pick Detail to the Serial by upating the ID_NO on Serial_Detail with the NEW ID on Picking_Detail
		//							We can't do this until after the records are committed to the DB
		
		ibserialsupdated = True /* will trigger re-mapping from ue_save after commit*/
		llSerialArrayPos ++
		isSerialSKU[llSerialArrayPos] = ls_Sku
		ilSerialLine[llSerialArrayPos] = llLineItemNo
		ilSerialID[llSerialArrayPos] = llID
		
		idw_pick_detail.DeleteRow(j)
		
	next
	
next /*Next Pick*/

// Return deleted rows to content table
for i = 1 to idw_pick.deletedcount()
	
	// 09/01 PCONKL - No Picking Detail Row if SKU is non-pickable (it was never picked to begin with)
	If idw_pick.getitemstring(i,'sku_pickable_ind',Delete!,True) = 'N' Then Continue
	
	ldis_status = idw_pick.getitemstatus(i,0,Delete!)
	if ldis_status = New! or ldis_status = NewModified! then Continue

	// 06/00 PCONKL - Find is case sensitive!!
	ls_sku = Upper(idw_pick.getitemstring(i,'sku',Delete!,True))
	ls_supp_code = Upper(idw_pick.getitemstring(i,'supp_code',Delete!,True))
	ll_owner_id = idw_pick.getitemnumber(i,'owner_id',Delete!,True)
	ls_coo = Upper(idw_pick.getitemstring(i,'country_of_origin',Delete!,True))
	ls_po_no2 = Upper(idw_pick.getitemstring(i,'po_no2',Delete!,True))
	ls_lcode = Upper(idw_pick.getitemstring(i,'l_code',Delete!,True))
	lsContID = Upper(idw_pick.getitemstring(i,'Container_ID',Delete!,True)) /* 11/02 - PConkl */
	ldtExpDate = idw_pick.getitemDateTime(i,'Expiration_Date',Delete!,True) /* 11/02 - PConkl */
	// 10/00 PCONKL - If capturing serial # on outbound, ignore value on Pick List
	If idw_pick.getitemstring(i,'serialized_ind',Delete!,True) = 'O' Then
		ls_sno = '-'
	Else
		ls_sno = Upper(idw_pick.getitemstring(i,'serial_no',Delete!,True))
	End If
	ls_lno = Upper(idw_pick.getitemstring(i,'lot_no',Delete!,True))
	ls_itype = Upper(idw_pick.getitemstring(i,'inventory_type',Delete!,True))
   ls_pono = Upper(idw_pick.getitemstring(i,'po_no',Delete!,True))
	lsCompind = Upper(idw_pick.getitemstring(i,'component_ind',Delete!,True)) 
	lsZone = Upper(idw_pick.getitemstring(i,'Zone_ID',Delete!,True)) /* 05/05 PCONKL */
	llComponent = idw_pick.getitemnumber(i,'component_no',Delete!,True) 
	llLineItemNo = idw_pick.getitemnumber(i,'line_Item_No',Delete!,True) 
	
	//02/03 - PCONKL - Container DIMS will be updated back to Content
	ldContlength = idw_pick.getitemnumber(i,'cntnr_length',Delete!,True)
	ldContWidth = idw_pick.getitemnumber(i,'cntnr_width',Delete!,True)
	ldContheight = idw_pick.getitemnumber(i,'cntnr_height',Delete!,True)
	ldContWeight = idw_pick.getitemnumber(i,'cntnr_Weight',Delete!,True)
	
	idw_pick_detail.retrieve(ls_dono, ls_sku, ls_supp_code,ll_owner_id,ls_coo, ls_lcode, ls_itype, ls_sno, ls_lno, ls_pono,ls_po_no2,llLineItemNo, lsContID, ldtExpDate,llComponent,lsZone)
	ll_totalrows = idw_pick_detail.RowCount()
	If ll_totalrows <= 0 Then
		MessageBox(is_title, "System error 10001, please contact system support!", StopSign!)
		Return -1
	End If

	// 08/04 - PCONKL - Ignore Component records where component_no = 0 - Just a placeholder for the childeren being blown out (replacing Workorder)
	If idw_pick.getitemstring(i, 'Component_ind',Delete!,True) = 'Y'  and idw_pick.getitemstring(i, 'l_code',Delete!,True) = 'N/A' and (idw_pick.getitemNumber(i,'Component_no',Delete!,True) = 0 or isnull(idw_pick.getitemNumber(i,'Component_no',Delete!,True))) Then
	Else
	
		ls_find_string =   "Upper(sku) = '" + ls_sku + "' and Upper(supp_code) = '"  + ls_supp_code + & 
		   				"' and Upper(l_code) = '" + ls_lcode + "' and Upper(country_of_origin) = '" + ls_coo + "'" + &
							" and owner_id = " + string(ll_owner_id) + 	" and Upper(po_no2) = '" + ls_po_no2 + &
							"' and Upper(serial_no) = '" + ls_sno + "' and upper(lot_no) = '" + ls_lno + "' and upper(po_no) = '" + ls_pono +  &
							"' and Upper(inventory_type) = '" + ls_itype + "' and Upper(Container_ID) = '" + lsContID + "'" + &
							" and String(expiration_Date,'mm/dd/yyyy hh:mm:ss') = '" + String(ldtExpDate,'mm/dd/yyyy hh:mm:ss') + "'"
	
		// 10/00 Pconkl - Include component info in Find so we can update a specific component, set to 0 if not a component
		If Not isnull(llComponent) Then
			ls_find_string +=	" and component_no = " + string(llComponent)
		End If
						
		k = ids_content.Find(ls_find_string, 1, ids_content.RowCount())
		If k	<= 0 Then
			ll_content_cnt = ids_content.retrieve(gs_project, ls_whcode, ls_sku, ls_supp_code,ll_owner_id,ls_coo, ls_lcode, ls_sno, ls_lno, ls_pono,ls_po_no2, ls_itype, lsContID, ldtExpDate)
		End If
	
		for j = 1 to ll_totalrows /*For Each Pick Detail */
		
			ls_ro = idw_pick_detail.GetItemString(j,'ro_no')
			ll_currow = ids_content.Find(ls_find_string + " and inventory_type ='" + ls_itype + "' and ro_no = '" + ls_ro + "'",1, ids_content.RowCount()) /* 11/02 - Pconkl - Include RO_NO in Find*/
		
			If ll_currow <= 0 Then
			
				ll_currow = ids_content.InsertRow(0)
				ids_content.setitem(ll_currow,'project_id',gs_project)
				ids_content.setitem(ll_currow,'sku',ls_sku)
				ids_content.setitem(ll_currow,'supp_code',ls_supp_code)
				ids_content.setitem(ll_currow,'country_of_origin',ls_coo)
				ids_content.setitem(ll_currow,'owner_id',ll_owner_id)
				ids_content.setitem(ll_currow,'wh_code',ls_whcode)
				ids_content.setitem(ll_currow,'l_code',ls_lcode)
				ids_content.setitem(ll_currow,'inventory_type',ls_itype)
				ids_content.setitem(ll_currow,'serial_no',ls_sno)
				ids_content.setitem(ll_currow,'lot_no', ls_lno)
				ids_content.setitem(ll_currow,'ro_no',ls_ro)
				ids_content.setitem(ll_currow,'po_no',ls_pono)
				ids_content.setitem(ll_currow,'po_no2',ls_po_no2)
				ids_content.setitem(ll_currow,'container_ID',lsContID) /* 11/02 - PConkl */
				ids_content.setitem(ll_currow,'expiration_date',ldtExpDate) /* 11/02 - PConkl */
				ids_content.setitem(ll_currow,'reason_cd','')
				ids_content.setitem(ll_currow,'avail_qty', 0)
				ids_content.setitem(ll_currow,'component_qty', 0)
				ids_content.setitem(ll_currow,'last_user',gs_userid)
				ids_content.setitem(ll_currow,'last_update',ldtToday )
				If isnull(llComponent) then llComponent = 0 /* 06/01 PCONKL */
				ids_content.setitem(ll_currow,'component_no',llComponent) /* 10/00 PCONKL */
				ids_content.setitem(ll_currow,'complete_date',idw_pick_detail.GetItemDateTime(j,'complete_date'))
			
				// 02/03 - PCONKL - Container Dimensions and Weight need to be returned to Content
				ids_content.setitem(ll_currow,'cntnr_Length', ldContLength)
				ids_content.setitem(ll_currow,'cntnr_Width', ldContWidth)
				ids_content.setitem(ll_currow,'cntnr_Height', ldContHeight)
				ids_content.setitem(ll_currow,'cntnr_Weight', ldContWeight)
			
			End If
		
			// 10/00 PCONKL - If it's a component child, update the component qty, otherwise update available QTy
			//If lsCompInd = '*' or lsCompInd = 'B' Then /*Component Child, update Component_qty*/
			If lsCompInd = '*' Then /*Component Child, update Component_qty*/
				ids_content.setitem(ll_currow,'component_qty', &
					ids_content.getitemnumber(ll_currow, "component_qty") + &
					idw_pick_detail.GetItemNumber(j,'quantity'))
			Else /*not a component child, update available qty*/
				ids_content.setitem(ll_currow,'avail_qty', &
					ids_content.getitemnumber(ll_currow, "avail_qty") + &
					idw_pick_detail.GetItemNumber(j,'quantity'))
			End If /*component? */
		
		next /*Next Pick Detail */
		
	End If /* Parent Placeholder*/
	
	for j = ll_totalrows to 1 Step -1
		
		//10/00 PCONKL - delete delivery serial rows first
		llID = idw_pick_detail.GetITemNumber(j,'id_no')
//		Delete from delivery_serial_detail where id_no = :llID;

		// 05/04 - PCONKL - Instead of deleting them from the table, delete them from the Serial DW
		lsFind = "id_no = " + String(llID)
		llFindRow = idw_serial.Find(lsFind,1,idw_Serial.RowCOunt())
		Do While llFindRow > 0
			idw_serial.DeleteRow(llFindRow)
			If llFindRow > idw_Serial.RowCOunt() Then Exit
			llFindRow = idw_serial.Find(lsFind,llFindRow,idw_Serial.RowCOunt())
		Loop
		
		idw_pick_detail.DeleteRow(j)
		
	next /* Next Pick Detail Record*/
	
next /* DEleted Pick Row */

ids_content.sort()

// Transfer new requested quantity from content to picking detail for all modified rows

If ls_status <> "V" Then
for i = 1 to idw_pick.rowcount()
	
	/* 09/01 PCONKL - content was not touched if SKU is non pickable*/
	If idw_pick.getitemstring(i,'sku_Pickable_Ind') = 'N' Then Continue
	
	ldis_status = idw_pick.getitemstatus(i,0,Primary!)
	if not (ldis_status = DataModified! or ldis_status = NewModified!) then continue
	
	// 06/00 PCONKL - Filter is case sensitive!!
	ls_sku   = Upper(idw_pick.getitemstring(i,'sku'))
	lsskuparent   = Upper(idw_pick.getitemstring(i,'sku_parent'))
	ls_supp_code   = Upper(idw_pick.getitemstring(i,'supp_code'))
	ll_owner_id = 	idw_pick.getitemnumber(i,'owner_id')
	ls_lcode = Upper(idw_pick.getitemstring(i,'l_code'))
	ls_Coo = Upper(idw_pick.getitemstring(i,'country_of_origin'))
	// 10/00 PCONKL - If capturing serial # on outbound, ignore value on Pick List
	If idw_pick.getitemstring(i,'serialized_ind') = 'O' Then
		ls_sno = '-'
	Else
		ls_sno   = Upper(idw_pick.getitemstring(i,'serial_no'))
	End If
	ls_lno   = Upper(idw_pick.getitemstring(i,'lot_no'))
	ls_pono   = Upper(idw_pick.getitemstring(i,'po_no'))
	ls_po_no2   = Upper(idw_pick.getitemstring(i,'po_no2'))
	lsContID   = Upper(idw_pick.getitemstring(i,'container_id'))
	ldtExpDate   = idw_pick.getitemdateTime(i,'expiration_Date') 
	ls_itype = idw_pick.getitemstring(i,'inventory_type')
	ld_req   = idw_pick.getitemnumber(i,'quantity') 
	lsCompind = Upper(idw_pick.getitemstring(i,'component_ind')) 
	lsZone = Upper(idw_pick.getitemstring(i,'Zone_ID')) /* 05/05 PCONKL */
	llComponent = idw_pick.getitemnumber(i,'component_no') 
	llLineItemNo = idw_pick.getitemnumber(i,'line_Item_No') 
	
	ldContlength = idw_pick.getitemnumber(i,'cntnr_length')
	ldContWidth = idw_pick.getitemnumber(i,'cntnr_width')
	ldContheight = idw_pick.getitemnumber(i,'cntnr_height')
	ldContWeight = idw_pick.getitemnumber(i,'cntnr_Weight')
	
	// 08/04 - PCONKL - Ignore Component records where component_no = 0 - Just a placeholder for the childeren being blown out (replacing Workorder)
	//							We don;t want to update content but we still want to build a Pick Detail Record
	
	If idw_pick.getitemstring(i, 'Component_ind') = 'Y'  and idw_pick.getitemstring(i, 'l_code') = 'N/A' and (idw_pick.getitemNumber(i,'Component_no') = 0 or isnull(idw_pick.getitemNumber(i,'Component_no'))) Then 
		
		//Build a pick detail record without updating content
		ll_currow = idw_pick_detail.InsertRow(0)
		idw_pick_detail.setitem(ll_currow,'do_no',ls_dono)
		idw_pick_detail.setitem(ll_currow,'sku',ls_sku)
		idw_pick_detail.setitem(ll_currow,'sku_parent',lsskuParent) 
		idw_pick_detail.setitem(ll_currow,'supp_code',ls_supp_code)
		idw_pick_detail.setitem(ll_currow,'country_of_origin',ls_coo)
		idw_pick_detail.setitem(ll_currow,'owner_id',ll_owner_id)
		idw_pick_detail.setitem(ll_currow,'l_code',ls_lcode)
		idw_pick_detail.setitem(ll_currow,'inventory_type',ls_itype)
		idw_pick_detail.setitem(ll_currow,'serial_no',ls_sno)
		idw_pick_detail.setitem(ll_currow,'lot_no',ls_lno)
		idw_pick_detail.setitem(ll_currow,'po_no',ls_pono)
		idw_pick_detail.setitem(ll_currow,'po_no2',ls_po_no2)
		idw_pick_detail.setitem(ll_currow,'container_ID',lsContID) 
		idw_pick_detail.setitem(ll_currow,'expiration_date',ldtExpDate) 
		idw_pick_detail.setitem(ll_currow,'component_ind',lsCompInd)
		idw_pick_detail.setitem(ll_currow,'Zone_ID',lsZone) /* 05/05 PCONKL*/
		If isnull(llComponent) Then llComponent = 0 
		idw_pick_detail.setitem(ll_currow,'component_no',llComponent) 
		idw_pick_detail.setitem(ll_currow,'line_Item_No',llLineItemNo) 
		idw_pick_detail.setitem(ll_currow,'ro_no','N/A')
		idw_pick_detail.setitem(ll_currow,'cntnr_length',ldContlength)
		idw_pick_detail.setitem(ll_currow,'cntnr_width',ldContWidth)
		idw_pick_detail.setitem(ll_currow,'cntnr_height',ldContHeight)
		idw_pick_detail.setitem(ll_currow,'cntnr_weight',ldContWeight)
		
		idw_pick_detail.setitem(ll_currow,'quantity', ld_req)
				
	Else
	
		If isnull(ld_req) Then ld_req = 0 /* 07/00 PCONKL */
	
		// 10/00 Pconkl - Include component in Find
		ls_find_string =   "Upper(sku) = '" + ls_sku + "' and Upper(supp_code) = '"  + ls_supp_code + "' and Upper(Country_of_origin) = '" + ls_coo + "'" + & 
	   					" and owner_id = " + string(ll_owner_id) + " and Upper(po_no2) = '" + ls_po_no2 + &
							"' and Upper(serial_no) = '" + ls_sno + "' and upper(lot_no) = '" + ls_lno +  & 
							"' and upper(po_no) = '" + ls_pono +  "' and inventory_type = '" + ls_itype + "'" + &
							" and Upper(Container_ID) = '" + lsContID + "' and String(expiration_Date,'mm/dd/yyyy hh:mm:ss') = '" + String(ldtExpDate,'mm/dd/yyyy hh:mm:ss') + "'"
						
		// 10/00 Pconkl - Include component info in Find so we can update a specific component, set to 0 if not a component
		If Not isnull(llComponent) Then
			ls_find_string +=	" and component_no = " + string(llComponent)
		End If
						
		lsFindHold = ls_Find_String /*find without location*/
	
		//Ignore location if it's a component Child
		//If lsCompInd <> '*' Then
			ls_find_String += " and Upper(l_code) = '" + ls_lcode + "'"
		//End If
	
		//Filter is case sensitive!!
		ids_content.SetFilter(ls_find_string)
		ids_content.Filter()
		shit = ids_content.RowCount()
	
		//If we didn't find any component children at this location, try without location in find
		//If (lsCompInd = '*' or lsCompInd = 'B') and shit = 0 Then
		If (lsCompInd = '*') and shit = 0 Then
			ids_content.SetFilter(lsFindHold)
			ids_content.Filter()
		End If
	
		j = 0
	
		Do while ld_req > 0 and j < ids_content.RowCount() and ids_content.RowCount() > 0
		
			j += 1
			// 10/00 PCONKL - If This is a component Child, we are using component qty, other wise available qty
			//If lsCompInd = '*' or lsCompInd = 'B' Then
			If lsCompInd = '*'  Then
				ld_avail = ids_content.GetItemNumber(j, "component_qty")
			Else
				ld_avail = ids_content.GetItemNumber(j, "avail_qty")
			End If
		
			If ld_avail <= 0 Then Continue
		
			//If it's component child and the content location is other than on the pick list, update pick list
			// children aren't being moved in a atransfer so we need to be able to pick from another location with the same component number
			//If lsCompind = '*' or lsCompInd = 'B' Then
			If lsCompind = '*' Then
				idw_pick.SetItem(i,"l_code",ids_content.GetITemString(j,'l_code'))
				ls_lCode = ids_content.GetITemString(j,'l_code')
			End If
		
			ll_currow = idw_pick_detail.InsertRow(0)
			idw_pick_detail.setitem(ll_currow,'do_no',ls_dono)
			idw_pick_detail.setitem(ll_currow,'sku',ls_sku)
			idw_pick_detail.setitem(ll_currow,'sku_parent',lsskuParent) 
			idw_pick_detail.setitem(ll_currow,'supp_code',ls_supp_code)
			idw_pick_detail.setitem(ll_currow,'country_of_origin',ls_coo)
			idw_pick_detail.setitem(ll_currow,'owner_id',ll_owner_id)
			idw_pick_detail.setitem(ll_currow,'l_code',ls_lcode)
			idw_pick_detail.setitem(ll_currow,'inventory_type',ls_itype)
			idw_pick_detail.setitem(ll_currow,'serial_no',ls_sno)
			idw_pick_detail.setitem(ll_currow,'lot_no',ls_lno)
			idw_pick_detail.setitem(ll_currow,'po_no',ls_pono)
			idw_pick_detail.setitem(ll_currow,'po_no2',ls_po_no2)
			idw_pick_detail.setitem(ll_currow,'container_ID',lsContID) 
			idw_pick_detail.setitem(ll_currow,'expiration_date',ldtExpDate) 
			idw_pick_detail.setitem(ll_currow,'component_ind',lsCompInd) 
			idw_pick_detail.setitem(ll_currow,'Zone_ID',lsZone) /* 05/05 PCONKL*/
			If isnull(llComponent) Then llComponent = 0 
			idw_pick_detail.setitem(ll_currow,'component_no',llComponent) 
			idw_pick_detail.setitem(ll_currow,'line_Item_No',llLineItemNo) 
			idw_pick_detail.setitem(ll_currow,'ro_no',ids_content.GetItemString(j,'ro_no'))
		
			// 09/04 - PCONKL - DIMS need to be moved to picking_detail to maintain Group by in Stock Inquiry
			idw_pick_detail.setitem(ll_currow,'cntnr_length',ldContlength)
			idw_pick_detail.setitem(ll_currow,'cntnr_width',ldContWidth)
			idw_pick_detail.setitem(ll_currow,'cntnr_height',ldContHeight)
			idw_pick_detail.setitem(ll_currow,'cntnr_weight',ldContWeight)
		
			If ld_avail >= ld_req Then
				idw_pick_detail.setitem(ll_currow,'quantity', ld_req)
				// 10/00 PCONKL - If This is a component Child, we are using component qty, other wise available qty
				//If lsCompInd = '*' or lsCompInd = 'B' Then
				If lsCompInd = '*'  Then
					ids_content.setitem(j, "component_qty", ld_avail - ld_req)
				Else
					ids_content.setitem(j, "avail_qty", ld_avail - ld_req)
				End If
				ld_req = 0
			Else
				idw_pick_detail.setitem(ll_currow,'quantity', ld_avail)
				// 10/00 PCONKL - If This is a component Child, we are using component qty, other wise available qty
				//If lsCompInd = '*' or lsCompInd = 'B' Then
				If lsCompInd = '*' Then
					ids_content.setitem(j, "component_qty", 0)
				Else
					ids_content.setitem(j, "avail_qty", 0)
				End If
				ld_req -= ld_avail			
			End If
		
		Loop /*Next Content Record */
	
		//If (ll_req > 0) and (lsCompInd <> '*') and (lsCompInd <> 'B') Then /* 10/00 PCONKL - we dont really care if not enough component child inventory*/
		If ld_req > 0 Then
			Messagebox(is_title,"Not enough inventory for picking!",StopSign!)
			tab_main.selecttab(4)
			f_setfocus(idw_pick, i, "sku")
			return -1
		End If
		
	End If /* Not a Parent Placeholder*/
	
next /*next Pick Row */

End If /*Not Void */

ids_content.SetFilter("")
ids_Content.Filter()
ll_totalrows = ids_content.RowCount()

Return 0

end function

public function integer wf_address_tab_enable (boolean abenable);
If AbEnable THen
	tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.Enabled = True
	tab_main.tabpage_main.tab_address.tabpage_bt.dw_bt.Enabled = True
	tab_main.tabpage_main.tab_address.tabpage_it.dw_it.Enabled = True
	tab_main.tabpage_main.tab_address.tabpage_st.dw_st.Enabled = True
	tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.Enabled = True	
	tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.Enabled = True //dts 12/15/2013, Pandora #658
Else
	tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_bt.dw_bt.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_it.dw_it.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_st.dw_st.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.Enabled = False //dts 12/15/2013, Pandora #658
End If

Return 0
end function

public function integer wf_save_carton_serial ();// wf_save_carton_serial()

Datastore	ldsSerial
String		lsOrigSql, lsModify, lsRC, lsDONO, lsSKU, lsSerial, lsFind
Long			llSerialPos, lLSerialCount, ll_result, llFindRow, llNewRow

// pvh 02.15.06 - gmt
datetime ldtToday

if idw_main.rowcount() > 0 then
	ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 
else
	ldtToday = f_getLocalWorldTime( gs_default_wh )
end if
//ldtToday = DateTime(today(), Now())

ldsSerial = Create u_ds_datastore
ldsSerial.DataObject = 'd_gi_outbound_carton_serial'
ldsSerial.SetTransObject(SQLCA)
	
lsDONO = idw_main.GetITemString(1,'do_No')

//Retrieve all of the serial Numbers for this order
lsOrigSql = ldsSerial.GetSqlSelect()
lsModify = 'DataWindow.Table.Select="' + lsOrigSql + " and delivery_picking_detail.do_no = '" + lsDoNo + "' and Carton_serial.Project_id = '" + gs_Project + "'" + '"'
lsRC = ldsSerial.Modify(lsModify)
ldsSerial.Retrieve()
	


llSerialCount = ldsSerial.RowCount()
For lLSerialPos = 1 to lLSerialCount
	
	If idw_main.GetITemString(1,'ord_status') = 'V' Then /*voided*/
		ldsSerial.SetITem(llSerialPos,'do_no', '')
		ldsSerial.SetITem(llSerialPos,'Status_cd', 'N') /* N = New */
	Else
		ldsSerial.SetITem(llSerialPos,'do_no', lsDONO)
		ldsSerial.SetITem(llSerialPos,'Status_cd', 'P') /* P = New */
		//
		// pvh - 11/07/05 
		// If an order is returned, 3com becomes the owner and the supplier
		// if a serial scan is used, the  only time we will see it again is on a return
		// 
		// I'm storing the original supplier code in case of a void and for later use
		//
		if gs_project = '3COM_NASH' then
			// store the old supplier code in user field 2
			ldsSErial.object.user_field2[ llSerialPos ] = ldsSErial.object.supp_code[ llSerialPos ]
			ldsSErial.object.supp_code[ llSerialPos ] = '3COM'  
		end if
	End If
	
	ldsSerial.SetITem(llSerialPos,'last_update', ldtToday )
	
Next /*Next serial row from table*/
	
Execute Immediate "Begin Transaction" using SQLCA;

ll_result = ldsSerial.Update(False, False)

//We also need to reset the status on any Serial rows that were deleted
llSerialCount = tab_main.tabpage_serial.dw_serial.DeletedCount()
For llSerialPos = 1 to lLSerialCount
	lsSKu = tab_main.tabpage_serial.dw_serial.GetITemString(llSerialPos,'sku',Delete!,false)
	lsSerial = tab_main.tabpage_serial.dw_serial.GetITemString(llSerialPos,'serial_No',Delete!,false)
	
	Update carton_serial
	set status_cd = 'N', do_no = ''
	Where project_id = :gs_Project and serial_no = :lsSerial and sku = :lsSKU;
	
next /*Deleted Row*/
	
Execute Immediate "COMMIT" using SQLCA;
	
ibSerialModified = False


Return 0
end function

public subroutine wf_set_filter_carton_type ();//DGM This function set the filterbased on the wharehouse & project it is retrieveing.
String ls_select,ls_filter,ls_wh_code
long i,ll_ret
idw_main.AcceptText()
IF idw_pack.Rowcount() > 0  THEN
	ls_wh_code = idw_main.object.wh_code[1]
	ls_filter = "project_id = '" + gs_project +"' and wh_code = '" +ls_wh_code +"'"
	idwc_carton_type.SetFilter(ls_filter)
	ll_ret = idwc_carton_type.Filter()
	ll_ret=idwc_carton_type.RowCount()
	IF ll_ret = 0 THEN
		ls_filter = "project_id = '*ALL'"
		idwc_carton_type.SetFilter(ls_filter)
		ll_ret=idwc_carton_type.Filter() 
	END IF
END IF	



end subroutine

public function window getparentwindow ();return iwParent


end function

public subroutine setparentwindow (ref window awin);// setParentWindow( win awin )
iwParent = awin

end subroutine

public function integer wf_enable_trax ();
//Enable or disable trax depending on warehouse code...

String	lsProject, lsWarehouse, lsTraxEnabled, lsStatus, lsLabelDest, ls_otm_status
Long 		llRow

If idw_main.RowCount() < 1 Then Return 0

lsProject = idw_main.GetItemString(1,'project_id')
lswarehouse = idw_main.GetItemString(1,'wh_code')
lsStatus = idw_main.GetItemString(1,"ord_status")

//Not enabled in Process/Picking Status
If lsStatus = 'P' or lsStatus = 'I' Then
	tab_main.tabpage_trax.Enabled = False
	Return 0
End If

llRow = g.of_project_warehouse(lsProject, lsWarehouse)

If llRow > 0 Then
	lsTraxEnabled = g.ids_project_warehouse.GetITemString(llRow,'trax_enable_ind')
	lslabelDest = g.ids_project_warehouse.GetITemString(llRow,'trax_label_print_dest')
End If

If lsTraxEnabled = 'Y' Then
	
	// LTK 20120531  Pandora #370 added TRAX flag logic
	boolean lb_enable_trax
	ls_otm_status = idw_main.Object.otm_status[1]

	if gs_project <> 'PANDORA' then
		lb_enable_trax = true
	else
		// Pandora, if not OTM order, enalbe TRAX.  If OTM order then enable TRAX tab if OTM Status = READY and carrier is a TRAX carrier
		//05-FEB-2019 :Madhu DE8526 - TMS Orders shouldn't go to OTM and enable trax too
		if ls_otm_status = 'N' then
			lb_enable_trax = true
		elseif (ls_otm_status = 'R'  or ls_otm_status ='T' or ls_otm_status = 'Z') then		//GailM 11/12/2020 DE18534 Enable Trax tab on TMS exempt
			// Determine if the carrier is a TRAX carrier
			if idw_other.RowCount() > 0 then
				String ls_trax_carrier, ls_carrier_code
				ls_carrier_code = idw_other.Object.carrier[1]
				
				if Len(ls_carrier_code) > 0 then
					select Trax_Carrier_Code
					into :ls_trax_carrier
					from carrier_master with(nolock)
					where carrier_code = :ls_carrier_code;
					
					if Len(ls_trax_carrier) > 0 then
						lb_enable_trax = true				
					end if
				end if
			end if
		end if
	end if

	if lb_enable_trax then
		tab_main.tabpage_trax.Enabled = True
		
		//MEA - 09/2011 - For Trax change
		wf_enable_trax_data_entry()
	end if
Else
	
	tab_main.tabpage_trax.Enabled = False
End If

//Trax Label Print button will say 'Re-print' if reprinting from Trax
If lsLabelDest <> 'S' Then
	tab_main.tabpage_trax.cb_trax_print_label.Text = 'Re-Print Labels'
Else
	tab_main.tabpage_trax.cb_trax_print_label.Text = 'Print Labels'
End If

Return 0
end function

public function integer dosuppliercheck ();// integer = doSupplierCheck()
int max
int index
string supplier

max = UpperBound( ispicksuppliers )
for index = 1 to max
	supplier = ispicksuppliers[ index ]
	if getPackSupplierFor( supplier ) then continue
	setInvalidSupplier( supplier )
	exit
next
if getInvalidSupplier() > '' then return -1

return 0

end function

public function boolean getpacksupplierfor (string _supplier);// boolean = getPackSupplierFor()

int max
int index
string supplier
boolean foundit

foundit = false
max = UpperBound( ispacksuppliers )
for index = 1 to max
	if _supplier =  ispacksuppliers[ index ] then
		setPackSupplierIndex( index )
		foundit = true
		exit
	end if
next
return foundit

end function

public subroutine doresetsupplierarrays ();// doResetSupplierArrays()

string emptyArray[]
decimal emptyDecArray[]

isPickSuppliers = emptyArray
isPackSuppliers = emptyArray

idpicksupplierqty[] = emptyDecArray[]
idpacksupplierqty[] = emptyDecArray[]

isInvalidSupplier = ''


end subroutine

public function integer dosupplierqtycheck ();// int doSupplierQtyCheck()
int max
int index
string key

max = UpperBound( ispicksuppliers )
for index = 1 to max
	key = ispicksuppliers[ index ]
	if getPackSupplierFor( key ) then
		if idpicksupplierqty[ index ] <> idpacksupplierqty[ getPackSupplierIndex() ] then
			setInvalidSupplier( key )
			setInvalidSku( key )
			exit
		end if
	end if
next
if getInvalidSupplier() > '' then return -1

return 0

end function

public subroutine setpacksupplierindex (integer _value);// setPackSupplierIndex( int _value )
iiPackSupplierIndex = _value

end subroutine

public function integer getpacksupplierindex ();// int = getPackSupplierIndex()
return iiPackSupplierIndex

end function

public subroutine setinvalidsupplier (string _value);// setInvalidSupplier( string _value )
//
// _value format =  _sku + '*' + _supplier + "*" + line_item_number
//
// 3com*10
int ipos

ipos = pos( _value, "*"  )
_value = right( _value, ( len( _value ) - ipos)  )

ipos = pos( _value, "*"  )

_value = left(  _value,( ipos -1 ) )

isInvalidSupplier = _value

end subroutine

public function string getinvalidsupplier ();// string = getInvalidSupplier()
return isInvalidSupplier

end function

public function string getinvalidsku ();// string = getInvalidSku()

return isInvalidSku

end function

public subroutine setinvalidsku (string _value);// setInvalidSku( string _value )
//
// _value format =  _sku + '*' + _supplier
//
int ipos

ipos = pos( _value, "*"  )
_value = left( _value, ( ipos -1)  )

isInvalidSku = _value

end subroutine

public function boolean parentskuisbundled (string _parentsku);// boolean = parentskuisbundled( string _parentsku )

string lsfind
long llfoundit

lsfind = "sku = '" + _parentsku + "'"
llfoundit = idw_pick.find( lsfind,1, idw_pick.rowcount() )
if llfoundit > 0 then
	if isNull( idw_pick.object.grp[ llfoundit ] ) or idw_pick.object.grp[ llfoundit ] = '' then
		return false
	else
		return true
	end if
end if
return false
end function

public subroutine setpacksupplier (string _sku, string _supplier, decimal _qty, long _line);// setPackSupplier( string _value )

// pvh - 05/11/06 - logic was setting quantity in second loop where it should be added to whats there already.

int max
int index
boolean foundit
string key
string line

_sku = trim( _sku )
_supplier  = trim( _supplier )
line = string( _line )
key = _sku + '*' + _supplier + "*" + line
max = upperbound( ispacksuppliers )
if isnull( max ) or max = 0 then
	ispacksuppliers[1] = key
	idpacksupplierqty[ 1 ] = _qty
	return
end if

foundit = false
for index = 1 to max
	if key = ispacksuppliers[ index ] then
		idpacksupplierqty[ index ] += _qty
		//idpacksupplierqty[ index ] = _qty
		foundit = true
		exit
	end if
next
if foundit then return
max ++
ispacksuppliers[max] = key
idpacksupplierqty[ max ] = _qty

end subroutine

public subroutine setpicksupplier (string _sku, string _supplier, decimal _qty, long _line);// setPickSupplier( string _sku, string _supplier, dec _qty )

int max
int index
boolean foundit
string key
string line

_sku = trim( _sku )
_supplier  = trim( _supplier )
line = string( _line )
key = _sku + '*' + _supplier + "*" + line

max = upperbound( ispicksuppliers )
if isnull( max ) or max = 0 then
	ispicksuppliers[1] = key
	idpicksupplierqty[ 1 ] = _qty
	return
end if

foundit = false
for index = 1 to max
	if key = ispicksuppliers[ index ] then
		// pvh - 05/11/06
		idpicksupplierqty[ index ] += _qty
		//idpicksupplierqty[ index ] = _qty
		foundit = true
		exit
	end if
next
if foundit then return
max ++
ispicksuppliers[max] = key
idpicksupplierqty[ max ] = _qty

end subroutine

public subroutine dodisplaymessage (string _title, string _message);// doDisplayMessage( string _title, string _message )

str_parms	lstrParms


lstrParms.string_arg[1] = _title
lstrParms.string_arg[2] = _message

openwithparm( w_scan_message, lstrParms )

end subroutine

public subroutine setserialcarton (integer _lineitemno, string _sku, string _supplier, string _oldcarton, string _newcarton);// setSerialCarton( integer _lineItemNo, string _sku, string _supplier, string _OldCarton, string _NewCarton )

// pvh - 03/21/06 - asn wasn't finding match so change serial tab to match packing cartons

/*
if the carton number changes, check the serial tab
if there are serial numbers entered, update the oldcarton with the new carton
*/

string filterthis
int max
int index

if idw_Serial.rowcount() <= 0 then return // nothing to do
if isNull( _oldCarton ) or len( _oldCarton ) = 0 then return // again do nothing

filterthis    = "carton_no = '" + _oldCarton + "'"
filterthis += "and line_item_no = " + string( _lineItemNo )

idw_Serial.setredraw( false )

idw_serial.setFilter( filterthis )
idw_serial.filter()

max = idw_serial.rowcount()
if max = 0 then return // no rows to process for this carton

for index = 1 to max
	idw_serial.object.carton_no[ index ] = _newcarton
next
idw_serial.setFilter( "" )
idw_serial.filter()

idw_serial.setredraw( true)

return

end subroutine

public function integer wf_validate_pack_carton (string ascarton);
String	lsPrefix, lsDate

If gs_project = 'POWERWAVE' Then
	
	lsDate = Mid(ascarton,8,4) + "/"  + Mid(ascarton,6,2) + "/" + Mid(ascarton,4,2)  
	//Must begin with 'ERS' followed by Date (DDMMYYYY) + "-" + xxxx where xxxx is sequence number
	If (Left(ascarton,3) <> 'ERS') or &
		(Len(asCarton) <> 16) or &
		(Not isDate(lsDate)) or &
		(Mid(asCarton,12,1) <> '-') or &
		(NOt isNumber(Right(asCarton,4))) Then
		
			MessageBox(is_title, "Carton Numbers must be formatted as 'ERSDDMMYYYY-xxxx'~rWhere 'DDMMYYYY' is a valid date and 'xxxx' is a unique sequence number",StopSign!)
			Return -1
		
	End If
	
//If requiring unique carton numbers, validate...
ElseIf gs_project = 'PANDORA' and  g.is_unique_pack_cartonnumbers = 'Y' Then
	If Not isNumber(asCarton) or len(asCarton) < 9 Then
		MessageBox(is_title, "Carton Numbers must numeric with and have a length of 9 or more.'",StopSign!)
		Return -1
	ElseIf len(ascarton) = 9 Then	
		lsPrefix = Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6) /* carton prefix is right 6 of everything after project*/
		//changed carton number must have the order prefix and be the proper length of 9 and be a number
		If Left(asCarton,len(lsPrefix)) <> lsprefix or len(asCarton) <> 9  or not isnumber( asCarton) Then
			MessageBox(is_title, "Carton Numbers must begin with '" + lsPrefix + " and have a length of 9.'",StopSign!)
			Return -1
		End If
	End If
		
ElseIf g.is_unique_pack_cartonnumbers = 'Y' Then
		
	// 11/05 - PCONKL - We will also allow them to change to a carton number that already exists (for PHX Brands who has a different schema for #'s)
	If idw_Pack.find("Upper(carton_no) = '" + Upper(asCarton) + "'",1,idw_Pack.RowCount()) = 0 Then
		
		lsPrefix = Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6) /* carton prefix is right 6 of everything after project*/
	
		//changed carton number must have the order prefix and be the proper length
		If Left(asCarton,len(lsPrefix)) <> lsprefix Then
			MessageBox(is_title, "Carton Numbers must begin with '" + lsPrefix + "'",StopSign!)
			Return -1
		End If
			
	End If
	
End If


REturn 0


end function

public subroutine setcartonno (long value);// setCartonNo( long value )
ilCartonNo = value
end subroutine

public function long getcartonno ();// long = getCartonNo( )
return ilCartonNo
end function

public subroutine setcalcallocated (boolean value);// setCalcAllocated( boolean value )
ibcalcAllocated = value

end subroutine

public function boolean getcalcallocated ();// boolean = getCalcAllocated()
return ibCalcAllocated
end function

public function integer wf_update_content_server ();
long	i, llSerialArrayPos, llNull[], llFindRow, llCount, llFileLength, llCartonCount
String	ls_whcode, ls_dono, ls_status,  lsNull[], lsPost, lsXMLResponse, lsReturnCode, lsReturnDesc, lsFind, lsCrap, lsSaveFile
Boolean	lbRefreshSerial, lbCheckSerial, lbSerialFlagSet
dwitemstatus ldis_status
String  lsXML, lsTempxml, lsPoNo2, lsContainer, lsSKU
Integer	liFileNo, liLoop

//Build XML of Pick list to pass to Websphere - We will pass Deletes and Adds - An update will be both

//Writing XML to a file - appending large amounts of data to varaibale is slow.

//TimA 12/12/13 Added
f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Start function:  ',is_dono, ' ',' ',isinvoice_no) 

//OPen a temp file to hold the XML - 
lsSaveFile = "PickSaveXML-" + String(today(),"yyyymmddss") + ".txt"
liFileNo = FileOpen(lsSaveFile,LineMOde!,Write!,LockReadWrite!,Replace!)

idw_pick.AcceptText()

wf_Set_pick_Filter('Remove')

If f_check_required(is_title, idw_Pick) = -1 Then Return -1

ls_whcode = idw_main.getitemstring(1,'wh_code')
ls_dono = idw_main.getitemstring(1,'do_no')
ls_status = idw_main.getitemstring(1,'ord_status')

If idw_Serial.RowCount() > 0 Then lbCheckSerial = True

//Build the Deletes first
llCount = idw_pick.deletedcount()
for i = 1 to llCount
		
	//GailM 6/14/2019 - DE11156 Google Mixed Containerization - dynamic breaking - collect dono for serial flag reset
	If Upper(gs_project) = 'PANDORA' Then
		lsPoNo2 = idw_pick.GetItemString(i, 'po_no2', Delete!, false)
		lsContainer = idw_pick.GetItemString(i, 'container_id', Delete!, false)
		lsSKU  = idw_pick.GetItemString(i, 'sku', Delete!, false)
		If lsPoNo2 = gsFootPrintBlankInd or lsContainer = gsFootPrintBlankInd Then
			lbSerialFlagSet = True
		End If
	End If
	
	// 09/01 PCONKL - No Picking Detail Row if SKU is non-pickable (it was never picked to begin with)
	If idw_pick.getitemstring(i,'sku_pickable_ind',Delete!,True) = 'N' Then Continue
	
	ldis_status = idw_pick.getitemstatus(i,0,Delete!)
	if ldis_status = New! or ldis_status = NewModified! then Continue
	
	//Check to see if there are any outbound serial numbers for this record (we don't want to try and delete if they don't exist - it's realy $%$%^!@# slow)
	If lbCheckSerial Then
		lsFind = "Line_Item_No = " + String(idw_pick.getitemnumber(i,'line_Item_No',Delete!,True)) + " and Upper(Sku) = '" + Upper(idw_pick.getitemstring(i,'sku',Delete!,True)) + "'"
		lsFind += " and Upper(Supp_Code) = '" + Upper(idw_pick.getitemstring(i,'supp_code',Delete!,True)) + "'"
		llFindRow = idw_Serial.Find(lsFind,1,idw_serial.RowCount())
		If llFindRow > 0 Then lbRefreshSerial = True
	End If
	
	//w_main.setMicroHelp("Building DELETE for row " + String(i) + " of " + String (llCount))
	
	//Pass key values in for Delete
	lsXML = "<DOPickRecord>"
	lsXML += "<UpdateType>D</UpdateType>" /*Update Type is Delete */
	lsXML += "<DONO>" + nz(idw_main.getitemstring(1,'do_no'),'') + "</DONO>"
	lsXML += "<LineItemNo>" + nz(String(idw_pick.getitemnumber(i,'line_Item_No',Delete!,True) ),'') + "</LineItemNo>"
	lsXML += "<SKU>" + nz(idw_pick.getitemstring(i,'sku',Delete!,True),'') + "</SKU>"
	lsXML += "<SupplierCode>" + idw_pick.getitemstring(i,'supp_code',Delete!,True) + "</SupplierCode>"
	lsXML += "<OwnerID>" + nz(String(idw_pick.getitemnumber(i,'owner_id',Delete!,True)),'') + "</OwnerID>"
	lsXML += "<Quantity>" + nz(String(idw_pick.getitemnumber(i,'Quantity',Delete!,True)),'') + "</Quantity>"
	
	//Only pass if NOt Default Value to keep size of XML down
	
	If idw_pick.getitemstring(i,'inventory_type',Delete!,True) <> 'N' Then
		lsXML += "<InvType>" + nz(idw_pick.getitemstring(i,'inventory_type',Delete!,True),'') + "</InvType>"
	End If
	
	If idw_pick.getitemstring(i,'country_of_origin',Delete!,True) <> 'XXX' Then
		lsXML += "<COO>" + nz(idw_pick.getitemstring(i,'country_of_origin',Delete!,True),'') + "</COO>"
	End If
		
	If idw_pick.getitemstring(i,'serial_no',Delete!,True) <> '-' Then
		lsXML += "<SerialNo>" + nz(idw_pick.getitemstring(i,'serial_no',Delete!,True),'') + "</SerialNo>"
	End If
	
	If idw_pick.getitemstring(i,'lot_no',Delete!,True) <> '-' Then
		lsXML += "<LotNo>" + nz(idw_pick.getitemstring(i,'lot_no',Delete!,True),'') + "</LotNo>"
	End If
	
	If idw_pick.getitemstring(i,'po_no',Delete!,True) <> '-' Then
		lsXML += "<PONO>" + idw_pick.getitemstring(i,'po_no',Delete!,True) + "</PONO>"
	End If
	
	If idw_pick.getitemstring(i,'po_no2',Delete!,True) <> '-' Then
		lsXML += "<PONO2>" + nz(idw_pick.getitemstring(i,'po_no2',Delete!,True),'') + "</PONO2>"
	End If
	
	If idw_pick.getitemstring(i,'Container_ID',Delete!,True) <> '-' Then
		lsXML += "<ContainerID>" + nz(idw_pick.getitemstring(i,'Container_ID',Delete!,True),'') + "</ContainerID>"
	End If
	
	If String(idw_pick.getitemDateTime(i,'Expiration_Date',Delete!,True),"yyyy-mm-dd hh:mm:ss") <> '2999-12-31 00:00:00' Then
		lsXML += "<ExpirationDate>" + String(idw_pick.getitemDateTime(i,'Expiration_Date',Delete!,True),"yyyy-mm-dd hh:mm:ss") + ":000</ExpirationDate>"
	End If
		
		
	lsXML += "<Location>" + nz(idw_pick.getitemstring(i,'l_code',Delete!,True),'') + "</Location>"
	
	If idw_pick.getitemstring(i,'Zone_ID',Delete!,True) <> '-' Then
		lsXML += "<ZoneID>" + nz(idw_pick.getitemstring(i,'Zone_ID',Delete!,True),'') + "</ZoneID>"
	End If
	
	If NOt isnull(idw_pick.getitemnumber(i,'component_no',Delete!,True)) and idw_pick.getitemnumber(i,'component_no',Delete!,True) <> 0 Then
		lsXML += "<ComponentNo>" + String(idw_pick.getitemnumber(i,'component_no',Delete!,True)) + "</ComponentNo>"
	End If
	
	//Add Serial # Indicator
	If llFindRow > 0 Then
		lsXML += "<SerialNumbersExist>Y</SerialNumbersExist>"
	End If

	//Component Indicator -
	If not isnull(idw_pick.getitemstring(i,'component_ind',Delete!,True)) and idw_pick.getitemstring(i,'component_ind',Delete!,True) <> 'N' Then
		lsXML	+=  "<ComponentInd>" + idw_pick.getitemstring(i,'component_ind',Delete!,True) + "</ComponentInd>"
	End If
		
	//GailM 06/20/2017 Add Container ID Scanned Ind for 605
	If idw_pick.getitemstring(i,'container_id_scanned_ind',Delete!,True) <> '' Then
		lsXML += "<ContainerIDScannedInd>" + nz(idw_pick.getitemstring(i,'container_id_scanned_ind',Delete!,True),'') + "</ContainerIDScannedInd>"
	End If

	lsXML += "</DOPickRecord>"
	
	//Either write to file if available or Temp Variable if not
	If liFileNo > 0 Then
		FileWrite(liFileNo,lsXML)
	Else
		lsTempXml += lsXML
	End If

f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Deleted Pick XML:  ' + lsXML,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
next /* DEleted Pick Row */

//Updates will build a Delete with the original key values (might have changed) and an Insert for the entire new PIck Record
Long llModified, llDataMod
llCount = idw_pick.rowcount()
llModified = idw_Pick.modifiedcount( )
For i = 1 to llCount /*For each Pick Row*/
	
	ldis_status = idw_pick.getitemstatus(i,0,Primary!)
	
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Modified Pick count:  ' + string(llModified)+ ' Status: '+ string(ldis_status),is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
	
	//Delete for DataModified OR Void
	If ldis_status = DataModified! Then
		
		//09/13 - PCONKL - If we did a serial swap to another order (for Ariens), it has already been saved and we don't want to send to Websphere)
		if idw_pick.GetITemString(i,'c_no_websphere_ind') = 'Y' Then 
			Continue
		End If
		
		//Check to see if there are any outbound serial numbers for this record (we don't want to try and delete if they don't exist - it's realy $%$%^!@# slow)
		If lbCheckSerial Then
			lsFind = "Line_Item_No = " + String(idw_pick.getitemnumber(i,'line_Item_No',Primary!,True)) + " and Upper(Sku) = '" + Upper(idw_pick.getitemstring(i,'sku',Primary!,True)) + "'"
			lsFind += " and Upper(Supp_Code) = '" + Upper(idw_pick.getitemstring(i,'supp_code',Primary!,True)) + "'"
			llFindRow = idw_Serial.Find(lsFind,1,idw_serial.RowCount())
			If llFindRow > 0 Then lbRefreshSerial = True
		End If
	
	//	w_main.setMicroHelp("Building Datamodified DELETE for row " + String(i) + " of " + String (llCount))
		
		//Pass key values in for Delete
		lsXML = "<DOPickRecord>"
		lsXML += "<UpdateType>D</UpdateType>" /*Update Type is Delete */
		lsXML += "<DONO>" + nz(idw_main.getitemstring(1,'do_no'),'') + "</DONO>"
		lsXML += "<LineItemNo>" + nz(String(idw_pick.getitemnumber(i,'line_Item_No',Primary!,True) ),'') + "</LineItemNo>"
		lsXML += "<SKU>" + nz(idw_pick.getitemstring(i,'sku',Primary!,True),'') + "</SKU>"
		lsXML += "<SupplierCode>" + nz(idw_pick.getitemstring(i,'supp_code',Primary!,True),'') + "</SupplierCode>"
		lsXML += "<OwnerID>" + nz(String(idw_pick.getitemnumber(i,'owner_id',Primary!,True)),'') + "</OwnerID>"
		lsXML += "<Quantity>" + nz(String(idw_pick.getitemnumber(i,'Quantity',Primary!,True)),'') + "</Quantity>"
		
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'DataModified! Pick record XML:  ' + lsXML,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
		//Only pass in if not default value
		
		If idw_pick.getitemstring(i,'inventory_type',Primary!,True) <> 'N' Then
			lsXML += "<InvType>" + nz(idw_pick.getitemstring(i,'inventory_type',Primary!,True),'') + "</InvType>"
		End If
			
		If idw_pick.getitemstring(i,'country_of_origin',Primary!,True) <> 'XXX' Then
			lsXML += "<COO>" + nz(idw_pick.getitemstring(i,'country_of_origin',Primary!,True),'') + "</COO>"
		End If
			
		If idw_pick.getitemstring(i,'serial_no',Primary!,True) <> '-' Then
			lsXML += "<SerialNo>" + nz(idw_pick.getitemstring(i,'serial_no',Primary!,True),'') + "</SerialNo>"
		End If
		
		If idw_pick.getitemstring(i,'lot_no',Primary!,True) <> '-' Then
			lsXML += "<LotNo>" + nz(idw_pick.getitemstring(i,'lot_no',Primary!,True),'') + "</LotNo>"
		End If
		
		If idw_pick.getitemstring(i,'po_no',Primary!,True) <> '-' Then
			lsXML += "<PONO>" + idw_pick.getitemstring(i,'po_no',Primary!,True) + "</PONO>"
		End If
		
		If idw_pick.getitemstring(i,'po_no2',Primary!,True) <> '-' Then
			lsXML += "<PONO2>" + nz(idw_pick.getitemstring(i,'po_no2',Primary!,True),'') + "</PONO2>"
		End If
				
		If idw_pick.getitemstring(i,'Container_ID',Primary!,True) <> '-' Then		
			lsXML += "<ContainerID>" + nz(idw_pick.getitemstring(i,'Container_ID',Primary!,True),'') + "</ContainerID>"
		End If
				
		If String(idw_pick.getitemDateTime(i,'Expiration_Date',Primary!,True),"yyyy-mm-dd hh:mm:ss") <> '2999-12-31 00:00:00' Then
			lsXML += "<ExpirationDate>" + String(idw_pick.getitemDateTime(i,'Expiration_Date',Primary!,True),"yyyy-mm-dd hh:mm:ss") + ":000</ExpirationDate>"
		End If
		
		lsXML += "<Location>" + nz(idw_pick.getitemstring(i,'l_code',Primary!,True),'') + "</Location>"
		
		If idw_pick.getitemstring(i,'Zone_ID',Primary!,True) <> '-' Then
			lsXML += "<ZoneID>" + nz(idw_pick.getitemstring(i,'Zone_ID',Primary!,True),'') + "</ZoneID>"
		End If
		
		If NOt isnull(idw_pick.getitemnumber(i,'component_no',Primary!,True)) and idw_pick.getitemnumber(i,'component_no',Primary!,True) <> 0 Then
			lsXML += "<ComponentNo>" + String(idw_pick.getitemnumber(i,'component_no',Primary!,True)) + "</ComponentNo>"
		Else
			lsXML += "<ComponentNo>0</ComponentNo>"
		End If
		
		//Add Serial # Indicator
		If llFindRow > 0 Then	
			lsXML += "<SerialNumbersExist>Y</SerialNumbersExist>"
		End If

		//Component Indicator -
		If not isnull(idw_pick.getitemstring(i,'component_ind',Primary!,True)) and idw_pick.getitemstring(i,'component_ind',Primary!,True) <> 'N' Then
			lsXML	+=  "<ComponentInd>" + idw_pick.getitemstring(i,'component_ind',Primary!,True) + "</ComponentInd>"
		End If
		
		//GailM 06/20/2017 Add Container ID Scanned Ind for 605
		lsXML += "<ContainerIDScannedInd>" + nz(idw_pick.getitemstring(i,'container_id_scanned_ind',Primary!,True),'') + "</ContainerIDScannedInd>"
	
		lsXML += "</DOPickRecord>"
		
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'DataModified! Pick record XML:  ' + lsXML,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
		//Either write to file if available or Temp Variable if not
		If liFileNo > 0 Then
			FileWrite(liFileNo,lsXML)
		Else
			lsTempXml += lsXML
		End If
		
	End If /*Modified */
	
	
	//Create a new pick Record with the new (updated) values For New!, NewModified!, MOdified! and Not Void
	If (ldis_status = New! or ldis_status = NewModified! or ldis_status = DataModified!) Then
		
	//	w_main.setMicroHelp("Building Datamodified INSERT for row " + String(i) + " of " + String (llCount))
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'DW Status:  NewModified! or DataModified!' ,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
		lsXML = "<DOPickRecord>"
		lsXML += "<UpdateType>N</UpdateType>" /*Update Type is New */
		lsXML += "<DONO>" + idw_main.getitemstring(1,'do_no') + "</DONO>"
		lsXML += "<LineItemNo>" + String(idw_pick.getitemnumber(i,'line_Item_No') ) + "</LineItemNo>"
		lsXML += "<SKU>" + idw_pick.getitemstring(i,'sku') + "</SKU>"
		lsXML += "<SupplierCode>" + idw_pick.getitemstring(i,'supp_code') + "</SupplierCode>"
		lsXML += "<OwnerID>" + nz(String(idw_pick.getitemnumber(i,'owner_id')),'') + "</OwnerID>"   //Use nz function to ensure not null
		lsXML += "<Quantity>" + nz(String(idw_pick.getitemnumber(i,'Quantity')),'') + "</Quantity>"
		
//		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'New Pick record XML:  ' + lsXML,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
		//Only pass in if not default value
		
		If idw_pick.getitemstring(i,'inventory_type') <> 'N' Then
			lsXML += "<InvType>" + nz(idw_pick.getitemstring(i,'inventory_type'),'') + "</InvType>"
		End If
		
		If idw_pick.getitemstring(i,'country_of_origin') <> 'XXX' Then
			lsXML += "<COO>" + nz(idw_pick.getitemstring(i,'country_of_origin'),'') + "</COO>"
		End If
		
		If idw_pick.getitemstring(i,'serial_no') <> '-' Then
			lsXML += "<SerialNo>" + nz(idw_pick.getitemstring(i,'serial_no'),'') + "</SerialNo>"
		End If
		
		If idw_pick.getitemstring(i,'lot_no') <> '-' Then
			lsXML += "<LotNo>" + nz(idw_pick.getitemstring(i,'lot_no'),'') + "</LotNo>"
		End If
		
		If idw_pick.getitemstring(i,'po_no') <> '-' Then
			lsXML += "<PONO>" + idw_pick.getitemstring(i,'po_no') + "</PONO>"
		End If
		
		If idw_pick.getitemstring(i,'po_no2') <> '-' Then
			lsXML += "<PONO2>" + nz(idw_pick.getitemstring(i,'po_no2'),'') + "</PONO2>"
		End If

//		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'New Pick record XML:  ' + lsXML,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
		
		If idw_pick.getitemstring(i,'Container_ID')  <> '-' Then
			lsXML += "<ContainerID>" + nz(idw_pick.getitemstring(i,'Container_ID'),'') + "</ContainerID>"
		End If
		
		If String(idw_pick.getitemDateTime(i,'Expiration_Date'),"yyyy-mm-dd hh:mm:ss") <> '2999-12-31 00:00:00' Then
			lsXML += "<ExpirationDate>" + String(idw_pick.getitemDateTime(i,'Expiration_Date'),"yyyy-mm-dd hh:mm:ss") + ":000</ExpirationDate>"
		End If
		
		lsXML += "<Location>" + nz(idw_pick.getitemstring(i,'l_code'),'') + "</Location>"
		
		If Not isnull(idw_pick.getitemstring(i,'Zone_ID')) and  idw_pick.getitemstring(i,'Zone_ID') <> '-' Then
			lsXML += "<ZoneID>" + nz(idw_pick.getitemstring(i,'Zone_ID'),'') + "</ZoneID>"
		End If
		
		
		If NOt isnull(idw_pick.getitemnumber(i,'component_no')) and idw_pick.getitemnumber(i,'component_no') <> 0 Then
			lsXML += "<ComponentNo>" + String(idw_pick.getitemnumber(i,'component_no')) + "</ComponentNo>"
		End If
				
		//Non key fields...
		If not isnull(idw_pick.getitemstring(i,'component_ind')) and idw_pick.getitemstring(i,'component_ind') <> 'N' Then
			lsXML	+=  "<ComponentInd>" + idw_pick.getitemstring(i,'component_ind') + "</ComponentInd>"
		End If
		
		If not isnull(idw_pick.getitemstring(i,'sku_parent')) and idw_pick.getitemstring(i,'sku_parent') <> idw_pick.getitemstring(i,'sku')Then
			lsXML	+=  "<SkuParent>" + idw_pick.getitemstring(i,'sku_parent') + "</SkuParent>"
		End If
		
		If not isnull(idw_pick.getitemstring(i,'user_Field1')) Then
			lsXML += "<UserField1>" + idw_pick.getitemstring(i,'user_Field1') + "</UserField1>"
		End If
		
		If not isnull(idw_pick.getitemstring(i,'user_Field2')) Then
			lsXML += "<UserField2>" + idw_pick.getitemstring(i,'user_Field2') + "</UserField2>"
		End If
		
		If Not isnull(idw_pick.getitemstring(i,'sku_pickable_ind')) and idw_pick.getitemstring(i,'sku_pickable_ind') <> 'Y' Then
			lsXML += "<SkuPickableInd>" + idw_pick.getitemstring(i,'sku_pickable_ind') + "</SkuPickableInd>"
		End If
		
		If NOt isnull(idw_pick.getitemNumber(i,'cntnr_length')) and idw_pick.getitemNumber(i,'cntnr_length') <> 0 Then		//GailM - 03/25/2014 - Changed cntnr_width to cntnr_length.  typo
			lsXML += "<CntnrLength>" + String(idw_pick.getitemNumber(i,'cntnr_length')) + "</CntnrLength>"
		End If
		
		If Not isnull(idw_pick.getitemNumber(i,'cntnr_width')) and idw_pick.getitemNumber(i,'cntnr_width') <> 0 Then
			lsXML += "<CntnrWidth>" + String(idw_pick.getitemNumber(i,'cntnr_width')) + "</CntnrWidth>"
		End If
		
		If not isnull(idw_pick.getitemNumber(i,'cntnr_height')) and idw_pick.getitemNumber(i,'cntnr_height') <> 0  Then
			lsXML += "<CntnrHeight>" + String(idw_pick.getitemNumber(i,'cntnr_height')) + "</CntnrHeight>"
		End If
		
		If not isnull(idw_pick.getitemNumber(i,'cntnr_weight')) and idw_pick.getitemNumber(i,'cntnr_weight') <> 0 Then
			lsXML += "<CntnrWeight>" + String(idw_pick.getitemNumber(i,'cntnr_weight')) + "</CntnrWeight>"
		End If
		
		//05/08 - PCONKL
		If not isnull(idw_pick.getitemstring(i,'staging_location')) Then
			lsXML += "<StagingLocation>" + idw_pick.getitemstring(i,'staging_location') + "</StagingLocation>"
		End If
		
		If not isnull(idw_pick.getitemstring(i,'Mobile_status_Ind')) Then
			lsXML += "<MobileStatusInd>" + idw_pick.getitemstring(i,'Mobile_status_Ind') + "</MobileStatusInd>"
		End If
		
		If not isnull(idw_pick.getitemNumber(i,'Mobile_Picked_Qty')) Then
			lsXML += "<MobilePickedQty>" +String( idw_pick.getitemNumber(i,'Mobile_Picked_Qty')) + "</MobilePickedQty>"
		End If
		
		If String(idw_pick.getitemDateTime(i,'Mobile_Pick_start_Time'),"yyyy-mm-dd hh:mm:ss") > '' Then
			lsXML += "<MobilePickStartTime>" + String(idw_pick.getitemDateTime(i,'Mobile_Pick_start_Time'),"yyyy-mm-dd hh:mm:ss") + ":000</MobilePickStartTime>"
		End If
		
		//19-Mar-2018 :Madhu DE3510 - Populate Mobile_Pick_Complete_Time
		If String(idw_pick.getitemDateTime(i,'Mobile_Pick_Complete_Time'),"yyyy-mm-dd hh:mm:ss") > '' Then
			lsXML += "<MobilePickCompleteTime>" + String(idw_pick.getitemDateTime(i,'Mobile_Pick_Complete_Time'),"yyyy-mm-dd hh:mm:ss") + ":000</MobilePickCompleteTime>"
		End If
		
		If not isnull(idw_pick.getitemstring(i,'Mobile_Picked_By')) Then
			lsXML += "<MobilePickedBy>" + idw_pick.getitemstring(i,'Mobile_Picked_By') + "</MobilePickedBy>"
		End If
		
		If not isnull(idw_pick.getitemstring(i,'Mobile_Current_Location')) Then
			lsXML += "<MobileCurrentLocation>" + idw_pick.getitemstring(i,'Mobile_Current_Location') + "</MobileCurrentLocation>"
		End If
		
		//GailM 06/20/2017 - Add Container ID Scanned Ind for 605
		If not isnull(idw_pick.getitemstring(i,'Container_ID_Scanned_Ind')) Then
			lsXML += "<ContainerIDScannedInd>" + idw_pick.getitemstring(i,'Container_ID_Scanned_Ind') + "</ContainerIDScannedInd>"
		End If

		//GailM 06/15/2018 Add User_Field5 for S19742 Edge Packaging
		If not isnull(idw_pick.getitemstring(i,'user_field5')) Then
			lsXML += "<UserField5>" + nz(idw_pick.getitemstring(i,'user_field5',Primary!,True),'') + "</UserField5>"
		End If
	
		//GailM 06/15/2018 Add ContainerIDFound for S19742 Edge Packaging
		If not isnull(idw_pick.getitemstring(i,'containerid_found')) Then
			lsXML += "<ContainerIDFound>" + nz(idw_pick.getitemstring(i,'containerid_found',Primary!,True),'') + "</ContainerIDFound>"
		End If
	
		lsXML += "</DOPickRecord>"
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'New Pick record XML:  ' + lsXML,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
		
		//Either write to file if available or Temp Variable if not
		If liFileNo > 0 Then
			FileWrite(liFileNo,lsXML)
		Else
			lsTempXml += lsXML
		End If
		
	End If /* Modified or new and not void*/
	
Next

If liFileNo > 0 Then FileClose(liFileNo)

//w_main.setMicroHelp("Creating XML from File...")

llFileLength = FileLength(lsSaveFile)
liFileNo = FileOPen(lsSaveFile,StreamMode!,Read!)

If liFileNo > 0 Then
	// Determine how many times to call FileRead
	IF llFileLength > 32765 THEN
		IF Mod(llFileLength, 32765) = 0 THEN
    	   liLoop = llFileLength/32765
   	ELSE
       	liLoop = (llFileLength/32765) + 1
   	END IF
	ELSE
  	 liLoop = 1
	END IF

	lsXML = ""

	For i = 1 to liLoop
		FileRead(liFileNo,lsCrap)
		lsXML += lsCrap
	Next

	FileClose(liFileNo)
	FileDelete(lsSaveFile)
	
Else
	
	lsXML = lsTempXml
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Temp XML:  ' + lsTempXml,is_dono, ' ',' ',isinvoice_no) //08-May-2014 :Madhu- Added
End If


If isNull(lsXML) or lsXML = "" Then
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Unable to Save Pick list - required Pick fields missing',is_dono, ' ',lsPost,isinvoice_no) 
	Messagebox(is_title, 'Unable to Save Pick list - required Pick fields missing' )
	Return -1
End If

//If lsXML = "" Then 
//	
//	//09/13 - PCONKL - If we suppressed any updates to Websphere, reset the flag
//	llCount = idw_pick.RowCount()
//	For i = 1 to llCount
//		idw_pick.SetItem(i,'c_no_websphere_ind','')
//	Next
//	f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'XML is Blank or Null  ',is_dono, ' ',lsPost,isinvoice_no) 
//	Return 0
//
//End If

//Add the header and footer
iuoWebsphere = CREATE u_nvo_websphere_post
linit = Create Inet
lsPost = iuoWebsphere.uf_request_header("DOPickAllocRequest", "ProjectID='" + gs_Project + "'")
lsPost += lsXML
lsPost = iuoWebsphere.uf_request_footer(lsPost)

//Messagebox("",lsPost)

w_main.setMicroHelp("Saving Pick List on Application Server...")

//TimA 12/12/13 Added
f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Call to Webshpere:  ',is_dono, ' ',lsPost,isinvoice_no) 

lsXMLResponse = iuoWebsphere.uf_post_url(lsPost)

w_main.setMicroHelp("Pick List Allocation complete")

//TimA 12/12/13 Added
f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Response from Webshpere:  ',is_dono, ' ',lsXMLResponse,isinvoice_no) 

//Check for Valid Return...
//If we didn't receive an XML back, there is a fatal exception error
If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
	//TimA 12/12/13 Added
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Websphere Fatal Exception Error:  ',is_dono, ' ',lsXMLResponse,isinvoice_no) 
	Messagebox("Websphere Fatal Exception Error","Unable to save Pick List: ~r~r" + lsXMLResponse,StopSign!)
	Return -1
End If

//Check the return code and return description for any trapped errors
lsReturnCode = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"returncode")
lsReturnDesc = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"errormessage")

Choose Case lsReturnCode
		
	Case "-99" /* Websphere non fatal exception error*/
		//TimA 12/12/13 Added
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Websphere Error Unable to Save Pick List:  ',is_dono, ' ',lsXMLResponse,isinvoice_no) 		
		Messagebox("Websphere Operational Exception Error","Unable to Save Pick List: ~r~r" + lsReturnDesc,StopSign!)
		Return -1
	
	Case Else
		
		If lsReturnDesc > '' Then
			Messagebox(is_title,lsReturnDesc)
		End If
		
		if lsReturnCode = "-1" Then Return -1
			
End Choose


// 05/04 - PCONKL Reset Serial Update Array
llSerialArraypos = 0
isSerialSKU[] = lsNull[]
ilSerialLine[] = llNull[]
ilSerialID[] = llNull[]
ibSerialsUpdated = False

//If we deleted any Serial Detail Rows, re-retrieve
If lbRefreshSerial Then
	tab_main.tabpage_serial.dw_serial.Reset()
	tab_main.tabpage_serial.dw_serial.REtrieve(is_dono,gs_project)
End If

// 08/16 - PCONKL - For Kendo, we want to calculate the number of pack cartons
If gs_project = 'KENDO' Then
	llCartonCount = uf_generate_kendo_level2_carton_count()
	idw_main.SetItem(1,'ctn_cnt',llCartonCount)
End If
	
//09/13 - PCONKL - If we suppressed any updates to Websphere, reset the flag
llCount = idw_pick.RowCount()
For i = 1 to llCount
	idw_pick.SetItem(i,'c_no_websphere_ind','')
Next

//GailM 6/14/2019 - DE11156 Google Mixed Containerization - dynamic breaking - Reset SerialNumberInventory for this dono
If lbSerialFlagSet Then
	Execute Immediate "Begin Transaction" using SQLCA;
		Update Serial_Number_Inventory set Serial_Flag='N', do_no = '-', Transaction_Type = 'Reset Serial Flag to N pick list delete', Transaction_Id = :ls_dono
		where Project_Id=:gs_project and Wh_Code= :ls_whcode and do_no = :ls_dono;
		
		f_method_trace_special( gs_project, this.ClassName() , 'Set Serial_Flag = N on Serial Number Inventory table with SKU: '+lsSku + ' Wh_Code: '+ls_whcode+ ' Do_No: '+is_dono ,is_dono, '','',isinvoice_no)
	Execute Immediate "Commit Transaction" using SQLCA;
End If

//TimA 12/12/13 Added
f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'End function:  ',is_dono, ' ',' ',isinvoice_no) 

Return 0

end function

public function boolean set_shipment_dates ();/*dts 03/05/07
- Update Shipment.Freight_ETD and, if fully enabled, Shipment.Freight_ETA
   - do we need to update etd/eta on save (after order is confirmed)?
		...No, If shipment is created after order confirmation, 
			dates will be set on shipment creation
*/
string lsShipNo, lsAWB, lsDoNo, lsWH, lsCarrier, lsCountry, lsZip
date ldtETD, ldtETA
datetime ldtOldETD, ldtOldtETA
boolean lbUpdateETD
u_nvo_shipments lu_shipments

lsAWB = idw_main.GetItemString(1, 'awb_bol_no')
lsDoNo = idw_main.GetItemString(1, 'do_no')
//does shipment exist for this AWB (AND is this order on the shipment?)?
if lsAWB <> '' then
	//also grab freight_etd/eta here to see if they need to be set???
	//		select ship_no, freight_etd, freight_eta into :lsShipNo, :ldtOldETD, :ldtOldtETA
	//		from shipment
	//		where awb_bol_no = :lsAWB
	select distinct s.ship_no, freight_etd, freight_eta
	into :lsShipNo, :ldtOldETD, :ldtOldtETA
	from shipment s, shipment_line_item sli
	where s.ship_no = sli.ship_no
	and awb_bol_no = :lsAWB
	and rodo_no = :lsDoNo
	using sqlca;
	if lsShipNo <> '' and not isnull(lsShipNo) then
		// !ETD really should be the latest Complete_Date for any Order on the Shipment...(cycle through rodo_no's to build selection, then find max(complete_date)
		ldtETD = date(idw_main.GetItemDateTime(1, 'Complete_Date'))
		if date(ldtOldETD) > ldtETD then
			ldtETD = date(ldtOldETD)
		else
			lbUpdateETD = true			
		end if
		if g.ibEtaMaintEnabled then
			lu_shipments = Create u_nvo_shipments
			//get the ETD based on Departure Days....
			lsWH = idw_main.GetItemString(1, 'wh_code')
			lsCarrier = idw_main.GetItemString(1, 'carrier')
			lSCountry = idw_main.GetItemString(1, 'country')
			ldtETD = lu_Shipments.uf_Get_ETD(ldtETD, gs_Project, lsWH, lsCarrier, lsCountry)
			//go get eta
			lsZip = idw_main.GetItemString(1, 'zip')
			ldtETA = lu_Shipments.uf_Get_ETA(ldtETD, gs_Project, lsWH, lsCarrier, lsCountry, lsZip)
		end if
		
		//BCR 15-APR-11: Bracket updates with a Begin Trans and Commit to prevent inadvertent DB Locks...
		Execute Immediate "BEGIN TRANSACTION" using SQLCA;
		
		//any chance of same-day delivery? (use '>=' in case there is a 0-day transit time)
		if ldtETA >= ldtETD and ldtETA > date('2007-01-01') then
			//do we need to worry about over-writing a manually-entered ETA?
			update shipment
			set freight_etd = :ldtETD, freight_eta = :ldtETA
			where ship_no = :lsShipNo
			using sqlca;
		ElseIf lbUpdateETD then
			update shipment
			set freight_etd = :ldtETD
			where ship_no = :lsShipNo
			using sqlca;
		end if
		
		Execute Immediate "COMMIT" using SQLCA; //BCR 15-APR-11
		
	end if
end if
return true

end function

public function integer uf_update_carton_rows (integer airow, string ascolumn, decimal advalue);
//Update a given column for all rows of a carton with the given row/column

String	lsCarton
Long	llFindRow

//Get out if not enabled for project
If not g.ibSyncPackCarton Then REturn 0

If aiRow >= idw_pack.RowCount() Then Return 0

lsCarton = idw_pack.GEtItemString(aiRow,'carton_no')

llFindRow = idw_pack.Find("Upper(carton_no) = '" + Upper(lsCarton) + "'",aiRow + 1,idw_pack.RowCount())
Do WHile llFindRow > 0
	
	idw_pack.SetItem(llFindRow,asColumn,adValue)
	
	//Update CBM assuming one of DIMS has Changed
	idw_pack.SetITem(llFindRow,'cbm',idw_pack.GetItemNumber(llFindRow,"height")*idw_pack.GetItemNumber(llFindRow,"width")*idw_pack.GetITemNumber(llFindRow,"length"))
		
	llFindRow ++
	If llFindRow > idw_pack.RowCOunt() Then
		Exit
	Else
		llFindRow = idw_pack.Find("Upper(carton_no) = '" + Upper(lsCarton) + "'",llFindRow ,idw_pack.RowCount())
	End If
	
Loop

Return 0
end function

public function integer uf_update_carton_rows (integer airow, string ascolumn, string asvalue);
//Update a given column for all rows of a carton with the given row/column

String	lsCarton
Long	llFindRow

//Get out if not enabled for project
If not g.ibSyncPackCarton Then REturn 0

If aiRow >= idw_pack.RowCount() Then Return 0

lsCarton = idw_pack.GEtItemString(aiRow,'carton_no')

llFindRow = idw_pack.Find("Upper(carton_no) = '" + Upper(lsCarton) + "'",aiRow + 1,idw_pack.RowCount())
Do WHile llFindRow > 0
	
	idw_pack.SetItem(llFindRow,asColumn,asValue)
		
	llFindRow ++
	If llFindRow > idw_pack.RowCOunt() Then
		Exit
	Else
		llFindRow = idw_pack.Find("Upper(carton_no) = '" + Upper(lsCarton) + "'",llFindRow ,idw_pack.RowCount())
	End If
	
Loop

Return 0
end function

public subroutine wf_check_shipment ();/* 04/09/07 - Moved this out of wf_check_status function
	04/05/07 - Now checking to see if the particular order is already on a
		shipment and, if not, then checking for an existing shipment for the AWB/Carrier/Zip
		 (may want to test shipment status and/or date range for feasibility).

	05/31/06 - Changing text on Shipment button to indicate whether
	or not a shipment exists.  Before, Shipments were being created accidentally
	when the button was clicked (if the shipment didn't already exist) 
*/
	
	string lsAWB, lsShip, sql_syntax, errors, lsCarrier, lsZip
	Datastore	ldsShip, ldsShipLines
	long llRowCount

	//Check to see if this order is already on a shipment
	//  (Note: what if it's on more than one shipment? Shouldn't happen, but...)
	//  Now looking for DO_NO on Shipment_Line instead of matching on AWB
	Select distinct S.Ship_no into :lsShip
	from shipment S, Shipment_line_item SLI
	where s.ship_no = sli.ship_no
	and project_id = :gs_project
	and rodo_no = :is_dono;
	if isnull(lsShip) or lsShip = '' then
		//if it's not on a shipment, see if it qualifies for an existing one.
		lsAWB = idw_main.GetItemString(1, 'awb_bol_no')
		lsCarrier = idw_main.GetItemString(1, 'Carrier')
		lsZip = idw_main.GetItemString(1, 'Zip')
	
		//if isnull(lsAWB) or trim(lsAWB) = '' then
		if isnull(lsAWB) or isnull(lsCarrier) or isnull(lsZip) then
			llRowCount = 0
		else
			//Create the Shipment datastore
			// this needs to be consistent with u_nvo_shipments.uf_create_outbound_shipment
			// dts 03/18/08 - added criteria to match on Ord_Status...
			ldsShip = Create Datastore		
			sql_syntax = "Select S.ship_no From Shipment S, Shipment_Location SL"
			sql_syntax += " Where S.ship_no = SL.Ship_no and Project_ID = '" + gs_project + "'"
			sql_syntax += " and Carrier_code = '" + lsCarrier + "'"
			sql_syntax += " and awb_bol_no = '" + lsAWB + "'"
			sql_syntax += " and Zip = '" + lsZip + "' and Location_Type = 'D'"
			sql_syntax += " and S.Ord_Status in ('AA', 'AE', 'BF', 'C', 'C1', 'L1', 'NA')"
			sql_syntax += " order by s.ship_no desc"
			
			ldsShip.Create(SQLCA.SyntaxFromSQL(sql_syntax, "", ERRORS))
			IF Len(Errors) > 0 THEN
				messagebox(is_title, "*** Unable to create datastore for Shipments.~r~r" + Errors)
			END IF
			
			ldsShip.SetTransObject(SQLCA)
			llRowCount = ldsShip.Retrieve()
		end if
		if llRowCount = 0 then
			icb_shipment.Text = 'Create &Shipment'
		else
			icb_shipment.Text = 'Add To &Shipment'
		end if
	else
		icb_shipment.Text = 'Open &Shipment'
	end if




/*	
	/*
		select ship_no
		into :lsShip
		from Shipment
		where awb_bol_no = :lsAWB;
	*/
	//if isnull(lsAWB) or trim(lsAWB) = '' then
	if isnull(lsAWB) or isnull(lsCarrier) or isnull(lsZip) then
		llRowCount = 0
	else
		//Create the Shipment datastore
		ldsShip = Create Datastore
//		sql_syntax = "SELECT ship_no from Shipment"
//		sql_syntax += " Where Project_ID = '" + gs_project + "'"
		
		sql_syntax = "Select S.ship_no From Shipment S, Shipment_Location SL"
		sql_syntax += " Where S.ship_no = SL.Ship_no and Project_ID = '" + gs_project + "'"
		sql_syntax += " and Carrier_code = '" + lsCarrier + "'"
		sql_syntax += " and awb_bol_no = '" + lsAWB + "'"
		sql_syntax += " and Zip = '" + lsZip + "' and Location_Type = 'D'"
		sql_syntax += " order by s.ship_no desc"
		
		ldsShip.Create(SQLCA.SyntaxFromSQL(sql_syntax, "", ERRORS))
		IF Len(Errors) > 0 THEN
			messagebox(is_title, "*** Unable to create datastore for Shipments.~r~r" + Errors)
		END IF
		
		ldsShip.SetTransObject(SQLCA)
		llRowCount = ldsShip.Retrieve()
	end if
	
	//if isnull(lsShip) or lsShip = '' then
	if llRowCount = 0 then
		icb_shipment.Text = 'Create &Shipment'
	else
		//A shipment exists - Check to see if this order is already on a shipment
		Select S.Ship_no into :lsShip
		from shipment S, Shipment_line_item SLI
		where s.ship_no = sli.ship_no
		and project_id = :gs_project
		and rodo_no = :is_dono;
		if isnull(lsShip) or lsShip = '' then
			icb_shipment.Text = 'Add To &Shipment'
		else
			icb_shipment.Text = 'Open &Shipment'
		end if
	end if
*/
end subroutine

protected function integer uf_enable_first_carton_row (integer airow, string ascarton);
//Only first row of a carton should have dims enabled

String lsFind, lsGetCarton, lsFirstRowSku, lsNextRowSku
Long llNewCarton, llStartRow
Long	llRowCount, llRowPos, llFindRow
String	lsReturnFind, lsOldCarton
Decimal	ldGrossWeight
Boolean	lbMultRows
Long llWtDim
//Get out if not enabled for project
If not g.ibSyncPackCarton Then REturn 0

//If aiRow > 0 then we want to reset cursor to that row
If aiRow > 0 Then
	lsReturnFind = "Line_Item_No = " + String(idw_pack.GetITemNumber(aiRow,'line_item_no')) + " and upper(carton_no) = '" + & 
					Upper(asCarton) + "' and Upper(Sku) = '" + Upper(idw_pack.GetITemString(aiRow,'Sku')) + &
					"' and Upper(supp_code) = '" + Upper(idw_pack.GetITemString(aiRow,'supp_Code')) + "'"
End IF

wf_set_pack_Filter('REMOVE')

idw_pack.Sort ( )

llRowCount = idw_pack.RowCount()

idw_pack.SetRedraw(False)

llWtDim = 0

For llRowPos = 1 to llRowCount
	
	If llRowPos = 1 Then
		
		//IF the row has an *, we changed the carton number. IT may now be the first row of the carton but we want to take the DIMS from
		// an original row in the carton if they exist
		
		If idw_Pack.GetITemString(1,'c_first_carton_row') = '*' and llRowCount > 1 Then
			
			llFindRow =  idw_pack.Find("Upper(Carton_no) = '" + Upper(idw_pack.GetItemString(llRowPos,'carton_no')) + "'",2, llRowCount)
			If llFindRow > 0 Then
				
				//Set values from first found row to idw_pack row (only if different, cut down on IO)...
				If idw_pack.GetITemString(llRowPos,'carton_type') <> idw_pack.GetITemString(llFindRow,'carton_type') or isNull(idw_pack.GetITemString(llRowPos,'carton_type')) Then
					idw_pack.SetItem(llRowPos,'carton_type',idw_pack.GetITemString(llFindRow,'carton_type'))
				End If
			
				If idw_pack.GetITemNumber(llRowPos,'length') <> idw_pack.GetITemNumber(llFindRow,'length') or isNull(idw_pack.GetITemNumber(llRowPos,'length')) Then
					idw_pack.SetItem(llRowPos,'length',idw_pack.GetITemNumber(llFindRow,'length'))
				End If
			
				If idw_pack.GetITemNumber(llRowPos,'width') <> idw_pack.GetITemNumber(llFindRow,'width') or isNull(idw_pack.GetITemNumber(llRowPos,'width')) Then
					idw_pack.SetItem(llRowPos,'width',idw_pack.GetITemNumber(llFindRow,'width'))
				End If
			
				If idw_pack.GetITemNumber(llRowPos,'height') <> idw_pack.GetITemNumber(llFindRow,'height') or isNull(idw_pack.GetITemNumber(llRowPos,'height'))  Then
					idw_pack.SetItem(llRowPos,'height',idw_pack.GetITemNumber(llFindRow,'height'))
				End If
			
				If idw_pack.GetITemNumber(llRowPos,'cbm') <> idw_pack.GetITemNumber(llFindRow,'cbm') or isNull(idw_pack.GetITemNumber(llRowPos,'cbm')) Then
					idw_pack.SetItem(llRowPos,'cbm',idw_pack.GetITemNumber(llFindRow,'cbm'))
				End If
			
				If idw_pack.GetITemNumber(llRowPos,'weight_gross') <> idw_pack.GetITemNumber(llFindRow,'weight_gross') or isNull(idw_pack.GetITemNumber(llRowPos,'weight_gross')) Then
					// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
					//if UPPER(gs_project) = 'PANDORA' then
					//	idw_pack.SetItem(llRowPos,'weight_gross',0)
					//else
						idw_pack.SetItem(llRowPos,'weight_gross',idw_pack.GetITemNumber(llFindRow,'weight_gross'))
					//end if
				End If
			
				If idw_pack.GetITemString(llRowPos,'shipper_tracking_id') <> idw_pack.GetITemString(llFindRow,'shipper_tracking_id') or isNull(idw_pack.GetITemString(llRowPos,'shipper_tracking_id')) Then
					idw_pack.SetItem(llRowPos,'shipper_tracking_id',idw_pack.GetITemString(llFindRow,'shipper_tracking_id'))
				End If
				
				If idw_pack.GetITemString(llRowPos,'user_field1') <> idw_pack.GetITemString(llFindRow,'user_field1') or isNull(idw_pack.GetITemString(llRowPos,'user_field1')) Then
					idw_pack.SetItem(llRowPos,'user_field1',idw_pack.GetITemString(llFindRow,'user_field1'))
				End If
				
				//04/16 - PCONKL
				If idw_pack.GetITemNumber(llRowPos,'outerpack_id') <> idw_pack.GetITemNumber(llFindRow,'outerpack_id') or isNull(idw_pack.GetITemNumber(llRowPos,'outerpack_id'))  Then
					idw_pack.SetItem(llRowPos,'outerpack_id',idw_pack.GetITemNumber(llFindRow,'outerpack_id'))
				End If
				
				
				IF Upper(gs_project) <> 'ANKI' Then //26-Sep-2014 :Madhu- Added code to don't override the UF2 value, even override the carton no 
					If idw_pack.GetITemString(llRowPos,'user_field2') <> idw_pack.GetITemString(llFindRow,'user_field2') or isNull(idw_pack.GetITemString(llRowPos,'user_field2')) Then
						idw_pack.SetItem(llRowPos,'user_field2',idw_pack.GetITemString(llFindRow,'user_field2'))
					End If
				End If
				
			End If
			
		End If
		//1
		//lsFirstRowSku = Upper(idw_pack.GetITemString ( llRowPos,'Sku' ) )
		idw_pack.SetITem(1,'c_first_carton_row','Y')
		
				
	Else
		//lsFind = "Upper(Carton_no) = '" + Upper(idw_pack.GetItemString(llRowPos,'carton_no' ) ) +  "'" 

		If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
			llFindRow = idw_pack.Find("Upper(Carton_no) = '" + Upper(idw_pack.GetItemString ( llRowPos,'carton_no' ) ) + "'" ,llRowPos, ( llRowPos - 1 ) )
		Else
			llFindRow = idw_pack.Find("Upper(Carton_no) = '" + Upper(idw_pack.GetItemString ( llRowPos,'carton_no' ) ) + "'" ,1, ( llRowPos - 1 ) )
		End if

		If llFindRow > 0 Then
			lsNextRowSku = Upper(idw_pack.GetITemString ( llRowPos,'Sku' ) )
			
			If ibCopied =  True and isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'Y' then
				idw_pack.SetITem(llRowPos,'c_first_carton_row','Y' )
			else
				idw_pack.SetITem(llRowPos,'c_first_carton_row','N' )
			End If

			//Set values from first found row to idw_pack row (only if different, cut down on IO)...
			If idw_pack.GetITemString(llRowPos,'carton_type') <> idw_pack.GetITemString(llFindRow,'carton_type') or isNull(idw_pack.GetITemString(llRowPos,'carton_type')) Then 				
				idw_pack.SetItem(llRowPos,'carton_type',idw_pack.GetITemString(llFindRow,'carton_type'))
			End If
			
			If idw_pack.GetITemNumber(llRowPos,'length') <> idw_pack.GetITemNumber(llFindRow,'length') or isnull(idw_pack.GetITemNumber(llRowPos,'length')) Then
			//***********************
			//TRA 06/11/14 Back out Pandora issue #855 per James.  Not able to test yet.

				//TimA 05/29/14 Pandora issue #855.  Set all the weights and dims to 0 on copied rows.
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
						
						//Reset the first carton row
						llNewCarton = Long(idw_pack.GetItemString(llRowPos,'carton_no' ) ) + 1
						idw_pack.SetItem(llRowPos,'carton_no', String(llNewCarton ) )
						If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
							idw_pack.SetItem(llRowPos,'length',llWtDim )
						End if
				else
//TAM 2019/03/08 - Lenth not updating if carton combined(typo)
//					idw_pack.SetItem(llRowPos,'length',idw_pack.GetITemNumber(llRowPos,'length'))
					idw_pack.SetItem(llRowPos,'length',idw_pack.GetITemNumber(llFindRow,'length'))
				end if

				Else
				//TimA 05/29/14 Pandora issue #855.  Set all the weights and dims to 0 on copied rows and set the carton rows.
					If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS'  and ibCopied = True  then
						If llNewCarton = 0 then
							llNewCarton = Long(idw_pack.GetItemString(llFindRow,'carton_no' ) ) + 1
						Else
							llNewCarton ++
						End if
						
						lsGetCarton = idw_pack.GetItemString(llRowPos,'carton_no' )
						idw_pack.SetItem(llRowPos,'carton_no', String(llNewCarton ) )
						If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
							idw_pack.SetItem(llRowPos,'length',llWtDim )
						End if
					End if
			End If
			
			If idw_pack.GetITemNumber(llRowPos,'width') <> idw_pack.GetITemNumber(llFindRow,'width') or isnull(idw_pack.GetITemNumber(llRowPos,'width')) Then
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'width',llWtDim )
					end if
				Else
					idw_pack.SetItem(llRowPos,'width',idw_pack.GetITemNumber(llFindRow,'width'))
				End if
			Else
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'width',llWtDim )
					end if
				End if
			End If
			
			If idw_pack.GetITemNumber(llRowPos,'height') <> idw_pack.GetITemNumber(llFindRow,'height') or isnull(idw_pack.GetITemNumber(llRowPos,'height')) Then
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True  then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'height',llWtDim )
					End if
				else
					idw_pack.SetItem(llRowPos,'height',idw_pack.GetITemNumber(llFindRow,'height'))
				End if
			Else
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True  then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'height',llWtDim )
					End if
				End if
			End If
			
			If idw_pack.GetITemNumber(llRowPos,'cbm') <> idw_pack.GetITemNumber(llFindRow,'cbm') or isnull(idw_pack.GetITemNumber(llRowPos,'cbm')) Then
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'cbm',llWtDim )
					End if
				else
					idw_pack.SetItem(llRowPos,'cbm',idw_pack.GetITemNumber(llFindRow,'cbm'))
				End if
			Else
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llRowPos,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'cbm',llWtDim )
					End if
				End if
			End If
			
			If idw_pack.GetITemNumber(llRowPos,'weight_gross') <> idw_pack.GetITemNumber(llFindRow,'weight_gross') or isnull(idw_pack.GetITemNumber(llRowPos,'weight_gross')) Then
				// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
				//if UPPER(gs_project) = 'PANDORA' then
				//	idw_pack.SetItem(llRowPos,'weight_gross',0)
				//else
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llFindRow,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'weight_gross',llWtDim )
					End if
				Else
					idw_pack.SetItem(llRowPos,'weight_gross',idw_pack.GetITemNumber(llFindRow,'weight_gross'))
				end if
			Else
				If gs_project='PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True then
					If isSkuCopied = lsNextRowSku and idw_pack.GetItemString(llFindRow,'c_first_carton_row' ) = 'N' then
					idw_pack.SetItem(llRowPos,'weight_gross',llWtDim )
					End if
				End if
			End If
			
			If idw_pack.GetITemString(llRowPos,'shipper_tracking_id') <> idw_pack.GetITemString(llFindRow,'shipper_tracking_id') or isnull(idw_pack.GetITemString(llRowPos,'shipper_tracking_id')) Then
				idw_pack.SetItem(llRowPos,'shipper_tracking_id',idw_pack.GetITemString(llFindRow,'shipper_tracking_id'))
			End If
			
			If idw_pack.GetITemString(llRowPos,'user_field1') <> idw_pack.GetITemString(llFindRow,'user_field1') or isnull(idw_pack.GetITemString(llRowPos,'user_field1')) Then
				idw_pack.SetItem(llRowPos,'user_field1',idw_pack.GetITemString(llFindRow,'user_field1'))
			End If
			
			//04/16 - PCONKL
			If idw_pack.GetITemNumber(llRowPos,'outerpack_id') <> idw_pack.GetITemNumber(llFindRow,'outerpack_id') or isnull(idw_pack.GetITemNumber(llRowPos,'outerpack_id')) Then
				idw_pack.SetItem(llRowPos,'outerpack_id',idw_pack.GetITemNumber(llFindRow,'outerpack_id'))
			End If
					
			IF Upper(gs_project) <> 'ANKI' Then //26-Sep-2014 :Madhu- Added code to don't override the UF2 value, even override the carton no 
				If idw_pack.GetITemString(llRowPos,'user_field2') <> idw_pack.GetITemString(llFindRow,'user_field2') or isnull(idw_pack.GetITemString(llRowPos,'user_field2')) Then
					idw_pack.SetItem(llRowPos,'user_field2',idw_pack.GetITemString(llFindRow,'user_field2'))
				End If
			End If
			
			//2019/03/08 - TAM - Copy Pack SSCC NO
			 //2019/03/08 - TAM - Only for PhilipsCls - Could probably be baseline but don't know the impact of other projects 
 			//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
			If idw_pack.GetITemString(llRowPos,'pack_sscc_no') <> idw_pack.GetITemString(llFindRow,'pack_sscc_no') or isnull(idw_pack.GetITemString(llRowPos,'pack_sscc_no')) Then
				IF Upper(gs_project) = 'PHILIPSCLS' OR Upper(gs_project) = 'PHILIPS-DA' OR Upper(gs_project) = 'BOSCH' Then // Dinesh 02/22/2022- SIMS-107-SIMS BOSCH SSCC LABEL
					idw_pack.SetItem(llRowPos,'pack_sscc_no',idw_pack.GetITemString(llFindRow,'pack_sscc_no'))
				End If
			End If
					
		Else /*first row for carton*/
			
			//IF set to an *, the carton number is being changed. It may now be the first row but we want to take the DIMS from a previous row in the carton
			If idw_Pack.GetITemString(llRowPos,'c_first_carton_row') = '*' and llRowPos < llRowCount Then
			
				llFindRow =  idw_pack.Find("Upper(Carton_no) = '" + Upper(idw_pack.GetItemString(llRowPos,'carton_no')) + "'",(llRowPos + 1), llRowCount)
				If llFindRow > 0 Then
				
					If idw_pack.GetITemString(llRowPos,'carton_type') <> idw_pack.GetITemString(llFindRow,'carton_type') or isNull(idw_pack.GetITemString(llRowPos,'carton_type')) Then
						idw_pack.SetItem(llRowPos,'carton_type',idw_pack.GetITemString(llFindRow,'carton_type'))
					End If
			
					If idw_pack.GetITemNumber(llRowPos,'length') <> idw_pack.GetITemNumber(llFindRow,'length') or isnull(idw_pack.GetITemNumber(llRowPos,'length')) Then
						idw_pack.SetItem(llRowPos,'length',idw_pack.GetITemNumber(llFindRow,'length'))
					End If
			
					If idw_pack.GetITemNumber(llRowPos,'width') <> idw_pack.GetITemNumber(llFindRow,'width') or isNull(idw_pack.GetITemNumber(llRowPos,'width')) Then
						idw_pack.SetItem(llRowPos,'width',idw_pack.GetITemNumber(llFindRow,'width'))
					End If
			
					If idw_pack.GetITemNumber(llRowPos,'height') <> idw_pack.GetITemNumber(llFindRow,'height') or isNull(idw_pack.GetITemNumber(llRowPos,'height')) Then
						idw_pack.SetItem(llRowPos,'height',idw_pack.GetITemNumber(llFindRow,'height'))
					End If
			
					If idw_pack.GetITemNumber(llRowPos,'cbm') <> idw_pack.GetITemNumber(llFindRow,'cbm') or isNull(idw_pack.GetITemNumber(llRowPos,'cbm')) Then
						idw_pack.SetItem(llRowPos,'cbm',idw_pack.GetITemNumber(llFindRow,'cbm'))
					End If
			
					If idw_pack.GetITemNumber(llRowPos,'weight_gross') <> idw_pack.GetITemNumber(llFindRow,'weight_gross') or isNull(idw_pack.GetITemNumber(llRowPos,'weight_gross')) Then
						// ET3 20120913	Pandora #496 - Override retrieved values and blank DIMS/Weight on Packing Slip
						//if UPPER(gs_project) = 'PANDORA' then
						//	idw_pack.SetItem(llRowPos,'weight_gross',0)
						//else
							idw_pack.SetItem(llRowPos,'weight_gross',idw_pack.GetITemNumber(llFindRow,'weight_gross'))
						//end if
					End If
			
					If idw_pack.GetITemString(llRowPos,'shipper_tracking_id') <> idw_pack.GetITemString(llFindRow,'shipper_tracking_id') or isNull(idw_pack.GetITemString(llRowPos,'shipper_tracking_id')) Then
						idw_pack.SetItem(llRowPos,'shipper_tracking_id',idw_pack.GetITemString(llFindRow,'shipper_tracking_id'))
					End If
					
					If idw_pack.GetITemString(llRowPos,'user_field1') <> idw_pack.GetITemString(llFindRow,'user_field1') or isNull(idw_pack.GetITemString(llRowPos,'user_field1')) Then
						idw_pack.SetItem(llRowPos,'user_field1',idw_pack.GetITemString(llFindRow,'user_field1'))
					End If
					
					//04/16 - PCONKL
					If idw_pack.GetITemNumber(llRowPos,'outerpack_id') <> idw_pack.GetITemNumber(llFindRow,'outerpack_id') or isnull(idw_pack.GetITemNumber(llRowPos,'outerpack_id')) Then
						idw_pack.SetItem(llRowPos,'outerpack_id',idw_pack.GetITemNumber(llFindRow,'outerpack_id'))
					End If
					
					IF Upper(gs_project) <> 'ANKI' Then //26-Sep-2014 :Madhu- Added code to don't override the UF2 value, even override the carton no 
						If idw_pack.GetITemString(llRowPos,'user_field2') <> idw_pack.GetITemString(llFindRow,'user_field2') or isNull(idw_pack.GetITemString(llRowPos,'user_field2')) Then
							idw_pack.SetItem(llRowPos,'user_field2',idw_pack.GetITemString(llFindRow,'user_field2'))
						End If
					End If
					
				End If
			
			End If
			//2
			idw_pack.SetITem(lLRowPos,'c_first_carton_row','Y')
			
			
			
		End If
	
	End If
	
Next

//Recalculate the gross weight for the combined (new) carton...
If asCarton > "" Then
	
	ldGrossweight = 0
	lbMultRows = False
	
	//First pass - Calculate 
	llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(asCarton) + "'",1, llRowCount)
	Do While lLFindRow > 0
	
		If idw_pack.GetITemNumber(llFindRow,'weight_net') > 0 and idw_pack.GetITemNumber(llFindRow,'quantity') > 0 Then
			ldGrossWeight += (idw_pack.GetITemNumber(llFindRow,'weight_net') * idw_pack.GetITemNumber(llFindRow,'quantity') )
		End If
		
		llFindRow ++
		If llFindRow > llRowCount Then
			llFindRow = 0
		Else
			llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(asCarton) + "'",llFindRow, llRowCount)
		End If
		
		If llFindRow > 0 Then lbMultRows = True /*more than 1 packing row updated*/
	
	Loop
	
	//Second Pass - Update (only if more than 1 row for carton - don't recalc if simply changing carton number for a single line)
//	If lbMultRows Then
		
		llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(asCarton) + "'",1, llRowCount)
		Do While lLFindRow > 0
	
			idw_pack.SetITem(llFindRow,'weight_gross',ldGrossWeight)

			llFindRow ++
			If llFindRow > llRowCount Then
				llFindRow = 0
			Else
				llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(asCarton) + "'",llFindRow, llRowCount)
			End If
	
		Loop
		
//	End If /* multiple pack rows */
	
	//We also need to recalculate for the old carton 
	ldGrossweight = 0
	lbMultRows = False
	
	lsOldCarton = idw_pack.GetITemString(aiRow,'carton_no',primary!,True)
	If lsOldCarton > "" and lsOldcarton <> asCarton Then
	
		//First pass - Calculate 
		llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(lsOldCarton) + "'",1, llRowCount)
		Do While lLFindRow > 0
	
			If idw_pack.GetITemNumber(llFindRow,'weight_net') > 0 and idw_pack.GetITemNumber(llFindRow,'quantity') > 0 Then
				ldGrossWeight += (idw_pack.GetITemNumber(llFindRow,'weight_net') * idw_pack.GetITemNumber(llFindRow,'quantity') )
			End If
		
			llFindRow ++
			If llFindRow > llRowCount Then
				llFindRow = 0
			Else
				llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(lsOldCarton) + "'",llFindRow, llRowCount)
			End If
		
			If llFindRow > 0 Then lbMultRows = True /*more than 1 packing row updated*/
	
		Loop
	
		//Second Pass - Update (only if more than 1 row for carton - don't recalc if simply changing carton number for a single line)
//		If lbMultRows Then
		
			llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(lsOldCarton) + "'",1, llRowCount)
			Do While lLFindRow > 0
	
				idw_pack.SetITem(llFindRow,'weight_gross',ldGrossWeight)
		
				llFindRow ++
				If llFindRow > llRowCount Then
					llFindRow = 0
				Else
					llFindRow = idw_Pack.Find("Upper(carton_no) = '" + Upper(lsOldCarton) + "'",llFindRow, llRowCount)
				End If
	
			Loop
			
	//	End If /* multiple pack rows */
	
	End If /*old carton different */
	
End If


wf_set_pack_Filter('SET')
idw_pack.SetRedraw(True)

idw_pack.Sort()
idw_pack.GroupCalc()

//Return to original row
If aiRow > 0 Then
	llFindRow = idw_Pack.Find(lsREturnFind,1,idw_Pack.RowCount())
	
End IF
	

Return llFindRow
end function

public function integer wf_convert (ref string as_std, integer ai_ind, integer ai_row);//ai_ind is to skip assifgning original 
//values to the idw_pack
integer i
decimal ld_result
// dts 06/08 - added paramter to pass row to be converted and Start/End to control loop
integer liStart, liEnd

IF idw_pack.AcceptText() = -1 THEN Return -1

IF ib_changed THEN 
	MessageBox(is_title,"Please Save the Record First...")
	Return -1
END IF	

if ai_row = 0 then
	liStart = 1
	liEnd = idw_pack.RowCount()
else
	liStart = ai_row
	liEnd = liStart
end if

FOR i = liStart to liEnd
	idw_pack.object.standard_of_measure[i]=as_std
	
	IF idw_pack.GetitemString(i,"standard_of_measure",Primary!,TRUE) = as_std  and ai_ind = 0 THEN
		
		idw_pack.object.height[i]= idw_pack.GetitemDecimal(i,"height",Primary!,TRUE)
		idw_pack.object.width[i]= idw_pack.GetitemDecimal(i,"width",Primary!,TRUE)
		idw_pack.object.length[i]= idw_pack.GetitemDecimal(i,"length",Primary!,TRUE)
		idw_pack.object.weight_net[i]= idw_pack.GetitemDecimal(i,"weight_net",Primary!,TRUE)
		idw_pack.object.weight_gross[i]=  idw_pack.GetitemDecimal(i,"weight_gross",Primary!,TRUE)
		idw_pack.object.cbm[i]=  idw_pack.GetitemDecimal(i,"cbm",Primary!,TRUE)
      Continue
		
	END IF	

	IF upper(as_std) = 'M' THEN	    
		
		ld_result=round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"height"),"IN","CM"),2)
	   idw_pack.object.height[i]= ld_result
		idw_pack.object.width[i]= & 
	   round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"width"),"IN","CM"),2)
		idw_pack.object.length[i]= & 
	   round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"length"),"IN","CM"),2)
		//	   round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"cbm"),"IN","CM"),2)		
		idw_pack.object.weight_net[i]= & 
		round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_net"),"PO","KG"),4) // Dinesh - 01/28/2025- SIMS-648-Development for Google - SIMS Packing list tab and SIMS Printed Packing list missing weights 
		//round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_net"),"PO","KG"),2)
		idw_pack.object.weight_gross[i]= & 
		round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_gross"),"PO","KG"),4) // Dinesh - 01/28/2025- SIMS-648-Development for Google - SIMS Packing list tab and SIMS Printed Packing list missing weights 
		//round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_gross"),"PO","KG"),2)
	   ELSE
		
		ld_result=round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"height"),"CM","IN"),2)
		idw_pack.object.height[i]= ld_result	   
		idw_pack.object.width[i]= & 
	   round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"width"),"CM","IN"),2)
		idw_pack.object.length[i]= & 
	   round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"length"),"CM","IN"),2)
//				idw_pack.object.cbm[i]= & 
//	   round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"cbm"),"CM","IN"),2)
		idw_pack.object.weight_net[i]= &
		round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_net"),"KG","PO"),4) // Dinesh - 01/24/2025- SIMS-648-Development for Google - SIMS Packing list tab and SIMS Printed Packing list missing weights 
		//round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_net"),"KG","PO"),2)
		idw_pack.object.weight_gross[i]= &
		round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_gross"),"KG","PO"),4) // Dinesh - 01/24/2025- SIMS-648-Development for Google - SIMS Packing list tab and SIMS Printed Packing list missing weights 
		//round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i,"weight_gross"),"KG","PO"),2)
	END IF
	
	idw_pack.object.cbm[i]=round(idw_pack.object.length[i] * idw_pack.object.width[i] * idw_pack.object.height[i],2)
	
NEXT	

Return 1	  
	  
	

end function

public function string pandora_getowner (string astype, string asvalue);string lsReturn
long llOwnerID
if asType = 'CODE' then
	select Owner_CD into :lsReturn
	from owner
	where project_id = 'PANDORA'
	and owner_id = :asValue;
else // type = 'ID'
	select Owner_id into :llOwnerID
	from owner
	where project_id = 'PANDORA'
	and owner_cd = :asValue;
	lsReturn = string(llOwnerID)
end if
return lsReturn
end function

public function string pandora_getwarehouse (string as_cust);string lsWH
select user_field2 into :lsWH
from customer
where project_id = 'pandora'
and cust_code = :as_cust;
return lsWH
end function

public function integer wf_post_pick_list_generate (integer ai_row);LONG llRowCount, llrowpos, llstartrow, llendrow
String ls_owner_cd, lssku, lssupplier
Double ld_owner_id, ld_owner_id_prev
decimal ld_price_1, ld_price_2
String ls_location_org, ls_cust_code, ls_Currency
decimal ld_current_price


IF gs_project = "PANDORA" THEN
	llRowCount = idw_detail.RowCount()
	IF llRowCount <= 0 THEN RETURN 0
	if ai_row = 0 then
		llstartrow = 1
		llendrow = llRowCOunt
	else
		llstartrow = ai_row
		llendrow = ai_row
	end if

	llRowCount = idw_detail.RowCount()
	For llRowPos = llstartrow to llendrow
		ld_owner_id =  idw_detail.GetItemNumber( llRowPos, "owner_id" ) 
		if ld_owner_id <> ld_owner_id_prev then
			SELECT owner_cd INTO :ls_owner_cd 
			FROM Owner
			Where Project_id = :gs_project and owner_id = :ld_owner_id;
			
			Select user_field3
			Into	 :ls_location_org
			From Customer
			Where Project_id = :gs_project and Cust_Code = :ls_owner_cd;
			
			ld_owner_id_prev = ld_owner_id
		end if
		
		lsSKU =  idw_detail.GetItemString( llRowPos, "sku" ) 
		lsSupplier =  idw_detail.GetItemString( llRowPos, "supp_code" ) 

		ld_price_1 = 0; ld_price_2 = 0
		Select price_1, price_2, currency_cd
		Into	 :ld_price_1, :ld_price_2, :ls_Currency
		From Price_Master
		Where Project_id = :gs_project and sku = :lsSKU and supp_code = :lsSupplier AND price_class = :ls_location_org;

		//if there is a price on the detail row, don’t over-write it with the 
		//price that was obtained from the Price_Master look-up.

		ld_current_price = idw_detail.GetItemDecimal(llRowPos,'price')

		IF IsNull(ld_current_price) OR ld_current_price = 0 THEN

			if idw_pick.GetItemString(llRowPos,'inventory_type') = "N" then
				idw_detail.SetItem(llRowPos,'price', ld_price_1)
			else
				idw_detail.SetItem(llRowPos,'price', ld_price_2)
			end if
		
		END IF
	
		idw_detail.SetItem(llRowPos,'currency_code', ls_Currency)
	NEXT

END IF

RETURN 0
end function

public function integer wf_lock (boolean ab_lock);String ls_status, ls_otm_status

//Lock/Unlock fields


IF gs_project = 'PANDORA' THEN
	
	tab_main.tabpage_main.sle_order.enabled = NOT ab_lock
	tab_main.tabpage_main.sle_order2.enabled = NOT ab_lock

	string ls_color, ls_dw_color
	boolean lb_display_only, lb_enabled  
	
	
	ls_dw_color = idw_main.object.datawindow.color
	
	IF ab_lock THEN
		ls_color = ls_dw_color // string(RGB(128, 128, 128))
		lb_display_only = true
		lb_enabled = false
	ELSE
		ls_color = string(RGB(255, 255, 255))
		lb_display_only = false
		lb_enabled = true
	END IF


	//From Location

	idw_main.Object.wh_code.Protect = lb_display_only
	idw_main.Modify("wh_code.Background.Color = '" +  ls_color + "'")

	idw_other.Object.user_field2.Protect = lb_display_only
	idw_other.Modify("user_field2.Background.Color = '" +  ls_color + "'")

	
	
	//To Location
	
	idw_main.Object.cust_code.Protect = lb_display_only
	idw_main.Modify("cust_code.Background.Color = '" +  ls_color + "'")

	
	tab_main.tabpage_main.cb_do_select_customer.enabled = lb_enabled
	
	//Item Number
	//TimA 02/29/12 OTM Project.  These buttons are controled by the OTM Status in wf_enable_OTM_Status
	If isOTMEnabled = 'N' Then
		//If baseline or Non OTM project use as normal
		tab_main.tabpage_detail.cb_do_det_insert.enabled = lb_enabled
		tab_main.tabpage_detail.cb_do_det_delete.enabled = lb_enabled
	End if

	idw_detail.Object.sku.Protect = lb_display_only
	// LTK 20111128	Pandora #334  If QA indictor is set, then display sku with purple background, otherwise set it to ls_color.
	//idw_detail.Modify("sku.Background.Color = '" +  ls_color + "'")
	if Pos(Upper(is_sku_bg_color_init_expression),'RGB(255,255,255)') > 0 then
		String ls_bg_color_expression
		ls_bg_color_expression = Replace(is_sku_bg_color_init_expression,Pos(Upper(is_sku_bg_color_init_expression),"RGB(255,255,255)"),16,ls_color)
		idw_detail.Modify("sku.Background.Color=" + ls_bg_color_expression)
	end if



	//From Project


	//To Project

	idw_other.Object.user_field8.Protect = lb_display_only
	idw_other.Modify("user_field8.Background.Color = '" +  ls_color + "'")


	//Transaction_Type

	idw_other.Object.user_field7.Protect = lb_display_only
	idw_other.Modify("user_field7.Background.Color = '" +  ls_color + "'")

	//vics_bol_no
	//TimA 02/26/15 lock the vics_bol_no.  F10 will unlock
	idw_other.Object.vics_bol_no.Protect = lb_display_only
	idw_other.Modify("vics_bol_no.Background.Color = '" +  ls_color + "'")
	
	//Trx Source Num
	
	idw_detail.Object.line_item_no.Protect = lb_display_only
	idw_detail.Modify("line_item_no.Background.Color = '" +  ls_color + "'")


	idw_detail.Object.supp_code.Protect = lb_display_only
//	idw_detail.Modify("supp_code.Background.Color = '" +  ls_color + "'")


	//Order Type

	idw_main.Object.ord_type.Protect = lb_display_only
//	idw_main.Modify("ord_type.Background.Color = '" +  ls_color + "'")
	
	
	//Quantity

	idw_detail.Object.req_qty.Protect = lb_display_only
	idw_detail.Modify("req_qty.Background.Color = '" +  ls_color + "'")
	
	
	idw_detail.Object.alternate_sku.Protect = lb_display_only
	idw_detail.Modify("alternate_sku.Background.Color = '" +  ls_color + "'")

	
	idw_detail.Object.cf_owner_name.Protect = lb_display_only
//	idw_detail.Modify("cf_owner_name.Background.Color = '" +  ls_color + "'")


	idw_main.Object.inventory_type.Protect = lb_display_only
//	idw_main.Modify("inventory_type.Background.Color = '" +  ls_color + "'")

// Pick_Complete
// 01/28/2010 ujh:  If project is PANDORA, prevent manual changes to pick_complete (see ue_save for related changes)
	idw_main.Object.pick_complete.Protect = lb_display_only
	idw_main.Modify("pick_complete.Background.Color = '" +  ls_color + "'")
	
	// ET3 2013-01-31  issue 517: MIM receipt ack - lock receipt related fields
	string lsTemp
	IF IsValid(idw_other) THEN 
		lsTemp = idw_other.GetItemString(1,'user_field17')
		IF LEN(TRIM(lsTemp)) > 0 THEN idw_other.Object.user_field17.Protect = lb_display_only
		lsTemp = STRING(idw_other.GetItemDateTime(1,'receive_date'))
		IF LEN(TRIM(lsTemp)) > 0 THEN idw_main.Object.receive_date.Protect = lb_display_only
	END IF

	// TAM 08/21/2018 - S22531 load Id- Unlock only upon an F10.  
	idw_main.Object.load_id.Protect = lb_display_only
	idw_main.Modify("load_id.Background.Color = '" +   ls_color + "'")	
	
If isOTMEnabled = 'Y' Then
	If Upper(gs_project) = 'PANDORA' then
		//TimA 02/13/12 OTM Project  
		//Provent the user from entering anything in transport_mode
		//Don't allow user at anytime to edit this field
		ls_color = ls_dw_color // string(RGB(128, 128, 128))		
		lb_display_only = true
		idw_other.Object.transport_mode.Protect = lb_display_only
		idw_other.Modify("transport_mode.Background.Color = '" +  ls_color + "'")			
		idw_other.Object.user_field1.Protect = lb_display_only
		idw_other.Modify("user_field1.Background.Color = '" +  ls_color + "'")
		idw_other.Object.agent_info.Protect = lb_display_only
		idw_other.Modify("agent_info.Background.Color = '" +  ls_color + "'")
		idw_other.Object.ship_via.Protect = lb_display_only
		idw_other.Modify("ship_via.Background.Color = '" +  ls_color + "'")	
		
		//Jxlim 04/02/2012 BRD #386 Lock Carrier field when OTM status is OTM Hold (H), Sweeper Hold (S) or Planning (P)	
		ls_status = idw_main.GetItemString(1, "Ord_status")
		ls_otm_status = idw_main.GetItemString(1, "Otm_Status")
		// Don’t allow changes to carrier if the ord_status is ‘C’ or ‘D’.
		If ls_status = 'C' Or ls_status = 'D' Or  ls_otm_status ='H' Or  ls_otm_status ='S' Or ls_otm_status = 'P'  Or ls_otm_status = 'R'  Then
			idw_other.Object.Carrier.Protect = lb_display_only
			idw_other.Modify("Carrier.Background.Color = '" +  ls_color + "'")	//dw background color
		Else
			idw_other.Object.Carrier.Protect = False
			idw_other.Modify("Carrier.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	  //white background color	
		End If
	end if
End if

	// LTK 20150924  Pandora #986  Allow transport mode to be modified for carrier: VNDRPIUSTD
	if Trim( idw_other.Object.carrier[1] ) = 'VNDRPIUSTD' then
		idw_other.Object.transport_mode.Protect = FALSE
		idw_other.Modify("transport_mode.Background.Color = '" +  String(RGB(255, 255, 255)) + "'")
	else
		idw_other.Object.transport_mode.Protect = lb_display_only
		idw_other.Modify("transport_mode.Background.Color = '" +  ls_color + "'")			
	end if


	//  LTK 20110526	Pandora #187 - Users now request to be able to unlock user_field22.  Comment out block below.
	// 	This function is called based on edi seq no, so the locking/unlocking of UF22 will be handled in wf_check_status() and ue_unlock().

//	If Upper(gs_project) = 'PANDORA' then
//		//TimA 04/22/11 Pandora issue #187 check for commercial invoice invoice.  
//		//Provent the user from entering anything in user_field22
//		//Don't allow user at anytime to edit this field
//		ls_color = ls_dw_color // string(RGB(128, 128, 128))		
//		lb_display_only = true
//		idw_other.Object.user_field22.Protect = lb_display_only
//		idw_other.Modify("user_field22.Background.Color = '" +  ls_color + "'")
//	end if

END IF	

// LTK 20120525	Pandora #423 Lock the carrier field if the carrier was set by a list of schedule codes (currently: NOS, DOS, PIU) stored in lookup_table.
if Upper(gs_project) = 'PANDORA' then
	String ls_carrier
	Long ll_count
	
	if idw_other.RowCount() > 0 then
		ls_carrier = Trim(Upper(idw_other.Object.carrier[1]))			
		
		select count(*)
		into :ll_count
		from lookup_table WITH (NOLOCK)
		where project_id = 'PANDORA'
		and code_type = 'CCODE'
		and code_descript = :ls_carrier;
		
		if ll_count > 0 then
			idw_other.Object.Carrier.Protect = ab_lock		// lb_display_only was modified above

			if ab_lock then
				idw_other.Modify("carrier.dddw.AllowEdit=No")
				idw_other.Modify("Carrier.Background.Color = '" +  idw_main.object.datawindow.color + "'")
			else
				idw_other.Modify("carrier.dddw.AllowEdit=Yes")
				idw_other.Modify("Carrier.Background.Color = '" +  String(RGB(255, 255, 255)) + "'")
			end if
		end if
	end if
end if

	If Upper(gs_project) = 'PANDORA' then
		//TimA 08/04/11 Pandora issue #192 is this a MORK order.  
		//Provent the user from entering anything in user_field21
		//Don't allow user at anytime to edit this field
		ls_color = ls_dw_color // string(RGB(128, 128, 128))		
		lb_display_only = true
		idw_other.Object.user_field21.Protect = lb_display_only
		idw_other.Modify("user_field21.Background.Color = '" +  ls_color + "'")
		
		//TimA 09/14/11 Pandora issue #226
		//Lock the COO.  Now you update it by changing the Pick COO
		
		idw_pack.Object.country_of_origin.Protect = lb_display_only
		idw_pack.Modify("country_of_Origin.Background.Color = '" +  ls_color + "'")

		//TimA 07/31/12 Pandora issue #460 always lock the Original RDD field.  F10 will unlock though
		idw_main.Object.edm_generate_datetime.Protect = lb_display_only
		idw_main.Modify("edm_generate_datetime.Background.Color = '" +  ls_color + "'")
	end if
	
	// TAM W&S 2010/12 Lock Down Fields for Wine and Spirit
If left(gs_project,2) = 'WS'   then
	idw_detail.SetTabOrder("req_qty", 0)
	idw_detail.SetTabOrder("uom", 0)
	idw_detail.object.user_field4.protect = true    
	idw_detail.SetTabOrder("user_field4", 0)
	idw_detail.object.user_field5.protect = true    
	idw_detail.SetTabOrder("user_field5", 0)
	idw_detail.object.user_field6.protect = true    
	idw_detail.SetTabOrder("user_field6", 0)
	idw_detail.object.user_field5.protect = true    
	idw_detail.SetTabOrder("user_field7", 0)
//	idw_putaway.object.po_no.protect = true    
//	idw_detail.SetTabOrder("user_field3", 0)
//	idw_putaway.SetTabOrder("po_no", 0)
		END IF

// ET3 2012-09-27  Pandora #503 - disable changing shipping information - Unlock with F10
IF UPPER(gs_project) = 'PANDORA' THEN
	idw_other.object.consolidation_no.Protect=TRUE
END IF

// ET3 2013-01-04 Pandora 555 - prevent changes to owner code
IF UPPER(gs_project) = 'PANDORA' THEN
	bChange_cf_owner_name_Allowed = FALSE
ELSE
	bChange_cf_owner_name_Allowed = TRUE
END IF

RETURN 0
end function

public function boolean f_packprint_pandora ();// This event prints the Packing List which is currently visible on the screen 
// and not from the database - JC
// Any custom Pack Print routines are called from the clicked event of the print button
// pvh - 09/15/06 bluecoat
//GailM 03/14/13 Pandora issue #581. Added lsUserField11,lsUserField12 for Pandora danger sku printing showing UN# and PI#
string trackingids = 'Tracking Ids: ', ls_noteline,ls_check_first_char
string acomma = ", ", ls_notes
String ls_address,lsfind,ls_text[], lscusttype, lscustcode, lsSerial, lsNotes, ls_inventory_type_desc,ls_etom, lsSupplierName, lsDONO
String ls_project_id , ls_sku ,lsSKUHold,  ls_description,ls_alt_sku, ls_supplier, lsHazCode, lsHazText, lsTransportMode
String lsWHCode,lsaddr1,lsaddr2,lsaddr3,lsaddr4,lscity,lsstate,lszip,lscountry,lsname,lsVAT, lsUPC, lsPrinter, lsVol, lsNativeDesc, lsGrp
String lsUserField11, lsUserField12, lsUserField14, ls_d_packing_prt, ls_dono, ls_first_carton_row, ls_uf1
String ls_carton_no, ls_pack_lot_no, ls_pack_po_no, ls_pack_po_no2	, lsSerialFind, ls_country_ind, ls_additional_pack_info	// LTK 20160114
Long ll_cnt, i, j, llRow, llLineItemNo,llFindCount, llFindRow, llhazCount, llHazPos, llNotesCount, llNotesPos
Long ll_found_row, ll_New_Row, llSerialFindRow, ll_line_Item_No		// LTK 20160114

Decimal ld_weight, ld_costcenter
Datetime ldt_pack_expiration_date		// LTK 20160114
Boolean lb_hide_coo_on_packlist_print, lb_aggregate_coo, lb_serialized_pack_list		// LTK 20160114

Datastore       ldsHazmat, ldsNotes, lds_serial_pack_List

lb_hide_coo_on_packlist_print = ( f_retrieve_parm("PANDORA", "FLAG", "PACKLIST_DISPLAY_COO_ON") = 'N' )
lb_aggregate_coo = ( f_retrieve_parm("PANDORA", "FLAG", "PACKLIST_COO_AGGREGATE_ON") = 'Y' )

//10/11/2010 ujh: part of Extending the description field in packing list for pandora (supplier removed in this object)
if upper(gs_project) = 'PANDORA' then
	ls_d_packing_prt = 'd_packing_prt_Pandora'
else
	ls_d_packing_prt = 'd_packing_prt'
end if

idw_packPrint.Dataobject = ls_d_packing_prt  //GAP1203 added the default packing  

//22-MAR-2018 :Madhu S16805 - Serialized Pack List - START
If not IsValid(lds_serial_pack_List) Then
	lds_serial_pack_List = create datastore
	lds_serial_pack_List.dataobject='d_packing_prt_pandora_serial_group'
	lds_serial_pack_List.settransobject( SQLCA)
End If

lscustcode =  idw_main.getitemstring(1,"cust_code")

select User_Field1 into :ls_uf1 from Customer with(nolock) 
where Project_Id =:gs_project and cust_code =:lscustcode
using sqlca;

lb_serialized_pack_list = (f_retrieve_parm("PANDORA", "GROUP_CODE",trim(ls_uf1), "CODE_DESCRIPT") ='SERIAL_PACKLIST_GROUP')
//22-MAR-2018 :Madhu S16805 - Serialized Pack List - END

SetPointer(HourGlass!)
If idw_pack.AcceptText() = -1 Then
	tab_main.SelectTab(3) 
	idw_pack.SetFocus()
	Return false
End If

If ib_changed then /* we want to make sure the validation routine is run before printing*/
	Messagebox(is_title,'Please save changes before printing Pack List.')
	Return false
End If

//No row means no Print
ll_cnt = idw_pack.rowcount()
If ll_cnt = 0 Then
	MessageBox("Print Packing List"," No records to print!")
	Return false
End If

//TAM 2018/08 - S22531 - Don't Print if TMS has no load Id	
String ls_dmuf1, lsloadId
ls_dmuf1 = Trim(idw_main.GetItemString(1,"user_field1"))
lsloadId = Trim(idw_main.GetItemString(1,"load_id"))

If ls_dmuf1 <> 'DOS' and  ls_dmuf1 <> 'PIU' and ls_dmuf1 <> 'NOS' and ls_dmuf1 <> 'GND' and (lsloadId = '' or isNull(lsloadId)) then /* 11/19 - PCONKL - F19222/DE13597 - add 'GND' */

	//GailM 10/15/2018 Temporarily use flag to disable this function until other testing is done
	If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"tHEN
		messagebox(is_title,"This is TMS order and should have Load ID, Pack List Cannot be Printed", Exclamation!)
		return false
	Else
//		messagebox(is_title,"This is a TMS order and should have Load ID.~rThis stop is temporarily disabled.  Change Flag to 'Y' to reenable.", Exclamation!)
	End If
	
End If

//Clear the Report Window (hidden datawindow)
idw_packprint.Reset()
ls_project_id = idw_main.getitemstring(1,"project_id")
lsWHCode = idw_main.getitemstring(1,"wh_code")

//Dhirendra  S53581 Pandora- Google - SIMS -Cityblock Address -Start
string ll_cust_userfield2,ll_address_code ='PL'
long lls_count

ll_cust_userfield2  =   idw_other.object.user_field2[1]

select count(*) into : lls_count
from customer_address 
where cust_code = :ll_cust_userfield2 and address_code = 'PL' using sqlca;

if lls_count > 0 then
Select Address_Name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country
Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry
From customer_address with(nolock)
Where Cust_code = :ll_cust_userfield2 and  address_code = 'PL' 
Using Sqlca;

else
//Dhirendra  S53581 Pandora- Google - SIMS -Cityblock Address -End
	
Select WH_name, Address_1, Address_2, Address_3, Address_4, city, state, zip, country
Into    :lsName, :lsaddr1, :lsAddr2, :lsaddr3, :lsaddr4, :lsCity, :lsState, :lsZip, :lsCountry
From warehouse with(nolock)
Where WH_Code = :lsWHCode
Using Sqlca;
end if


//02/02 - PCONKL - Hazardous material stuff for GM hahn
ldsHazmat = Create Datastore
ldshazmat.dataobject = 'd_hazard_text'
ldshazmat.SetTransObject(SQLCA)

lsTransPortMode= idw_main.GetITemString(1,'transport_Mode') /* used for printing haz mat info*/

// Get the cost center.
nvo_order lnvo_order
lnvo_order = Create nvo_order
lnvo_order.f_getcostcenter(1, ld_costcenter)
Destroy lnvo_order

select EU_Country_Ind into :ls_country_ind 
from Country with(nolock) where Designating_Code =:lsCountry
using sqlca;


//Loop through each row in Tab pages and grab the coresponding info
For i = 1 to ll_cnt
	
	//Get SKU, Description and Quantities  04/05/00 PCONKL - include user field5 as pdc_whse_loc
	// 02/02 - PConkl - include hazardous text cd
	ls_sku = idw_pack.getitemstring(i,"sku")
	ls_supplier = idw_pack.getitemstring(i,"supp_code")
	llLineItemNo = idw_pack.GetITemNumber(i,'line_item_no')
	
	// LTK 20160114  Pandora #1010 Don't display COO on printed packlist 
	if ( upper(gs_Project) = 'PANDORA' ) and lb_hide_coo_on_packlist_print and lb_aggregate_coo then
		ls_carton_no = idw_pack.getitemString(i,"carton_no")
		ls_pack_lot_no = idw_pack.getitemString(i,"pack_lot_no")
		ls_pack_po_no = idw_pack.getitemString(i,"pack_po_no")
		ls_pack_po_no2 = idw_pack.getitemString(i,"pack_po_no2")
		ldt_pack_expiration_date = idw_pack.getItemDateTime(i, "pack_expiration_date")
		
		//lsFind = "sku = '" + ls_sku + "' and supp_code = '" + ls_supplier + "' and line_item_no = " + String( llLineItemNo ) + " and carton_no = '" + ls_carton_no + "' and pack_lot_no = '" + ls_pack_lot_no + "' and pack_po_no = '" + ls_pack_po_no + "' and pack_po_no2 = '" + ls_pack_po_no2 + "'"
		lsFind = "sku = '" + ls_sku + "' and supp_code = '" + ls_supplier + "' and carton_no = '" + ls_carton_no + "' and pack_lot_no = '" + ls_pack_lot_no + "' and pack_po_no = '" + ls_pack_po_no + "' and pack_po_no2 = '" + ls_pack_po_no2 + "'"
		lsFind += " and String(pack_expiration_date,'mm/dd/yyyy hh:mm:ss') = '" + String( idw_pack.getItemDateTime(i, "pack_expiration_date"), 'mm/dd/yyyy hh:mm:ss' ) + "' "
		ll_found_row = idw_packprint.Find( lsFind, 1, idw_packprint.RowCount() )
		
		if ll_found_row > 0 then
			idw_packprint.setitem( ll_found_row, "ord_qty", ( idw_pack.getitemNumber(i,"quantity") + idw_packprint.getitemNumber(ll_found_row,"ord_qty") ))
			idw_packprint.setitem( ll_found_row, "picked_quantity", ( idw_pack.getitemNumber(i,"quantity") + idw_packprint.getitemNumber(ll_found_row,"picked_quantity") ))				
		continue
		end if
	end if

	j = idw_packprint.InsertRow(0)
	
	If ls_SKU <> lsSKUHold Then
		//10/11/2010 ujh adding user_Field14 to get the rest of description when printing the Packing tab for Pandora
		select description, weight_1, hazard_text_cd, part_upc_Code, user_field8, native_description, grp,isnull(User_field14, '')    /* 05/09 - PCONKL - UF8 = Volume for Philips */
		into :ls_description, :ld_weight, :lshazCode, :lsUPC, :lsVol, :lsnativeDesc, :lsGrp, :lsUserField14 
		from item_master with(nolock)
		where project_id = :ls_project_id and sku = :ls_sku and supp_code = :ls_supplier ;
	End If /*Sku Changed*/
	
	lsSkuHold = ls_SKU
	
	// 01/10 - PCONKL - Native (Chinese) description and Grp for Warner
	If upper(gs_Project) = 'WARNER' Then
		ls_description = trim(lsnativeDesc)
		idw_packprint.setitem(j,"item_grp",lsGrp)
	Elseif upper(gs_Project) = 'PANDORA' then   // 10/11/2010 ujh: Extending the Description when printing from the packing tab.
		ls_description = trim(ls_description) + trim(lsUserField14)
		lsUserField14 = ''   //12/01/2010 ujh;  Correction; Should have reset this in 10/11/2010 ujh:
	Else 
		ls_description = trim(ls_description)
	End If
	
	// 02/02 PCONKL - If there is hazardous material text for this SKU/Ship Method, retrieve the text for the report
	lshazText = ''
	If lshazCode > '' Then /*haz text exists for this sku*/
		llhazCount = ldsHazmat.Retrieve(gs_project,lshazCode,lsTransportMode)
		If llHazCount > 0 Then
			For llHazPos = 1 to llHazCount
				lsHazText += ldshazMat.GetItemString(llHazPos,'hazard_text') + '~r'
			Next
		End If
	End If /*haz text exists*/
	
	// LTK 20160114  Pandora #1010 Set these fields here so we can find them above
	if ( upper(gs_Project) = 'PANDORA' ) and lb_hide_coo_on_packlist_print then
		idw_packprint.setitem( j, "carton_no", ls_carton_no )
		idw_packprint.setitem( j, "pack_lot_no", ls_pack_lot_no )
		idw_packprint.setitem( j, "pack_po_no", ls_pack_po_no )
		idw_packprint.setitem( j, "pack_po_no2", ls_pack_po_no2 )
		idw_packprint.setitem( j, "pack_expiration_date", ldt_pack_expiration_date )
	end if 
			
	//Set all Items on the Report by grabbing info from tab pages
	//Warner using UF18 for Cust Order No
	If upper(gs_project) = 'WARNER' Then
		idw_packprint.setitem(j,"ord_no",idw_main.getitemstring(1,"User_Field18"))
	Else
		idw_packprint.setitem(j,"ord_no",idw_main.getitemstring(1,"cust_order_no"))
	End IF
	
	idw_packprint.setitem(j,"costcenter", string(ld_costcenter))
	idw_packprint.setitem(j,"carton_no",idw_pack.getitemString(i,"carton_no")) /*Printed report should show carton # from screen instead of row #*/
	idw_packprint.setitem(j,"bol_no",is_bolno)
	idw_packprint.setitem(j,"freight_terms",idw_other.getitemstring(1,"freight_terms"))     
	idw_packprint.setitem(j,"cust_code",idw_main.getitemstring(1,"cust_code")) /* 5/3/00 PCONKL*/
	idw_packprint.setitem(j,"city",idw_main.getitemstring(1,"city"))
	idw_packprint.setitem(j,"country",idw_main.getitemstring(1,"country"))
	idw_packprint.setitem(j,"ord_date",idw_main.getitemdatetime(1,"ord_date"))
	idw_packprint.setitem(j,"complete_date",idw_main.getitemdatetime(1,"complete_date"))
	idw_packprint.setitem(j,"request_date",idw_main.getitemdatetime(1,"request_date"))
	//TAM 2016/08/11 - Added new field to Packlist
	idw_packprint.setitem(j,"client_cust_po_nbr",idw_main.getitemstring(1,"client_cust_po_nbr"))
	idw_packprint.setitem(j,"do_no",idw_Main.GetItemString(1,'do_no'))
	//Dhirendra - Google - SIMS - Buy Sell Project- 12-06-2021 ---Start
	if gs_project ='PANDORA' then 
	idw_packprint.setitem(j,"client_cust_so_nbr",idw_main.getitemstring(1,"client_cust_so_nbr"))
	idw_packprint.setitem(j,"customer_sku",idw_detail.getitemstring(i,"customer_sku"))
end if 
	//Dhirendra - Google - SIMS - Buy Sell Project  ---End
	//10/11/2010 ujh use variable to allow for dataobject with supplier column removed
	IF idw_packPrint.Dataobject = ls_d_packing_prt THEN
		idw_packprint.setitem(j,"schedule_date",idw_main.getitemdatetime(1,"schedule_date"))			
	END IF
	
	idw_packprint.setitem(j,"sku",ls_sku)
	idw_packprint.setitem(j,"description",ls_description)
	
	//TimA 08/09/11 Pandora issue #192
	//On MORK orders we are showing the children so the search for the parent won't work down below where the Find is.
	If ibMorkKitOrder = true then
		idw_packprint.setitem(j,"ord_qty",idw_pack.getitemNumber(i,"quantity"))
	end if
	
	if upper(gs_project) = 'RUN-WORLD' OR upper(gs_project) = 'GIGA'  then 
		idw_packprint.SetITem(j,'c_first_carton_row', idw_pack.getitemString(i,"c_first_carton_row"))
		idw_packprint.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_gross")) 
	else
		//idw_packprint.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_net")) /*take from displayed pask list instead of DB*/// commented this line Dinesh -04/04/2024 -  SIMS-411- Google - Net weight calculation on the printed packing list is not correct*/
		//idw_packprint.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_net")) /*take from displayed pask list instead of DB*/// Dinesh -04/04/2024 -  SIMS-411- Google - Net weight calculation on the printed packing list is not correct*/// commented this line and added below line - Dinesh -11/06/2024 -  SIMS-591- Google - Development for Google - SIMS -SIMS net weight at GPN Level 
		idw_packprint.setitem(j,"unit_weight",idw_pack.getitemDecimal(i,"weight_net")*(idw_pack.getitemNumber(i,"quantity"))) // Dinesh -11/06/2024 -  SIMS-591- Google - Development for Google - SIMS -SIMS net weight at GPN Level 
		idw_packprint.setitem(j,"unit_weight_1",idw_pack.getitemDecimal(i,"weight_net")*(idw_pack.getitemNumber(i,"quantity"))) /*take from displayed pask list instead of DB*/// Dinesh -04/04/2024 -  SIMS-411- Google - Net weight calculation on the printed packing list is not correct*/
		idw_pack.getitemNumber(i,"quantity")
	end if
	
	idw_packprint.setitem(j,"standard_of_measure",idw_pack.getitemString(i,"standard_of_measure"))
	idw_packprint.setitem(j,"carrier", idw_other.getitemString(1,"carrier") )
	idw_packprint.setitem(j,"ship_via",idw_other.getitemString(1,"ship_via")) /* 5/3/00 PCONKL */
	idw_packprint.setitem(j,"sch_cd",idw_other.getitemString(1,"user_field1")) /* 5/3/00 PCONKL */
	
	//TimA 09/13/12 Added User_Filed5.  Pandora issue 427  		  
	if upper(gs_project) = 'PANDORA' then
		idw_packprint.setitem(j,"User_Field5",idw_other.getitemString(1,"user_field5")) 
		idw_packprint.setitem(j, "Load_Id", idw_main.getItemString(1, "Load_Id"))
		idw_packprint.setitem(j, "Load_Sequence", idw_main.getItemNumber(1, "Load_Sequence"))
		 // Begin - Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
		idw_packprint.setitem(j, "awb_bol_no", idw_other.getItemString(1, "awb_bol_no"))
		idw_packprint.setitem(j, "do_no_1", idw_Main.getItemString(1, "do_no")) // Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
		idw_packprint.setitem(j, "line_item_no", idw_pack.getItemNumber(i, "line_item_no")) // Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
		idw_packprint.setitem(j, "carton_type", idw_pack.getItemString(i, "carton_type")) // Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
		idw_packprint.setitem(j, "net_weight", idw_pack.getItemDecimal(i, "weight_net")) // Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
		idw_packprint.setitem(j, "gross_weight", idw_pack.getItemDecimal(i, "weight_gross")) 
		idw_packprint.setitem(j, "rma_number", idw_detail.getItemstring(i, "user_field8")) // Dinesh - 02/15/2024- SIMS-412 - Google - SIMS – Outbound RMA Number
//		idw_packprint.setitem(j, "net_weight", idw_pack.getItemDecimal(i, "weight_net")) // Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
//		idw_packprint.setitem(j, "gross_weight", idw_pack.getItemDecimal(i, "weight_gross")) 
		
		// End - Dinesh - 07/31/2023- SIMS-253- Google - SIMS - Packing list change
		//14-MAR-2019 :Madhu S31050 Additional Packing Notes for EU
		IF ls_country_ind ='Y' THEN
			// Begin -Dinesh - SIMS-253-Google - SIMS - Packing list change
			ls_additional_pack_info = "PLEASE NOTE: These items are controlled by the U.S. Government and authorized for export only to the country of ultimate destination for use by the ultimate consignee or end-user(s) herein identified. They may not be resold, transferred, or otherwise disposed of, to any other country or to any person other than the authorized ultimate consignee or end-user(s), either in their original form or after being incorporated into other items, without first obtaining approval from the U.S. government or as otherwise authorized by U.S. law and regulations. Dual-use items listed in Annex 1 of Regulation (EC) No 2021/821 are subject to controls and require a license to leave the EU. For questions about the export control classification of these items, please contact emea-log-compliance@google.com"
			//ls_additional_pack_info = "PLEASE NOTE: These items are controlled by the U.S. Government and authorized for export only to the country of ultimate destination for use by the ultimate consignee or end-user(s) herein identified. They may not be resold, transferred, or otherwise disposed of, to any other country or to any person other than the authorized ultimate consignee or end-user(s), either in their original form or after being incorporated into other items, without first obtaining approval from the U.S. government or as otherwise authorized by U.S. law and regulations. Dual-use items listed in Annex 1 of Regulation (EC) No 428/2009 are subject to controls and require a license to leave the EU. For questions about the export control classification of these items, please contact emea-log-compliance@google.com"
		ELSE
			ls_additional_pack_info = "PLEASE NOTE: These items are controlled by the U.S. Government and authorized for export only to the country of ultimate destination for use by the ultimate consignee or end-user(s) herein identified. They may not be resold, transferred, or otherwise disposed of, to any other country or to any person other than the authorized ultimate consignee or end-user(s), either in their original form or after being incorporated into other items, without first obtaining approval from the U.S. government or as otherwise authorized by U.S. law and regulations. Dual-use items listed in Annex 1 of Regulation (EC) No 2021/821 are subject to controls and require a license to leave the EU."
			//ls_additional_pack_info = "PLEASE NOTE: These items are controlled by the U.S. Government and authorized for export only to the country of ultimate destination for use by the ultimate consignee or end-user(s) herein identified. They may not be resold, transferred, or otherwise disposed of, to any other country or to any person other than the authorized ultimate consignee or end-user(s), either in their original form or after being incorporated into other items, without first obtaining approval from the U.S. government or as otherwise authorized by U.S. law and regulations. Dual-use items listed in Annex 1 of Regulation (EC) No 428/2009 are subject to controls and require a license to leave the EU."
		END IF
		// End - Dinesh - SIMS-253-Google - SIMS - Packing list change
		
		idw_packprint.setitem(j, "additional_pack_info", ls_additional_pack_info)
		
	End if  
	
	//idw_packprint.setitem(j,"packlist_notes",idw_main.getitemString(1,"packlist_notes")) /* 09/01 PCONKL */
	//Jxlim 03/02/2012 BRD #337 Pandora-OTM set to blank when upc code is 0
	If lsUPC = '0' Then
		lsUPC = ''
	End If
	
	idw_packprint.setitem(j,"upc_Code",lsUPC) /* 04/04 PCONKL */
	idw_packprint.setitem(j,"project_id",gs_project) /* 12/01 PCONKL */
	idw_packprint.setitem(j,"HazText",lshazText) /* 02/02 PCONKL */
	
	//For English to Metrtics changes added L or K based on E or M
	ls_etom=idw_packprint.getitemString(j,"standard_of_measure")
	IF ls_etom <> "" and not isnull(ls_etom) and j=1 THEN
		IF ls_etom = 'E' THEN
			ls_text[1]="unit_w_t.Text='"+is_text[1]+"L'"                    
			ls_text[2]="ext_w_t.Text='"+is_text[2]+"L'"
			ls_text[3]="etom_t.Text='INCHES'"
		ELSE
			ls_text[1]="unit_w_t.Text='"+is_text[1]+"K'"
			ls_text[2]="ext_w_t.Text='"+is_text[2]+"K'"
			ls_text[3]="etom_t.Text='CENTIMETERS'"
		END IF
	END IF  
	
	// 5/4/00 PCONKL - find matching row in detail to get ordered quantity and CNTL Number
	
	// 09/01 - PCONKL - we may have multiple pack rows that match to a single detail row. THis will cause the Order qty
	//                  to be wrong if we simply copy it for each row (it will be multiplied by each additional row). 
	//                                                If the ordered qty on the order detail = the shipped qty, we will just set the ord qty = shipped qty
	//                                                If Ord Qty > shipped qty, we will set the difference on the last row for the sku, the rest will be equal
	//                                              This assumes that the Shipped QTY on Packing List = Alloc QTY on DEtail. This will be validated before allowing to print (wf_val)
	
	//TimA 08/09/11 See Comment Above on issue #192
	//This find look for the sku in the detail screen however that contains the parent sku.  So on a MORK order it is not found and the quanities are not found.
	lsFind = "Upper(sku) = '" + Upper(ls_sku) + "' and line_item_no = " + string(llLineItemNo)
	llRow = idw_detail.Find(lsFind,1,idw_detail.RowCount())
	
	if llRow > 0 Then
		idw_packprint.setitem(j,"cntl_number",idw_detail.getitemString(llRow,"user_field1")) /* Cntrl num // detail Weight for Sears*/
		idw_packprint.setitem(j,"user_field2",idw_detail.getitemString(llRow,"user_field2")) /* 12/01 for Saltillo*/
		idw_packprint.setitem(j,"alt_sku",idw_detail.getitemString(llRow,"alternate_sku"))
		
		If Upper(gs_project) <> 'GM_MONTRY'  or (Upper(gs_project) = 'GM_MONTRY'  and (lscusttype  = "PDC" or lscusttype = "ACDELCOPDC")) Then /* 08/02 - Pconkl - GAP 9/02 added satillo PDCs */
			If idw_detail.getitemnumber(llRow,"req_qty") = idw_detail.getitemnumber(llRow,"alloc_qty") Then
				idw_packprint.setitem(j,"ord_qty",idw_pack.getitemNumber(i,"quantity"))
			Else /*ord qty <> Alloc, if it's the last carton row for this sku, show the difference here, otherwise set to alloc*/
				If (i = ll_cnt) or (idw_pack.Find(lsFind,(i + 1),(ll_cnt + 1)) = 0) Then /*last row for the sku*/
					//set order qty = shipped qty for row + (order - alloc) from detail. This assumes that the Shipped QTY on Packing List = Alloc QTY on DEtail. This will be validated before allowing to print (wf_val)
					idw_packprint.setitem(j,"ord_qty",(idw_pack.getitemNumber(i,"quantity") + (idw_detail.getitemnumber(llRow,"req_qty") - idw_detail.getitemnumber(llRow,"alloc_qty"))))
				Else /* not last row for sku*/
					idw_packprint.setitem(j,"ord_qty",idw_pack.getitemNumber(i,"quantity"))
				End If
			End If
		Else /* ord qty will be set properly for Saltillo since only one qty per page */
			idw_packprint.setitem(j,"ord_qty",idw_detail.getitemnumber(llRow,"req_qty"))
		End If
	Else /*row not found (should never happen), set req qty to 0*/
		idw_packprint.setitem(j,"cntl_number",'')
	End If
	
	idw_packprint.setitem(j,"picked_quantity",idw_pack.getitemNumber(i,"quantity")) 
	
	//05/09 - PCONKL - For Philips, Volume is coming from Item Master
	//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
	//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
	If gs_project = 'PHILIPS-SG' or gs_project ='PHILIPSCLS' or gs_project ='PHILIPS-DA' Then
		If isNumber(lsVol) Then
			idw_packprint.setitem(j,"volume",idw_pack.getitemNumber(i,"quantity") * Dec(lsVol) * 1000)
		End IF
	Else
		idw_packprint.setitem(j,"volume",idw_pack.getitemDecimal(i,"cbm")) 
	End If
	
	//Jxlim 03/02/2012 Print Consolidate carton type once. BRD #337 Pandora-OTM 
	//        If idw_pack.getitemDecimal(i,"cbm") > 0 Then
	//                idw_packprint.setitem(j,'dimensions',string(idw_pack.getitemDecimal(i,"length")) + ' x ' + string(idw_pack.getitemDecimal(i,"width")) + ' x ' + string(idw_pack.getitemDecimal(i,"height"))) /* 02/01 - PCONKL*/
	//        End If	  
	If idw_pack.getitemDecimal(i,"cbm") > 0 Then			
		If upper(gs_project) = 'PANDORA'  Then 					
			ls_first_carton_row = idw_pack.getitemString(i,"c_first_carton_row")
			If ls_first_carton_row = 'Y' then
				//idw_packprint.SetITem(j,'c_first_carton_row', idw_pack.getitemString(i,"c_first_carton_row"))
				idw_packprint.setitem(j,'dimensions',string(idw_pack.getitemDecimal(i,"length")) + ' x ' + string(idw_pack.getitemDecimal(i,"width")) + ' x ' + string(idw_pack.getitemDecimal(i,"height"))) /* 02/01 - PCONKL*/
			End If		
		Else
			idw_packprint.setitem(j,'dimensions',string(idw_pack.getitemDecimal(i,"length")) + ' x ' + string(idw_pack.getitemDecimal(i,"width")) + ' x ' + string(idw_pack.getitemDecimal(i,"height"))) /* 02/01 - PCONKL*/
		End If
	End If
	
	idw_packprint.setitem(j,"country_of_origin",idw_pack.getitemstring(i,"country_of_origin")) 
	
	// LTK 20160113  Pandora #1010 - Don't display COO no packlist and rollup inventory for like carton_no/GPN
	If upper(gs_project) = 'PANDORA' and lb_hide_coo_on_packlist_print then
		idw_packprint.setitem(j,"country_of_origin","")
	end if
	idw_packprint.setitem(j,"supp_code",idw_pack.getitemstring(i,"supp_code")) 
	
	// ET3 - 2012/06/29 - Patch for incorrect process for overridden gross weight
	// declare temp variables for calculation clarity
	Decimal dExtendedWeight, dGrossWeight, dUnitWeight
	Long    lPackQty, lPrtQty, lPickedQty
	Long    lCurCartonNo, lPrevCartonNo
	
	lPickedQty 	= idw_packprint.GetItemNumber( j, "picked_quantity" )
	dUnitWeight 	= idw_packprint.GetItemNumber( j, "unit_weight" )
	
	IF  IsNull(dUnitWeight) THEN dUnitWeight =1   //05-Aug-2013 :Madhu -added to generate pack list print
	dExtendedWeight = lPickedQty * dUnitWeight
	dGrossWeight = idw_pack.getItemDecimal( i, "weight_gross" )
	
	If idw_pack.getitemDecimal(i,"cbm") > 0 Then			
		If upper(gs_project) = 'PANDORA'  Then 					
			ls_first_carton_row = idw_pack.getitemString(i,"c_first_carton_row")
			//	If ls_first_carton_row = 'Y' AND dExtendedWeight <> dGrossWeight then //29-Aug-2013 :Madhu -commented to generate pack list print
			//  08/19 - MikeA -PRB0042581-Google Issue - Weights missing on Packing lists from SKY
			//  GrossWeight not showing because ExtendedWeight is 0 or null.
			//  Some items have GrossWeight but not Extended Weight. 
			//  Removed (dExtendedWeight >0 ) check and it works ok. 
			//  Reviewing, this seems like a valid case. 
			
//			If ls_first_carton_row = 'Y' AND dExtendedWeight >0 and dGrossWeight >0 then //29-Aug-2013 :Madhu -added to generate pack list print
			If ls_first_carton_row = 'Y' AND dGrossWeight >0 then //29-Aug-2013 :Madhu -added to generate pack list print
				idw_packprint.setitem(j,"gross_weight", dGrossWeight )
			else
				idw_packprint.setitem(j,"gross_weight", 0 )
			End If		
		Else
			idw_packprint.setitem(j,"gross_weight", dGrossWeight )
		End If
	Else
		idw_packprint.setitem(j,"gross_weight", dGrossWeight )
	End If
	
	// 10/07 - PCONKL - Get Serial Numbers from serial tab(Outbound)
	If idw_serial.RowCount() > 0 Then
		lsSerial = ""
		ls_carton_no =  Upper(idw_Pack.GetItemString(i,'carton_no'))
		ll_line_Item_No = idw_Pack.GetITemNumber(i,'line_item_No') 
		//Made Changes By Dhirendra -S66896- Google -Fix for Serial Number Packing List Start
		IF  Upper(gs_project) = 'PANDORA' then
		ls_check_first_char = "T"+ls_carton_no
		IF ls_check_first_char =  idw_Pack.GetItemString(i,'pack_container_id') then 
			lsSerial = this.uf_get_serialnos( ls_sku, ls_check_first_char )
			idw_packprint.setitem(j,"serial_no",lsSerial)
	       else 
		      lsSerial = this.uf_get_serialnos( ls_sku, ls_carton_no )
				idw_packprint.setitem(j,"serial_no",lsSerial)
	end if 
	END IF
else 
	 lsSerial = this.uf_get_serialnos( ls_sku, ls_carton_no )
		idw_packprint.setitem(j,"serial_no",lsSerial)
	
	End If /*serial numbers exist*/
	//Made Changes By Dhirendra -S66896- Google -Fix for Serial Number Packing List END 
	
	//idw_packprint.setitem(j,"serial_no",idw_pack.getitemstring(i,"free_form_serial_no")) /* 02/01 - PCONKL*/
	idw_packprint.setitem(j,"component_ind",idw_pack.getitemstring(i,"component_ind")) /* 02/01 - PCONKL - sort component master to top*/
	
	idw_packprint.setitem(j,"cust_name",idw_main.getitemstring(1,"cust_name"))
	idw_packprint.setitem(j,"delivery_address1",idw_main.getitemstring(1,"address_1"))
	idw_packprint.setitem(j,"delivery_address2",idw_main.getitemstring(1,"address_2"))
	idw_packprint.setitem(j,"delivery_address3",idw_main.getitemstring(1,"address_3"))
	idw_packprint.setitem(j,"delivery_address4",idw_main.getitemstring(1,"address_4"))
	idw_packprint.setitem(j,"delivery_state",idw_main.getitemstring(1,"state"))
	idw_packprint.setitem(j,"delivery_zip",idw_main.getitemstring(1,"zip"))
	idw_packprint.setitem(j,"remark",idw_main.getitemstring(1,"remark"))
	
	// 07/00 PCONKL - Ship from info is coming from Project Table  
	idw_packprint.setitem(j,"ship_from_name",lsName)
	idw_packprint.setitem(j,"ship_from_address1",lsaddr1)
	idw_packprint.setitem(j,"ship_from_address2",lsaddr2)
	idw_packprint.setitem(j,"ship_from_address3",lsaddr3)
	idw_packprint.setitem(j,"ship_from_address4",lsaddr4)
	idw_packprint.setitem(j,"ship_from_city",lsCity)
	idw_packprint.setitem(j,"ship_from_state",lsstate)
	idw_packprint.setitem(j,"ship_from_zip",lszip)
	idw_packprint.setitem(j,"ship_from_country",lscountry)
		
	// LTK 20111129	Pandora #334 If the order type is a warehouse transfer and the 
	//						QA Pkg indicator is set, display a message on a line under the sku.
	if gs_Project = 'PANDORA' and idw_main.Object.ord_type[1] = 'Z' and idw_pack.Object.QA_Check_Ind[i] = 'P' then
		//TAM -2017/03 - SIMSPEVS-421 - If Sku is found in the lookup table for special packaging then display message on a line under the sku
		String  ls_sku_drive, ls_packaging 
		
		ls_sku_drive = UPPER(idw_pack.Object.sku[i])
		
		Select User_Updateable_Ind INTO :ls_packaging FROM lookup_table with (NoLock) 
		Where Project_ID = :gs_project AND Code_Type = 'SPECIAL_PKG'  AND code_descript = :ls_sku_drive USING SQLCA;
		
		if ls_packaging ='Y' then
			idw_packprint.setitem(j,"co_pkg_msg","GPN is a SSD/Stegodon Drive and needs additional packaging requirement for owner PX.  Please contact Ops Management if you have any questions.")
		else
			idw_packprint.setitem(j,"co_pkg_msg","GPN is flagged to check for Defective Packaging.  If packaging is defective please contact your Local CSR.")
		end if //SIMSPEVS-421
		
		idw_packprint.Object.co_pkg_msg.visible = TRUE
		idw_packprint.Object.co_pkg_msg.y = 180	// Move the message down in the detail band so it's displayed.
	end if
	
	string lstest
	lstest = idw_main.Object.ord_type[1]

	//TimA 09/20/12 Pandora issue #471 check the QACheckInd for Dangerous materials
	if gs_Project = 'PANDORA' and idw_main.Object.ord_type[1] = 'Z' and idw_pack.Object.QA_Check_Ind[i] = 'M' then
		idw_packprint.setitem(j,"co_pkg_msg","GPN is flagged to check for Dangerous Material.  Take appropriate measure.")
		idw_packprint.Object.co_pkg_msg.visible = TRUE
		idw_packprint.Object.co_pkg_msg.y = 180	// Move the message down in the detail band so it's displayed.
	end if
	
	//GailM 03/14/13 Pandora issue #581. Adding code to include UN# and PI# to report from Item Master UF11 and UF12.
	if gs_Project = 'PANDORA' and idw_pack.Object.QA_Check_Ind[i] = 'M' then
		select isnull(User_field11, ''), isnull(User_field12, '')    
		into :lsUserField11, :lsUserField12 
		from item_master with(nolock)
		where project_id = :ls_project_id and sku = :ls_sku and supp_code = :ls_supplier ;
		
		idw_packprint.SetItem(j,"un_no",lsUserField11)
		idw_packprint.SetItem(j,"pi_no",lsUserField12)
		idw_packprint.Object.un_no.visible = TRUE
		idw_packprint.Object.pi_no.visible = TRUE
		idw_packprint.Object.t_un_no.visible = TRUE
		idw_packprint.Object.t_pi_no.visible = TRUE
		
		// Do not show UPC if blank.  UPC and UN # in same space.
		if lsUPC = '' then
			idw_packprint.Object.upc_code.visible = FALSE
		end if
	end if
	
	//GailM 1/2/2018 I357 F5734 S14571 PAN - HRI Alert for High Risk Inventory
	if gs_Project = 'PANDORA' and idw_pack.Object.QA_Check_Ind[i] = 'H' then
		idw_packprint.setitem(j,"co_pkg_msg","Attention! This is a High Risk Part.  Please follow Instruction according SWI WORK43225")
		idw_packprint.Object.co_pkg_msg.visible = TRUE
		idw_packprint.Object.co_pkg_msg.y = 180	// Move the message down in the detail band so it's displayed.
	end if
	
	//22-MAR-2018 :Madhu S16805 - Serialized Pack List - START
	lsSerialFind = "sku = '" + ls_sku + "' and supp_code = '" + ls_supplier + "'"
	llSerialFindRow = idw_serial.find( lsSerialFind, 1, idw_serial.rowcount())
	
	IF lb_serialized_pack_list  and llSerialFindRow > 0 THEN
		ll_New_row = lds_serial_pack_List.insertrow( 0)
		
		lds_serial_pack_List.setitem(ll_New_Row, "component_ind", idw_pack.getitemstring(i,"component_ind"))
		
		//ship To Address
		lds_serial_pack_List.setitem(ll_New_Row,"cust_name",idw_main.getitemstring(1,"cust_name"))
		lds_serial_pack_List.setitem(ll_New_Row,"delivery_address1",idw_main.getitemstring(1,"address_1"))
		lds_serial_pack_List.setitem(ll_New_Row,"delivery_address2",idw_main.getitemstring(1,"address_2"))
		lds_serial_pack_List.setitem(ll_New_Row,"delivery_address3",idw_main.getitemstring(1,"address_3"))
		lds_serial_pack_List.setitem(ll_New_Row,"delivery_address4",idw_main.getitemstring(1,"address_4"))
		lds_serial_pack_List.setitem(ll_New_Row,"delivery_state",idw_main.getitemstring(1,"state"))
		lds_serial_pack_List.setitem(ll_New_Row,"delivery_zip",idw_main.getitemstring(1,"zip"))
		lds_serial_pack_List.setitem(ll_New_Row,"remark",idw_main.getitemstring(1,"remark"))
		
		//ship From Address
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_name",lsName)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_address1",lsaddr1)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_address2",lsaddr2)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_address3",lsaddr3)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_address4",lsaddr4)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_city",lsCity)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_state",lsstate)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_zip",lszip)
		lds_serial_pack_List.setitem(ll_New_Row,"ship_from_country",lscountry)
		
		lds_serial_pack_List.setitem(ll_New_Row,"costcenter", string(ld_costcenter))
		lds_serial_pack_List.setitem(ll_New_Row,"bol_no",is_bolno)
		lds_serial_pack_List.setitem(ll_New_Row,"cust_code",idw_main.getitemstring(1,"cust_code"))
		lds_serial_pack_List.setitem(ll_New_Row,"ord_no",idw_main.getitemstring(1,"cust_order_no"))
		lds_serial_pack_List.setitem(ll_New_Row,"client_cust_po_nbr",idw_main.getitemstring(1,"client_cust_po_nbr"))
		//Dhirendra - Google - SIMS - Buy Sell Project- 12-06-2021 ---Start
		lds_serial_pack_List.setitem(ll_New_Row,"client_cust_so_nbr",idw_main.getitemstring(1,"client_cust_so_nbr"))
		//Dhirendra - Google - SIMS - Buy Sell Project- 12-06-2021 ---END 
		lds_serial_pack_List.setitem(ll_New_Row,"User_Field5",idw_other.getitemString(1,"user_field5"))

		lds_serial_pack_List.setitem(ll_New_Row,"carrier", idw_other.getitemString(1,"carrier") )
		lds_serial_pack_List.setitem(ll_New_Row,"ship_via",idw_other.getitemString(1,"ship_via"))
		lds_serial_pack_List.setitem(ll_New_Row,"sch_cd",idw_other.getitemString(1,"user_field1"))
		lds_serial_pack_List.setitem(ll_New_Row,"freight_terms",idw_other.getitemstring(1,"freight_terms"))
		lds_serial_pack_List.setitem(ll_New_Row,"do_no",idw_Main.GetItemString(1,'do_no'))
		lds_serial_pack_List.setitem(ll_New_Row,"ord_date",idw_main.getitemdatetime(1,"ord_date"))
		lds_serial_pack_List.setitem(ll_New_Row,"complete_date",idw_main.getitemdatetime(1,"complete_date"))
		lds_serial_pack_List.setitem(ll_New_Row,"request_date",idw_main.getitemdatetime(1,"request_date"))
		lds_serial_pack_List.setitem(ll_New_Row,"schedule_date",idw_main.getitemdatetime(1,"schedule_date"))			
      
		ls_carton_no =  Upper(idw_Pack.GetItemString(i,'carton_no'))
		ll_line_Item_No = idw_Pack.GetITemNumber(i,'line_item_No')
		
		lds_serial_pack_List.setitem(ll_New_Row, "carton_no", ls_carton_no)
		lds_serial_pack_List.setitem(ll_New_Row, "sku", ls_sku)
		//Dhirendra - Google - SIMS - Buy Sell Project- 12-06-2021 ---Start
         lds_serial_pack_List.setitem(ll_New_Row,"customer_sku",idw_detail.getitemstring(ll_New_Row,"Customer_Sku"))
			//Dhirendra - Google - SIMS - Buy Sell Project- 12-06-2021 ---END
		lds_serial_pack_List.setitem(ll_New_Row, "upc_Code", lsUPC)
        //Made Changes By Dhirendra -S66896- Google -Fix for Serial Number Packing List Start
		  IF  Upper(gs_project) = 'PANDORA' then
		ls_check_first_char = "T"+ls_carton_no
		IF ls_check_first_char =  idw_Pack.GetItemString(i,'pack_container_id') then 
			lsSerial = this.uf_get_serialnos( ls_sku, ls_check_first_char )
	else 
		lsSerial = this.uf_get_serialnos( ls_sku, ls_carton_no )
	end if 
else 
	lsSerial = this.uf_get_serialnos( ls_sku, ls_carton_no )
	END IF
		//lsSerial = this.uf_get_serialnos( ls_sku, ls_carton_no ) //31-MAY-2018 :Madhu DE4500 - Don't include Line Item No
		lds_serial_pack_List.setitem(ll_New_Row, "serial_no", lsSerial)
	//Made Changes By Dhirendra -S66896- Google -Fix for Serial Number Packing List Start
	
		lds_serial_pack_List.setitem(ll_New_Row,"packlist_notes",idw_main.getitemString(1,"packlist_notes"))
		lds_serial_pack_List.setitem(ll_New_Row,"remark",idw_main.getitemstring(1,"remark"))
		
	END IF
	//22-MAR-2018 :Madhu S16805 - Serialized Pack List - END
	
Next /*Packing Row */

// Declare the cursor.
DECLARE NOTES CURSOR FOR
select note_text
from delivery_notes with(nolock)
where project_id = :GS_Project and do_no = :is_dono ;

// Open the cursor
OPEN NOTES;

// If we can open the cursor,
If SQLCA.SQLCODE = 0 then
	// Fetch the record.
	Fetch NOTES into :ls_noteline;
	
	// Loop through the SIMS records.
	Do While SQLCA.SQLCODE<> 100
	
	ls_notes = ls_notes + " " + ls_noteline
	
	// Fetch the record.
	Fetch NOTES into :ls_noteline;
	
	// Next Sims record
	Loop

// End if we can open the cursor.
End If

// Close the cursor.
CLOSE NOTES;

// Notes
// 01/20 - PCONKL - DE14225 - We need to update all pack rows with the notes, not just the last so they print if > 1 pack row

//idw_packprint.setitem(j,"packlist_notes", ls_notes )
For j = 1 to idw_packprint.RowCount()
	idw_packprint.setitem(j,"packlist_notes", ls_notes )
Next

i=1
FOR i = 1 TO UpperBound(ls_text[])
	idw_packprint.Modify(ls_text[i])
	ls_text[i]=""
NEXT

idw_packprint.Sort()
idw_packprint.GroupCalc()


// 09/04 - PCONKL - If we have a default printer for PackList, Load now
lsPrinter = ProfileString(gs_iniFile,'PRINTERS','PACKLIST','')
If lsPrinter > '' Then PrintSetPrinter(lsPrinter)

idw_packprint.Object.t_costcenter.Y= long(idw_packprint.Describe("costcenter.y"))

//Send the report to the Print report window
OpenWithParm(w_dw_print_options,idw_packprint) 

// 09/04 - PCONKL - We want to store the last printer used for Printing the Pack List for defaulting later
lsPrinter = PrintGetPrinter()
SetProfileString(gs_inifile,'PRINTERS','PACKLIST',lsPrinter)

If message.doubleparm = 1 then
	If idw_main.GetItemString(1,"ord_status") = "N" or &
	idw_main.GetItemString(1,"ord_status") = "P" or &
	idw_main.GetItemString(1,"ord_status") = "I" OR &
	idw_main.GetItemString(1,"ord_status") = "A" Then // DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		idw_main.SetItem(1,"ord_status","L") // DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		ib_changed = TRUE
		iw_window.trigger event ue_save()
	End If
End If

//22-MAR-2018 :Madhu S16805 - Print Serialized Pack List - START
If lds_serial_pack_List.rowcount( ) > 0 Then
	lds_serial_pack_List.setitem(ll_New_Row,"packlist_notes", ls_notes)
	lds_serial_pack_List.Object.t_costcenter.Y= long(lds_serial_pack_List.Describe("costcenter.y"))
	lds_serial_pack_List.Sort()
	lds_serial_pack_List.GroupCalc()
	
	Print(lds_serial_pack_List)
End If

destroy lds_serial_pack_List
//22-MAR-2018 :Madhu S16805 - Print Serialized Pack List - END

return true
end function

public function integer wf_serial_no_validation (datawindow adw_serial, integer al_row);//wf_serial_no_validation
// This is exclusive validation for pandora
// When user enter Serial scan it does validation
// TAM 07/21/2010


//String ls_sku, ls_supplier, ls_serialized_ind, ls_serial_no, ls_rono, ls_syntax
//Boolean lb_sku_scan
//long ll_owner_id
//
//
//ls_sku = adw_serial.object.sku[al_row]
//ls_serialized_ind=trim(upper(adw_serial.object.Serialized_ind[al_row]))
//ls_serial_no= upper(adw_serial.object.serial_no[al_row])
//
//IF ls_serialized_ind <> 'B'  THEN Return 1
//
////Check for If Owner Id is same on inbound or owner change
//IF NOT ISNULL(ls_serial_no) THEN
//
//	SELECT RO_No, Owner_ID  INTO :ls_rono :ll_owner_id
//	FROM Receive_Putaway  
//	WHERE ( Serial_No = :ls_serial_no) AND ( RO_No = (  SELECT MAX(RO_No)  FROM Receive_Putaway  WHERE ( Serial_No = :ls_serial_no ) AND ( RO_No like 'PANDORA%' )  ))   ;
//	
//	IF SQLCA.SQLCode <> 0 THEN 
//				doDisplayMessage(This.title, " Serial Number Is Not Found For this Owner!  Do you want to keep serial number =" ls_serial_no + ".  Please contact Site Manager/Supervisor to verify serial number and fill out Serial Number Change form.")
//				adw_serial.object.serial_no[al_row] = ls_null
//				adw_serial.POST ScrollTORow(al_row)
//				adw_serial.POST Setcolumn('serial_no')
//				Return 0
//	ELSE	
//		lb_sku_scan = TRUE
//		Return 0
//	END IF	
//END IF
	
	
Return 1




end function

public subroutine wf_populate_coo_pandora ();
//10/06/2010 ujh:  Get the country from the data input to the picking tab and convert to two digit country if not alread 2 digits

	string ls_COO, ls_COO_db
 	long ll_COO_len, i_indx,llModifiedCount
	 dwItemStatus l_status
	 FOR i_indx = 1 to tab_main.tabpage_pick.dw_pick.RowCount()
		ls_COO =  trim(upper(tab_main.tabpage_pick.dw_pick.GetItemString(i_indx, 'Country_Of_Origin')))
		ll_COO_len = len(ls_COO)

		If isNull(ls_COO) then ls_COO = 'NULL'
		if trim(ls_COO) = '' then ls_COO = 'Empty or Blank'
		Select Designating_Code
		Into :ls_COO_db
		From Country
//		where Designating_Code = :ls_COO;
				where case :ll_COO_len
						when 3 then upper(ISO_Country_cd) 
						when 2 then upper(Designating_Code)
						else :ls_COO + "A"  // Force NOT Equal
					end  =  :ls_COO;
		//TimA 11/13/13 Pandora issue #637
		If ib_LPN_PickByPallet = True then
			llModifiedCount = idw_pick.modifiedcount( )
			l_status = idw_pick.GetItemStatus(  i_indx, 0, Primary!)
			If l_status = NewModified! then
				//TimA 11/13/13 Pandora issue #637
				//Only update the user_field1 in the new rows that have been picked
				tab_main.tabpage_pick.dw_pick.SetItem(i_indx, 'user_field1', ls_COO_db)
			End if
		Else
			tab_main.tabpage_pick.dw_pick.SetItem(i_indx, 'user_field1', ls_COO_db)
		End if
	next
end subroutine

public subroutine wf_populate_coo_dropdown (ref datawindow adw_current, string as_coo, long al_row);

//10/06/2010 ujh:  Get the country from the data input to the picking tab and convert to two digit country if not alread 2 digits

	string ls_COO, ls_COO_db
 	long ll_COO_len                             //, i_indx
//	 FOR i_indx = 1 to tab_main.tabpage_pick.dw_pick.RowCount()
//		ls_COO =  trim(upper(tab_main.tabpage_pick.dw_pick.GetItemString(i_indx, 'Country_Of_Origin')))
		ls_COO = as_COO
		ll_COO_len = len(ls_COO)

		If isNull(ls_COO) then ls_COO = 'NULL'
		if trim(ls_COO) = '' then ls_COO = 'Empty or Blank'
		Select Designating_Code
		Into :ls_COO_db
		From Country
//		where Designating_Code = :ls_COO;
				where case :ll_COO_len
						when 3 then upper(ISO_Country_cd) 
						when 2 then upper(Designating_Code)
						else :ls_COO + "A"  // Force NOT Equal
					end  =  :ls_COO;		 
		adw_current.SetItem(al_row, 'user_field1', ls_COO_db)
//		tab_main.tabpage_pick.dw_pick.SetItem(i_indx, 'user_field1', ls_COO_db)
//	next
end subroutine

public function integer wf_set_active_parent_range (long al_row, ref long al_parent_rowno, ref long al_parent_maxrow, ref datawindow aw_serial); // 01/03/2011 ujh: S/N_Pfx1:  Function to set the range of rows belonging to a parent row
String lsFind
						// Find the next row that is not a component.  That is one more than this parent's max row
						al_Parent_rowno = al_row
						lsFind = " component_ind <> '*' "
						lsFind += " and compute_2 <> " + string(al_row, '0')
						al_Parent_maxrow = aw_serial.Find(lsFind, al_row, aw_serial.RowCount() - al_row + 1 )
						if al_Parent_maxrow = 0 then
							// This parent and its components are the last item on the page
							al_Parent_maxrow = aw_serial.RowCount()
						elseif al_Parent_maxrow - al_row > 0 then
							// This parent may have no children.  Either way point to self or last child
							al_Parent_maxrow = al_Parent_maxrow - 1	
//						else
//							messagebox('System Error', 'System Error. Contact Support')
//							return 1
						end if
						return 0
end function

public function integer wf_restore_component_no (ref datawindow adw_serial);

// 01/03/2011 ujh: S/N_Pfx2   
// This will replace the dummy component_no if rows were ever filled in and successfully saved
long i_ndx, ll_na_Component_no
String ls_sku, ls_serial_no    // , ls_owner_cd

if not (adw_serial.rowcount() > 0) then
	return 1
end if
//TimA 03/20/13
//Added project_id on the retrieve because orders that had large number of serial numbers would take a very long time to open the order.

for i_ndx = 1 to adw_serial.rowcount()
//	ls_owner_cd = adw_serial.GetItemString(i_ndx, 'Owner_cd')
	ls_sku = adw_serial.GetItemString(i_ndx, 'SKU')
	ls_serial_no = adw_serial.GetItemString(i_ndx, 'Serial_no')
	if not isnull(ls_serial_no) and ls_serial_no <> '' then	
		Select Component_no = Case   
											when Component_no is null then 0
											else Component_no
											end
		into :ll_na_component_no
		From Serial_number_inventory
		where Project_id = :gs_Project
		and sku = :ls_sku
		and serial_no = :ls_serial_no
		using SQLCA;
		
		adw_serial.SetItem(i_ndx, 'na_component_no', ll_na_component_no)
	end if
	
next


return 0
end function

public function integer wf_validate_serial_numbers (string as_sku, string as_serialno, string as_tableid);//MAS new function for Bluecoat change - serial number validation against a work order or inbound order
integer li_rowcnt

If upper(as_tableID) = 'WO' Then

						 Select 	count(*)
						     Into	:li_rowcnt
						   From	WorkOrder_Putaway a, WorkOrder_Master b
						 Where	a.SKU =  Upper(:as_sku)
						     And	a.Serial_no = :as_serialno
						     And	a.Wo_No = b.Wo_No
							 And   b.project_id = 'BLUECOAT' ;


ElseIf upper(as_tableID) = 'RO' Then
	
			 			Select	     count(*)
						     Into	:li_rowcnt
						   From	Receive_Putaway a, Receive_Master b
						 Where	a.SKU =  Upper(:as_sku)
						     And	a.Serial_no = :as_serialno
						     And	a.Ro_No = b.Ro_No
							 And   b.project_id = 'BLUECOAT' 
       				   Group By  a.Serial_no, a.SKU ;
End If							 
							 
Return li_rowcnt							 
end function

public function integer wf_check_status_emc ();//********************************************//
//MStuart - babycare emc functionality                                   //
//postopen event checks for project - then sets y cord. and      //
//enable to false or visible to false                                         //
//                                                                                       //
//*******************************************//


//************************************************************
//    add order type = 'E' and picklist saved(no pending changes) and a pick list exists
//    then enable cb_emc
//************************************************************
		

//********************************************************
//USED for TESTing if NEEDED - don't delete
//********************************************************
		//string ord_status, ord_type	
		//If idw_main.RowCount() > 0 then
		//	ord_type = idw_main.object.ord_type[1]
		//	ord_status = idw_main.object.ord_status[1]
		//else
		//	return 1
		//end if
		//
		//messagebox(" wf_check_status_emc", &
		//					+"~n~r"+ "main ord type" +' '+ord_type+' ' &
		//							+"~n~r"+ "main ord status" +' '+ord_status+' ' &
		//							+"~n~r"+ "pick modified" +' '+string(ibpickmodified)  )

//***********************************************************
//*********************END***********************************


//************************************************************\\
//************************************************************\\
//							BabYCare Requirements for enable cb_emc			                      
//																										     
//		dw_main.object.ord_type[1]  = e and 								 				      
//      idw_main.object.ord_status[1] <> new or process(pick list saved)		               
//      not(ibpickmodified)  - picklist saved													      
// 		then enable emc cb				                                                                      
//************************************************************* \\
//************************************************************* \\
integer row_cnt

SELECT COUNT(*)
INTO :row_cnt
    FROM Delivery_Picking,   
              Item_Master  
   WHERE   Delivery_Picking.SKU = Item_Master.SKU and
                 Delivery_Picking.Supp_Code = Item_Master.Supp_Code and
                 upper(Item_MAster.User_Field1) = 'Y' and
                 Item_Master.Project_ID = :gs_project and  
                 Delivery_Picking.DO_No = :is_dono ;
  
If row_cnt = 0 Then
	tab_main.tabpage_main.cb_emc.enabled = False
	Return 0
End If

If idw_main.RowCount() > 0 Then
	//needed to get current value(s) in dropdrown(s)
	idw_main.AcceptText()
		
	If  idw_main.object.ord_type[1] = 'E' and &	 						
		     idw_pick.ModifiedCount() = 0  and &
						idw_pick.RowCount() > 0 and &
				  ( idw_main.object.ord_status[1] = 'P' or &
					idw_main.object.ord_status[1] = 'I'  or &
					idw_main.object.ord_status[1] = 'A' or &
					idw_main.object.ord_status[1] = 'L' ) Then // Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading StatusThen
					
			tab_main.tabpage_main.cb_emc.enabled = True
	Else
			tab_main.tabpage_main.cb_emc.enabled = False
	End If
	
Else
	tab_main.tabpage_main.cb_emc.enabled = False
End If

Return 1
end function

public function integer wf_enable_trax_data_entry ();	
//Setup the columns to alloy for dataentry.

//Enable or disable trax depending on warehouse code...

String	lsProject, lsWarehouse, lsTraxEnabled, lsStatus, lsLabelDest
Long 		llRow

If idw_main.RowCount() < 1 Then Return 0

lsProject = idw_main.GetItemString(1,'project_id')
lswarehouse = idw_main.GetItemString(1,'wh_code')
lsStatus = idw_main.GetItemString(1,"ord_status")

llRow = g.of_project_warehouse(lsProject, lsWarehouse)

If llRow > 0 Then
	lsTraxEnabled = g.ids_project_warehouse.GetITemString(llRow,'trax_enable_ind')
	lslabelDest = g.ids_project_warehouse.GetITemString(llRow,'trax_label_print_dest')
End If

If lsTraxEnabled = 'Y' Then
	
	tab_main.tabpage_other.dw_other.Object.trax_acct_no_t.visible = 'yes'
	tab_main.tabpage_other.dw_other.Object.trax_acct_no.visible = 'yes'	
		
	tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.visible = true

	if gs_project <> 'PANDORA' then //Pandora uses it's own code table
	
		tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.name='d_dddw_freight_terms'
		tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.displaycolumn='code_id'
		tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.datacolumn='code_id'
		tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.allowedit='yes'
		tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.useasborder='yes'
		tab_main.tabpage_other.dw_other.Object.freight_terms. dddw.case='any'
		tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.autoretrieve='no'
		
		
		datawindowchild ldw_child
		
		tab_main.tabpage_other.dw_other.GetChild ("freight_terms", ldw_child)
	
		ldw_child.SetTransObject(SQLCA)
		ldw_child.Retrieve( gs_project )
		
	end if		
	
// TAM - Added Duty Terms Dropdown
	if gs_project <> 'PANDORA' then //Pandora doesn't use this
	
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms.dddw.name='d_dddw_duty_terms'
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms.dddw.displaycolumn='code_id'
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms.dddw.datacolumn='code_id'
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms.dddw.allowedit='yes'
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms.dddw.useasborder='yes'
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms. dddw.case='any'
		tab_main.tabpage_other.dw_other.Object.trax_duty_terms.dddw.autoretrieve='no'
		
		
		datawindowchild ldw_child2
		
		tab_main.tabpage_other.dw_other.GetChild ("trax_duty_terms", ldw_child2)
	
		ldw_child2.SetTransObject(SQLCA)
		ldw_child2.Retrieve( gs_project )
		
	end if		
	
	
	
Else
	
	
	tab_main.tabpage_other.dw_other.Object.trax_acct_no_t.visible = 'no'
	tab_main.tabpage_other.dw_other.Object.trax_acct_no.visible = 'no'		
	
	tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.visible = false	


//	tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.name=''
//	tab_main.tabpage_other.dw_other.Object.freight_terms.dddw.useasborder='no'	
//	tab_main.tabpage_other.dw_other.Object.trax_acct_no.Edit.Required = "no"
//

End If


return 0
end function

public function integer uf_nike_export_to_scanner ();
// 11/11 - PCONKL - Plagiarized  from EWMS for Nike


String ls_exp_path
String ls_file, lsUPC 
Boolean lb_exist
Integer li_filept,li_ret,li_RC
Long ll_ptr,ll_cnt,ll_qty,ll_row
Datastore s_sc_do_dd,s_show
String ls_do_no,ls_outString,ls_dono,ls_sku,ls_outString1, lsInvoice
LongLong	lllUPC

If idw_Main.RowCount() = 0 Then Return 0

If ib_changed then
	Messagebox('Export to Scanner','Please save your changes first.')
	Return 0
End If

ls_exp_path = ProfileString(gs_inifile,"sims3","ExportPath","")  


ls_do_no = idw_main.GetItemString(1,"do_no")          // delete the old delivery order in 
lsInvoice =  idw_main.GetItemString(1,"invoice_no")  // EWMS references to do_no are the Invoice_no in SIMS - We are still retrieving by DO_NO though

ls_file = ls_exp_path+"pick.txt"
lb_exist = FileExists(ls_file)

s_sc_do_dd = create datastore                    // delivery detail to export        
s_sc_do_dd.dataobject = 'd_nike_export_scanner'  
s_sc_do_dd.settransobject(sqlca)

s_show = create datastore                        // delivery detail to export        
s_show.dataobject = 'd_nike_export_scanner'  
s_show.settransobject(sqlca)


If lb_exist = TRUE then /* File exists*/

	li_filept = FileOpen(ls_file,LineMode!,Read!,LockREadWrite!)

	li_RC = FileRead(li_filept,ls_outstring1)

	Do While li_RC > 0
	
		ls_dono = Mid(ls_outstring1,1,15)
		lllUpc  = longlong(Trim(Mid(ls_outstring1,16,13)))
		ls_sku  = Mid(ls_outstring1,30,16)
		ll_qty  = Long(Mid(ls_outstring1,46,7))

		ll_row = s_show.Insertrow(0)

		s_show.SetItem(ll_row,'delivery_detail_do_no',ls_dono)
		s_show.SetItem(ll_row,'delivery_detail_sku',ls_sku)
		s_show.SetItem(ll_row,'item_master_upc',lllUpc)
		s_show.SetItem(ll_row,'alloc_qty',ll_qty)

		li_RC = FileRead(li_filept,ls_outstring1)

	Loop

	Fileclose(li_filept)

	ll_row = s_show.Find("delivery_detail_do_no = '"+ lsInvoice +"'",1,s_show.rowcount())

	IF ll_row > 0 THEN
		
		If Messagebox('Export to Scanner', "This order already exists in export file, Replace it?", Question!, YesNo!) = 2 Then
			Return 0
		End If

		ll_cnt = s_show.rowcount()

		For ll_ptr = ll_cnt to 1 step -1
	
			ls_dono = s_show.GetItemString(ll_ptr,'delivery_detail_do_no')
		
			If Trim(lsInvoice) = Trim(ls_dono) then
  				 s_show.DeleteRow(ll_ptr)
			End if

		Next

		s_sc_do_dd.reset()
		s_sc_do_dd.Retrieve(ls_do_no)
		ll_cnt = s_sc_do_dd.rowcount()
	
		If ll_cnt <= 0 Then
			MessageBox('Export to Scanner', "No records to export for this order!")
			Return 0
		End If

		For ll_ptr = 1 to ll_cnt

			ls_dono = s_sc_do_dd.GetitemString(ll_ptr,"delivery_detail_do_no")
			ls_sku= s_sc_do_dd.GetitemString(ll_ptr,"delivery_detail_sku")
			lllUpc= s_sc_do_dd.GetitemNumber(ll_ptr,"item_master_upc")
			ll_qty = s_sc_do_dd.GetItemNumber(ll_ptr,"alloc_qty")

			ll_row = s_show.Insertrow(0)

			s_show.SetItem(ll_row,'delivery_detail_do_no',ls_dono)
			s_show.SetItem(ll_row,'delivery_detail_sku',ls_sku)
			s_show.SetItem(ll_row,'item_master_upc',lllUpc)
			s_show.SetItem(ll_row,'alloc_qty',ll_qty)

		Next
	
	ELSE /*NOt found in current file*/

		s_sc_do_dd.reset()
		s_sc_do_dd.Retrieve(ls_do_no)
		ll_cnt = s_sc_do_dd.rowcount()
	
		If ll_cnt <= 0 Then
			MessageBox('Export to Scanner', "No records to export for this order!")
			Return 0
		End If

		For ll_ptr = 1 to ll_cnt

			ls_dono = s_sc_do_dd.GetitemString(ll_ptr,"delivery_detail_do_no")
			ls_sku= s_sc_do_dd.GetitemString(ll_ptr,"delivery_detail_sku")
			lllUpc= s_sc_do_dd.GetitemNumber(ll_ptr,"item_master_upc")
			ll_qty = s_sc_do_dd.GetItemNumber(ll_ptr,"alloc_qty")

			ll_row = s_show.Insertrow(0)

			s_show.SetItem(ll_row,'delivery_detail_do_no',ls_dono)
			s_show.SetItem(ll_row,'delivery_detail_sku',ls_sku)
			s_show.SetItem(ll_row,'item_master_upc',lllUpc)
			s_show.SetItem(ll_row,'alloc_qty',ll_qty)

		Next

	END IF

	li_filept = FileOPen(ls_file,StreamMode!,Write!,LockReadWrite!,Replace!)

	ll_cnt = s_show.rowcount()

	For ll_ptr = 1 to ll_cnt

		ls_dono = s_show.GetitemString(ll_ptr,"delivery_detail_do_no")
		ls_sku= s_show.GetitemString(ll_ptr,"delivery_detail_sku")
		lllUpc= s_show.GetitemNumber(ll_ptr,"item_master_upc")
		ll_qty = s_show.GetItemNumber(ll_ptr,"alloc_qty")
		
		// 03/26 - PCONKL - Need to prefix 11 digit UPC's with a leading '0'   **THIS NEEDS TO GET INTO SOURCE CONTROL **
		lsUPC = Trim(String(lllUpc))
		If len(lsUPC) = 11 Then lsUpc = '0' + lsUPC
		
		//ls_outstring = ls_dono+space(15 - len(ls_dono))+String(lllUpc) +space(15 - len(String(lllUpc)))+ls_sku+space(16 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"
	//	ls_outstring = ls_dono+space(15 - len(ls_dono))+lsUPC +space(15 - len(lsUPC))+ls_sku+space(16 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"
	//	ls_outstring = ls_dono+space(15 - len(ls_dono))+lsUPC +space(14 - len(lsUPC))+ls_sku+space(16 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"
		ls_outstring = ls_dono+space(15 - len(ls_dono))+lsUPC +space(14 - len(lsUPC))+ls_sku+space(17 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"

		//** Needs to be in source control

		
		// Write the record in file	  
		li_ret = FileWrite(li_filept,ls_outstring)

	Next

Else /* File does not exist, new file */
	
	li_filept = FileOPen(ls_file,StreamMode!,Write!,LockReadWrite!,Replace!)

	s_sc_do_dd.reset()
	s_sc_do_dd.Retrieve(ls_do_no)
	ll_cnt = s_sc_do_dd.rowcount()
	If ll_cnt <= 0 Then
		MessageBox('Export to Scanner', "No records to export for this order!")
		Return 0
	End If

	For ll_ptr = 1 to ll_cnt
	
		ls_outstring=""

		ls_dono = s_sc_do_dd.GetitemString(ll_ptr,"delivery_detail_do_no")
		ls_sku= s_sc_do_dd.GetitemString(ll_ptr,"delivery_detail_sku")
		lllUpc=  s_sc_do_dd.GetitemNumber(ll_ptr,"item_master_upc")
		ll_qty = s_sc_do_dd.GetItemNumber(ll_ptr,"alloc_qty")

		// 03/26 - PCONKL - Need to prefix 11 digit UPC's with a leading '0'   **THIS NEEDS TO GET INTO SOURCE CONTROL **
		lsUPC = Trim(String(lllUpc))
		If len(lsUPC) = 11 Then lsUpc = '0' + lsUPC
		
		//ls_outstring = ls_dono+space(15 - len(ls_dono))+String(lllUpc) +space(15 - len(String(lllUpc)))+ls_sku+space(16 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"
		//ls_outstring = ls_dono+space(15 - len(ls_dono))+lsUPC +space(15 - len(lsUPC))+ls_sku+space(16 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"
		//ls_outstring = ls_dono+space(15 - len(ls_dono))+lsUPC +space(14 - len(lsUPC))+ls_sku+space(16 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"
		ls_outstring = ls_dono+space(15 - len(ls_dono))+lsUPC +space(14 - len(lsUPC))+ls_sku+space(17 - len(ls_sku))+string(ll_qty)+space(15 - len(string(ll_qty)))+"~n"

		//** Needs to be in source control

		// Write the record in file	  
		li_ret = FileWrite(li_filept,ls_outstring)

	Next

End If

Fileclose(li_filept)

idw_Main.SetITem(1,'user_field22', string(datetime( today(), now())))

//Set Order Status to 'Q'
//idw_Main.SetITem(1,'Ord_status','Q')     //Comment out MEA  as per Error Log.
iw_window.TriggerEvent('ue_save')

MessageBox('Export to Scanner', "Export to scanner complete!")

Destroy s_sc_do_dd
Destroy s_show	


end function

public function integer uf_config_custom_buttons ();
tab_main.tabpage_main.cb_custom1.visible = False
//tab_main.tabpage_main.cb_custom2.visible = False

//MikeA 9/12/2019  S36465 - F17598 - Philips Outbound Delivery enhancement (Multi-Ready-To-Ship)
 
String ls_Enable_Ready_Ind

select Enable_Ready_Ind
into :ls_Enable_Ready_Ind
from project
where project_id = :gs_project;

IF ls_Enable_Ready_Ind = 'Y' THEN

	tab_main.tabpage_search.cb_multi_ready_to_ship.visible = True
	tab_main.tabpage_search.cb_multi_ready_to_ship.enabled = True	
	

END IF


Choose Case upper(gs_project)
	//GailM 8/5/2019 S36484 F17554 Philips Batch GSIN		
	//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
	Case 'PHILIPSCLS', 'PHILIPS-DA'
	
		tab_main.tabpage_search.cb_combine_gsin.visible = True
		tab_main.tabpage_search.cb_combine_gsin.enabled = True
	
	//SARUN2014JAN31 Start: Including invoice print function for NYX
	Case 'NYX'

		tab_main.tabpage_main.cb_custom1.Text = 'Print Invoice'
//		tab_main.tabpage_main.cb_custom1.enabled = TRUE
//		tab_main.tabpage_main.cb_custom1.VISIBLE = TRUE
		

//SARUN2014JAN31 End: Including invoice print function for NYX

	Case 'NIKE-SG',  'NIKE-MY'
		
		tab_main.tabpage_main.cb_custom1.visible = True
	//	tab_main.tabpage_main.cb_custom2.visible = True
		
		tab_main.tabpage_main.cb_custom1.Text = 'Export'
		//tab_main.tabpage_main.cb_custom2.Text = 'Tally Sheet'
		
		
	Case 'STRYKER'
		
		tab_main.tabpage_main.cb_custom1.visible = True
		
		tab_main.tabpage_main.cb_custom1.Text = 'Validate'
		

	Case 'TPV', 'FUNAI', 'SG-MUSER' , 'MY-MUSER', 'TH-MUSER', 'IND-MUSER','PUMA','GIBSON'	//Jxlim 06/05/2014 Added more project -26-Dec-2014 Madhu Added PUMA		//TAM 2015/01/26 Added Gibson

		
		tab_main.tabpage_main.cb_custom1.visible = True
		tab_main.tabpage_main.cb_custom1.enabled = TRUE
		tab_main.tabpage_main.cb_custom1.Text = 'Print Label'	
	
	Case 'H2O'
		
		tab_main.tabpage_main.cb_custom1.visible = True
		tab_main.tabpage_main.cb_custom1.Text = 'Print Invoice'
		
	//26-MAR-2018 :Madhu Rema -Update process for printing pallet labels
	Case 'REMA'
		tab_main.tabpage_main.cb_custom1.visible =True
		tab_main.tabpage_main.cb_custom1.Text ='Carton Labels'
		
	//TAM 12/12/12 Added button for W&S
	Case Else 

	If left(Upper(gs_project),3) = 'WS-' then
		
		tab_main.tabpage_main.cb_custom1.visible = True
		tab_main.tabpage_main.cb_custom1.Text = 'Tradenet'
	End If

		

End Choose

//GailM 9/29/2020 - S50130/F24604/I3002 Singapore PassOut Note
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
Choose Case upper(gs_project)
	Case 'RIVERBED','SG-MUSER','WS-BM','WS-MUSER','HAGER-SG','PHILIPSCLS','PHILIPS-SG','FLEX-SIN','PHILIPS-DA'
		tab_main.tabpage_search.cb_print_passout_note.visible = True
		tab_main.tabpage_search.cb_print_passout_note.enabled = True
	Case Else 
		tab_main.tabpage_search.cb_print_passout_note.visible = False
		tab_main.tabpage_search.cb_print_passout_note.enabled = False
End Choose


Return 0
end function

public function integer uf_nike_import_from_scanner ();
// 11/11 - Pconkl - Plagiarized  from EWMS for Nike MY/SG

String ls_imp_path

String ls_dono,ls_file,lsOrderNo,ls_ctn,ls_sku,ls_outstring1
Long ll_cnt,ll_qty,ll_row, llFindRow
Boolean lb_exist, ibFull
Integer li_filept,li_RC
String	lsFileName
Long ll_total_pack_qty, liMaxCartonNo
long ll_total_pick_qty = 0 

If ib_changed Then
	Messagebox("Import from Scanner", "Please save your changes first.")
	Return 0
End If

If idw_Main.RowCOunt() < 1 Then Return 0

If idw_Pack.RowCount() > 0 Then
	
	If Messagebox("Import from Scanner","Do you want to DELETE the existing rows?",Question!,YesNo!,1) = 1 Then
		
		idw_Pack.SetRedraw(False)
		Do While idw_Pack.RowCount() > 0
			idw_pack.DeleteRow(1)
		Loop
		
		idw_Pack.SetRedraw(True)
	
//		iw_window.TriggerEvent('ue_save')

		ib_changed = TRUE 
		
		ibFull = true
		
	Else
		
		ibFull = false
		
	End If



ELSE

	ibFull = true

End If

ls_imp_path = ProfileString(gs_inifile,"sims3","ImportPath","")

lsOrderNo = idw_main.GetItemString(1,"invoice_no") /* This is really the ORder NUmber, not the do_no*/


ls_file = ls_imp_path+"pack.txt"
lb_exist = FileExists(ls_file)

//If no file found, prompt...
if not lb_exist Then
	li_rc = GetFileOpenName("Select File to Import",ls_file, lsFileName)
	If li_rc < 1 Then Return 0
	lb_exist = FileExists(ls_file)
End If

If lb_exist = TRUE then
	
	idw_Pack.SetRedraw(False)

	li_filept = FileOpen(ls_file,LineMode!,Read!,LockREadWrite!)

	li_RC = FileRead(li_filept,ls_outstring1)

	Do While li_RC > 0
	
		ls_dono = Mid(ls_outstring1,1,15)
		ls_ctn  = Mid(ls_outstring1,16,5)
		ls_sku  = Mid(ls_outstring1,21,16)
		//ll_qty  = Long(Mid(ls_outstring1,36,7))
		ll_qty  = Long(Mid(ls_outstring1,37,7))

		
		if  long(ls_ctn) > liMaxCartonNo then liMaxCartonNo = long(ls_ctn)

		If Trim(ls_dono) = Trim(lsOrderNo) then /* only import for current order */
	
			//WE need the Line Item No, COO and Supplier for the SKU -  ** at this point, assuming onlyline item per sku - may need to reconcile across multiple lines **
			llFindRow = idw_Pick.Find("Upper(SKU) = '" + Upper(ls_Sku) + "'",1,idw_Pick.RowCOunt())
			If llFindRow > 0 AND ll_qty > 0 Then
			
	
				ll_row = idw_Pack.Insertrow(0)
			
				idw_Pack.SetITem(ll_row,'do_no',idw_Main.GetItemString(1,'do_no'))
				
				idw_Pack.SetITem(ll_row,'sku',ls_sku)
				idw_Pack.SetITem(ll_row,'carton_no',ls_ctn)
				idw_Pack.SetITem(ll_row,'quantity',ll_qty) 
			
				idw_Pack.SetITem(ll_row,'line_item_no',idw_Pick.GetITemNumber(llFindRow,'line_item_no'))
				idw_Pack.SetITem(ll_row,'supp_code',idw_Pick.GetITemString(llFindRow,'supp_code'))
				idw_Pack.SetITem(ll_row,'country_of_origin',idw_Pick.GetITemString(llFindRow,'country_of_origin'))
				idw_pack.Setitem(ll_row,"standard_of_measure",'M')	
				
			Else /*Sku not found in pick */
				
				Fileclose(li_filept)
				idw_pack.Reset()
				idw_Pack.SetRedraw(True)
				Messagebox("Import from Scanner", "SKU '" + ls_SKU + "' exists in Scanner File but not on Pick List. Unable to import file from scanner!",StopSign!)
				Return 0
			
			End If /* Pick row found*/
			
		End If

		li_RC = FileRead(li_filept,ls_outstring1)

	Loop

	Fileclose(li_filept)
	
	idw_Pack.Sort()
	idw_Pack.GroupCalc()
	
	idw_Pack.SetRedraw(True)

end if

If idw_Pack.RowCount() <= 0 Then
	Messagebox('Import from Scanner','No records were imported for this order!')
	Return 0
End If






wf_assignetom(2) //Assigning value of Standard_of Mesure to Radio Button	

uf_enable_first_carton_row(0,"")

ib_changed = TRUE 

idw_Main.SetITem(1,'ord_status','A')
idw_Main.SetITem(1,'user_field21', string(datetime( today(), now())))

uf_nike_verify_pack(true)


REturn 0

end function

public function boolean wf_skus_have_valid_weight_dims ();// Return FALSE if DIMs, weight and UOM_1 are not populated or if UOM_1 <> 'EA'
boolean lb_return = TRUE

If gs_project = 'PANDORA' then
	String ls_where_clause
	Long k, ll_rows
	ll_rows = idw_pick.RowCount()

	ls_where_clause = "where project_id = 'PANDORA' and supp_code = 'PANDORA' and sku in ("
	for k = 1 to ll_rows

		ls_where_clause += "'" + idw_pick.Object.sku[k] + "'"

		if k <> ll_rows then
			ls_where_clause += ", "
		end if
	next
	ls_where_clause += ")"

	datastore lds_items
	lds_items = create datastore
	String ls_sql_syntax, ERRORS

	ls_sql_syntax = "SELECT sku, UOM_1, Length_1, Width_1, Height_1, Weight_1 from item_master "
	ls_sql_syntax += ls_where_clause + ";"

	lds_items.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax,"", ERRORS))
	if Len(ERRORS) > 0 then
		MessageBox("Errors", "Unable to create datastore to check for weight, DIMs and UOM.~r~r" + Errors)
		return FALSE
	end if

	if lds_items.SetTransObject(SQLCA) <> 1 then
		MessageBox("Error","Error setting datastore's transaction object to check for weight, DIMs and UOM.")
		return FALSE
	end if

	long ll_items
	ll_items = lds_items.retrieve()

	String ls_inadequate_skus
	Int li_inadequate_sku_count

	for k = 1 to ll_items
		
		if NOT IsNull(lds_items.Object.uom_1[k]) and Trim(lds_items.Object.uom_1[k]) = "EA" and &
			NOT IsNull(lds_items.Object.length_1[k]) and lds_items.Object.length_1[k] <> 0 and &
			NOT IsNull(lds_items.Object.height_1[k]) and lds_items.Object.height_1[k] <> 0 and &
			NOT IsNull(lds_items.Object.width_1[k]) and lds_items.Object.width_1[k] <> 0 and &
			NOT IsNull(lds_items.Object.weight_1[k]) and lds_items.Object.weight_1[k] <> 0 then

			// SKU has the requirements

		else
			li_inadequate_sku_count++
			
			if li_inadequate_sku_count <= 20 then
				if li_inadequate_sku_count > 1 then
					ls_inadequate_skus += ", " + lds_items.Object.sku[k]
				else
					ls_inadequate_skus = lds_items.Object.sku[k]
				end if
			else
				exit
			end if
		end if
	next

	if li_inadequate_sku_count > 0 then

		String ls_sku_or_skus
		if li_inadequate_sku_count > 1 then
			ls_sku_or_skus = "SKU(s) need"
		else
			ls_sku_or_skus = "SKU needs"
		end if

		MessageBox("Error", "The following " + ls_sku_or_skus + " UOM, L, W, H and Weight to be populated in the Item Master before you can continue: ~r~r" + ls_inadequate_skus)
		lb_return = FALSE
	end if
end if

return lb_return

end function

public function integer wf_check_if_shuttle_order (string as_project);
//TimA 02/11/2012 OTM Project
//This checks to see if the order is Shuttle or not

Long ll_ShuttleFlag,llShuttleLookupCount
String lsShuttle

lsShuttle = idw_other.GetItemString(1, 'user_field1')

			If  IsNull(lsShuttle) or lsShuttle = '' Then
					//TimA 01/17/12 OTM Project
					//Per Ian if there is nothing in the Remarks column or 'OTH'  then it is a non Shuttle
					//TimA 06/22/12 Put in this ll_SkipOTMFlag because Roy does not want to call OTM on manualy created outbound orders that have a schedule code.
					//So this basicly bypasses the CALL_OTM that is below.  This flag is set in the Item changed event of the Other tab
					If ll_SkipOTMFlag = 1 then
						ll_ShuttleFlag = 1
					Else
					ll_ShuttleFlag = 0 //Non Shuttle
					End if
			Else
				If lsShuttle = Upper('OTH') then //Code for Non Shuttle comes from shopping card
				//TimA 06/27/12 Fix for Pandora issue #429
					If ll_SkipOTMFlag = 1 then
						ll_ShuttleFlag = 1
					Else
						ll_ShuttleFlag = 0  
					End if
				Else
					//This is for those special occations that someone say if its a curtain code then non shuttle
					//Note:  There shouldn't be anything in the lookup table.  This is only for exceptions to the rule.
					//TimA 02/14/13 Pandora Bug change the where clause below because it was wrong.
					select count(1) INTO :llShuttleLookupCount from lookup_table WITH (NOLOCK)
					where project_id = :as_project and code_type = 'OTM'
					and code_ID = :lsShuttle and code_descript = Upper('CALL_OTM');
					//and code_ID = 'CALL_OTM' and code_descript = :lsShuttle;
						
					If llShuttleLookupCount > 0 then
						//TimA 06/27/12 Fix for Pandora issue #429
						If ll_SkipOTMFlag = 1 then
							ll_ShuttleFlag = 1
						Else
							ll_ShuttleFlag = 0
						End if
					Else
						ll_ShuttleFlag = 1  //Shuttle order.  
					End if
				end if
			End if
			
Return ll_ShuttleFlag
end function

public subroutine wf_set_otm_message (string as_action);
String lsOTMMessage
//TimA 02/11/2012 OTM Project
Choose case as_Action
		
	Case 'U' //Update OTM
		lsOTMMessage = "This order has changed and needs to send an update to OTM.  Please save."
		//Set it to Red
		idw_main.object.otm_message_t.color = "255"	  
		tab_main.tabpage_detail.otm_message_t.textcolor = 255
		idw_main.object.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.visible = True
		idw_main.object.otm_message_t.visible = True	
	Case 'I' //Insert to OTM
		lsOTMMessage = "This order has not been sent to OTM"
		//Set Color to Blue
		idw_main.object.otm_message_t.color = "16711680"	  
		tab_main.tabpage_detail.otm_message_t.textcolor = 16711680
		idw_main.object.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.visible = True
		idw_main.object.otm_message_t.visible = True
	Case 'D' //Delete from OTM
		lsOTMMessage = "This order was sent to OTM and now needs to be deleted. Please save."
		//Set Color to Blue
		idw_main.object.otm_message_t.color = "16711680"	  
		tab_main.tabpage_detail.otm_message_t.textcolor = 16711680
		idw_main.object.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.visible = True
		idw_main.object.otm_message_t.visible = True
	Case 'O'  //Turn message off
		tab_main.tabpage_detail.otm_message_t.visible = False
		idw_main.object.otm_message_t.visible = False
	Case 'T' //TMS order   (OTM turned off)		GailM 11/20/2018 S25773
		lsOTMMessage = "This order is participating in TMS."
		//Set it to Red
		idw_main.object.otm_message_t.color = "255"	  
		tab_main.tabpage_detail.otm_message_t.textcolor = 255
		idw_main.object.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.visible = True
		idw_main.object.otm_message_t.visible = True	
	Case 'Z' //TMS order has been exempt from TMS processing   (OTM turned off)		GailM 11/20/2018 S25773
		lsOTMMessage = "This order has been exempt from TMS."
		//Set it to Red
		idw_main.object.otm_message_t.color = "255"	  
		tab_main.tabpage_detail.otm_message_t.textcolor = 255
		idw_main.object.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.text = lsOTMMessage
		tab_main.tabpage_detail.otm_message_t.visible = True
		idw_main.object.otm_message_t.visible = True			
End Choose

If idw_main.GetItemString(1,'OTM_Status')  = '' Then
	idw_main.SetItem(1,'OTM_Status', as_Action)
End If

end subroutine

public function integer wf_check_for_otm_updates (string as_datawindowname, string as_columnname);
Long ll_LookupCount
String lsOTMMessage
String lsOTMStatus

//TimA 02/02/2012 OTM Project
//Fired from the itemchanged event of the dw's.
//Non Shuttle order will return 0
lsOTMStatus = idw_main.getitemstring(1,"OTM_Status")

If wf_check_if_shuttle_order (gs_project) = 0 then
	select count(1) INTO :ll_LookupCount from lookup_table WITH (NOLOCK)
	where project_id = :gs_Project and code_type = 'OTM'
	and code_ID = :as_ColumnName  and code_descript = :as_DatawindowName;

	If lsOTMStatus = 'R' Then
		If ll_LookupCount > 0 then
			isShipmentChangedFlag = 'Y'
			Return 0
		End if	
	Else
		If ll_LookupCount > 0 then
			wf_Set_OTM_Message ('U')
			Return 1
		Else
			Return 0
		End if
	End if
Else
	Return 0
End if
end function

public function integer wf_enable_otm_status ();//This function is for OTM processing
//Enable or disable OTM status flag and tag pages
//Created by TimA
//Added PHILIPS-SG - MEA - 5/13

String	lsProject, lsWarehouse,  lsOrd_Status, lsLabelDest, lsOTMStatus, lsOTMMessage, lsDoNo
String ls_From_Cust_code, ls_To_City, ls_From_City, lsWH, ls_To_Cust, ls_From_Cust, ls_from_WH
Long 		llRow,ll_ShuttleFlag,llShuttleLookupCount
String ls_action, ls_return_cd, ls_error_message, lsMessage
String lsShuttle, lsConfirmLable, lsMIMOrder, lsCarrierAddr1, lsClientCustPONbr, lsCarrier, lsSchCd, lsInvoice

datetime ldtOrdDate, ldtCutoffDate, ldtScheduleDate, ldtWHTime, ldtRDD  //TAM 2017/04  - GWM 2017/10
String  lsdefaultTime//TAM 2017/04 
String lsSkipOtm //GailM S25773

//Initialize ESD parameters
lsMIMOrder = '*all'
lsCarrierAddr1 = '*all'
ls_To_Cust = '*all'

lsDoNo = idw_main.GetItemString( 1, 'do_no' )
lsInvoice = idw_main.GetItemString( 1, 'invoice_no' )
ldtOrdDate = idw_main.GetItemDatetime( 1, 'ord_date' )
ldtRDD = idw_main.GetItemDatetime( 1, 'request_date' )
lsCarrier = idw_main.GetItemString( 1, 'carrier' )
lsSchCd = idw_main.GetItemString( 1, 'user_field1' )   // SchCd 

//TAM 2018/12/10 S25773 - If LoadId is already loaded don't reload
//isLoadId = idw_main.GetItemString( 1, 'load_id' )		//LoadId
If isLoadId = '' and idw_main.GetItemString( 1, 'otm_status' ) <> 'Y' then
	isLoadId = idw_main.GetItemString( 1, 'load_id' )	
End If

lsClientCustPONbr = idw_main.GetItemString( 1, 'client_cust_PO_nbr' )
if Left(lsClientCustPONbr, 1) = 'X' Then lsMIMOrder = 'Yes'

lsOrd_Status = idw_main.GetItemString(1,"ord_status")
lsOTMStatus = idw_main.GetItemString(1,"otm_status")

//lsProject = idw_main.GetItemString(1,'project_id')
lswarehouse = idw_main.GetItemString(1,'wh_code')
//lsShuttle = idw_other.GetItemString(1, 'user_field1')

lsWH = idw_main.getitemstring(1, 'wh_code')
ls_To_Cust= idw_main.getitemstring(1, 'cust_code')
ls_From_Cust = idw_other.GetItemString(1, 'user_field2')

llRow = g.of_project_warehouse(gs_project, lsWarehouse)
If llRow > 0 Then
	isOTMEnabled = g.is_OTM_Enable_Ind
	If Upper(gs_project) = 'PANDORA' Then		//Can skip otm S25773
		//ll_Skip_OTM, ll_SkipOTMFlag
		lsSkipOtm = f_retrieve_parm("PANDORA", "SKIP_OTM", lsWarehouse,  "CODE_DESCRIPT") 
		If lsSkipOtm = "SKIP_OTM" Then
			isOTMEnabled = 'N'
			isTMSstatus = f_is_non_tms(lsSchCd, isLoadId, lsWarehouse)
		End If
	End If
End If

icb_shipment.Visible= False

If isOTMEnabled = 'Y' Then
	
	//MEA - Added OTM Sent Status Flag
	idw_main.object.otm_sent_ind_t.visible = True
	idw_main.object.otm_sent_ind.visible = True
	
	//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
	//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
	CHOOSE CASE gs_project
	CASE "PHILIPS-SG" ,"PHILIPSCLS","PHILIPS-DA"	
		
		//Philips Does not Use OTM Status
		
		idw_main.object.otm_status.visible = False
		idw_main.object.otm_status_t.visible = False			
			
	CASE "PANDORA"
	
		idw_main.object.otm_status.visible = True
		idw_main.object.otm_status_t.visible = True
		idw_main.object.otm_call_date.visible = True
		idw_main.object.otm_call_date_t.visible = True
		idw_other.object.consolidation_no.visible = True
		idw_other.object.consolidation_no_t.visible = True
		idw_main.object.edm_generate_datetime.visible=True
		idw_main.object.edm_generate_datetime_t.visible=True
	

		If icb_shipment.Text = 'Create &Shipment'  then
			icb_shipment.Visible= False
		Else
			icb_shipment.Visible= True
		End if
		
		If idw_main.RowCount() < 1 Then Return 0
			idw_main.AcceptText()
			If lsOTMStatus = '' or isnull(lsOTMStatus) then
				
				If wf_check_if_shuttle_order (gs_project) = 1 then
					//idw_main.SetItem(1,'ord_status','N') //TimA 03/19/12 We should never set Ord_status Per Dave
					idw_main.SetItem(1,'OTM_status','N')		//Non OTM
					idw_main.object.otm_call_date.visible = False
					idw_main.object.otm_call_date_t.visible = False
					
					Return 0
				End if
			End if
	
			If lsOrd_Status = 'N' and lsOTMStatus = '' or isnull(lsOTMStatus) Then
				idw_main.SetItem(1,"otm_status",'') 			
				tab_main.tabpage_detail.cb_do_det_insert.enabled = True
				tab_main.tabpage_detail.cb_do_det_delete.enabled = True					
				tab_main.tabpage_pick.Enabled = False
				tab_main.tabpage_pack.Enabled = False
	
				//Detail Rows
				If idw_detail.rowcount( ) > 0 then
					wf_set_otm_message('I')  //Turn on insert message
				Else
					wf_set_otm_message('O') //Turn off message
				End if
			Else
	
			//Not enabled in Process/Picking Status
			Choose case lsOTMStatus
				Case 'H', 'S'
					If wf_check_if_shuttle_order (gs_project) = 1 then
						//idw_main.SetItem(1,'ord_status','N')  //TimA 03/19/12 We should never set Ord_status Per Dave
						idw_main.SetItem(1,'OTM_status','N')		//Non OTM
							idw_main.update() 
						return 0
					end if			
					idw_Main.SetTabOrder("OTM_status",0) 
					tab_main.tabpage_pick.Enabled = False
					tab_main.tabpage_pack.Enabled = False
					tab_main.tabpage_detail.cb_do_det_insert.enabled = false
					tab_main.tabpage_detail.cb_do_det_delete.enabled = false
					
					If ilUpdateOTM = 1 then
						wf_set_otm_message('U')
					Else
						wf_set_otm_message('O')
					End if
					
				Case 'P'
					//Jxlim 03/21/2012 Protect also when OTM_Status is Planning(P) BRD #337 Pandora-OTM
					//idw_Main.SetTabOrder("OTM_status",20) 
					idw_Main.SetTabOrder("OTM_status",0) 
					tab_main.tabpage_pick.Enabled = True
					tab_main.tabpage_pack.Enabled = True
					tab_main.tabpage_main.cb_do_confirm.Enabled = False
					
					//Jxlim 04/02/2012 BRD #386 Lock carrier field when otm status is Planning (P)
				//	idw_other.SetTabOrder("Carrier",0) 
				//	idw_other.Object.Carrier.Protect = TRUE
	//				idw_other.Modify("Carrier.Background.Color = '" +  ls_color + "'")		
	
					wf_set_otm_message('O')
					
				Case 'R'
					idw_Main.SetTabOrder("OTM_status",0) 
					tab_main.tabpage_pick.Enabled = True
					tab_main.tabpage_pack.Enabled = True	
					
					lsConfirmLable = tab_main.tabpage_main.cb_do_confirm.text
					
					If lsConfirmLable <> 'Re-&Confirm' and (lsOrd_Status = 'C' or lsOrd_Status = 'D' or lsOrd_Status = 'V') then				
					//If ib_ConfirmButtonStatus  = False and (lsOrd_Status = 'C' or lsOrd_Status = 'D' or lsOrd_Status = 'V') then
						tab_main.tabpage_main.cb_do_confirm.Enabled = False
					else
						tab_main.tabpage_main.cb_do_confirm.Enabled = True
					end if
	
					wf_set_otm_message('O')
					
				Case 'N'
					//Jxlim 03/21/2012 Protect also when OTM_Status is Non_OTM(N) BRD #337 Pandora-OTM
					//idw_Main.SetTabOrder("OTM_status",20) 
					idw_Main.SetTabOrder("OTM_status",0) 				
					tab_main.tabpage_pick.Enabled = True
					tab_main.tabpage_pack.Enabled = True
					tab_main.tabpage_main.cb_do_confirm.Enabled = True
	
					wf_set_otm_message('O')
					idw_main.object.otm_call_date.visible = False
					idw_main.object.otm_call_date_t.visible = False	
					
						
			End Choose
			//Jxlim 03/21/2012 Protect also when OTM_Status is Non_OTM(N) BRD #337 Pandora-OTM can be unlocked via F10 on ue_unlock
			idw_main.Object.otm_status.Protect = TRUE
			idw_main.Modify("otm_status.Background.Color = '" +  string(RGB(192, 220, 192)) + "'")  // mint color
		End if
	
	CASE "ARIENS"	
		
		idw_main.object.otm_status.visible = True
		idw_main.object.otm_status_t.visible = True
		idw_main.object.otm_call_date.visible = True
		idw_main.object.otm_call_date_t.visible = True
		idw_other.object.consolidation_no.visible = True
		idw_other.object.consolidation_no_t.visible = True
		idw_main.object.edm_generate_datetime.visible=True
		idw_main.object.edm_generate_datetime_t.visible=True
					
//		If icb_shipment.Text = 'Create &Shipment'  then
//			icb_shipment.Visible= False
//		Else
//			icb_shipment.Visible= True
//		End if
		
		If idw_main.RowCount() < 1 Then Return 0
			idw_main.AcceptText()
//			If lsOTMStatus = '' or isnull(lsOTMStatus) then
//				
//				If wf_check_if_shuttle_order (gs_project) = 1 then
//					//idw_main.SetItem(1,'ord_status','N') //TimA 03/19/12 We should never set Ord_status Per Dave
//					idw_main.SetItem(1,'OTM_status','N')		//Non OTM
//					idw_main.object.otm_call_date.visible = False
//					idw_main.object.otm_call_date_t.visible = False
//					
//					Return 0
//				End if
//			End if
	
//			If lsOrd_Status = 'N' and lsOTMStatus = '' or isnull(lsOTMStatus) Then
//				idw_main.SetItem(1,"otm_status",'') 			
//				tab_main.tabpage_detail.cb_do_det_insert.enabled = True
//				tab_main.tabpage_detail.cb_do_det_delete.enabled = True					
//				tab_main.tabpage_pick.Enabled = False
//				tab_main.tabpage_pack.Enabled = False
//	
//				//Detail Rows
//				If idw_detail.rowcount( ) > 0 then
//					wf_set_otm_message('I')  //Turn on insert message
//				Else
//					wf_set_otm_message('O') //Turn off message
//				End if
//			Else
//	
			//Not enabled in Process/Picking Status
			Choose case lsOTMStatus
				Case 'H', 'S'
					//should never happen for Ariens
				Case 'P'
					//Jxlim 03/21/2012 Protect also when OTM_Status is Planning(P) BRD #337 Pandora-OTM
					//idw_Main.SetTabOrder("OTM_status",20) 
					idw_Main.SetTabOrder("OTM_status",0) 
					tab_main.tabpage_pick.Enabled = True
					tab_main.tabpage_pack.Enabled = True
					tab_main.tabpage_main.cb_do_confirm.Enabled = False
					
					//Jxlim 04/02/2012 BRD #386 Lock carrier field when otm status is Planning (P)
				//	idw_other.SetTabOrder("Carrier",0) 
				//	idw_other.Object.Carrier.Protect = TRUE
	//				idw_other.Modify("Carrier.Background.Color = '" +  ls_color + "'")		
	
					wf_set_otm_message('O')
					
				Case 'R'
					idw_Main.SetTabOrder("OTM_status",0) 
					tab_main.tabpage_pick.Enabled = True
					tab_main.tabpage_pack.Enabled = True	
					
					lsConfirmLable = tab_main.tabpage_main.cb_do_confirm.text
					
					If lsConfirmLable <> 'Re-&Confirm' and (lsOrd_Status = 'C' or lsOrd_Status = 'D' or lsOrd_Status = 'V') then				
					//If ib_ConfirmButtonStatus  = False and (lsOrd_Status = 'C' or lsOrd_Status = 'D' or lsOrd_Status = 'V') then
						tab_main.tabpage_main.cb_do_confirm.Enabled = False
					else
						tab_main.tabpage_main.cb_do_confirm.Enabled = True
					end if
	
					wf_set_otm_message('O')
					
				Case 'N'
//					//Jxlim 03/21/2012 Protect also when OTM_Status is Non_OTM(N) BRD #337 Pandora-OTM
//					//idw_Main.SetTabOrder("OTM_status",20) 
//					idw_Main.SetTabOrder("OTM_status",0) 				
//					tab_main.tabpage_pick.Enabled = True
//					tab_main.tabpage_pack.Enabled = True
//					tab_main.tabpage_main.cb_do_confirm.Enabled = True
//	
//					wf_set_otm_message('O')
//					idw_main.object.otm_call_date.visible = False
//					idw_main.object.otm_call_date_t.visible = False		
			End Choose
			//Jxlim 03/21/2012 Protect also when OTM_Status is Non_OTM(N) BRD #337 Pandora-OTM can be unlocked via F10 on ue_unlock
			idw_main.Object.otm_status.Protect = TRUE
			idw_main.Modify("otm_status.Background.Color = '" +  string(RGB(192, 220, 192)) + "'")  // mint color
		//End if

	END CHOOSE
//TAM 2019/03 - DE9566 - Add New TMS status for TMS Load Planning
//ElseIf isTMSstatus = 'Z' or isTMSstatus = 'T' Then
ElseIf isTMSstatus = 'Z' or isTMSstatus = 'T' or isTMSstatus = 'L' Then
	idw_main.object.otm_sent_ind_t.visible = False
	idw_main.object.otm_sent_ind.visible = False
	idw_main.object.otm_status.visible = True
	idw_main.object.otm_status_t.visible = True
	idw_main.object.otm_status_t.text = 'TMS Status'
//TAM 2019/03 - DE9566 - Don't Set OMS Status Here
//	idw_main.SetItem(1,'OTM_status',isTMSstatus)
	If isTMSstatus = 'Z' Then
		wf_set_otm_message('Z')
	Else
		wf_set_otm_message('T')
	End if
Else
	
	
	//MEA - Added OTM Sent Status Flag
	idw_main.object.otm_sent_ind_t.visible = False
	idw_main.object.otm_sent_ind.visible = False	
	
	idw_main.object.otm_status.visible = False
	idw_main.object.otm_status_t.visible = False					
	idw_main.object.edm_generate_datetime.visible=False
	idw_main.object.edm_generate_datetime_t.visible=False
	idw_main.object.otm_call_date.visible = False
	idw_main.object.otm_call_date_t.visible = False	
	idw_other.object.consolidation_no.visible = True
	idw_other.object.consolidation_no_t.visible = True

	Return 0	
End if
//TimA Pandora #540
//Any order that is NON OTM and the ord_Status is New,Process,Picking,Packing we want to set the ESD date to null
Datetime ldtNull
setNull(ldtNull)
If idw_main.GetItemString(1,'OTM_Status') = 'N' and &
    (idw_Main.GetITEmString(1,'ord_status') = 'N' or &  
	idw_Main.GetITEmString(1,'ord_status') = 'P' or &
	idw_Main.GetITEmString(1,'ord_status') = 'I' or &
	idw_Main.GetITEmString(1,'ord_status') = 'A' or &	
	idw_Main.GetITEmString(1,'ord_status') = 'L') Then // Dinesh - 05/08/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
	
	If Not IsNull(idw_main.GetItemDateTime(1, 'schedule_date')) and gs_project <> 'PANDORA'  Then
//	If Not IsNull(idw_main.GetItemDateTime(1, 'schedule_date')) Then
		idw_main.setitem(1,'schedule_date', ldtNull )
	End if
End If

//TAM 04/2017 - Pandora now wants to set the default schedule date from the lookup table.  This may change if they come up with a more detailed requirements	
//TAM 04/2017 - We are comparing the Cutoff time to the Delivery_master.Ord_Date and excluding Weekends
If gs_project = 'PANDORA' Then
	If IsNull(idw_main.GetItemDateTime(1, 'schedule_date')) Then
		//GailM 08/08/2017 SIMSPEVS-537 - SIMS to provide advance ESD cutoff configuration via GUI  Cut_Off_Time
		//   Query Carrier table for CarrierAddress1 that contains the code for ESD determination

		Execute Immediate "Begin Transaction" using SQLCA;
		//select address_1 into :lsCarrierAddr1 from carrier_master where carrier_code =:lsCarrier;
			Select Top 1 address_1 Into :lsCarrierAddr1 From carrier_master Where project_id = 'PANDORA'
			and address_1 in ( 'VENDOR PAID SHIPMENT', 'FEDEX','UPS','EXPEDITORS','SHUTTLE','DHL' )
			and ( inactive is null or inactive = 0 ) And user_field1 = :lsSchCd using SQLCA;

		ldtScheduleDate = f_delivery_advance_esd_configuration( lsWH,  ldtOrdDate, ldtRDD, lsMIMOrder, lsCarrierAddr1, ls_To_Cust )	
		idw_main.setitem(1,'schedule_date', ldtScheduleDate )
		
		UPDATE delivery_master SET schedule_date = :ldtScheduleDate WHERE project_id =  'PANDORA' AND do_no = :lsDoNo;
		Execute Immediate "COMMIT" using SQLCA;

		lsMessage =  'Set ESD: ' + String( ldtScheduleDate ) +   ' using WhCode: ' + lsWH + ', Carrier: ' + lsCarrierAddr1 + '. MIMOrder: ' + lsMIMOrder + '. CustCode: ' + ls_To_Cust + '. OrdDate: '  + string( ldtOrdDate ) + ', and RDD: ' + string( ldtRDD )
		f_method_trace_special(gs_project, this.ClassName( ) + ' - wf_enable_otm_status', lsMessage, lsDoNo, ' ',' ',  lsInvoice ) 

	End if
End If

return 0
end function

public subroutine getdeletedskus ();//TimA 02/23/12 OTM Project
//Populates an array of Sku's that need to be sent to OTM on the delete

Long llRowCount, llRowPos

isDoNoDelete = idw_main.GetITemString(1,'Do_no')  

llRowCount =  idw_detail.Rowcount()
For llRowPos = 1 to llRowCount
	isDeleteSkus[llRowPos] = idw_detail.GEtItemString(llRowPOs,'sku')
Next

end subroutine

public function integer uf_nike_verify_pack (boolean abshowerrormsg);
string ls_ctn, ls_sku
integer limaxcartonno
long ll_total_pick_qty, ll_total_pack_qty, llfindrow

integer li_Pack_Idx, li_Find
boolean ib_Error = false


for li_Pack_Idx = 1 to idw_Pack.RowCount()
	
	ls_ctn  =idw_Pack.GetItemString(li_Pack_Idx,'carton_no')
	ls_sku  = idw_Pack.GetItemString(li_Pack_Idx,'sku')
	
	
	
	if li_Pack_Idx < idw_Pack.RowCount() then
	
		li_Find = idw_Pack.Find("carton_no= '"+ls_ctn+"' and sku = '"+ ls_sku + "'", li_Pack_Idx + 1, idw_Pack.RowCount())
		
		 
		
		if li_Find > 0 then
			

			
//			MessageBox ("Import from Scanner", "Row " + string(li_Pack_Idx) + "  and  " + string(li_Find) + " contain duplicate skus for a single carton. This is not allowed.")
			
			idw_Pack.SetItem(li_Find, "Trax_status_desc", "SKUERROR")
			
			ib_Error = true
			
		end if
	
	end if
next


long llCartonCount


llCartonCount = idw_Pack.GetItemNumber( 1, "c_carton_count")

if abShowErrorMsg then

	if liMaxCartonNo > llCartonCount then
		MessageBox('Import From Scannner!', 'WARNING: Please check the carton No. in scanner!')
	end if

end if

	
//To check at UPLOAD Total PACK DATA UPLOAD should be equal to total pick qty.  
//MEA - 04/12 - Added Per Yati

if idw_Pick.RowCount() > 0 then
	ll_total_pick_qty = idw_Pick.GetItemNumber( 1, "total_qty_t")
end if

if idw_Pack.RowCount() > 0 then
	ll_total_pack_qty = idw_Pack.GetItemNumber( 1, "compute_2")
end if



If IsNull(ll_total_pack_qty) then ll_total_pack_qty = 0 
If IsNull(ll_total_pick_qty) then ll_total_pick_qty = 0 


if ll_total_pack_qty <> ll_total_pick_qty then
	
	
	if abShowErrorMsg then 
	
		MessageBox ('Import from Scanner', 'Warning: Total PACK qty data upload should be equal to Total PICK qty.')
		
	end if	
		
	datastore lds_compare
	long llrowcount, llrowpos
	string ls_supp_code

	string lsfind
	long ll_row1, ll_row2
	string ls_componant_ind
	decimal ld_pack_qty, ld_pick_qty
		
	lds_compare = Create DataStore
	lds_Compare.dataObject = 'd_do_compare'
	
	//Sum The Picking
	llRowCount = w_do.idw_pick.RowCOunt()
	For llRowPos = 1 to llRowCount
		
		ls_sku = w_do.idw_pick.GetItemString(llRowPos, "sku")
		ls_supp_code = w_do.idw_pick.GetItemString(llRowPos, "supp_code")
//		llLineItemNo = w_do.idw_pick.getitemnumber(llRowPos,'line_item_no')
	
		If w_do.idw_pick.GetItemString(llRowPos,'component_ind') = 'Y' or w_do.idw_pick.GetItemString(llRowPos,'component_ind') = 'N' or &
			w_do.idw_pick.GetItemString(llRowPos,'component_ind') = 'W' Then
		
				// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier, 07/03 - Added 'A' for 'All suppliers equally, 'Y' = Primary first
				lsFind =  "Upper(sku) = '" + Upper(ls_sku)  +  "' " //and Line_item_no = " + string(llLIneItemNo)
				If g.is_allow_alt_supplier_pick = "N" Then
					lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
				End If
		

				ll_row1 = lds_Compare.find(lsFind, 1,lds_Compare.rowcount())
	
				if ll_row1 < 1 then
					ll_row2 = lds_Compare.insertrow(0)
					lds_Compare.setitem(ll_row2,'sku',ls_sku)
					lds_Compare.setitem(ll_row2,'supp_code',ls_supp_code)
					lds_Compare.setitem(ll_row2,'pick',w_do.idw_pick.getitemnumber(llRowPos,'quantity'))
					//lds_Compare.setitem(ll_row2,'line_item_no',llLineItemNo)
				else
					lds_Compare.setitem(ll_row1,'pick',lds_Compare.getitemnumber(ll_row1,'pick') + w_do.idw_pick.getitemnumber(llRowPos,'quantity'))
				end if
			
		End If	
		
	next /*Pick*/
	
	//Sum the Packing
	llRowCount = w_do.idw_Pack.RowCount()
	For lLRowPos = 1 to lLRowCount
		
		ls_sku = w_do.idw_pack.GetItemString(llRowPos, "sku")
		ls_supp_code = w_do.idw_pack.GetItemString(llRowPos, "supp_code")
		//llLineItemNo = w_do.idw_pack.GetITemNumber(llRowPos,'line_item_no')
		ls_componant_ind= w_do.idw_pack.GetItemString(llRowPos,'component_ind')
		
		If IsNull(ls_componant_ind) then ls_componant_ind = 'N' 
		
//		If ls_componant_ind = 'Y' or ls_componant_ind = 'N' or ls_componant_ind = 'W' Then
			
			// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier
			lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' " // and Line_item_no = " + string(llLIneItemNo)
			If g.is_allow_alt_supplier_pick = "N" Then
				lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
			End If
	

			ll_row1 = lds_Compare.find(lsFind, 1,lds_Compare.rowcount())
	
			if ll_row1 < 1 then
				Messagebox("Delivery Order","Packing inventory Does not exist in picking list, please check!", StopSign!)
//				w_do.tab_main.selecttab(5)
//				f_setfocus(w_do.idw_pack, llRowPos, "sku")
			else
				if isnull(lds_Compare.getitemnumber(ll_row1,'pack')) then
					ld_pack_qty=w_do.idw_pack.getitemnumber(llRowPos,'quantity')
					lds_Compare.setitem(ll_row1,'pack',ld_pack_qty)
				else
					lds_Compare.setitem(ll_row1,'pack',lds_Compare.getitemnumber(ll_row1,'pack') + w_do.idw_pack.getitemnumber(llRowPos,'quantity'))
				end if
			end if
			
//	End If 
		
	Next /*Pack*/
	
	// Validate picking records quantity match packing records'

	For llRowPos = 1 to lds_compare.rowcount()
	
		ld_pick_qty=lds_compare.getitemnumber(llRowPos,'pick')
		ld_pack_qty=lds_compare.getitemnumber(llRowPos,'pack')
		
		If IsNull(ld_pick_qty) then ld_pick_qty = 0
		If IsNull(ld_pack_qty) then  ld_pack_qty = 0		
		
		
//		Messagebox (string(ld_pick_qty), ls_sku + ":" + string(ld_pack_qty))
		
		if lds_compare.getitemnumber(llRowPos,'pack') <> lds_compare.getitemnumber(llRowPos,'pick') then
					
			ls_sku = lds_compare.getitemstring(llRowPos,'sku')
			//llLIneItemNo = lds_compare.getitemnumber(llRowPos,'line_item_no')
			lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' " // and Line_item_no = " + string(llLIneItemNo)
	
			llFindRow = 0 
	
	
	
			do
				
				llFindRow = idw_Pack.Find(lsFind,llFindRow + 1,idw_Pack.RowCOunt())
		
		
				
				if llFindRow > 0 then
					
					idw_Pack.SetItem(llFindRow, "Trax_ship_ref_Nbr", "QTYERROR")
				
//					llFindRow = idw_Pack.Find(lsFind,llFindRow + 1,idw_Pack.RowCOunt())
					
					
					
				end if
		
	
				
			loop until llFindRow = 0 or llFindRow >= idw_Pack.RowCount()
				
				
				
//				MessageBox("Delivery Order", "Packing Quantity is not Equal to that of picking, please check! Sku = " + lds_compare.getitemString(llRowPos,'sku') + ", Pick = " + String(lds_compare.getitemnumber(llRowPos,'pick')) + ", pack = " + String(lds_compare.getitemnumber(llRowPos,'pack')), StopSign!)	
				
		End If
			
	next

//	For llRowPos = 1 to w_do.idw_pick.RowCount() /*each Pick*/
//
//		llLineItemNo = w_do.idw_pick.getitemnumber(llRowPos,'line_item_no')
//
//		If w_do.idw_Pack.RowCount() > 0 Then
//			lsFind =  "Line_item_no = " + string(llLIneItemNo)
//			ll_row = w_do.idw_Pack.Find(lsFind, 1, w_do.idw_Pack.RowCount())
//	
//	
////			If ll_row < 1 Then
////				Messagebox(w_do.is_title,"Packing List information missing for Line Item " + string(llLIneItemNo) + ". Please check!",StopSign!)
////				w_do.tab_main.selecttab(5)
////				return -1
////			End If	
//		End If
//	Next
		
		
end if

	
Return 0
	
end function

public function boolean wf_set_state_ci_lt_button ();	
if Upper(gs_project) = 'PANDORA' then
	// LTK 20120512  Pandora #370 Function added
	boolean lb_enabled, lb_minimum_requirements, lb_international_non_eu_to_ue
	boolean lb_check_eu_to_ue, lb_rtn
	
	// Minimum requirements were taken from ue_save
	lb_minimum_requirements = &
		idw_main.RowCount() > 0 and &
		idw_main.GetItemString(1,"ord_status") <> "C" and &
		idw_main.GetItemString(1,"ord_status") <> "D" and &
		idw_main.GetItemString(1,"ord_status") <> "V" and &
		idw_main.GetItemString(1,"ord_status") <> "H" and  &
		idw_main.GetItemString(1,"ord_status") <> "Q" and  & 
		idw_main.GetItemString(1,"ord_status") <> "R" and  &
		idw_pick.RowCount() > 0 and &
		idw_pack.RowCount() > 0
	
	if lb_minimum_requirements then
	
		if is_warehouse_cd <> Upper(Trim(idw_main.object.wh_code[1])) then
			is_warehouse_cd = Upper(Trim(idw_main.object.wh_code[1]))
		
			select Country 
			into :is_warehouse_country
			from Warehouse
			where Wh_Code = :is_warehouse_cd;
		end if
		
		if is_to_country <> Upper(Trim(tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country"))) then
			is_to_country = Upper(Trim(tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country")))
		end if
		
		if is_warehouse_country <> is_to_country then
			lb_rtn = wf_is_country_eu_to_eu(is_warehouse_country, is_to_country)
			lb_international_non_eu_to_ue = NOT lb_rtn
		end if
	
// TAM 2018/11/28 - DE7430 - Need to add TMS values to the If statement
//		if Upper(Trim(idw_main.object.otm_status[1])) = 'N' or Upper(Trim(idw_main.object.otm_status[1])) = 'P' or Upper(Trim(idw_main.object.otm_status[1])) = 'R' then
		if Upper(Trim(idw_main.object.otm_status[1])) = 'N' or Upper(Trim(idw_main.object.otm_status[1])) = 'P' or Upper(Trim(idw_main.object.otm_status[1])) = 'R' or Upper(Trim(idw_main.object.otm_status[1])) = 'T' or Upper(Trim(idw_main.object.otm_status[1])) = 'Z' then
			lb_enabled = lb_international_non_eu_to_ue
		end if
	
		if lb_enabled = FALSE then
			// Enable the button if the carrier is in list of CH Robinson Carriers
	
			String ls_carrier_name, ls_carrier_code
			Long ll_carrier_count
	
			if idw_other.RowCount() > 0 then
				ls_carrier_code = idw_other.Object.carrier[1]
	
				select carrier_name
				into :ls_carrier_name
				from carrier_master WITH (NOLOCK)
				where project_id = 'PANDORA'
				and carrier_code = :ls_carrier_code;
	
				if Len(ls_carrier_name) > 0 then
					select count(*)
					into :ll_carrier_count
					from lookup_table WITH (NOLOCK)
					where project_id = 'PANDORA'
					and code_type = 'CI_LT'
					and code_descript = :ls_carrier_name;
	
					if ll_carrier_count > 0 then
						lb_enabled = TRUE
					end if
				end if
			end if
		end if

		//TAM 2018/11/12 - S25742 - Add logic to Enable CI button for FTZ shipments in SG. all 3 conditions must be met - START
		If lb_enabled = false then 
			//all 3 conditions must be met
			//1. Same Ship From/Ship To countries
			//2. dm.uf2 (from Location) must be in lookup table OR
			//3. cust_Code must be in lookup table
			String	ls_uf2, ls_cust_code 
			long ll_ftz_count
		
			If is_warehouse_country = is_to_country then  
				ls_uf2 = idw_main.GetItemString(1,"user_field2")
				ls_cust_code = idw_main.GetItemString(1,"Cust_Code")
			
				select count(*) 
				into :ll_ftz_count
				from lookup_table WITH (NOLOCK)
				where project_id = 'PANDORA'
				and code_type = 'CI_FTZ' and (code_id = :ls_uf2 or code_id = :ls_cust_code);
				If ll_ftz_count >= 1  then //entry found in lookup table
					lb_enabled = TRUE
				End If
			End if
		End if
		//TAM 2018/11/12 - S25742 - Add logic to Enable CI button for FTZ shipments in SG. all 3 conditions must be met - END	end if

	end if

	icb_ci_load_tender.enabled = lb_enabled
	
	// Begin - Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer
if Upper(gs_project) = 'PANDORA'	then
		is_eng=tab_main.tabpage_pack.rb_eng.text 
		 if tab_main.tabpage_pack.rb_eng.checked = TRUE and is_eng='English' then
			 tab_main.tabpage_pack.cb_ci_load_tender.enabled= False
			 lb_enabled= False
		end if
end if
// End - Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer

	return lb_enabled



elseif Upper(gs_project) = 'PHYSIO-MAA' or Upper(gs_project) = 'PHYSIO-XD' then

	//	Per the BRD, the CI button should be enabled when the following conditions are met
	//
	//	Criteria											Situation 
	//	--------------------------------------------		---------------------------------------------------------------
	//	Export Document flag							Value should be Y
	//	Packing list generated and saved			Yes
	//	Gross Weights entered for all cartons		Yes
	//	Serial numbers									Must be entered and saved for serialized items
	//	Picking = Packing								Pack list should be complete based on picked items

	 boolean lb_enable_button = false
	 boolean lb_sims_can_print = true		// if DM.Packlist_Notes begins with an underscore '_' then SIMS cannot print the CI and Physio must print due to leagal requirements

	if idw_main.RowCount() >= 1 then
		lb_sims_can_print = ( Left(String(idw_main.Object.Packlist_Notes[1]), 1) <> "_" ) or IsNull(idw_main.Object.Packlist_Notes[1])
	end if

	if Upper(Trim(idw_other.Object.user_field20[1])) = 'Y' and idw_pack.RowCount() > 0 and NOT ib_changed and lb_sims_can_print then
		// Ensure all Serials are entered
		dec ldQty
		long i, llCount, llRowCount, llRowPos
		For i = 1 to idw_pick.RowCount() /*get the qty required on outbound*/
			If idw_pick.GetITemString(i,'serialized_ind') = 'O' or idw_pick.GetITemString(i,'serialized_ind') = 'B' Then
				ldQty = ldQty + idw_pick.GetItemNumber(i,'quantity')
			end if				
		Next /*Pick Row */
		
		llCount = 0
		llRowCount = tab_main.tabpage_serial.dw_serial.RowCount()
		For llRowPos = 1 to llRowCount
			SetMicroHelp("Checking Serial Number totals " + String(llRowPos) + " of " + String(llRowCount))			

			If tab_main.tabpage_serial.dw_serial.GetITemString(llRowPos,'serialized_ind') = 'O' or tab_main.tabpage_serial.dw_serial.GetITemString(llRowPos,'serialized_ind') = 'B' Then
				//This is baseline counting of serail numbers
				llCount += tab_main.tabpage_serial.dw_serial.getITemNumber(llRowPos,'Quantity')
			End If
		Next

		if ldQty = llCount then
			lb_enable_button = true
			
			dec ld_weight
			llRowCount = idw_pack.RowCount()
			for i = 1 to llRowCount
				ld_weight = idw_pack.Object.weight_gross[i]
				if IsNull(ld_weight) or ld_weight <= 0 then
					lb_enable_button = false
					exit
				end if
			next
			
		end if
	end if
	SetMicroHelp("")
	icb_ci_load_tender.enabled = lb_enable_button
	
	return lb_enable_button
end if

end function

public function boolean wf_fwd_transferorder ();//Jxim 11/26/2012 BRD #464 Fwd Picking; This function find if there is a transfer order created for Fwd pick Inventroy
String ls_wh_code, ls_Sku, ls_Owner
Long llOwnerID, ll_rowcount, i, ll_StockTransf
Boolean lb_stockTransf_created

lb_stockTransf_created = False

ls_Wh_code = w_do.idw_main.GetItemString(1,'wh_code')
ls_Owner = w_do.idw_other.GetItemString(1,'user_field2')

//GailM 09/05/2008 DE6115  Found a problem with is_sku.  Missing first single quote.  Check it.
If left(is_sku,1) <> "'" Then
	is_sku = "'" + is_sku
End If


//14-APR-2017 :Madhu Added ProjectId to avoid return more than 1 OwnerId
If 	gs_project = 'PANDORA' Then
	If Not Isnull(ls_Owner) or ls_Owner <> '' Then 
		Select Owner_ID into :llOwnerID
		From Owner
		Where Project_Id= :gs_project and Owner_cd = :ls_Owner
		Using SQLCA;
					IF SQLCA.SQLCode <> 0 THEN
						//Jxlim 11/26/2012 Added Rollback to prevent block/lock
						Execute Immediate "ROLLBACK" using SQLCA;
						MessageBox ("Error", SQLCA.SQLErrText )
					END IF
	End If		
End If

//Jxlim 12/20/2012 Pandora Fwd Pick BRD #464; added sku to the query statement 
//Jxlim 11/20/2012 Pandora Fwd Pick BRD #464
//Checking this when there is detail record ; If there Stock Transfer created as a result of this outbound ord_status update, If so prompt to delete before reset ord_status to 'N'
If 	gs_project = 'PANDORA' Then
	Select Count(*) Into :ll_StockTransf
	From Transfer_master with (nolock), Transfer_Detail with (nolock)
	Where Transfer_Master.TO_No = Transfer_Detail.TO_No
	And Transfer_Master.Project_id = 'PANDORA'
	And Transfer_Master.S_Warehouse = :ls_wh_code
	And Transfer_Detail.Owner_id = :llOwnerID		
	And Transfer_Detail.Sku In (:is_sku)		
	And Transfer_Master.Ord_Type ='R'
	And Transfer_Master.Ord_Status Not In ('C', 'V')
	Using SQLCA;			
End If

		IF SQLCA.SQLCode <> 0 THEN
			//Jxlim 11/26/2012 Added Rollback to prevent block/lock
			Execute Immediate "ROLLBACK" using SQLCA;
			MessageBox ("Error", SQLCA.SQLErrText )
		END IF				
				
//If there is a transfer order for this outbound, then Stock transfer was auto created. (This (To_no) was created thru websphere when outbound picking is generated)
If ll_stockTransf > 0 Then					
	lb_stockTransf_created = True
Else
	lb_stockTransf_created = False
End If		
						
Return lb_stockTransf_created

end function

public function integer uf_stryker_validate_against_file ();// 11/12 - MEA for Stryker
//There’s a new scope change on 2 validations for Stryker India (yet again!). Please provide the IT costing for this change:
//
//Overview: We use Stryker’s batch scanner to scan during outbound and a csv file will be generated. The item numbers in this file needs to be validated against SIMS order details. We need a new upload function in SIMS to upload the csv file which will then perform the following validations.
//
//First validation: Stryker’s csv file against SIMS outbound order
//
//In the Outbound order EDI file, Stryker will send us the SKU (this is JDE Item number). However, for the same physical parts, the JDE item number can be different. This is due to the parts being received from different suppliers. And there’s limitation in their JDE system in which same part cannot have multiple suppliers.
//
//JDE Item Number	Item Number w/o '0-A.'
//0225-414-000-A	225414000
//0225-414-000A	225414000
//
//For validation, SIMS to strip off the leading 0, hyphens, and the last alphabet from the SKU on both the csv file and order detail (e.g. from 0225-414-000-A  to Item Number w/o '0-A.'). If they match for ALL SKUs in the order, proceed to 2nd validation. If any SKU fails, pop up an error message.
//
//Second validation: Lot# and Expiry date
//Once the above is successful, we’ll then validate the lot# and/ or expiry date (for Exp Dt enabled SKUs) against the csv file for each SKU.
//
//If either of the above fails, SIMS to disallow ops to confirm the outbound order.


datastore lds_import

If ib_changed Then
	messagebox(is_title,'Please save changes before validation!')
	return -1
End If


//String ls_imp_path
//
String ls_dono,ls_file,lsOrderNo,ls_ctn,ls_sku,ls_outstring1

Boolean lb_exist, ibFull
Integer li_filept,li_RC, li_Pos
String	lsFileName, ls_Lot_Num, ls_Exp_Date
boolean ib_error
Long ll_Qty

lds_import = create datastore

lds_import.dataobject = "d_stryker_validate_file"

//If no file found, prompt...
//if not lb_exist Then
	li_rc = GetFileOpenName("Select File to Import",ls_file, lsFileName)
	If li_rc < 1 Then Return 0
	
	lb_exist = FileExists(ls_file)
//End If

long ll_RowCount, li_idx


string ls_order_type, ls_order_number



If lb_exist = TRUE then
	
	//Import in DW.

	lds_import.ImportFile (  CSV!, ls_file, 2 )
	
	ll_RowCount = lds_import.RowCount()
	
	//Remove any leading 0s for order number
	
	for li_idx = 1 to ll_RowCount
	
		lds_import.SetItem( li_idx, "col4", trim(string(long(lds_import.GetItemString( li_idx, "col4")))))

		
	next


	//Remove any records that are no for this order.
	

	
	ls_order_type = left(idw_main.GetItemString( 1, "invoice_no"), 2)

//TAM 2013\11 - Change order number validation.  Stryker started sending funkey order numbers(Appending an alpa string after order number). The CSV file only has the first 8 numeric mumbers.
//	ls_order_number = string(long(mid(idw_main.GetItemString( 1, "invoice_no"),3)))
	ls_order_number = string(long(mid(idw_main.GetItemString( 1, "invoice_no"),3, 8)))

	for li_idx =  ll_RowCount to 1 step -1
	
	
		if trim(lds_import.GetItemString( li_idx, "col3")) = trim(ls_order_type) and &
		   trim(lds_import.GetItemString( li_idx, "col4")) = trim(ls_order_number) then
			
		
			
		else
			
			lds_import.DeleteRow(li_idx)
			
		end if
	next
	
	
	if lds_import.RowCount() = 0 then
		
		MessageBox ("No Rows", "There are no rows for this order in this file. ("+ls_order_type+") " + ls_order_number + ".")
		
		tab_main.tabpage_main.st_validation_msg.text = "Validation completed with Errors."
		
		Return -1
		
	end if
	
	
	
	ll_RowCount = lds_import.RowCount()
	
	
	for li_idx = 1 to ll_RowCount
	
		ls_sku =  lds_import.GetItemString( li_idx, "col9")
		
		
		//Remove ' if present.
		
		if left(ls_sku, 1) = "'" then ls_sku = mid(ls_sku, 2)
		if right(ls_sku, 1) = "'" then ls_sku = mid(ls_sku, 1, len(ls_sku) - 1)
		
		
		//Remove leading 0s.
		
		do
	
			if left(ls_sku, 1) = "0" then
				
				ls_sku = mid(ls_sku, 2)
				
				
			end if
	
		loop until left(ls_sku, 1) <> "0"
	
		string ls_rightmost
		
		//Remove Letter if present at end.
		
		ls_rightmost = upper(right(ls_sku, 1))
		
//		if asc(ls_rightmost) >= 65 and asc(ls_rightmost) <= 90 then
		if asc(ls_rightmost) >= 48 and asc(ls_rightmost) <= 57 then
			
			//Do Nothing
			
		else

			
			ls_sku = mid(ls_sku, 1, len(ls_sku) - 1)
			
		end if 
	
		//Remove leading -s.
		
		
		li_Pos = Pos(ls_sku, "-")
		
		do
	
			if li_Pos > 0 then
				
				ls_sku = left(ls_sku, li_Pos - 1) + mid(ls_sku, li_Pos + 1)
			
				li_Pos = Pos(ls_sku, "-")
				
			end if
	
		loop until li_Pos = 0
	
		lds_import.SetItem( li_idx, "col9", ls_sku )
		
		//Lot Number
		
		ls_Lot_Num = lds_import.GetItemString( li_idx, "col11")
		
		//Remove ' if present.
		
		if left(ls_Lot_Num, 1) = "'" then ls_Lot_Num = mid(ls_Lot_Num, 2)
		if right(ls_Lot_Num, 1) = "'" then ls_Lot_Num = mid(ls_Lot_Num, 1, len(ls_Lot_Num) - 1)		
		
		 lds_import.SetItem( li_idx, "col11", ls_Lot_Num)
		
		//Exp Date
		
	
	next

	for li_idx = 1 to  idw_pick.RowCount ()
		
		
		ls_sku = idw_pick.GetItemString (li_idx, "sku")
		
		//Remove leading 0s.
		
		do
	
			if left(ls_sku, 1) = "0" then
				
				ls_sku = mid(ls_sku, 2)
				
				
			end if
	
		loop until left(ls_sku, 1) <> "0"
	
		//Remove Letter if present at end.
		
		ls_rightmost = upper(right(ls_sku, 1))
		
//		if asc(ls_rightmost) >= 65 and asc(ls_rightmost) <= 90 then
		if asc(ls_rightmost) >= 48 and asc(ls_rightmost) <= 57 then
			
			//Do Nothing
			
		else
			
			ls_sku = mid(ls_sku, 1, len(ls_sku) - 1)
			
		end if 
	
		//Remove leading -s.
		
		
		li_Pos = Pos(ls_sku, "-")
		
		do
	
			if li_Pos > 0 then
				
				ls_sku = left(ls_sku, li_Pos - 1) + mid(ls_sku, li_Pos + 1)
			
				li_Pos = Pos(ls_sku, "-")
				
			end if
	
		loop until li_Pos = 0

		ls_Lot_Num =  idw_pick.GetItemString (li_idx, "lot_no")
		
		
		ls_Exp_Date =  String(idw_pick.GetItemDateTime(li_idx, "expiration_date"), "YYYYMMDD")
		
	
		
		integer  li_find
		
	
		
		if ls_Exp_Date <> "29991231" then
		
			li_find = lds_import.Find( "col9='"+ls_sku+"' and col11 = '" + ls_Lot_Num + "' and col14 = '"+ls_Exp_Date+"'", 1, lds_import.Rowcount())
			
			if li_find = 0 then
				
				MessageBox ("Sku / Lot No / Exp Date Not Found", "Pick Row: ("+string(li_idx)+") - Sku ("+ ls_sku + ") / Lot No ("+ls_Lot_Num+") / Exp Date ("+ls_Exp_Date+") not found in file.")
				
				ib_error = true
				
			else
				
				//Check Qty
				
				ll_Qty =  long(lds_import.GetItemString( li_find, "col10"))
				
				//group based on Line#, SKU, Lot# for the validation.
				
				long ll_line_item_no, ll_Pick_Qty
				
				ll_line_item_no =  idw_pick.GetItemNumber(li_idx, "line_item_no")
				
				ll_Pick_Qty = 0
				
				li_find = idw_pick.Find( "line_item_no="+ string(ll_line_item_no)+" and lot_no = '" + ls_Lot_Num + "'", 1, idw_pick.Rowcount())

				DO
					
					if li_find > 0 then
						
						ll_Pick_Qty = ll_Pick_Qty + idw_pick.GetItemNumber(li_find, "quantity")
						
						if li_find = idw_pick.RowCount() then
							li_find = li_find + 1
						else
							li_find = idw_pick.Find( "line_item_no="+ string(ll_line_item_no)+" and lot_no = '" + ls_Lot_Num + "'",(li_find + 1), idw_pick.Rowcount())
						end if
				
					
					end if
				
					
				LOOP UNTIL li_find = 0 or li_find > idw_pick.RowCount()
				
			
				
				if ll_Qty <> ll_Pick_Qty then
					
					MessageBox ("Quantity Does Not Match File", "Pick Row: ("+string(li_idx)+") - Sku ("+ ls_sku + ") / Lot No ("+ls_Lot_Num+") / Exp Date ("+ls_Exp_Date+") does not match Total QTY ("+string(ll_Pick_Qty)+") in file.")
				
					ib_error = true
					
				end if
				
			end if
			
		else
			

			li_find = lds_import.Find( "col9='"+ls_sku+"' and col11 = '" + ls_Lot_Num + "'", 1, lds_import.Rowcount())  //and col14 = '"+ls_Exp_Date+"'"
			
			if li_find = 0 then
				
				MessageBox ("Sku / Lot No / Exp Date Not Found", "Pick Row: ("+string(li_idx)+") - Sku ("+ ls_sku + ") / Lot No ("+ls_Lot_Num+")  not found in file.")    /// Exp Date ("+ls_Exp_Date+")
				
				ib_error = true
				
			else
				
				ll_Qty =  long(lds_import.GetItemString( li_find, "col10"))
				
				//group based on Line#, SKU, Lot# for the validation.
				
				ll_line_item_no =  idw_pick.GetItemNumber(li_idx, "line_item_no")
				
				ll_Pick_Qty = 0
				
				li_find = idw_pick.Find( "line_item_no="+ string(ll_line_item_no)+" and lot_no = '" + ls_Lot_Num + "'", 1, idw_pick.Rowcount())


				DO
					
					if li_find > 0 then
						
						ll_Pick_Qty = ll_Pick_Qty + idw_pick.GetItemNumber(li_find, "quantity")
						
						if li_find = idw_pick.RowCount() then
							li_find = li_find + 1
						else
							li_find = idw_pick.Find( "line_item_no="+ string(ll_line_item_no)+" and lot_no = '" + ls_Lot_Num + "'",(li_find + 1), idw_pick.Rowcount())
						end if
						

					end if
					
				
				LOOP UNTIL li_find = 0 or li_find > idw_pick.RowCount()
				
						
				
				if ll_Qty <> ll_Pick_Qty then

					MessageBox ("Quantity Does Not Match File", "Pick Row: ("+string(li_idx)+") - Sku ("+ ls_sku + ") / Lot No ("+ls_Lot_Num+")  does not match Total QTY ("+string(ll_Qty)+") in file.")    /// Exp Date ("+ls_Exp_Date+")
									
					ib_error = true
					
				end if
				
			end if
			
				
		end if
			
			

	next
	
	if ib_error then
		
		idw_main.SetItem( 1, "user_field22", "N")
	
		this.Trigger Event ue_Save()
		
		tab_main.tabpage_main.st_validation_msg.text = "Validation completed with Errors."
		
		MessageBox ("Validation Completed with errors.", "Validation completed with Errors.")
		
		
		
	else
		
		
		idw_main.SetItem( 1, "user_field22", "Y")
		
		this.Trigger Event ue_Save()
		
		icb_confirm.enabled = True
		
		tab_main.tabpage_main.st_validation_msg.text = "Successful Validation"
		
		MessageBox ("Validation Completed", "Successful Validation")
		
		
		
	end if 

end if

REturn 0

end function

public function integer wf_export_ws_tradenet_ipt ();
string lsDetailOutString, lsTemp, lsMasterOutString
string lsDelimitChar = ','
integer liFileRowNum = 0
integer liIdx
string lsSku, lsSupp_Code, lsHS_Code, lsDescription, ls_IM_User_field9, lsSupp_Name, ls_Rpt_Qty
string ls_UOM2, ls_UOM1
long ll_QTY2, llDetailFindRow, llLineItemNo, ll_pos
datastore idsOut
long llNewBatchSeq
datetime ldt_filerundate
decimal ld_Duty, ld_duty_total, ld_excise_rate, ld_CIF, ld_CIF_Total, ld_GST, ld_GST_total, ld_Amt_Total
				

string ls_path, ls_file

int li_rc


//li_rc = GetFileSaveName ( "Save Location",    ls_path, ls_file, "DOC",   "All Files (*.*),*.*" , "",    32770)
//
//
//
//IF li_rc = 1 Then
//
//   MessageBox ("ok", ls_file)
//	
//Else 
//	
//	Return 0
//
//End If

string lsPathOut, lsFileOutHeader, lsFileOutDetail
integer liFileNoHeader, liFileNoDetail



if idw_pick.RowCount() <= 0  or idw_detail.RowCount() <= 0 then
	
	MessageBox ("Error", "The are no detail or picking rows. Both must be completed for export.")
	Return 0
	
end if


//The path is stored in the lookup_table and is project dependant.

Select Code_Descript INTO :lsPathOut FROM lookup_table with (NoLock) 
	Where Project_ID = :gs_project AND Code_Type = 'CUSEXPPATH' USING SQLCA;

//MessageBox ("ok", lsPathOut)

If IsNull(lsPathOut) then lsPathOut = "C:\Export_Tradenet"


//INP00 = Header
//INP40 = Detail
//Orderno will be the order number from sims.
//Seq will be a sequence number.  
//This is needed because there is a limit of 50 rows on a file.  If there are more than 50 rows on an order we will increment the sequence for each 50 items.
//Date will have the date/time the file is created.  
//3.	Tradenet has a limit of 50 detail records per file.   If an order has more than 50 rows we need to actually split it into multiple files with a different Sequence for example Inbound order “1234” has 130 detail rows.  We would create 6 output files
//INP00 1234 001 20120728143000.dat 

ldt_filerundate = datetime(today(), now())

string lsOrderNo

lsOrderNo = idw_main.GetItemString( 1, "invoice_no")

liFileRowNum = 50

for liIdx = 1 to idw_pick.RowCount()

	lsDetailOutString = ""

	liFileRowNum = liFileRowNum + 1
	
	if liFileRowNum > 50 then
		
		liFileRowNum = 1
				
		//Get the Next Batch Seq Nbr - Used for all writing to generic tables   (Use same across all projects.)
// TODO
		llNewBatchSeq =  g.of_next_db_seq('WS-','Customs_Export','Seq_No')
		If llNewBatchSeq <= 0 Then
			MessageBox ("DB Error",  "*** Unable to retrieve the next available sequence number!")
			Return -1
		End If
	
		
		if liFileNoHeader > 0 then
			FileClose(liFileNoHeader)
			FileClose(liFileNoDetail)
		end if
		
		lsFileOutDetail = "IPT40"+lsOrderNo+ String(llNewBatchSeq) + string( ldt_filerundate,'yyyymmddhhss')  + "00" +  ".dat"
		
		lsFileOutHeader = "IPT00"+lsOrderNo+ String(llNewBatchSeq) + string( ldt_filerundate,'yyyymmddhhss')  + "00" +  ".dat"
	
		
		liFileNoHeader = FileOpen(lsPathOut + "\" +  lsFileOutHeader,LineMode!,Write!,LockREadWrite!,Replace!,EncodingUTF8!)
		liFileNoDetail = FileOpen(lsPathOut + "\" + lsFileOutDetail,LineMode!,Write!,LockREadWrite!,Replace!,EncodingUTF8!)
		
		if liFileNoHeader < 0 or liFileNoDetail < 0 then
			MessageBox ("Error", "Unable to open file.")
			Return 0
		end if
		
		//Create Header File
		
		//SeqNo	Int(4)	0001..0002	N	sequence number	default value = 9097	starting with 9097.  We need a new output file for each 50 details.  This is a Header level Sequence Number
	
		lsMasterOutString += String(llNewBatchSeq) +  lsDelimitChar			
		
		//MsgSq	Char(12)	1.99706E+11	N	message sequence	Date = todays date. SeqNo must be taken from field# 2.	Todays date(yyyymmdd) + Sequence # starting with 9097.  We need a new output file for each 50 details
		//<Date+SeqNo>	
		
		lsMasterOutString = String(ldt_filerundate, 'yyyymmdd') + String(llNewBatchSeq) +  lsDelimitChar	
		
		//MsgDate	Date	DD/MM/YYYY	N	date of declaration	todays date	Todays date(mm/dd/yyyy)
		
		lsMasterOutString += String(today(), "DD/MM/YYYY") +  lsDelimitChar

//		Removed per Carol Wong		
//		//DecType	Char(3)		Y	declaration type	"default value = DNG
		
		lsMasterOutString +=  'DNG' +  lsDelimitChar		
		
		//CargoPkg	Char(2)		Y	cargo packing type		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//TtQtyUnt	Char(3)		Y	total outer pack unit	default value = CTN	CTN'
		
		lsMasterOutString +=  'CTN' +  lsDelimitChar
		
		//TtQty	Numeric(15,4)		Y	total outer pack quantity		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//TtGWtUnt	Char(3)		Y	total gross weight unit		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//TtGWt	Numeric(15,4)		Y	total gross weight quantity		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//Refund Code	Char(4)		Y	Code Reason for Refund		<blank>
		
		lsMasterOutString +=   lsDelimitChar		

		//Extvalidity	Char(1)		Y	Reason for extension of validity date (STDID)		<blank>
		
		lsMasterOutString +=   lsDelimitChar	
		
		//Receiptid1	Char(17)		Y	receipient mailbox id		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//Receiptid2	Char(17)		Y	recipient mailbox id		<blank>

		lsMasterOutString +=   lsDelimitChar		
		
		//Receiptid3	Char(17)		Y	‘MR’ – receipient mailbox id		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//Suppind	Char(1)		Y	Supply Indicator (STDID)		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//Prevpmt	Char(11)		Y	Previous Permit Number		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//RefundNBR	Char(13)		Y	agreement	<blank>
		
		lsMasterOutString +=   lsDelimitChar		

		//AECode	Char(20)		Y	Declaring CR No	default value = 200201226C	 '200201226C'
		
		lsMasterOutString +=  '200201226C' +  lsDelimitChar
		
		//AENm1	Char(35)		Y	Name 1	default value = MENLO WORLDWIDE ASIA PACIFIC PTE LTD	 'MENLO WORLDWIDE ASIA PACIFIC PTE LTD'
		
		lsMasterOutString +=  'MENLO WORLDWIDE ASIA PACIFIC PTE LTD' +  lsDelimitChar
		
		//AENm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//AENm3	Char(35)		Y	Name 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGCode	Char(20)		Y	Inward Carrier Agent CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGNm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGNm3	Char(35)		Y	Name 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CCCode	Char(20)		Y	Claimant CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CCNm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CCNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CCNm3	Char(35)		Y	Name 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//IMCode	Char(20)		Y	Importer CR	"depend on order. All customers use their own CR# except Pernod Ricard Singapore.
		//Do not maintain customer CR# in the customer profile."	TBD - Possible User_Field on Delivery_Master or Supplier.
		
		lsMasterOutString +=   lsDelimitChar
		
		//IMNm1	Char(35)		Y	name1	depend on order. Value = Customer Name	
		
		lsMasterOutString +=   idw_main.GetItemString( 1, "Cust_Name") +  lsDelimitChar
		
		//IMNm2	Char(35)		Y	name2		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWCode	Char(20)		Y	Freight Forwarder CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWNm1	Char(35)		Y	name1		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWNm2	Char(35)		Y	name2		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWNm3	Char(35)		Y	Name3		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//RelCode	Char(7)		Y	place of release code	default value = LW274	LW274'

//      Changed per Carol Wong
//		lsMasterOutString +=  'LW274' +  lsDelimitChar

		lsMasterOutString +=  'KZ' +  lsDelimitChar

//      Changed per Carol Wong		
		//RelLocNAD	Char(105)		Y	place of release name and address1	default value = MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY	MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY'

//		lsMasterOutString +=  'MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY' +  lsDelimitChar
			
		lsMasterOutString +=  'KEPPEL FTZ' +  lsDelimitChar
			
			
		//RecCode	Char(7)		Y	place of receipt	default value = 'O' Per specs    //LW274	LW274'
		
		lsMasterOutString +=  'O' +  lsDelimitChar
		
		//TODO - Customer Name
		//RecLocNAD	Char(105)		Y	place of receipt name and  add1	default value = MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY	MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY'

		lsMasterOutString +=  'MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY' +  lsDelimitChar
		
		//BGInd	Char(1)		Y	bank guarantee indicator	default value = 'D'
		
		//TODO
		//Changed per Carol Wong
		
		lsMasterOutString +=  lsDelimitChar  // 'D' 
		
		//CCNric	Char(20)		Y	Claimant nric		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//CCName1	Char(35)		Y	Claimant name1		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//CCName2	Char(35)		Y	Claimant name2		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//CCName3	Char(35)		Y	Claimant name3		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtItems	Int(4)		Y	total no of items	depend on the total count of items in the order	Total Shipped on Picking
		
		//Changed per Carol
		
		lsMasterOutString +=  string( idw_pick.RowCount()) +  lsDelimitChar  //idw_pick.GetItemNumber (1, "compute_2")
		
		//UpdReq	Int(4)		Y	number of request for amendment		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtCifFob	Numeric(15,2)		Y	total cif/fob value	depend on order		- Loaded Below when totaled from the details

		lsMasterOutString +=  'TOTCIFPLACEHOLDER' +  lsDelimitChar

		//TtAmtPay	Numeric(15,2)		Y	total Amount payable	depend on order		- Loaded Below when totaled from the details

		lsMasterOutString +=  'TOTAMTPLACEHOLDER' +  lsDelimitChar
		
		//TtCedDut	Numeric(15,2)		Y	Total Ced Duty payable		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtExDut	Numeric(15,2)		Y	Total Excise Duty payable	depend on order	- Loaded Below when totaled from the details
		
		lsMasterOutString +=  'TOTDTYPLACEHOLDER' +  lsDelimitChar
		
		//TtRccdDut 	Numeric(15,2)		Y	Total Ced Duty payable	depend on order	<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtRExDut	Numeric(15,2)		Y	Total Excise Duty Refund	depend on order	TBD - I think this is Not Applicable on Inbound Material
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtRGST 	Numeric(15,2)		Y	Total GST refund	<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtGstPay	Numeric(15,2)		Y	Total Gst  payable	depend on order	Loaded Below when totaled from the details

		lsMasterOutString +=  'TOTGSTPLACEHOLDER' +  lsDelimitChar
		
		//Blawb	Char(17)		Y	OBL or AWB		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//GoodType	Char(1)	P-Dutiable Petroleumn, , L-Liq/Tob, M-Dutiable Motor Vehicle,  N-Normal Goods	Y	For internal control of goods	default value = L	L'
		
		lsMasterOutString +=  'L' +  lsDelimitChar
		
		//Option	Char(1)	S-Storage, X-Seastore, G-GST Exemption, E-GST/Duty Exemption	Y	Internal controls.		<blank>
		
		lsMasterOutString +=   lsDelimitChar
				
		//IsRefund	Char(1)	For Refund Purpose.		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		
		
	end if
	
	//Same as Header MSGSQ Todays date(yyyymmdd) + Sequence # starting with 9097.  We need a new output file for each 50 details
	
	//INP40 - HS Code information						
	//Field	Data Type	Format	NULL	Remarks	Values to be written in the file - Single/Multiple permit	
	//MsgSq	Char(12)	1.99706E+11	N	message sequence	follow the MsgSq in INP00 file	Same as Header MSGSQ Todays date(yyyymmdd) + Sequence # starting with 9097.  We need a new output file for each 50 details
	//		<Date+SeqNo>	
	
	lsDetailOutString = String(ldt_filerundate, 'yyyymmdd') + String(llNewBatchSeq) +  lsDelimitChar	
	
	//SerNo	Int(4)	1	N	serial number	is a serial# which starts from 1 & max up to 50. to be incremental by 1 for each line item	Actually a line number starting from 1 to 50.  We need a new output file for each 50 details so we start over with each output file

	lsDetailOutString += String(liFileRowNum) +  lsDelimitChar	
	
	//Need to grab a bunch of data from Item_Master
	//Will be used farther down
	
	lsSku = idw_pick.GetItemString(liIdx, "sku")
	lsSupp_Code = idw_pick.GetItemString(liIdx, "supp_code")
	llLineItemNo = idw_pick.GetItemNumber(liIdx, "line_item_no")
	
	string ls_IM_User_field10, ls_IM_User_field1
	
	Select Description, HS_Code, User_field9, UOM_2, QTY_2, UOM_1, User_field10, User_field1
	INTO  :lsDescription, :lsHS_Code, :ls_IM_User_field9, :ls_UOM2, :ll_QTY2, :ls_UOM1, :ls_IM_User_field10, :ls_IM_User_field1
		From Item_Master with (nolock)
		WHERE Sku = :lsSku AND
				  Supp_Code =:lsSupp_Code AND
				  Project_ID = :gs_project USING SQLCA;
	
	
	string lsDutiable_UOM
	decimal ldGST_Rate
	
	//HSCode	Char(10)		Y	hscode	depend on order	Item Master.HS_Code
	
	IF IsNull(lsHS_Code) THEN 
		lsHS_Code = ""
	ELSE		
		Select Dutiable_UOM, GST_Rate, Excise_Rate
			INTO  :lsDutiable_UOM, :ldGST_Rate, :ld_Excise_Rate
			From hs_code_profile with (nolock)
			WHERE HS_Code =:lsHS_Code AND
					  Project_ID = :gs_project USING SQLCA;
	END IF
	
	lsDetailOutString += lsHS_Code +  lsDelimitChar
	
	//ItemDesc1	Char(35)		Y	item desc 1	depend on order & max char allowed is 35. If more than 35, display in next column.	Item Master.description(Pos 1-35)


	if IsNull(lsDescription) then lsDescription = ""
	
	lsDetailOutString += Left(lsDescription,35) +  lsDelimitChar
	
	//ItemDesc2	Char(35)		Y	item desc 2	same as above	Item Master.description(Pos 36-70)
	
	lsDetailOutString += Mid(lsDescription,36, 35) +  lsDelimitChar
	
	//ItemDesc3	Char(35)		Y	item desc 3	same as above	<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//ItemDesc4	Char(35)		Y	item desc 4	same as above	<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//ItemDesc5	Char(35)		Y	item desc 5	same as above	<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//Brand	Char(35)		Y	brand name		<blank>
	
	lsTemp = ls_IM_User_field10
	
	if IsNull(lsTemp) then lsTemp = ''
	
	lsDetailOutString += lsTemp + lsDelimitChar	
	
	//Model	Char(35)		Y	model name		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//IMDGDesc	Char(1)	Indicator=’Y’	Y	dangerous goods indicator		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//CtyCode	Char(2)		Y	country code (cty of origin)	depend on order	Delivery_Picking.Country_of_Origin
	
	lsTemp = idw_pick.GetItemString(liIdx, "Country_of_Origin")
	
	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	
	
	//CurLot	Char(30)		Y	current lot number	depend on order	Delivery_Picking.Lot_No
	
	lsTemp = idw_pick.GetItemString(liIdx, "Lot_No")
	
	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	
		
	//PrevLot	Char(30)		Y	previous lot number		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//QtyUnt	Char(3)		Y	Item quantity unit	depend on order	Delivery_Detail.User_Field2  (W&S sends in the UOM that inventory is reported in.  They are using cases and there may be 6 bottles per case.  We only store eaches in inventory.)

	llDetailFindRow = idw_detail.Find("Line_Item_No = " + String(llLineItemNo) + " and Upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + upper(lsSupp_Code) + "'",1,idw_detail.RowCount())

//	if llDetailFindRow > 0 then
		
	lsTemp =  idw_detail.GetItemString(llDetailFindRow, "user_field2")

	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	
	
		
//	else
//		lsDetailOutString += lsDelimitChar
//	end if


//TODO
	//Qty	Numeric(15,4)		Y	Item quantity	depend on order	"This is where it gets customized here is the formulat to determine what the QTY is that gets reported. Delivery_Detail.User_Field1 has the number of units per UOM. 

	//if delivery_detail.user_field2  = delivery_detail.uom then QTY = delivery_picking.QTY Else  
	//QTY = Delivery_Picking.qty /( delivery_detail.req_qty / dec(delivery_detail.user_field1)
	
	if llDetailFindRow > 0 then
		
		//if delivery_detail.user_field2  = delivery_detail.uom then QTY = delivery_picking.QTY Else  
		
		if  trim(idw_detail.GetItemString(llDetailFindRow, "user_field2")) = trim(idw_detail.GetItemString(llDetailFindRow, "uom")) then
	
			ls_Rpt_QTY = string(idw_pick.GetItemNumber(liIdx, "quantity"))
		
		else

			If ll_QTY2 > 0 Then 
				ls_Rpt_Qty = string(idw_pick.GetItemNumber(liIdx, "quantity") / ll_QTY2,'###########.0000')
			Else
				ls_Rpt_QTY = string(idw_pick.GetItemNumber(liIdx, "quantity"),'###########.0000')
			End If			

		end if
		
		If IsNull(ls_Rpt_Qty) then ls_Rpt_Qty = ""
		
		lsDetailOutString += ls_Rpt_Qty +  lsDelimitChar	
			
	else
		lsDetailOutString += lsDelimitChar
	end if	
	
		
//TODO
	//TtDutQtyUnt	Char(3)		Y	total dutiable qty/wt/vol unit	depend on order	
	
	lsDetailOutString += lsDutiable_UOM + lsDelimitChar	
	
//TODO
	//TtDutQty	Numeric(15,4)		Y	total dutiable qty/wt/vol	depend on order	

decimal ldpono2, ldpono2div,ldimuf1, ldpqty
string lspono2test 
lspono2test = idw_pick.GetItemString(liIdx, "PO_No2")
ldpono2 = dec( idw_pick.GetItemString(liIdx, "PO_No2")  ) 
ldpono2div = dec( idw_pick.GetItemString(liIdx, "PO_No2")  ) /100
ldimuf1 = dec( ls_IM_User_field1 )
ldpqty = idw_pick.GetItemNumber(liIdx, "Quantity")


  	ld_Duty = ld_excise_rate *  ( dec( idw_pick.GetItemString(liIdx, "PO_No2")  ) / 100  ) * dec( ls_IM_User_field1 ) *  idw_pick.GetItemDecimal(liIdx, "Quantity")
	ld_duty_total = ld_duty_total + ld_duty
	
	lsDetailOutString +=String(ld_duty,'##########.0000') +  lsDelimitChar
		
	
	
//TODO
	//UnitWtUnt	Char(3)		Y	dutiable wt/vol unit	depend on order	TBD - I think this is Not Applicable on Inbound Material
	
	lsDetailOutString += lsDutiable_UOM +  lsDelimitChar	
	
//TODO
	//UnitWt	Numeric(15,4)		Y	Dutiable wt/vol per unit	depend on order	TBD - I think this is Not Applicable on Inbound Material
	
	IF IsNull(ls_IM_User_field1) THEN ls_IM_User_field1 = ""
	
	lsDetailOutString += ls_IM_User_field1 +   lsDelimitChar	
	
	//LiqPcUnt	Char(3)		Y	alcohol unit of mea.	depend on order	Item_Master.User_field9
		
	IF IsNull(ls_IM_User_field9) THEN ls_IM_User_field9 = ""
	
	lsDetailOutString += ls_IM_User_field9 +  lsDelimitChar
	
	//LiqPc	Numeric(6,3)		Y	alcohol percentage	depend on order	Delivery_Picking.PO_NO2
	
	lsTemp = idw_pick.GetItemString(liIdx, "PO_NO2")
	
	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	

			
	//OuterQty	Numeric(8,0)		Y	outer pack qty	depend on order	1
	
	lsDetailOutString += "1" +  lsDelimitChar	
	
	//OuterUnt	Char(3)		Y	outer pack unit	depend on order	Item_Master.UOM2
	
	IF IsNull(ls_UOM2) THEN ls_UOM2 = ""
	
	lsDetailOutString += ls_UOM2 +  lsDelimitChar

	//InQty	Numeric(8,0)		Y	in pack qty	depend on order	Item_Master.QTY2

	IF IsNull(ll_QTY2) THEN ll_QTY2 = 0
	
	lsDetailOutString += String(ll_QTY2) +  lsDelimitChar	
	
	//InUnt	Char(3)		Y	in pack unit	depend on order	Item_Master.UOM1

	IF IsNull(ls_UOM1) THEN ls_UOM1 = ""
	
	lsDetailOutString += ls_UOM1 +  lsDelimitChar
	
	
	//InnerQty	Numeric(8,0)		Y	inner pack qty		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InnerUnt	Char(3)		Y	inner pack unit		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InmostQty	Numeric(8,0)		Y	inmost pack qty		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InmostUnt	Char(3)		Y	inmost pack unit		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo1	Char(17)		Y	marks and nos 1		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo2	Char(17)		Y	marks and nos 2		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo3	Char(17)		Y	marks and nos 3		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//ESDNP	Char(2)		Y	markings on dutiable goods - SNDP		<blank>
	
	lsDetailOutString += lsDelimitChar
	
//TODO
	//CifFob	Numeric(15,2)		Y	cif/fob value in SGD	depend on order	Delivery_Picking.qty *  Delivery_Picking.po_no
	
	ld_CIF = ( dec(idw_pick.GetItemString(liIdx, "po_no"))  *  idw_pick.GetItemNumber(liIdx, "quantity"))
	ld_CIF_total = ld_CIF_total + ld_CIF
	
	lsDetailOutString +=String(ld_CIF,'#############.00') +  lsDelimitChar
	
	//OthAmt	Numeric(15,2)		Y	Other amount		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//OthCurr	Char(3)		Y	currency of charge		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//OthExchg	Numeric(10,6)		Y	rate of exchange		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//UntPr	Numeric(15,4)		Y	unit price		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//UntPrCurr	Char(3)		Y	currency code		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//UntPrExchg	Numeric(10,6)		Y	exchange rate		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//LSP	Numeric(15,2)		Y	LSP value		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InvNo	Char(17)		Y	invoice number		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//VehType	Char(3)		Y	default value = P. Waiting confirmation from SCS		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MvReg	Char(17)		Y	motor vehicle registration number		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//Dt1stReg	Date		Y	date of first registration		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//EngCapQ	Char(3)	8	Y	Engine capacity qualifier		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//EngCap	Numeric(6,2)		Y	engine capacity		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//EngCapUnt	char(2)	CC / KW	Y	motor vehicle engine capacity/Power		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//BLAWBHI	Char(17)		Y	In House bl/awb No.		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//Dutytype	char(1)		Y	Duty type A/S/P	default value = P	P'
	
	lsDetailOutString += 'P' +  lsDelimitChar
	
	//TaxCedUnt	Char(3)		Y	Customs rate class unit		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//CedRt	Numeric(7,4)		Y	Customs duty rate		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//CedAmt	Numeric(15,2)		Y	Customs duty amt		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//TaxExUnt	Char(3)		Y	Excise rate class unit	default value = LP	LPA'
	
	lsDetailOutString +=   lsDelimitChar  // 'LPA' +
	
	//ExRt	Numeric(9,2)		Y	Excise duty rate	default value = 70	70
	
	lsDetailOutString += '70' +  lsDelimitChar	
	
	//ExAmt	Numeric(15,2)		Y	Excise duty amt		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//RecdAmt	Numeric (15,2)		Y	Refund Customs Duty Amount		<blank>
	
	lsDetailOutString +=   lsDelimitChar  // 'LPA' +
	
	//RexAmt	Numeric(15,2)		Y	Refund Excise Duty Amount 		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//RGSTAmt	Numeric(15,2)		Y	Refund GST Amountt		<blank>
	
	lsDetailOutString += lsDelimitChar
	//PrerateQ	char(3)	9-May	Y	Preferential rate qualifier		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//Prerate	char(3)	PRF /PRI	Y	Preferential rate		<blank>
	
	lsDetailOutString += lsDelimitChar
	
//TODO
	//GstAmt	Numeric(15,2)		Y	Gst amt	depend on order	TBD - I think this is Not Applicable on Inbound Material
  	ld_GST = ldGST_rate *  ( ld_duty + ld_CIF) 
	ld_GST_total = ld_GST_total + ld_GST
	
	lsDetailOutString +=String(ld_GST,'#############.00') +  lsDelimitChar
		
	
	lsDetailOutString += lsDelimitChar
	
	//GoodType	Char(1)	P-Dutiable Petroleumn, , L-Liq/Tob, M-Dutiable Motor Vehicle,  N-Normal Goods	Y	For internal control of goods	default value = L	L

	lsDetailOutString += 'L' +  lsDelimitChar
	
//TODO
	//Gstrate	Numeric (7,4)		Y	Gst Rate		<blank>
	
	lsTemp = string(ldGST_Rate,'######.00')
	
	if IsNull(lsTemp) then lsTemp = ''
	
	lsDetailOutString += lsTemp + lsDelimitChar

//	MessageBox ("ok", lsDetailOutString)
	
	FileWrite(liFileNoDetail,lsDetailOutString)
	

next

// Moved to the end so we can update the total Amounts in the header


ll_pos = pos(lsMasterOutString,"TOTCIFPLACEHOLDER",1)
If ll_pos >1 Then 
	lsMasterOutString = Replace(lsMasterOutString, ll_pos, 17, string(ld_CIF_Total,'#############.00'  ))
End If
ll_pos = pos(lsMasterOutString,"TOTDTYPLACEHOLDER",1)
If ll_pos >1 Then 
	lsMasterOutString = Replace(lsMasterOutString, ll_pos, 17, string(ld_Duty_Total,'#############.00'   ))
End If
ll_pos = pos(lsMasterOutString,"TOTGSTPLACEHOLDER",1)
If ll_pos >1 Then 
	lsMasterOutString = Replace(lsMasterOutString, ll_pos, 17, string(ld_Gst_Total,'#############.00'  ))
End If

ld_Amt_Total = ld_Duty_Total + ld_GST_Total 
ll_pos = pos(lsMasterOutString,"TOTAMTPLACEHOLDER",1)
If ll_pos >1 Then
	lsMasterOutString = Replace(lsMasterOutString, ll_pos, 17, string(ld_Amt_Total,'#############.00'  ))
End If

FileWrite(liFileNoHeader,lsMasterOutString)
		

FileClose(liFileNoHeader)
FileClose(liFileNoDetail)

MessageBox ("Export Complete", "There were " + string(idw_pick.RowCount()) + " rows exported to " + lsPathOut + ".")


Return 0

end function

public function integer wf_export_ws_tradenet_out ();
string lsDetailOutString, lsTemp, lsMasterOutString, lsItemOutString
string lsDelimitChar = ','
integer liFileRowNum = 0
integer liIdx,li_pos 
string lsSku, lsSupp_Code, lsHS_Code, lsDescription, ls_IM_User_field9, lsSupp_Name
string ls_UOM2, ls_UOM1, ls_Rpt_Qty
long ll_QTY2, llDetailFindRow, llLineItemNo, ld_CIF, ld_CIF_total
long ld_excise_rate, ld_Duty
datastore idsOut
long llNewBatchSeq
datetime ldt_filerundate


string ls_path, ls_file

int li_rc


//li_rc = GetFileSaveName ( "Save Location",    ls_path, ls_file, "DOC",   "All Files (*.*),*.*" , "",    32770)
//
//
//
//IF li_rc = 1 Then
//
//   MessageBox ("ok", ls_file)
//	
//Else 
//	
//	Return 0
//
//End If

string lsPathOut, lsFileOutHeader, lsFileOutDetail, lsFileOutItem
integer liFileNoHeader, liFileNoDetail, liFileNoItem



if idw_pick.RowCount() <= 0  or idw_detail.RowCount() <= 0 then
	
	MessageBox ("Error", "The are no detail or picking rows. Both must be completed for export.")
	Return 0
	
end if


//The path is stored in the lookup_table and is project dependant.

Select Code_Descript INTO :lsPathOut FROM lookup_table with (NoLock) 
	Where Project_ID = :gs_project AND Code_Type = 'CUSEXPPATH' USING SQLCA;

//MessageBox ("ok", lsPathOut)

If IsNull(lsPathOut) then lsPathOut = "C:\Export_Tradenet"


//INP00 = Header
//INP40 = Detail
//Orderno will be the order number from sims.
//Seq will be a sequence number.  
//This is needed because there is a limit of 50 rows on a file.  If there are more than 50 rows on an order we will increment the sequence for each 50 items.
//Date will have the date/time the file is created.  
//3.	Tradenet has a limit of 50 detail records per file.   If an order has more than 50 rows we need to actually split it into multiple files with a different Sequence for example Inbound order “1234” has 130 detail rows.  We would create 6 output files
//INP00 1234 001 20120728143000.dat 

ldt_filerundate = datetime(today(), now())

string lsOrderNo

lsOrderNo = idw_main.GetItemString( 1, "invoice_no")

liFileRowNum = 50

for liIdx = 1 to idw_pick.RowCount()

	lsDetailOutString = ""

	lsItemOutString = ""

	liFileRowNum = liFileRowNum + 1
	
	if liFileRowNum > 50 then
		
		liFileRowNum = 1
				
		//Get the Next Batch Seq Nbr - Used for all writing to generic tables   (Use same across all projects.)
// TODO
		llNewBatchSeq =  g.of_next_db_seq('WS-','Customs_Export','Seq_No')
		If llNewBatchSeq <= 0 Then
			MessageBox ("DB Error",  "*** Unable to retrieve the next available sequence number!")
			Return -1
		End If
	
		
		if liFileNoHeader > 0 then
			FileClose(liFileNoHeader)
			FileClose(liFileNoDetail)
			FileClose(liFileNoItem )
		end if
		
		lsFileOutItem= "OUT43"+lsOrderNo+ String(llNewBatchSeq) + string( ldt_filerundate,'yyyymmddhhss')  + "00" +  ".dat"

		lsFileOutDetail = "OUT40"+lsOrderNo+ String(llNewBatchSeq) + string( ldt_filerundate,'yyyymmddhhss')  + "00" +  ".dat"
		
		lsFileOutHeader = "OUT00"+lsOrderNo+ String(llNewBatchSeq) + string( ldt_filerundate,'yyyymmddhhss')  + "00" +  ".dat"
	
		
		liFileNoHeader = FileOpen(lsPathOut + "\" +  lsFileOutHeader,LineMode!,Write!,LockREadWrite!,Replace!,EncodingUTF8!)
		liFileNoDetail = FileOpen(lsPathOut + "\" + lsFileOutDetail,LineMode!,Write!,LockREadWrite!,Replace!,EncodingUTF8!)
		liFileNoItem = FileOpen(lsPathOut + "\" + lsFileOutItem,LineMode!,Write!,LockREadWrite!,Replace!,EncodingUTF8!)
		
		if liFileNoHeader < 0 or liFileNoDetail < 0 then
			MessageBox ("Error", "Unable to open file.")
			Return 0
		end if
		
		//Create Header File
		
		//MsgSq	Char(12)	1.99706E+11	N	message sequence	Date = todays date. SeqNo must be taken from field# 2.	Todays date(yyyymmdd) + Sequence # starting with 9097.  We need a new output file for each 50 details
		//<Date+SeqNo>	
		
		lsMasterOutString = String(ldt_filerundate, 'yyyymmdd') + String(llNewBatchSeq) +  lsDelimitChar	
		
		//SeqNo	Int(4)	0001..0002	N	sequence number	default value = 9097	starting with 9097.  We need a new output file for each 50 details.  This is a Header level Sequence Number
	
		lsMasterOutString += String(llNewBatchSeq) +  lsDelimitChar			
		
		//MsgDate	Date	DD/MM/YYYY	N	date of declaration	todays date	Todays date(mm/dd/yyyy)
		
		lsMasterOutString += String(today(), "DD/MM/YYYY") +  lsDelimitChar

//		Removed per Carol Wong		
//		//DecType	Char(3)		Y	declaration type	"default value = DNG
		
		lsMasterOutString +=  'DNG' +  lsDelimitChar		
		
		//CargoPkg	Char(2)		Y	cargo packing type		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//AppPrdTp	Char(2)		Y	Application Product type		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//TtQtyUnt	Char(3)		Y	total outer pack unit	default value = CTN	CTN'
		
		lsMasterOutString +=  'CTN' +  lsDelimitChar
		
		//TtQty	Numeric(15,4)		Y	total outer pack quantity		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//TtGWtUnt	Char(3)		Y	total gross weight unit		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//TtGWt	Numeric(15,4)		Y	total gross weight quantity		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//WtOutVes	Numeric(13,2)		Y	tonnage of outward vesssel		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//Extvalidity	Char(1)		Y	Reason for extension of validity date (STDID)		<blank>
		
		lsMasterOutString +=   lsDelimitChar	
		
		//Prevpmt	Char(11)		Y	Previous Permit Number		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//OriCertNo	Char(17)		Y	Original Certification Number		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//Receiptid1	Char(17)		Y	receipient mailbox id		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//Receiptid2	Char(17)		Y	recipient mailbox id		<blank>

		lsMasterOutString +=   lsDelimitChar		
		
		//Receiptid3	Char(17)		Y	‘MR’ – receipient mailbox id		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//AECode	Char(20)		Y	Declaring CR No	default value = 200201226C	 '200201226C'
		
		lsMasterOutString +=  '200201226C' +  lsDelimitChar
		
		//AENm1	Char(35)		Y	Name 1	default value = MENLO WORLDWIDE ASIA PACIFIC PTE LTD	 'MENLO WORLDWIDE ASIA PACIFIC PTE LTD'
		
		lsMasterOutString +=  'MENLO WORLDWIDE ASIA PACIFIC PTE LTD' +  lsDelimitChar
		
		//AENm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//AENm3	Char(35)		Y	Name 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGCode	Char(20)		Y	Inward Carrier Agent CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGNm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CGNm3	Char(35)		Y	Name 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CACode	Char(20)		Y	CA CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CANm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CANm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CANm3	Char(35)		Y	Name 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//IMCode	Char(20)		Y	Importer CR	"depend on order. All customers use their own CR# except Pernod Ricard Singapore.
		//Do not maintain customer CR# in the customer profile."	TBD - Possible User_Field on Delivery_Master or Supplier.
		
		lsMasterOutString +=   lsDelimitChar
		
		//IMNm1	Char(35)		Y	name1	depend on order. Value = Customer Name	
		
		lsMasterOutString +=   idw_main.GetItemString( 1, "Cust_Name") +  lsDelimitChar
		
		//IMNm2	Char(35)		Y	name2		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//EXCode	Char(20)		Y	CA CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//EXNm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//EXNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//EXAdd1  Char(35)		Y	Address 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//EXAdd2  Char(35)		Y	Address 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//EXAdd3  Char(35)		Y	Address 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//MFCode	Char(20)		Y	Manufacturer CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//MFNm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//MFNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//MFAdd1  Char(35)		Y	Address 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//MFAdd2  Char(35)		Y	Address 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//MFAdd3  Char(35)		Y	Address 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//FWCode	Char(20)		Y	Freight Forwarder CR		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWNm1	Char(35)		Y	name1		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWNm2	Char(35)		Y	name2		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//FWNm3	Char(35)		Y	Name3		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//CNNm1	Char(35)		Y	Name 1		Default "AS ORDER
		
		lsMasterOutString +=   'AS ORDER' + lsDelimitChar		
		
		//CNNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CNAdd1  Char(35)		Y	Address 1		Default "AS ORDER
		
		lsMasterOutString +=   'AS ORDER' + lsDelimitChar		
		
		//CNAdd2  Char(35)		Y	Address 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//CNAdd3  Char(35)		Y	Address 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//UCNm1	Char(35)		Y	Name 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//UCNm2	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//UCNm3	Char(35)		Y	Name 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//UCAdd1  Char(35)		Y	Address 1		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//UCAdd2  Char(35)		Y	Address 2		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//UCAdd3  Char(35)		Y	Address 3		<blank>
		
		lsMasterOutString +=   lsDelimitChar		
		
		//RelCode	Char(7)		Y	place of release code	default value = LW274	LW274'

		lsMasterOutString +=  'LW274' +  lsDelimitChar

		//RelLocNAD	Char(105)		Y	place of release name and address1	default value = MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY	MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY'

		lsMasterOutString +=  'MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY' +  lsDelimitChar
			
		//RecCode	Char(7)		Y	place of receipt	default value = 'KZ Per specs    //LW274	LW274'
		
		lsMasterOutString +=  'KZ' +  lsDelimitChar
		
		//TODO - Customer Name
		//RecLocNAD	Char(105)		Y	place of receipt name and  add1	default value = MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY	MENLO LOGISTICS WORLDWIDE ASIA PACIFIC PTE LTD 30 BOON LAY WAY'

		lsMasterOutString +=  'KEPPELFTZ' +  lsDelimitChar
		
		//StorageCode	Char(7)		Y	place of storage code		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//BGInd	Char(1)		Y	bank guarantee indicator	default value = I	I'
		
		lsMasterOutString +=  lsDelimitChar  // 'I' 
		
		//TtItems	Int(4)		Y	total no of items	depend on the total count of items in the order	Total Shipped on Picking
		
		//Changed per Carol
		
		lsMasterOutString +=  string( idw_pick.RowCount()) +  lsDelimitChar  //idw_pick.GetItemNumber (1, "compute_2")
		
		//UpdReq	Int(4)		Y	number of request for amendment		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//TtCifFob	Numeric(15,2)		Y	total cif/fob value	depend on order	Replace this value with the value obtained from the details below

		lsMasterOutString +=   'CIFTOTALPLACEHOLDER' + lsDelimitChar
		
		//Blawb	Char(17)		Y	OBL or AWB		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		//GoodType	Char(1)	P-Dutiable Petroleumn, , L-Liq/Tob, M-Dutiable Motor Vehicle,  N-Normal Goods	Y	For internal control of goods	default value = L	L'
		
		lsMasterOutString +=  'L' +  lsDelimitChar
		
		//Option	Char(1)	S-Storage, X-Seastore, G-GST Exemption, E-GST/Duty Exemption	Y	Internal controls.		<blank>
		
		lsMasterOutString +=   lsDelimitChar
				
		//IsCO	Char(1)	For CO Purpose.		<blank>
		
		lsMasterOutString +=   lsDelimitChar
		
		
		
	end if
	
	//Same as Header MSGSQ Todays date(yyyymmdd) + Sequence # starting with 9097.  We need a new output file for each 50 details
	
	//INP40 - HS Code information						
	//Field	Data Type	Format	NULL	Remarks	Values to be written in the file - Single/Multiple permit	
	//MsgSq	Char(12)	1.99706E+11	N	message sequence	follow the MsgSq in INP00 file	Same as Header MSGSQ Todays date(yyyymmdd) + Sequence # starting with 9097.  We need a new output file for each 50 details
	//		<Date+SeqNo>	
	
	lsDetailOutString = String(ldt_filerundate, 'yyyymmdd') + String(llNewBatchSeq) +  lsDelimitChar	
	
	//Item Loop  - HscSerNo
	lsItemOutString = String(ldt_filerundate, 'yyyymmdd') + String(llNewBatchSeq) +  lsDelimitChar	
	//Item Loop - SerNo
	lsItemOutString = String(ldt_filerundate, 'yyyymmdd') + String(llNewBatchSeq) +  lsDelimitChar	
	
	//HscSerNo	Int(4)	1	N	Hazard serial number	is a serial# which starts from 1 & max up to 50. to be incremental by 1 for each line item	Actually a line number starting from 1 to 50.  We need a new output file for each 50 details so we start over with each output file

	lsItemOutString += String(liFileRowNum) +  lsDelimitChar	

	//SerNo	Int(4)	1	N	serial number	is a serial# which starts from 1 & max up to 50. to be incremental by 1 for each line item	Actually a line number starting from 1 to 50.  We need a new output file for each 50 details so we start over with each output file

	lsDetailOutString += String(liFileRowNum) +  lsDelimitChar	
	lsItemOutString += String(liFileRowNum) +  lsDelimitChar	
	
	//Need to grab a bunch of data from Item_Master
	//Will be used farther down
	
	lsSku = idw_pick.GetItemString(liIdx, "sku")
	lsSupp_Code = idw_pick.GetItemString(liIdx, "supp_code")
	llLineItemNo = idw_pick.GetItemNumber(liIdx, "line_item_no")
	
	string ls_IM_User_field10, ls_IM_User_field1
	
	Select Description, HS_Code, User_field9, UOM_2, QTY_2, UOM_1, User_field10, User_field1
	INTO  :lsDescription, :lsHS_Code, :ls_IM_User_field9, :ls_UOM2, :ll_QTY2, :ls_UOM1, :ls_IM_User_field10, :ls_IM_User_field1
		From Item_Master with (nolock)
		WHERE Sku = :lsSku AND
				  Supp_Code =:lsSupp_Code AND
				  Project_ID = :gs_project USING SQLCA;
	
	
	string lsDutiable_UOM
	decimal ldGST_Rate
	
	//HSCode	Char(10)		Y	hscode	depend on order	Item Master.HS_Code
	
	IF IsNull(lsHS_Code) THEN 
		lsHS_Code = ""
	ELSE		
		Select Dutiable_UOM, GST_Rate, excise_rate
			INTO  :lsDutiable_UOM, :ldGST_Rate, :ld_excise_rate
			From hs_code_profile with (nolock)
			WHERE HS_Code =:lsHS_Code AND
					  Project_ID = :gs_project USING SQLCA;
	END IF
	
	lsDetailOutString += lsHS_Code +  lsDelimitChar
	

	//ItemDesc1	Char(35)		Y	item desc 1	depend on order & max char allowed is 35. If more than 35, display in next column.	Item Master.description(Pos 1-35)
	// This is for the Item Loop(43) only

	if IsNull(lsDescription) then lsDescription = ""
	
	lsItemOutString += Left(lsDescription,35) +  lsDelimitChar
	
	//ItemDesc2	Char(35)		Y	item desc 2	same as above	Item Master.description(Pos 36-70)
	
	lsItemOutString += Mid(lsDescription,36, 35) +  lsDelimitChar
	
	//ItemDesc3	Char(35)		Y	item desc 3	same as above	<blank>
	
	lsItemOutString += lsDelimitChar
	
	//ItemDesc4	Char(35)		Y	item desc 4	same as above	<blank>
	
	lsItemOutString += lsDelimitChar
	
	//ItemDesc5	Char(35)		Y	item desc 5	same as above	<blank>
	
	lsItemOutString += lsDelimitChar
	


	//TxtlCat 	Char(5)		Y	textile category code
	
	lsDetailOutString +=  lsDelimitChar
	
	//IMDGDesc	Char(1)	Indicator=’Y’	Y	dangerous goods indicator		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//Brand	Char(35)		Y	brand name		<blank>
	
	lsTemp = ls_IM_User_field10
	
	if IsNull(lsTemp) then lsTemp = ''
	
	lsDetailOutString += lsTemp + lsDelimitChar	
	
	//Model	Char(35)		Y	model name		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//CtyCode	Char(2)		Y	country code (cty of origin)	depend on order	Delivery_Picking.Country_of_Origin
	
	lsTemp = idw_pick.GetItemString(liIdx, "Country_of_Origin")
	
	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	
	
	//CurLot	Char(30)		Y	current lot number	depend on order	Delivery_Picking.Lot_No
	
	lsTemp = idw_pick.GetItemString(liIdx, "Lot_No")
	
	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	
		
	//PrevLot	Char(30)		Y	previous lot number		<blank>
	
	lsDetailOutString += lsDelimitChar	
	
	//MfCSDate	Date	CCYYMMDD	Y	date of manufacturing cost statement
	
	lsDetailOutString += lsDelimitChar	
	
// TODO
	//QtyUnt	Char(3)		Y	Item quantity unit	depend on order	Delivery_Detail.User_Field2  (W&S sends in the UOM that inventory is reported in.  They are using cases and there may be 6 bottles per case.  We only store eaches in inventory.)

	llDetailFindRow = idw_detail.Find("Line_Item_No = " + String(llLineItemNo) + " and Upper(sku) = '" + upper(lsSKU) + "' and Upper(supp_code) = '" + upper(lsSupp_Code) + "'",1,idw_detail.RowCount())

	if llDetailFindRow > 0 then lsDutiable_UOM = idw_detail.GetItemString(llDetailFindRow, "user_field2")

	if IsNull(lsDutiable_UOM ) then lsDutiable_UOM  = ""

	lsDetailOutString += lsDutiable_UOM  +  lsDelimitChar	
	
		
//	else
//		lsDetailOutString += lsDelimitChar
//	end if


	//Qty	Numeric(15,4)		Y	Item quantity	depend on order	"This is where it gets customized here is the formulat to determine what the QTY is that gets reported. Delivery_Detail.User_Field1 has the number of units per UOM. 

	//if delivery_detail.user_field2  = delivery_detail.uom then QTY = delivery_picking.QTY Else  
	//QTY = Delivery_Picking.qty /( delivery_detail.req_qty / dec(delivery_detail.user_field1)
	
	if llDetailFindRow > 0 then
		
		//if delivery_detail.user_field2  = delivery_detail.uom then QTY = delivery_picking.QTY Else  
		
		if  trim(idw_detail.GetItemString(llDetailFindRow, "user_field2")) = trim(idw_detail.GetItemString(llDetailFindRow, "uom")) then
	
			ls_Rpt_Qty = string(idw_pick.GetItemNumber(liIdx, "quantity"),'##########.0000' )
		
		else
		
			If ll_QTY2 > 0 Then 
				ls_Rpt_Qty = string(idw_pick.GetItemNumber(liIdx, "quantity") / ll_QTY2)
			Else
				ls_Rpt_QTY = string(idw_pick.GetItemNumber(liIdx, "quantity"),'##########.0000' )
			End If			

		end if
		
		If IsNull(ls_Rpt_Qty) then ls_Rpt_Qty = ""
		
		lsDetailOutString += ls_Rpt_Qty +  lsDelimitChar	
			
	else
		lsDetailOutString += lsDelimitChar
	end if	

	//TtDutQtyUnt	Char(3)		Y	total dutiable qty/wt/vol unit	depend on order	
	
	lsDetailOutString += lsDutiable_UOM + lsDelimitChar	
	
	//TtDutQty	Numeric(15,4)		Y	total dutiable qty/wt/vol	depend on order	TBD - I think this is Not Applicable on Inbound Material
  	ld_Duty = ld_excise_rate *  ( dec( idw_pick.GetItemString(liIdx, "po_no2")  ) / 100  ) * dec( ls_IM_User_field1 ) *  idw_pick.GetItemDecimal(liIdx, "quantity")
		
	lsDetailOutString += string(ld_Duty,'##########.0000' ) +  lsDelimitChar	
	
//TODO
	//UnitWtUnt	Char(3)		Y	dutiable wt/vol unit	depend on order	TBD - I think this is Not Applicable on Inbound Material
	
	lsDetailOutString += lsDutiable_UOM +  lsDelimitChar	
	
//TODO
	//UnitWt	Numeric(15,4)		Y	Dutiable wt/vol per unit	depend on order	TBD - I think this is Not Applicable on Inbound Material
	
	IF IsNull(ls_IM_User_field1) THEN ls_IM_User_field1 = ""
	
	lsDetailOutString += ls_IM_User_field1 +   lsDelimitChar	
	
	//LiqPcUnt	Char(3)		Y	alcohol unit of mea.	depend on order	Item_Master.User_field9
		
	IF IsNull(ls_IM_User_field9) THEN ls_IM_User_field9 = ""
	
	lsDetailOutString += ls_IM_User_field9 +  lsDelimitChar
	
	//LiqPc	Numeric(6,3)		Y	alcohol percentage	depend on order	Delivery_Picking.PO_NO2
	
	lsTemp = idw_pick.GetItemString(liIdx, "PO_NO2" )
	
	if IsNull(lsTemp) then lsTemp = ""

	lsDetailOutString += lsTemp +  lsDelimitChar	

			
	//CertItemUnit	Char(3)		Y	Cert qty	
	
	lsDetailOutString += lsDelimitChar	
	
	//CertItemQty	Numeric(15,4)		Y	Cert Qty
	
	lsDetailOutString += lsDelimitChar

	//Txtl Qty	Numeric(8,0)		Y	Textile qty	
	
	lsDetailOutString += lsDelimitChar	
	
	//Txtl Unt	Char(3)		Y	Textile unit	
	
	lsDetailOutString += lsDelimitChar

	//OuterQty	Numeric(8,0)		Y	outer pack qty	depend on order	1
	
	lsDetailOutString += "1" +  lsDelimitChar	
	
	//OuterUnt	Char(3)		Y	outer pack unit	depend on order	Item_Master.UOM2
	
	IF IsNull(ls_UOM2) THEN ls_UOM2 = ""
	
	lsDetailOutString += ls_UOM2 +  lsDelimitChar

	//InQty	Numeric(8,0)		Y	in pack qty	depend on order	Item_Master.QTY2

	IF IsNull(ll_QTY2) THEN ll_QTY2 = 0
	
	lsDetailOutString += String(ll_QTY2) +  lsDelimitChar	
	
	//InUnt	Char(3)		Y	in pack unit	depend on order	Item_Master.UOM1

	IF IsNull(ls_UOM1) THEN ls_UOM1 = ""
	
	lsDetailOutString += ls_UOM1 +  lsDelimitChar
	
	
	//InnerQty	Numeric(8,0)		Y	inner pack qty		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InnerUnt	Char(3)		Y	inner pack unit		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InmostQty	Numeric(8,0)		Y	inmost pack qty		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//InmostUnt	Char(3)		Y	inmost pack unit		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//ESDNP	Char(2)		Markings on dutiable goods - SNDP		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo1	Char(17)		Y	marks and nos 1		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo2	Char(17)		Y	marks and nos 2		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo3	Char(17)		Y	marks and nos 3		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo4	Char(17)		Y	marks and nos 1		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo5	Char(17)		Y	marks and nos 2		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo6	Char(17)		Y	marks and nos 3		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo7	Char(17)		Y	marks and nos 1		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo8	Char(17)		Y	marks and nos 2		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo9	Char(17)		Y	marks and nos 3		<blank>
	
	lsDetailOutString += lsDelimitChar
	
	//MarkNo10	Char(17)		Y	marks and nos 3		<blank>
	
	lsDetailOutString += lsDelimitChar
	

//TODO	
	//CifFob	Numeric(15,2)		Y	cif/fob value in SGD	depend on order	Delivery_Picking.qty *  Delivery_Picking.po_no
	
	ld_CIF = ( dec(idw_pick.GetItemString(liIdx, "po_no"))  *  idw_pick.GetItemNumber(liIdx, "quantity"))
	ld_CIF_total = ld_CIF_total + ld_CIF
	
	lsDetailOutString +=String(ld_CIF,'#############.00') +  lsDelimitChar

	//CertFob	Numeric(15,2)		Y	Cert. fob value in SGD	
	
	lsDetailOutString += lsDelimitChar

	//InvNo	Char(17)		Y	invoice number
	
	lsDetailOutString += lsDelimitChar
	
	//InvDate	Date	CCYYMMDD	Y	invoice date
	
	lsDetailOutString += lsDelimitChar
	
	//EndUseQ	Char(3)	5	Y	End use desc qualifier
	
	lsDetailOutString += lsDelimitChar
	
	//EndUseDesc1	Char(35)		Y	End-use description1
	
	lsDetailOutString += lsDelimitChar
	
	//EndUseDesc2	Char(35)		Y	End-use description2
	
	lsDetailOutString += lsDelimitChar
	
	//EndUseDesc3	Char(35)		Y	End-use description3
	
	lsDetailOutString += lsDelimitChar
	
	//BLAWBHI	Char(17)		Y	Hawb/hucr/hbl  qualifier - inward
	
	lsDetailOutString += lsDelimitChar
	
	//BLAWBHO	Char(17)		Y	Hawb/hucr/hbl  qualifier - outward
	
	lsDetailOutString += lsDelimitChar
	
	//DutyType	char(1)		Y	Duty type A/S/P
	
	lsDetailOutString += 'P' + lsDelimitChar
	
	//OrgCri1	Char(25)		Y	origin criterion (line 1)
	
	lsDetailOutString += lsDelimitChar
	
	//OrgCri2	Char(25)		Y	origin criterion (line 2)
	
	lsDetailOutString += lsDelimitChar
	
	//OrgCri3	Char(25)		Y	origin criterion (line 3)
	
	lsDetailOutString += lsDelimitChar
	
	//Pc	Int(3)		Y	percentage content
	
	lsDetailOutString += lsDelimitChar
	
	//HSHead	Char(6)		Y	HS Code (the first 6 digit)
	
	lsDetailOutString += lsDelimitChar
	
	//Prerate	char(3)	PRI	Y	Preferential rate
	
	lsDetailOutString += lsDelimitChar
	
	//GoodType	Char(1)	P-Dutiable Petroleumn, , L-Liq/Tob, M-Dutiable Motor Vehicle, N-Normal Goods	Y	For internal control of goods

	lsDetailOutString += 'L' + lsDelimitChar


//	MessageBox ("ok", lsDetailOutString)
	
	FileWrite(liFileNoDetail,lsDetailOutString)
	
	FileWrite(liFileNoItem,lsItemOutString)

next


// Moved to the end so we can update the total CIF

li_pos = pos(lsMasterOutString,"CIFTOTALPLACEHOLDER",1)
If li_pos >1 Then 
	lsMasterOutString =Replace(lsMasterOutString, li_pos, 19, string(ld_CIF_Total,'#############.00'  ))
End If

FileWrite(liFileNoHeader,lsMasterOutString)


FileClose(liFileNoHeader)
FileClose(liFileNoDetail)
FileClose(liFileNoItem)


MessageBox ("Export Complete", "There were " + string(idw_pick.RowCount()) + " rows exported to " + lsPathOut + ".")


Return 0

end function

public function boolean wf_embargoed_country_check (string as_country, boolean ab_acceptoverride);/* ****************************************************************************************************	
	wf_embargoed_country_check( as_country, ab_acceptoverride )
	
	Rules for determining whether an order will be blocked from shipment to a country 
	on the embargoed country list
	
	Ermine Todd 2012-12-12
	
	Check the country against the list of embargoed countries.
	Check against the list of authorized licenses

	Arguments: the country name or code; will accept either 2 or 3 letter code
				  process override - implement procedure to get the override, otherwise just issue 
				  warning and then return and let the calling routine decide what to do

	Return:  True if country is embargoed, False is not embargoed
	
   change the logic - first lookup the supplied text to derive the country code - 
	then use a generalized single query to see if that code belongs to an embargoed country
	in first the country table (column embargoed) and then the lookup_table for code_type = 'EMBARGOED'

//	ELSEIF LEN(ls_country) = 2 OR LEN(ls_country) = 3 THEN
//		// presumption this is country code
//		// note: 
//		
//		SELECT code_id
//		INTO :ls_embargoed
//		FROM Lookup_Table L JOIN Country C ON L.code_id = C.Designating_Code
//		WHERE ( project_id = :gs_project OR LTRIM(project_id) = '*ALL' )
//		  AND code_type = 'EMBARGOED'
//		  AND c.designating_code = :ls_country
//		USING SQLCA;
//		
//	END IF
	

********************************************************************************************* */

string ls_country = ''
string ls_embargoed = ''
string ls_countrycode = ''
string lsfind
string sMsg = ''
string sEmbargoed_Override_User
string sEmbargoed_Override_License

long   llfindrow
boolean lbRtn = FALSE
nvo_country luo_country

luo_country = CREATE nvo_country

IF NOT IsNull(as_country) THEN
	
	IF LEN(TRIM(as_country)) = 2 OR LEN(TRIM(as_country)) = 3 THEN
		// presumption this is country code - see if we can derive the country name
		ls_countrycode = UPPER(TRIM(as_country))
		
		If NOT luo_country.f_getnameforcode( ls_countrycode, ls_country ) Then 
			// code not found - presume blank country
			ls_country = ''
		End If
		
	ELSEIF LEN(TRIM(as_country)) > 3 THEN
		ls_country = UPPER(TRIM(as_country))
		
	ELSEIF TRIM(as_country) = '' THEN
		ls_country = ''
	
	ELSE
		// invalid input return NULL
		SetNull(lbRtn)
		Return lbRtn
	
	END IF

ELSE
	// invalid input return NULL
	SetNull(lbRtn)
	Return lbRtn
END IF


lsFind = "country_name = '" + ls_country + "'"
llFindRow = g.ids_country.Find( lsFind, 1, g.ids_country.rowCount() )

IF llFindRow > 0 THEN
	ls_embargoed = g.ids_country.GetITemString(llFindRow,'embargoed')
	
	IF ls_embargoed = 'N' THEN
		// didn't find in country table - check lookup_table for project specific embargos to be safe
		
		ls_country = '%' + ls_country+ '%'
	
		SELECT distinct code_id
		INTO :ls_embargoed
		FROM Lookup_Table L WITH (NOLOCK) JOIN Country C ON L.code_id = C.Designating_Code
		WHERE ( project_id = :gs_project OR LTRIM(project_id) = '*ALL' )
		  AND code_type = 'EMBARGOED'
		  AND c.country_name LIKE ( :ls_country )
		USING SQLCA;
		
		IF SQLca.sqlcode = 0 AND SQLCA.sqlnrows > 0 THEN
			lbRtn = TRUE
		ELSE
			lbRtn = FALSE
		END IF
	
	ELSE 
		// ls_embargoed = 'Y'
		lbRtn = TRUE
		
	END IF

ELSE
	// probably invalid country name - do we try to match?  For now - no.
	lbRtn = FALSE
	
END IF

IF lbRtn THEN
	If ab_acceptoverride Then
		// is there override available? Test if valid credentials and license have been entered
		IF isValid(idw_other) THEN
			sEmbargoed_Override_User    = idw_other.getitemstring(1,'embargoed_override_user')
			sEmbargoed_Override_License = idw_other.getitemstring(1,'embargoed_override_license')
			
			IF ( sEmbargoed_Override_License > '' AND sEmbargoed_Override_User > '') THEN
				//override entered - allow 
				lbRtn = FALSE
				
				// ET3 2013-02-07 existing override - make the fields visible
				idw_other.Object.embargoed_override_t.visible = TRUE
				idw_other.Object.embargoed_override_user.visible = TRUE
				idw_other.Object.embargoed_override_date.visible = TRUE
				idw_other.Object.embargoed_override_license.visible = TRUE
		
			ELSE
				// ET3 2012-12-26 Not yet ready to implement - still in design phase
				// for now don't do override - just issue warning and return TRUE
				sMsg = 'The selected country is currently not authorized as a shipping destination. ~r~n' &
						+ 'To complete shipping to this country, an authorized user must enter a ~r~n' &
						+ 'valid license and electronically authenticate to the system.'
				/*Sarun2013MAR20 : Suppress the EMB countries which is duplicate
				MessageBox('STOP', sMsg )
				Sarun2013MAR20*/
				
				// enable and make visible the override fields
				idw_other.Object.embargoed_override_t.visible = TRUE
				idw_other.Object.embargoed_override_user.visible = TRUE
				idw_other.Object.embargoed_override_date.visible = TRUE
				idw_other.Object.embargoed_override_license.visible = TRUE
			
			END IF // override entered
				
		END IF //valid idw_other 
			
	Else
		// no override - just issue warning and return TRUE
		MessageBox('STOP', 'The selected country is currently not authorized as a shipping destination' )
		
	END IF

END IF


RETURN lbRtn


end function

public function boolean wf_is_country_eu_to_eu (string as_from_country, string as_to_country);// LTK 20120202	Added this function for the CI check on ue_confirm
// ET3 20121220	Modified to process for exceptions list ... note: as_to_country appears to be ship_to ?!?!
// wf_is_country_eu_to_eu
return false // 02092022- Dinesh - S66849-Google - SIMS - Change in Commercial Invoice for EU to EU orders
boolean lb_return = FALSE
boolean lb_exception_found = FALSE
integer i
long    ll_row, ll_exception_rowcount, ll_Fm_Row
string  ls_sku, ls_find, ls_uf8, ls_uf9, ls_uf10, ls_msg, ls_Fm_find
string  ls_sql_syntax, ERRORS

datastore lds_countries, lds_exceptions

lds_countries = create datastore
ib_Authorize = False
ls_sql_syntax = "SELECT EU_country_Ind, Designating_code, ISO_Country_Cd, Country_Name from country " + &
					"WHERE designating_code in ('" + as_to_country + "', '" + as_from_country + "');"

lds_countries.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax,"", ERRORS))
if Len(ERRORS) > 0 then
else
	if lds_countries.SetTransObject(SQLCA) = 1 then
		if lds_countries.retrieve() = 2 then			
			if Upper(Trim(lds_countries.getItemString(1, "EU_country_Ind"))) = 'Y' and Upper(Trim(lds_countries.getItemString(2, "EU_country_Ind"))) = 'Y' then
				lb_return = TRUE

				// ET3 2012-12-17  Modification to check for exceptions requiring CI even though EU to EU
				// Even if true - return false if exception found; need access to the DO and Item_Master
				// User_Field8 = HTS-EU, User_Field9 = ECCN, User_Field10 = License
				//ls_find = "Designating_code = '" + as_from_country + "'"				
				ls_find = "Designating_code = '" + as_to_country + "'"				
				ll_row = lds_countries.Find( ls_find, 1, lds_countries.rowcount( ) )
				
				//TimA 11/27/13 Pandora issue #671 add From Country to the Syntax
				ls_Fm_find = "Designating_code = '" + as_from_country + "'"				
				ll_Fm_Row  = lds_countries.Find( ls_Fm_find, 1, lds_countries.rowcount( ) )
				//TimA 12/23/13 Moved this down.
				//If ll_Fm_Row > 0 Then
					//Set the varable so in the Confirm we check for authorization
					//ib_Authorize = True
					//is_AuthorizeType = 'CI'
				//End if
				IF ll_row > 0 or ll_Fm_Row > 0 THEN 
				
					lds_exceptions = create datastore
					
					//TimA 11/27/13 Pandora issue #671 add From Country to the Syntax
					ls_sql_syntax = "SELECT ISO_Country_Cd, From_Country, User_Field8, User_Field9, User_Field10 " + &
										 "FROM Intra_EU_CI_Required " + &
										 "WHERE Project_Id = '" + gs_project + "' " + &
										 "AND (ISO_Country_Cd = '" + lds_countries.getItemString(ll_row,'ISO_Country_Cd')  + "'" + &
										 " OR From_Country = '" + lds_countries.getItemString(ll_Fm_Row,'Designating_code')  + "');" //TimA Added From Country
					
					lds_exceptions.Create(SQLCA.SyntaxFromSQL( ls_sql_syntax, "", ERRORS))
					If LEN(ERRORS) > 0 Then
						// bummer - error; ignore
					Else
						lds_exceptions.SetTransobject( SQLCA )
						ll_exception_rowcount = lds_exceptions.Retrieve( )
						
						if ll_exception_rowcount > 0 then
							// we found some exceptions for the ship_to country ... now test the SKUs
							FOR i = 1 to this.idw_pack.rowcount( ) 
								ls_sku = this.idw_pack.getitemstring( i, 'sku' )
								
								SELECT User_Field8, User_Field9, User_Field10
								INTO :ls_uf8, :ls_uf9, :ls_uf10
								FROM Item_Master
								WHERE Project_Id = :gs_project
								  AND SKU = :ls_sku
								USING SQLCA;
								
								IF SQLCA.sqlcode <> 0 THEN
									// error ... okay bail this one
									CONTINUE
								ELSE
									// see if the specified exceptions are in the list
									//06-May-2014 :Madhu- Added code to validate UF8,UF9,UF10 - START
//									ls_find = "User_Field8 = '" + nz(ls_uf8,'') + "' OR " + &
//												 "User_Field9 = '" + nz(ls_uf9,'') + "' OR " + &
//												 "User_Field10 = '" + nz(ls_uf10,'') + "' "   //06-May-2014 :Madhu commented
									ls_find=''
									IF NOT (trim(ls_uf8)='' or isnull(ls_uf8))Then
										ls_find ="User_Field8 = '" + ls_uf8 + "'"
									END IF
									
									IF NOT(trim(ls_uf9)='' or isnull(ls_uf9)) Then
										if len(ls_find) >0 Then
											 ls_find +=" or User_Field9 ='" + ls_uf9 + "'"	
										else
											  ls_find +="User_Field9 ='" + ls_uf9 + "'"
										end if
									END IF
									
									IF NOT(trim(ls_uf10)='' or isnull(ls_uf10)) Then
										if len(ls_find) > 0 Then
											ls_find += " or User_Field10 ='" + ls_uf10 + "'"
										else
										  	ls_find +="User_Field10 ='" + ls_uf10 + "'"
										end if
									END IF
									//06-May-2014 :Madhu- Added code to validate UF8,UF9,UF10 - END
									
									lb_exception_found = ( lds_exceptions.Find(ls_find,1,ll_exception_rowcount) > 0 OR lb_exception_found )

								END IF
								
							NEXT
							
							If lb_exception_found Then 
								// exception found - prompt user
								lb_return = FALSE
								//TimA 12/23/13 Moved this Authorized from above.  It should be here.
								ib_Authorize = True
								is_AuthorizeType = 'CI'
								//TimA 01/18/14
								//Change per Roy 01/15/14
								SELECT 	User_Field1 	INTO :ls_msg FROM 	Lookup_Table WITH (NOLOCK)   
								Where 	project_id = :gs_project and Code_type = 'MSG' and Code_ID = "EU_TO_EU";		
								If ls_msg = '' Then
									//User should never get this message.  This is just in case there is an issue with the lookup table.
									MessageBox('EU to EU CI Exception', 'Please check with the SIMS development team on this error.  There is a problem getting the error message from the look up table.', Information!, OK!) 
								End if
								//ls_msg = 'This EU to EU shipment contains parts with ECCN code 5A002 and requires compliance approval.  ~r~n' + &
								//'Please send email to sarahhill@google.com and serman@google.com requesting approval to ship. ~r~n' + &
								//'If approval has been provided send approval mail to PandoraEUApprovers@menloworldwide.com to release and confirm the order.  [OK]'

								//ls_msg = 'This EU to EU shipment requires a CI to be sent ~r~n' + &
								//			'to the Pandora CI Tool. Please send CI, Retrieve/Generate CI ~r~n' + &
								//			'and have the CI accompany the shipment.'
											
								MessageBox('EU to EU CI Exception', ls_msg, Information!, OK!) 
								
							End If  // exception found
							
						end if	// country exceptions 
						
					End If	// ERRORs - lds_exceptions
					
				END IF	// Find
		
			end if	// EU countries
			
		end if	// Retrieve

	end if	// SetTransObject
	
end if  // ERRORs

return lb_return 

end function

public function integer wf_set_embargo_override_authorization ();/* **********************************************************************************
 * wf_set_embargo_override_authorization()
 * 
 *	author: Ermine Todd 2013-01-17
 *
 * purpose: Authenticate and record an authorized user and License number
 *
 ********************************************************************************** */
string	sMsg
string 	lsEmbargoed_Override_User
string 	lsEmbargoed_Override_License
string   lsNull
datetime	ldtEmbargoed_Override_Date, ldtNull
long     lrtn
str_embargoed_country strEC

SetNull(lsNull)
SetNull(ldtNull)

// ET3 2013-02-07 - If the fields are already populated, then bring them forward
lsEmbargoed_Override_User = idw_other.GetItemString(1, 'embargoed_override_user')
IF lsEmbargoed_Override_User <> '' AND (NOT IsNull(lsEmbargoed_Override_User)) THEN
	strEC.sembargoed_override_user = lsEmbargoed_Override_User
	strEC.sembargoed_override_license = idw_other.GetItemString(1, 'embargoed_override_license')
END IF

// open the work window
OpenWithParm(w_embargo_override, strEC)

strEC = Message.PowerObjectParm		  

// check the returned state
IF strEC.nReturn = 1 THEN
	// write the data to the fields
	lrtn = idw_other.SetItem(1, 'embargoed_override_user', strEC.sEmbargoed_Override_User )
	lrtn = idw_other.SetItem(1, 'embargoed_override_license', strEC.sEmbargoed_Override_License )
	lrtn = idw_other.SetItem(1, 'embargoed_override_date', strEC.dtEmbargoed_Override_Date )
	
ELSE
	// no go - make sure the fields are unset
	lrtn = idw_other.SetItem(1, 'embargoed_override_user', lsNull )
	lrtn = idw_other.SetItem(1, 'embargoed_override_license', lsNull )
	lrtn = idw_other.SetItem(1, 'embargoed_override_date', ldtNull )

END IF

// rely on the DO save to record these



IF (lrtn >= 1) THEN
	// SUCCESS
	RETURN SUCCESS
ELSE
	RETURN FAILURE
END IF 

end function

public function integer wf_create_inbound (ref datawindow adwmain, ref string ab_error_message_title, ref string ab_error_message);//  ***!!!NEED TO COMPLETE SETTING OF 'FROM PROJECT' (po_no --> RM.UF8)

//Crelsate matching Inbound order into receiving Warehouse
/* dts - 08/26/05 - created from Bobcat's uf_create_inbound to be generic
	- still passing datawindow reference for ease of implementation
*/
/* gwm - 01/15/2014 - Pandora Issue 668 - Update LPN carton_serial records with new RoNo, clear DoNo and set StatusCd to 'R'eceived */
Long			llNo, llRowCount, llRowPos, llFindRow, llNewRow, llLineItemNo, llOwner, llNewBatchSeq, llLinePos, llOrigBatchSeq 
String		lsDONO, lsOrderNo, lsCarrier, lsWarehouse, lsAWB, lsSKU, lsSupplier, lsPO, lsDORONO, lsNewRoNO, lsErrText, lsSQL, &
				presentation_str, dwsyntax_str, lsCOO, lsInvoiceNo, lsSerialNo, lsAltSKU
string		lsOrdType //dts - 08/26/05
string		lsSubInventoryLoc, lsOwner, lsFromLoc, lsUF7, lsInvType, lsUF8, lsUF2, lsUF6, lsReceiveMasterUF6  // 02/09 - Pandora (lsUF8 added 5/04)
string		lsPoNo2		// gwm - 01/15/2014 - 668
string		lsRemark // added 3/17/2010 for Pandora (sending DM.Remark to RM.Remark)
string		lsDOInvoice, lsShipRef,lsuf1,lsuf3,lsuf4 // TAM W&S 2011/04

DateTime		ldtToday
Decimal		ldQTY
Decimal{2}	ldPrice //TimA 07/12/11 Pandora Issue #255
Integer		liRC
Datastore	ldsDetail, ldsPickDetail
long ll_method_trace_id

ldsDetail = Create Datastore
ldsDetail.Dataobject = 'd_ro_detail'
ldsDetail.SetTransObject(SQLCA)

String lstrSSQL
String lstrMessage
Boolean lbLPN

ab_error_message_title = "Create Inbound"

// pvh 02.15.06
//ldtToday = DateTime(today(),Now())

lsDONO = adwMain.GetItemString(1,'do_no')

//dts 10/12/12 - added trace to provide hints regarding why Inbound Half of WH X-fers sometimes are not created.

SetNull(ll_method_trace_id)
//f_method_trace(ll_method_trace_id, this.ClassName(), 'Order ' + lsDoNo + ': Beginning wf_create_inbound') //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() ,'Order ' + lsDoNo + ': Beginning wf_create_inbound', lsDoNo,' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

//Retrieve the Delivery Picking records for this order
ldsPickDetail = Create Datastore
// 05/09 lsSQL =  "Select Line_Item_No, SKU, Supp_Code, Owner_ID, Country_of_Origin, ro_no, Quantity from Delivery_Picking_Detail "
// 08/09	lsSQL =  "Select Line_Item_No, SKU, Supp_Code, Owner_ID, Country_of_Origin, ro_no, Quantity, po_no from Delivery_Picking_Detail "
// 02/10 - Exclude component children
// TAM 2010/03/30 –Excluding Delivery BOM children
//lsSQL =  "Select dpd.Line_Item_No, dpd.SKU, dpd.Supp_Code, dpd.Owner_ID, dpd.Country_of_Origin, ro_no, Quantity, dpd.po_no, dd.user_field6" 
// LTK 20111005 Pandora #297 add component_no
//lsSQL =  "Select dpd.Line_Item_No, dpd.SKU, dpd.Supp_Code, dpd.Owner_ID, dpd.Country_of_Origin, ro_no, Quantity, dpd.po_no, dd.user_field6" 
//BCR 13-MAR-2012: Added dd.alternate_sku
lsSQL =  "Select dpd.Line_Item_No, dpd.SKU, dd.alternate_sku, dpd.Supp_Code, dpd.Owner_ID, dpd.Country_of_Origin, ro_no, Quantity, dpd.po_no, dd.user_field6, dpd.component_ind " 

lsSQL += " from Delivery_Picking_Detail dpd, delivery_detail dd"
//lsSQL += " Where dpd.do_no = dd.do_no and dpd.Line_Item_No = dd.Line_Item_No and dpd.component_ind <> '*' and  dpd.component_ind <> 'W' "
// 4/27/10 - added clause for dpd.sku = dd.sku
//lsSQL += " Where dpd.do_no = dd.do_no and dpd.Line_Item_No = dd.Line_Item_No and dpd.sku = dd.sku and dpd.component_ind <> '*' and  dpd.component_ind <> 'W' "

// LTK 20110927	Pandora #297 exclude parents for MORK assemblies, include the children.
if gs_project = 'PANDORA' and Upper(Trim(adwMain.Object.user_field21[1])) = 'Y' then
	lsSQL += " Where dpd.do_no = dd.do_no and dpd.Line_Item_No = dd.Line_Item_No and dpd.component_ind <> 'Y' "
else
	lsSQL += " Where dpd.do_no = dd.do_no and dpd.Line_Item_No = dd.Line_Item_No and dpd.sku = dd.sku and dpd.component_ind <> '*' and  dpd.component_ind <> 'W' "
end if

lsSQL += " and dpd.do_no = '" + lsDONO + "'"

lstrSSQL = lsSQL
//f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'Create DataStore' ,adwMain.GetItemString(1,'Invoice_no'), '',lstrSSQL)		//08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'Create DataStore' ,lsDoNo, '',lstrSSQL,isinvoice_no) //08-Feb-2013  :Madhu added

presentation_str = "style(type=grid)"

dwsyntax_str = SQLCA.SyntaxFromSQL(lsSQL, presentation_str, lsErrText)

ldsPickDetail.Create( dwsyntax_str, lsErrText)
ldsPickDetail.SetTransObject(SQLCA)

//Create a new Receive Master Record

//generate ro_no
llno = g.of_next_db_seq(gs_project,'Receive_Master','RO_No')
If llno <= 0 Then
	ab_error_message = "Unable to retrieve the next available order Number!"
	//messagebox("Receive Order", "Unable to retrieve the next available order Number!")
	Return -1
End If
	
lsNewRONO = Trim(Left(gs_project,9)) + String(llno,"000000")
//TAM 2007/02/22 Use Delivery Order Number as Receive Order Number
//lsOrderNo = String(llNo,'000000')
lsOrderNo = adwMain.GetItemString(1,'Invoice_no')
lsCarrier = adwMain.GetItemString(1,'carrier') 
lsInvoiceNo = adwMain.GetItemString(1,'Invoice_no') 
lsAWB = adwMain.GetItemString(1,'awb_bol_no') 
//wf_validation will validate that cust_code in Delivery Master is a valid warehouse code for receiving into

llRowCount = ldsPickDetail.Retrieve() //moved from below to be available for setting of lsUF8 for Pandora...

lsOrdType = adwMain.GetItemString(1,'ord_type') 

if gs_project = 'PANDORA' then
//2009/07/08 TAM Added logic for the Return Defective to use the MRB warehouse code (Concatinate an 'M' on the end)
//2009/07/09 TAM Remove logic to create inbound order for return defective (Commenting out in case they change their mind again)
//   If lsOrdType = 'Y' Then
// 		lsSubInventoryLoc = adwMain.GetItemString(1, 'User_Field2') + 'M'
//		lsFromLoc = adwMain.GetItemString(1, 'user_field2') + 'M' 
//	Else
		lsSubInventoryLoc = adwMain.GetItemString(1, 'cust_code')
	//04-12-09 - now seeding DM.UF2 on interface...
		lsFromLoc = adwMain.GetItemString(1, 'user_field2') // should we get this from the owner (from a detail line)?
//	End If
		lsWarehouse = Pandora_GetWarehouse(lsSubInventoryLoc)
	 	lsOwner = Pandora_GetOwner("ID", lsSubInventoryLoc)
		lsUF7 = 'MATERIAL RECEIPT'
		
		// 03/17/10 - dts - for Pandora, now sending remark to inbound half of wh x-fer
		lsRemark = adwMain.GetItemString(1, 'remark')
		
		//MEA 9/20/2009
		//Named it lsReceiveMasterUF6 because there already is a lsReceiveMasterUF6 that is used on the Receive_Detail and didn't want to
		//changed anything with that code. Ian directed me on how this is to wok. Will have Dave review when he is back.
		
		// 10/09 - PCONKL - We dont really want to set Receive Master UF6 from the Header Level (at least for now!). Project really needs to come from the Detail Level
		
	//	lsReceiveMasterUF6 = adwMain.GetItemString( 1, "user_field8")
//12/09/09 UJHALL Removed: part of no more entries in UF6 and UF8 at header level for Pandora
//	if llRowCount > 0 then
//		lsUF8 = ldsPickDetail.GetItemString(1, 'po_no')  //what if there is more than one 'From Project'?
//	else
//		//message that there are no picking
//	end if
else
	lsWarehouse = adwMain.GetItemString(1,'cust_Code') 
end if


// pvh 02.15.06 - gmt
ldtToday = f_getLocalWorldTime( lsWarehouse ) 

//Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
// 	Commented out line above, now controlling transaction from calling method - LTK 20141215 

if gs_project <> 'PANDORA' then
	//Supplier is hard-coded as 'N/A' since there could be multiple suppliers on the outbound order
	//  (RI requires Supplier to exist. Nulls are allowed, but then Search doesn't work)
	//if 'N/A' doesn't exist for this project, create it
	select supp_code into :lsSupplier
	from supplier
	where project_id = :gs_Project
	and supp_code = 'N/A';
	
	If isNull(lsSupplier) or lsSupplier = '' Then 
		//TimA 11/12/12 Temp for Pandora testing
		lstrSSQL = 'Insert Into supplier (Project_id, Supp_code, Supp_Name, last_user, last_update) '
		lstrSSQL = lstrSSQL + "Values('" + nz(gs_Project,'') + "N/A" + "','" + "Used For Warehouse Transfer" + "','"  + nz(gs_userid,'') + "','" + String(nz(ldtToday,'')) + "','" + nz(gs_userid,'') + "','" + String(nz(ldtToday,'')) + "')"		
		//f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'Insert Supplier' ,lsOrderNo, '',lstrSSQL)		//08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'Insert Supplier' ,lsDoNo, '',lstrSSQL,isinvoice_no)	//08-Feb-2013  :Madhu added
		
		insert into supplier(Project_id, Supp_code, Supp_Name, last_user, last_update)
		values (:gs_Project, 'N/A', 'Used For Warehouse Transfer', :gs_userid, :ldtToday)
		Using SQLCA;
		
		If sqlca.sqlcode <> 0 Then
			lsErrText = sqlca.sqlerrtext /*text will be lost after rollback*/
			//Execute Immediate "ROLLBACK" using SQLCA;		// 	Commented line out, now controlling transaction from calling method - LTK 20141215 
			ab_error_message = "Unable to insert into supplier table.~r~r" + lsErrText
			//Messagebox("Error Insert into Supplier", "Unable to insert into supplier table.~r~r" + lsErrText)
			//f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'SQL Error ROLLBACK ' + lsErrText  ,lsOrderNo, '',lstrSSQL) //08-Feb-2013  :Madhu commented
			f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'SQL Error ROLLBACK ' + lsErrText  ,lsDoNo, '',lstrSSQL,isinvoice_no)	//08-Feb-2013  :Madhu added
			Return -1
		End If
	end if
	lsSupplier = 'N/A'
	lsInvType = 'N'
else
	lsSupplier = 'PANDORA'
	lsInvType = 'N' // tempo! get the inv type from outbound order (what about lines?)
end if

//TAM W&S 2011/04 
if left(gs_project,3) = 'WS-' then
	lsDOInvoice = adwMain.GetItemString(1,'Invoice_no')
		//TAM - W&S 2011/04  -   Order Number is Formatted.  We will not allow entry into this field.  
		//Format is (WH_CODE(4th and 5TH Char)) + "S" + (Year(2 digit)) + (Month(2 Digit)) + (4 Digit Running number from Lookup table) 
		//Left 2 characters = WS for Wine and Spirt.
	lsOrderNO =  Mid(gs_project,4,2) + '-A' + String(Today,'YYMM') + Right(string(llno,'0000'), 4) //TAM W&S 04/21/2011
	lsInvoiceNo = lsOrderNO
	lsSupplier = idw_detail.GetItemString(1,'supp_Code')
	lsShipRef = idw_detail.GetItemString(1,'User_field3') 
End If

//BCR 07-MAR-2012: DANA-TH Customization 
if gs_project = 'DANA-TH' then
	lsSupplier = idw_detail.GetItemString(1,'supp_Code')
End If

//Jxlim 08/16/2013 Ariens
if Upper(gs_project) = 'ARIENS' then
	lsSubInventoryLoc = adwMain.GetItemString(1,'wh_code')  //copy to rm.user_field1
	lsUf6 = adwMain.GetItemString(1,'User_field6')			   //copy to rm.user-field6
End If

//// TAM 6/26/2009  Create And EDI_INBOUND_HEADER for Return Defective order types.  Only the shell is needed since we are only trying to cary over the Defective Serial Number to Receiving
//// 09/07/09 TAM Remove logic to create inbound order for return defective (Commenting out in case they change their mind again)
//  //	If lsOrdType = 'Y' Then
//		llNewBatchSeq =  g.of_next_db_seq(gs_project,'EDI_Inbound_Header','EDI_Batch_Seq_No')
//	//Create a new EDI_Inbound_Header Record (just the shell needed to avoid FK violation on the detail records)
//		Execute Immediate "Begin Transaction" using SQLCA;
//		Insert Into EDI_Inbound_Header (project_id, edi_batch_seq_no, order_seq_no, order_no, status_cd, Status_message) 
//		values								(:gs_Project, :llNewBatchSeq, 1, :lsNewRONO, 'C', 'Return Replacement');
////		Execute Immediate "COMMIT" using SQLCA;
//	End If


/*
Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, 
										Supp_Invoice_No, carrier, awb_bol_no, USer_field1, Request_Date,	Last_user, Last_Update, do_no)
										
//					Values		(:lsNewRONO, :gs_Project, :ldtToday, "N", "C", "N", :lsWareHouse, "BOBCAT", 
					Values		(:lsNewRONO, :gs_Project, :ldtToday, "N", :lsOrdType, "N", :lsWareHouse, "N/A", 
										:lsOrderNo, :lsCarrier, :lsAWB, :lsInvoiceNo, :ldtToday, :gs_userid, :ldtToday, :lsDONO)
										*/
/* For Pandora, set RM.UF2 = SubInventory Loc from Outbound Order
				    set RM.UF3 = From Location (user_field2)
				    set RM.UF7 = 'MATERIAL TRANSFER'
				    set Supplier to 'PANDORA') 
				    set RM.UF8 = From Project (po_no) */
//Added EDI_Batch Sequence Number to Link EDI Transaction  
//Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, 
//										Supp_Invoice_No, carrier, awb_bol_no, USer_field1, User_Field2, user_field3, user_field7, user_field8, Request_Date,	Last_user, Last_Update, do_no)
//										
//					Values		(:lsNewRONO, :gs_Project, :ldtToday, "N", :lsOrdType, :lsInvType, :lsWareHouse, :lsSupplier, 
//										:lsOrderNo, :lsCarrier, :lsAWB, :lsInvoiceNo, :lsSubInventoryLoc, :lsFromLoc, :lsUF7, :lsUF8, :ldtToday, :gs_userid, :ldtToday, :lsDONO)

	//Get the original PO Number for this stock
	//GailM - 663 - Moved up before inserts to receive master for ediBatchSeqNo use of llOrigBatchSeq
	lsDORONO = ldsPickDetail.GetItemString(llRowCount, 'ro_no')
	
	Select Supp_invoice_No, Edi_Batch_Seq_No			// Use original batch seq as original RO
	into :lsPO, :llOrigBatchSeq
	From Receive_Master
	Where ro_no = :lsDORONO;
	
	If isNull(lsPO) Then lsPO = ''

// 10/09 - PCONKL - Removed Setting of Receive Master.UF6 ('To Project'). This really needs to be handled at the Detail Level
	//12/09/09 UJHALL: For Pandora, moving UF3 to UF6 and removing UF8
	// 03/17/10 - dts - adding header-level remarks...
	// dts - 10/08/10 - adding crossdock_ind
	string lsCrossdock 
	lsCrossdock = adwMain.GetItemString(1, 'crossdock_ind')
	if gs_project = 'PANDORA' then

		//if left(Upper(lsOrderNo), 4) = 'FMOR' then // dts 10/14/10 - the Final Move Order (FMOR...) should not be recevied into general inventory - not cross-docked
		if left(Upper(lsOrderNo), 4) = 'FMOR'  or left(Upper(lsOrderNo), 4) = 'FMTR' then // dts 02/22/11 - added 'FMTR' to the condition.
			lsCrossdock = 'N'
		end if
		//TimA 11/02/12 testing the insert statement
		lstrSSQL = 'Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, Supp_Invoice_No, carrier, awb_bol_no, USer_field1, User_Field2, user_field6,  user_field7,  Request_Date,	create_user, Last_user, Last_Update, do_no, edi_batch_seq_no, Remark, crossdock_ind) '
		lstrSSQL = lstrSSQL + "Values('" + nz(lsNewRONO,'') + "','" + nz(gs_Project,'') + "','" + String(nz(ldtToday,'')) + "','" + "N" + "','" + nz(lsOrdType,'') + "','" + nz(lsInvType,'') + "','" + nz(lsWareHouse,'') + "','" + nz(lsSupplier,'') + "','" + nz(lsOrderNo,'') + "','" + nz(lsCarrier,'') + "','" + nz(lsAWB,'') + "','" + nz(lsInvoiceNo,'') + "','" + nz(lsSubInventoryLoc,'') + "','" + nz(lsFromLoc,'') + "','" + nz(lsUF7,'') + "','" + String(nz(ldtToday,'')) + "','" + nz(gs_userid,'') + "','" + nz(gs_userid,'') + "','" + String(nz(ldtToday,'')) + "','" + nz(lsDONO,'') + "','" + String(nz(llNewBatchSeq,0)) + "','" + nz(lsRemark,'') + "','" + nz(lsCrossdock,'') + "')"

		//f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'Start Create Inbound' ,lsOrderNo, '',lstrSSQL)	//08-Feb-2013  :Madhu commented
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'Start Create Inbound' ,lsDoNo, '',lstrSSQL,isinvoice_no) //08-Feb-2013  :Madhu added	
		
		//TimA 11/15/12 change the "N" to 'N'.  This seams to create and error on inserts occasionlly
		Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, 
										Supp_Invoice_No, carrier, awb_bol_no, USer_field1, User_Field2, user_field6,  user_field7,  Request_Date,	create_user, Last_user, Last_Update, do_no, edi_batch_seq_no, Remark, crossdock_ind)
										
					Values		(:lsNewRONO, :gs_Project, :ldtToday, 'N', :lsOrdType, :lsInvType, :lsWareHouse, :lsSupplier, 
										:lsOrderNo, :lsCarrier, :lsAWB, :lsInvoiceNo, :lsSubInventoryLoc, :lsFromLoc,  :lsUF7, :ldtToday, :gs_userid, :gs_userid, :ldtToday, :lsDONO, :llNewBatchSeq, :lsRemark, :lsCrossdock)
		Using SQLCA;
	else
// TAM W&S 2011/04  Added W&S and pop Ship Ref and blanked UF1
		if left(gs_project,3) = 'WS-' then
			Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, 
										Supp_Invoice_No, carrier, awb_bol_no, USer_field1, User_Field2, user_field3,  user_field7, user_field8, Request_Date,	create_user, Last_user, Last_Update, do_no, edi_batch_seq_no, crossdock_ind,Ship_Ref)
										
					Values		(:lsNewRONO, :gs_Project, :ldtToday, 'N', :lsOrdType, :lsInvType, :lsWareHouse, :lsSupplier, 
										:lsOrderNo, :lsCarrier, :lsAWB, '', :lsSubInventoryLoc, :lsFromLoc,  :lsUF7, :lsUF8, :ldtToday, :gs_userid, :gs_userid, :ldtToday, :lsDONO, :llNewBatchSeq, :lsCrossdock, :lsShipRef)
			Using SQLCA;
			
		//Jxlim 08/16/2013 Ariens copy dm.wh_code=rm.user_field1 and dm.user_field6=rm.user_field6
		ElseIf Upper(gs_project) ='ARIENS' Then
			Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, 
											Supp_Invoice_No, carrier, awb_bol_no, User_Field1, user_field3, User_field6, user_field7, user_field8, Request_Date,	create_user, Last_user, Last_Update, do_no, edi_batch_seq_no, crossdock_ind)
										
						Values		(:lsNewRONO, :gs_Project, :ldtToday, 'N', :lsOrdType, :lsInvType, :lsWareHouse, :lsSupplier, 
											:lsOrderNo, :lsCarrier, :lsAWB,  :lsSubInventoryLoc, :lsFromLoc, :lsUF6, :lsUF7, :lsUF8, :ldtToday, :gs_userid, :gs_userid, :ldtToday, :lsDONO, :llNewBatchSeq, :lsCrossdock)
			Using SQLCA;
		Else
			Insert Into Receive_Master (ro_no, project_id, ord_date, ord_status, ord_type, Inventory_type, wh_Code, Supp_Code, 
											Supp_Invoice_No, carrier, awb_bol_no, USer_field1, User_Field2, user_field3,  user_field7, user_field8, Request_Date,	create_user, Last_user, Last_Update, do_no, edi_batch_seq_no, crossdock_ind)
										
						Values		(:lsNewRONO, :gs_Project, :ldtToday, 'N', :lsOrdType, :lsInvType, :lsWareHouse, :lsSupplier, 
											:lsOrderNo, :lsCarrier, :lsAWB, :lsInvoiceNo, :lsSubInventoryLoc, :lsFromLoc,  :lsUF7, :lsUF8, :ldtToday, :gs_userid, :gs_userid, :ldtToday, :lsDONO, :llNewBatchSeq, :lsCrossdock)
			Using SQLCA;
		End If
	End If

If sqlca.sqlcode <> 0 Then
	lsErrText = sqlca.sqlerrtext /*text will be lost after rollback*/
	//Execute Immediate "ROLLBACK" using SQLCA;		// 	Commented line out, now controlling transaction from calling method - LTK 20141215 
	ab_error_message = "Unable to save new Receiving Order to database!~r~r" + lsErrText
	//Messagebox("Create Inbound", "Unable to save new Receiving Order to database!~r~r" + lsErrText)
	//f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'SQL Error ROLLBACK~r~r' + lsErrText  ,lsOrderNo, '',lstrSSQL)
       f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'SQL Error ROLLBACK~r~r' + nz(lsErrText,'') ,lsDONO, '',lstrSSQL,adwMain.GetItemString(1,'Invoice_no')) 	
	Return -1
End If

// LTK 20111005	Pandora #297 Need to set the user_line_item on the receiving order to the value stored in Delivery_BOM.
boolean lb_pandora_mork
if Upper(gs_project) = 'PANDORA' and Upper(Trim(adwMain.Object.user_field21[1])) = 'Y' then
	// A Pandora MORK order
	lb_pandora_mork = true
end if

datastore lds_delivery_bom_recs

if lb_pandora_mork then
	// Retrieve the Delivery_BOM records here for later use.
	string ls_sql
	presentation_str = "style(type=grid)"
	lds_delivery_bom_recs = CREATE datastore
	ls_sql =   " SELECT user_field1, sku_parent, sku_child, line_item_no "
	ls_sql += " FROM dbo.Delivery_BOM "
	ls_sql += " WHERE project_id = '" + gs_project + "' "
	ls_sql += " AND do_no = '" + lsDONO + "' "

	dwsyntax_str = SQLCA.SyntaxFromSQL(ls_sql, presentation_str, lsErrText)
	lds_delivery_bom_recs.Create( dwsyntax_str, lsErrText)
	lds_delivery_bom_recs.SetTransObject(SQLCA)	
	
	if  lds_delivery_bom_recs.Retrieve() < 0 then
		//Execute Immediate "ROLLBACK" using SQLCA;		// 	Commented line out, now controlling transaction from calling method - LTK 20141215 
		ab_error_message = "Unable to retrieve Delivery BOM: "  + lsDONO
		//Messagebox("Create Inbound", "Unable to find child line item numbers for system number: "  + lsDONO)
		Return -1
	end if
end if
// end of Pandora #297 block

//Create a Receive Detail record for each SKU - loop by Pick Detail so we can include original PO (from RO_NO)

//now Retrieved above (for Pandora's po_no --> UF8)... llRowCount = ldsPickDetail.Retrieve()
For llRowPos = 1 to llRowCount
	
	lsSKU = ldsPickDetail.GetItemString(llRowPos,'SKU')
	//BCR 13-MAR-2012: Use Alt_sku value from Delivery_Detail
	lsAltSKU = ldsPickDetail.GetItemString(llRowPos,'Alternate_SKU')
	//
	lsSupplier = ldsPickDetail.GetItemString(llRowPos,'supp_Code')
	lsCoo = ldsPickDetail.GetItemString(llRowPos,'Country_of_Origin')
	ldQTY = ldsPickDetail.GetItemNumber(llRowPos,'Quantity')
	llLineItemNo = ldsPickDetail.GetItemNumber(llRowPos,'Line_Item_No')
	
	lsPoNo2 = idw_pick.GetItemString(llRowPos,'po_no2')		// gwm 01/15/2014 668
	
	//lsPoNo2 = ldsPickDetail.GetItemString(llRowPos,'po_no2')		// gwm 01/15/2014 668
	
// TAM W&S 2011/04 Added fields for wine and spirit
	if Left(gs_project,3) = 'WS-' then
		llFindRow = idw_detail.Find("Upper(sku) = '" + Upper(lsSKU) + "' and Line_Item_No = " + string(llLineItemNo), 1, idw_detail.RowCount())
		lsUF1 = idw_detail.GetItemString(llFindRow,'user_field1')
		lsUF2 = idw_detail.GetItemString(llFindRow,'user_field2')
		lsUF3 = idw_detail.GetItemString(llFindRow,'user_field7')
		lsUF4 = idw_detail.GetItemString(llFindRow,'user_field4')
	end if

	if gs_project = 'PANDORA' then
		//TimA 07/12/11 Pandora Issue #255
		//Get the order Delivery detail Price
		llFindRow = idw_detail.Find("Upper(sku) = '" + Upper(lsSKU) + "' and Line_Item_No = " + string(llLineItemNo), 1, idw_detail.RowCount())
			
		// LTK 20110927 Pandora #297 For MORK orders, the children will not be found on the detail tab, only the pick tab.
		//ldPrice = idw_detail.GetItemNumber(llFindRow,'Price')
		if llFindRow > 0 then
			ldPrice = idw_detail.GetItemNumber(llFindRow,'Price')
		end if
		
		llOwner = long(lsOwner)
		lsUF2 = ldsPickDetail.GetItemString(llRowPos, 'po_no')  //TAM 2009/07/07 - Now loading from project into receive_detail UF2
		lsUF6 = ldsPickDetail.GetItemString(llRowPos, 'user_field6')  //dts 8/09 - for Pandora, POP Location is stored in UF6 and needs to move from Outbound to Inbound
	else
		llOwner = ldsPickDetail.GetItemNumber(llRowPos,'Owner_ID')
	end if
	
	//Rollup to SKU/Supplier
	// - Doing this for BOBCAT to maintain the functionality of Bobcat's uf_create_inbound
	// - For non-BOBCAT (WH Xfers) rolling up to SKU/Line so generate putaway 
	//   works on inbound side (need to know what line to get proper Qty/lot-able fields relationship)
	//   - Could we use a lot-able fields Find? If there is no difference other than line,
	//		 won't we end up with 'extra' rows on receiving?
	if gs_project = 'BOBCAT' then
		llFindRow = ldsDetail.Find("Upper(sku) = '" + Upper(lsSKU) + "' and Upper(Supp_Code) = '" + Upper(lsSupplier) + "'",1, ldsDetail.RowCount())
	else
		//llFindRow = ldsDetail.Find("Upper(sku) = '" + Upper(lsSKU) + "' and Upper(Supp_Code) = '" + Upper(lsSupplier) + "' and Line_Item_No = " + string(llLineItemNo), 1, ldsDetail.RowCount())
		llFindRow = ldsDetail.Find("Upper(sku) = '" + Upper(lsSKU) + "' and Line_Item_No = " + string(llLineItemNo), 1, ldsDetail.RowCount())
	end if
	
	If llFindRow > 0 Then
		ldsDetail.SetItem(llFindRow, 'Req_Qty',(ldsDetail.GetItemNumber(llFindRow,'req_Qty') + ldQty))
// TAM W&S 2011/07 Do Not append PO to UF1 for W&S.  W&S is using User field 1 to store the Recieve Quantity at the Case level.  
		If Left(gs_project,3) <> 'WS-' then
			ldsDetail.SetItem(llFindRow, 'User_field1',ldsDetail.GetItemString(llFindRow,'User_field1') + ', ' + lsPO)
		End If
		
	Else
		llNewRow = ldsDetail.InsertRow(0)
		ldsDetail.SetItem(llNewRow,'ro_no',lsNewRONO)
		ldsDetail.SetItem(llNewRow,'Line_Item_No',llLineItemNO)
//// TAM 09/10/2009 - Added Line Item Number to User Line Item Number
//		ldsDetail.SetItem(llNewRow,'User_Line_Item_No',string(llLineItemNO))

		// LTK 20111005 Pandora #297 set user line item to the value stored in delivery_BOM for Pandora MORK orders
		if lb_pandora_mork and ldsPickDetail.GetItemString(llRowPos,'component_ind') = 'W' then
			long ll_found
			ll_found = lds_delivery_bom_recs.find("Sku_Child = '" + lsSKU + "'  and line_item_no = " + String(llLineItemNo), 1, lds_delivery_bom_recs.RowCount())
			if ll_found < 1 then
				//Execute Immediate "ROLLBACK" using SQLCA;				// 	Commented line out, now controlling transaction from calling method - LTK 20141215 
				ab_error_message = "Unable to find child line item numbers for system number: "  + lsDONO
				//Messagebox("Create Inbound", "Unable to find child line item numbers for system number: "  + lsDONO)
				Return -1
			end if

			ldsDetail.SetItem(llNewRow,'User_Line_Item_No',lds_delivery_bom_recs.GetItemString(ll_found,"user_field1"))
			
		else
			ldsDetail.SetItem(llNewRow,'User_Line_Item_No',string(llLineItemNO))
		end if
		
		ldsDetail.SetItem(llNewRow,'sku',lsSKU)
		ldsDetail.SetItem(llNewRow,'alternate_sku',lsAltSKU)//BCR 13-MAR-2012: Use Alt_sku value from Delivery_Detail
		ldsDetail.SetItem(llNewRow,'supp_Code',lsSUpplier)
		ldsDetail.SetItem(llNewRow,'req_qty',ldQty)
		ldsDetail.SetItem(llNewRow,'Cost',ldPrice)  //TimA 07/12/11 Pandora Issue #255		
		ldsDetail.SetItem(llNewRow,'owner_ID',llOwner)
		ldsDetail.SetItem(llNewRow,'Country_of_Origin',lsCOO)
		ldsDetail.SetItem(llNewRow,'User_Field1',lsPO)
//TAM 07/07/2009 Add User Field2 for Pandora -coming from delivery_picking po_no 	
		ldsDetail.SetItem(llNewRow,'User_Field2',lsUF2)
		//POP Location for Pandora....
		ldsDetail.SetItem(llNewRow,'User_Field6',lsUF6)
// TAM 2011/04 W&S Customize Fields for Transfer
	if left(gs_project,3) = 'WS-' then
		ldsDetail.SetItem(llNewRow,'User_Field1',lsUF1)
		ldsDetail.SetItem(llNewRow,'User_Field2',lsUF2)
		ldsDetail.SetItem(llNewRow,'User_Field3',lsUF3)
		ldsDetail.SetItem(llNewRow,'User_Field4',lsUF4)
	end if

//TAM 06/26/2009 Add EDI_Outbound_Detail Row Here for Return Defective	
//09/07/09 TAM Remove logic to create inbound order for return defective (Commenting out in case they change their mind again)
//  		If lsOrdType = 'Y' Then
//				if gs_project = 'PANDORA' then
//					llFindRow =  idw_Detail.Find("Upper(sku) = '" + Upper(lsSKU) + "' and Line_Item_No = " + string(llLineItemNo), 1, idw_Detail.RowCount())
//  				lsSerialNo = idw_Detail.GetItemString(llFindRow,'user_field3') 
//			end if
//			llLinePos ++
//	
//			Insert Into EDI_Inbound_Detail (project_id, edi_batch_seq_no, order_seq_no, order_line_no, order_no, sku, line_item_no, Inventory_Type, Country_of_Origin, lot_no, po_no, po_no2, Quantity, Status_CD, Status_message,  Serial_No) 
//			values								(:gs_Project, :llNewBatchSeq, 1, :llLinePos, :lsORderNo, :lsSKU, :llLineItemNo, 'N',:lsCOO, '-', :lsPO, '-', :ldQty, 'C', 'Return Replacement', :lsSerialNo);
//
//		End If
	End If
	
	// GailM - 01/15/2014 = Pandora Issue 668 - Set LPN GPN records in carton_serial with new RoNo, clear DoNo, and set StatisCd = 'N'
	if gs_project = 'PANDORA' then
		liRC = Pandora_GetLPN(lsSKU)
		if liRC = 1 then
			// Get PalletID/PoNo2 to update carton_serial
			Update Carton_Serial 
			//Set RO_No = :lsNewRONO , DO_No = :lsDONO     // Do not use this.  uf_gi_rose will find the DONo elsewhere
			Set RO_No = :lsNewRONO ,  Status_Cd = 'N'		// Set as new un-received RO.  uf_gi_rose will not use this DONo
			Where Project_id = :gs_project And Pallet_Id = :lsPONo2 
			and Status_Cd <> 'D'
			using SQLCA;
		End If
	End If

Next /*Pick Detail Record */

// LTK 20111005 Pandora #297
if IsValid(lds_delivery_bom_recs) then DESTROY lds_delivery_bom_recs

//Update Details
liRC = ldsDetail.Update()
If liRC = 1 Then
	//Execute Immediate "COMMIT" using SQLCA;		// 	Commented line out, now controlling transaction from calling method - LTK 20141215 
	//Moved this because the rollback dosen't record in the log
	//dts 10/12/12 - added trace to provide hints regarding why Inbound Half of WH X-fers sometimes are not created.
 	//f_method_trace(ll_method_trace_id, this.ClassName(), 'Order ' + lsDoNo + ': End of wf_create_inbound. About to commit') //08-Feb-2013  :Madhu commented
	f_method_trace_special( gs_project, this.ClassName(), 'Order ' + lsDoNo + ': End of wf_create_inbound. About to commit',lsDoNo, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
	
Else
	lsErrText = sqlca.sqlerrtext
	//Execute Immediate "ROLLBACK" using SQLCA;		// 	Commented line out, now controlling transaction from calling method - LTK 20141215 
	ab_error_message = "Unable to save new Receiving Order Detail records to database!~r~r" + lsErrText	
	//Messagebox("Create Inbound", "Unable to save new Receiving Order Detail records to database!~r~r" + lsErrText)
	//f_method_trace(ll_method_trace_id, this.ClassName(), 'Order ' + lsDoNo + ': End of wf_create_inbound. SQL Error and changes ROLLED BACK')
	//f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'SQL Error ROLLBACK at End '  + lsErrText,lsOrderNo, '',lstrSSQL)
       f_method_trace_special( gs_project, this.ClassName() + ' - wf_create_inbound', 'SQL Error ROLLBACK at End '  + nz(lsErrText,'') ,lsDONO, '',lstrSSQL,adwMain.GetItemString(1,'Invoice_no')) 		
	Return -1
End If

//MessageBox("Create Inbound", "Matching Inbound Order successfully created for " + lswarehouse)
SetMicroHelp("Matching Inbound Order successfully created for " + lswarehouse)		// 	Missing confirmation changes - LTK 20141215 
is_warehouse_of_create_inbound = lswarehouse		// 	Missing confirmation changes - LTK 20141218 

Return 0
end function

public subroutine wf_update_from_loc (datawindowchild as_dw_child);String ls_sql, ls_order, ls_where
String ls_WH
//TimA 03/26/13 Pandora 
If Upper(gs_project) = 'PANDORA' then

	ls_sql =  "SELECT Customer.Project_ID,  Customer.Cust_Code,  Customer.Cust_Name  FROM Customer Where PROJECT_ID = '"+ Upper(gs_Project) + "' " + " AND Customer.Customer_Type = 'WH' "
	ls_order =  " ORDER BY Customer.Project_ID ASC,  Customer.Cust_Code ASC "  
	
	If isWarehouse <> '' Then	
		ls_where = "  and user_field2 = '" + isWarehouse + "'" 
	End if

	If ls_where <> '' Then
		ls_sql = ls_sql + ls_where
	End if
	ls_sql = ls_sql + ls_order

	as_dw_child.SetTransObject(SQLCA)
	as_dw_child.SetSqlSelect(ls_sql)
	as_dw_child.Retrieve()
	
End if
end subroutine

public subroutine uf_showhide_status (string as_status);/*GailM 05/29/2013 Pandora Issue 605 - to turn multi select DW on/off when clicking DDDW for order status and otm status */
CHOOSE CASE as_status
		
	CASE 'ord_status'
		If ib_show_ord_status Then
			tab_main.tabpage_search.uo_ord_status.bringtotop = False
			ib_show_ord_status = False
		Else
			tab_main.tabpage_search.uo_ord_status.bringtotop = True
			ib_show_ord_status = True
		End If
	CASE 'otm_status'
		If ib_show_otm_ord_status Then
			tab_main.tabpage_search.uo_otm_ord_status.bringtotop = False
			ib_show_otm_ord_status = False
		Else
			tab_main.tabpage_search.uo_otm_ord_status.bringtotop = True
			ib_show_otm_ord_status = True
		End If
	CASE 'mobile_status' /* 11/14 - PCONKL */
		If ib_show_mobile_status Then
			tab_main.tabpage_search.uo_mobile_status.bringtotop = False
			ib_show_mobile_status = False
		Else
			tab_main.tabpage_search.uo_mobile_status.bringtotop = True
			ib_show_mobile_status = True
		End If
			
		
END CHOOSE

end subroutine

public function integer wf_display_message (string as_message);
if not ib_batchconfirmmode then
	MessageBox(is_title, as_message)
else
	is_batch_message[UpperBound(is_batch_message)+1] =  idw_main.getItemString(1,'invoice_no') + ': ' + as_message
end if

return 0
end function

public function long wf_validate_skuserialhold ();//Jxlim 07/17/2013 New function for Arien enhancemente - sku/serial combo validation against sku/serial combo from skuserialhold table
//09/13 - PCONKL - Serials may also be on the Serial Tab

Long ll_rowcnt, ll_pickCnt, i, llFound
String lsSku, lsSerial_no, lsFind, lsSerial_no_short

ids_skuserialhold.reset()

If idw_Main.GetITemString(1,'Ord_Type') <> 'Z' and  idw_Main.GetITemString(1,'Ord_Type') <> 'X' Then //TAM  Skip Validation for Transfer Orders and Return Orders

ids_skuserialhold.Retrieve(gs_project, is_dono)

ll_rowcnt = ids_skuserialhold.Rowcount()

ll_pickCnt = idw_pick.Rowcount()

For i= 1 to ll_pickCnt
	
	lsSku =  idw_pick.GetItemString(i, 'sku')
	lsSerial_no=  idw_pick.GetItemString(i, 'serial_no')
	lsSerial_no_short =  Right(idw_pick.GetItemString(i, 'serial_no'),6)

			//TAM 2014/04/21  Add a service call to Tibco/Ariens to see if the order is on hold				
			If  ib_ariens_on_hold_service_call = True and lsSerial_no <> '-' Then // If  ib_ariens_on_hold_service_call = True
				//Add the header and footer
				String lsPost, lsxmlresponse, lsreturncode, lsreturndesc
				iuoWebsphere = CREATE u_nvo_websphere_post
				linit = Create Inet
				lsPost = iuoWebsphere.uf_request_header("AriensOnHold")
				lsPost += 	'<SKU>' + lssku +  '</SKU>' 
				lsPost += 	'<Serial_No>' + lsserial_no_short +  '</Serial_No>' 
				lsPost = iuoWebsphere.uf_request_footer(lsPost)
	
				w_main.setMicroHelp("Serial Number Validation request to Application Server...")
	
				lsXMLResponse = iuoWebsphere.uf_post_url(lsPost)
	
				w_main.setMicroHelp("Serial Number Validation request complete.")
	
	
				//Check for Valid Return...
				//If we didn't receive an XML back, there is a fatal exception error
				If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
					Messagebox("Websphere Fatal Exception Error","Unable to Validate On Hold Status: ~r~r" + lsXMLResponse,StopSign!)
					lsReturnCode = "-1"
					lsReturnDesc = ''
				Else	
				//Check the return code and return description for any trapped errors
					lsReturnCode = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"returncode")
					lsReturnDesc = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"errormessage")
				End If
	
				Choose Case lsReturnCode
			
					Case "-99" /* Websphere non fatal exception error*/
						Messagebox("Websphere Operational Exception Error","Order On Hold Status: ~r~r" + lsReturnDesc,StopSign!)
						Return -1
		
					Case Else
			
						If lsReturnDesc > '' Then
							Messagebox(is_title,lsReturnDesc)
						End If
			
						if lsReturnCode = "-1" Then // If Return code = -1(Timeout from Tibco) then we want to use the existing table validation
							lsFind = "Upper(sku) ='" + Upper(lsSku) + "'" + " and Upper(serial_no) = '" + Upper(lsserial_no) + "'" 
							llFound =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
							If llFound > 0 Then
								doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(lsSku) + '~rSerial: ' + Upper(lsserial_no) + ' is on Hold ~rCould not Process.')
								Return -1
							End If
						End If
		
				End Choose

			Else	// If  ib_ariens_on_hold_service_call = False then  we want to use the existing table validation
				If lsSerial_no <> '-' Then
					lsFind = "Upper(sku) ='" + Upper(lsSku) + "'" + " and Upper(serial_no) = '" + Upper(lsserial_no) + "'" 
					llFound =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
					If llFound > 0 Then
						doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(lsSku) + '~rSerial: ' + Upper(lsserial_no) + ' is on Hold ~rCould not Process.')
						Return -1
					End If
				End If
			End If // End  ib_ariens_on_hold_service_call = True
	

//	If lsSerial_no <> '-' Then
//		lsFind = "Upper(sku) ='" + Upper(lsSku) + "'" + " and Upper(serial_no) = '" + Upper(lsSerial_no) + "'" 
//		llFound =	ids_skuserialhold.find(lsFind,1,ll_rowcnt)
//		If llfound > 0 Then
//			MessageBox('SKU/Serial Combo', 'Model: ' + Upper(lsSku) + '~rSerial: ' + Upper(lsSerial_no) + ' is on Hold ~rCould not Process.')
//			Return -1
//		End If
//	Else
//	//	Return 0
//	End If
	
Next

ll_pickCnt = idw_serial.Rowcount()

For i= 1 to ll_pickCnt
	
	lsSku =  idw_serial.GetItemString(i, 'sku')
	lsSerial_no=  idw_serial.GetItemString(i, 'serial_no')
	lsSerial_no_short =  Right(idw_serial.GetItemString(i, 'serial_no'),6)

			//TAM 2014/04/21  Add a service call to Tibco/Ariens to see if the order is on hold				
			If  ib_ariens_on_hold_service_call = True and lsSerial_no <> '-'  Then // If  ib_ariens_on_hold_service_call = True
				//Add the header and footer
				iuoWebsphere = CREATE u_nvo_websphere_post
				linit = Create Inet
				lsPost = iuoWebsphere.uf_request_header("AriensOnHold")
				lsPost += 	'<SKU>' + lssku +  '</SKU>' 
				lsPost += 	'<Serial_No>' + lsserial_no_short +  '</Serial_No>' 
				lsPost = iuoWebsphere.uf_request_footer(lsPost)
	
				w_main.setMicroHelp("Serial Number Validation request to Application Server...")
	
				lsXMLResponse = iuoWebsphere.uf_post_url(lsPost)
	
				w_main.setMicroHelp("Serial Number Validation request complete.")
	
	
				//Check for Valid Return...
				//If we didn't receive an XML back, there is a fatal exception error
				If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
					Messagebox("Websphere Fatal Exception Error","Unable to Validate On Hold Status: ~r~r" + lsXMLResponse,StopSign!)
					lsReturnCode = "-1"
					lsReturnDesc = ''
				Else	
				//Check the return code and return description for any trapped errors
					lsReturnCode = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"returncode")
					lsReturnDesc = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"errormessage")
				End If
	
				Choose Case lsReturnCode
			
					Case "-99" /* Websphere non fatal exception error*/
						Messagebox("Websphere Operational Exception Error","Order On Hold Status: ~r~r" + lsReturnDesc,StopSign!)
						Return -1
		
					Case Else
			
						If lsReturnDesc > '' Then
							Messagebox(is_title,lsReturnDesc)
						End If
			
						if lsReturnCode = "-1" Then // If Return code = -1(Timeout from Tibco) then we want to use the existing table validation
							lsFind = "Upper(sku) ='" + Upper(lsSku) + "'" + " and Upper(serial_no) = '" + Upper(lsserial_no) + "'" 
							llFound =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
							If llFound > 0 Then
								doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(lsSku) + '~rSerial: ' + Upper(lsserial_no) + ' is on Hold ~rCould not Process.')
								Return -1
							End If
						End If
		
				End Choose

			Else	// If  ib_ariens_on_hold_service_call = False then  we want to use the existing table validation
				If lsSerial_no <> '-' Then
					lsFind = "Upper(sku) ='" + Upper(lsSku) + "'" + " and Upper(serial_no) = '" + Upper(lsserial_no) + "'" 
					llFound =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
					If llFound > 0 Then
						doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(lsSku) + '~rSerial: ' + Upper(lsserial_no) + ' is on Hold ~rCould not Process.')
						Return -1
					End If
				End If
			End If // End  ib_ariens_on_hold_service_call = True

//	If lsSerial_no <> '-' Then
//		lsFind = "Upper(sku) ='" + Upper(lsSku) + "'" + " and Upper(serial_no) = '" + Upper(lsSerial_no) + "'" 
//		llFound =	ids_skuserialhold.find(lsFind,1,ll_rowcnt)
//		If llfound > 0 Then
//			MessageBox('SKU/Serial Combo', 'Model: ' + Upper(lsSku) + '~rSerial: ' + Upper(lsSerial_no) + ' is on Hold ~rCould not Process.')
//			Return -1
//		End If
//	Else
////		Return 0
//	End If
//	
Next
End If // TAM Skip Tranfer Orders

Return 0						 

					 
end function

public function integer wf_serial_swap (integer airow, string asorigserial, string asnewserial);//
//Long	llRowPos, llRowCount, llFindRow
//String	lsFind
//String	ls_ShipType, ls_L_code, ls_InvType, ls_COO, ls_SupCode, ls_Lot_No, ls_Po_No, lsWarehouse, ls_sku, lsDONO, lsCurrDono, lsOrdStatus
//String	lsInvType, lsCurrInvType, lsLoc, lsCurrLoc, lsCurrCOO, lsCurrSerial, lsErrText
//Long	ll_OwnerId
//Boolean	lbNoContent
//
//lsCurrDono = idw_Main.GetItemString(1,'do_no')
//
//llRowCount = idw_Pick.RowCount()
//
////First see if the serial number has already been scanned on this order
//lsFind = "Serial_no = '" + asnewserial + "'"
//llFindRow = idw_Pick.Find(lsFind,1,llRowCount)
//Do While llFindRow > 0
//	
//	If llFindRow <> aiRow Then /*ignore if found on current row*/
//		Messagebox(is_title, "Serial Number: '" + asnewserial + "' has already been scanned on this order!",StopSign!)
//		idw_pick.SetItem(aiRow,'serial_no','')
//		return - 1
//	End If
//	
//	llFindRow ++
//	If llFindRow >= llRowCount Then
//		llFindRow = 0
//	Else
//		llFindRow = idw_serial.Find(lsFind,llFindRow,llRowCount)
//	End If
//	
//Loop
//
//
//
//lsWarehouse = idw_main.GetItemString(1,'wh_code')
//ls_sku = idw_pick.Getitemstring(airow,"sku")
//
//		
////See if it exists in Content
//select 	Inventory_Type.Inventory_Shippable_Ind,	Content.L_code, Content.Inventory_Type,	Content.Country_of_Origin,Content.Supp_Code,	Content.Lot_no,	Content.Po_No,	Content.Owner_Id		
//INTO 		:ls_ShipType, :ls_L_code, :ls_InvType, :ls_COO, :ls_SupCode, :ls_Lot_No, :ls_Po_No, :ll_OwnerId
//from 		Content WITH (NOLOCK)
//				JOIN Inventory_Type WITH (NOLOCK) ON Content.Inventory_Type = Inventory_Type.Inv_Type
//where 	content.Project_ID = :gs_project 	and Inventory_Type.Project_ID = :gs_project	and Content.WH_Code = :lsWarehouse	and Content.SKU = :ls_sku		and Serial_No = :asnewserial
//Using SQLCA;
//		
//If ls_ShipType ="" then
//	
//	lbNoContent = true /* not in inventory, will try and swap with another order */
//	
//Else
//	
//	If ls_ShipType <> 'Y' then
//		
//		Messagebox(is_title,"THIS SERIAL NUMBER '" + asnewserial + "' HAS A NON-SHIPPABLE INVENTORY TYPE",StopSign!)
//		Return -1
//		
//	Else
//		
//		idw_pick.SetItem(airow,'Country_of_Origin',ls_COO)
//		idw_pick.SetItem(airow,'Inventory_Type',ls_InvType)
//		idw_pick.SetItem(airow,'L_Code',ls_L_code)
//		idw_pick.SetItem(airow,'Supp_Code',ls_SupCode)
//		idw_pick.SetItem(airow,'Lot_No',ls_Lot_No)
//		idw_pick.SetItem(airow,'PO_No',ls_Po_No)
//		idw_pick.SetItem(airow,'Owner_Id',ll_OwnerId)			
//		idw_pick.SetItem(airow,'quantity',1)	
//		idw_pick.SetItem(aiRow,'c_no_websphere_ind','')
//		
//	end if
//	
//End IF
//
//
//If lbNoContent Then /* not in inventory, will try and swap with another order */
//	
//	//See if it exists on another order (or this one) and if so, Swap
//	//10/13 - PCONKL -Added Warehouse to search to allow for WH Transfers
//	Select delivery_MAster.do_no, ord_status
//	into :lsDONO, :lsOrdStatus
//	From Delivery_MAster, DElivery_Picking
//	Where Delivery_MAster.do_no = Delivery_Picking.do_no and project_id = :gs_project and wh_code = :lsWarehouse and sku = :ls_sku and serial_no = :asnewserial
//	Using SQLCA;
//	
//	If lsDONO > '' Then
//		
//		if lsDONO = lsCurrDono Then /* allocated to current order, retrieve the original values since they may be scanning into a different row and the attributes may have changed - normal save will do the swap*/
//		
//			Select inventory_type, l_code, Country_of_Origin
//			into :lsInvType, :lsLoc, :ls_COO
//			From delivery_Picking
//			Where do_no = :lsDONO and sku = :ls_SKU and Serial_No = :asNewSerial;
//				
//			idw_Pick.SetITem(aiRow,'l_code',lsLoc)
//			idw_Pick.SetITem(aiRow,'inventory_type',lsInvType)
//			idw_Pick.SetITem(aiRow,'country_of_Origin',ls_COO)
//			idw_pick.SetItem(aiRow,'c_no_websphere_ind','')
//				
//			return 0
//			
//		Else /* allocated to different order, try and swap*/
//			
//			If lsOrdStatus = 'C' or lsOrdStatus = 'D' Then /* cant swap onto an order that is already confirmed*/
//				Messagebox(is_title,"THIS SERIAL NUMBER '" + asnewserial + "' IS ON AN ORDER THAT HAS ALREADY BEEN CONFIRMED",StopSign!)
//				idw_pick.SetItem(aiRow,'serial_no','')
//				return - 1
//			Else
//				
//				If wf_validate_skuserialhold() < 0 Then			
//					Return -1
//				End If
//				
//				//TODO - If we make this baseline, we need all the updateable Inv Attributes. For Ariens, Only Inv Type, Location and Serial Number are relevent
//				
//				Select inventory_type, l_code, Country_of_Origin
//				into :lsInvType, :lsLoc, :ls_COO
//				From delivery_Picking
//				Where do_no = :lsDONO and sku = :ls_SKU and Serial_No = :asNewSerial;
//			
//				//Current values
//				lsCurrInvType = idw_Pick.GetITEmString(aiRow,'inventory_type')
//				lsCurrLoc = idw_Pick.GetITEmString(aiRow,'l_Code')
//				lsCurrCOO = idw_Pick.GetITEmString(aiRow,'country_of_Origin')
//				
//				//Update both orders in a single transaction and then set this order row to notmodified so we don't send to server for allocation
//				
//				Execute Immediate "Begin Transaction" using SQLCA;
//				
//				// Other ORder
//				Update DElivery_Picking
//				Set Inventory_type = :lsCurrInvType, l_Code = :lsCurrLoc, country_of_Origin = :lsCurrCOO, Serial_no = :asorigserial
//				Where do_no = :lsDONO and sku = :ls_SKU and Serial_no = :asNewSerial
//				Using SQLCA;
//				
//				If sqlca.sqldbcode = 0 Then
//					
//					Update DElivery_Picking_Detail
//					Set Inventory_type = :lsCurrInvType, l_Code = :lsCurrLoc, country_of_Origin = :lsCurrCOO, Serial_no = :asorigserial
//					Where do_no = :lsDONO and sku = :ls_SKU and Serial_no = :asNewSerial
//					Using SQLCA;
//					
//				End If
//				
//				//Current Order
//				If sqlca.sqldbcode = 0 Then
//					
//					Update DElivery_Picking
//					Set Inventory_type = :lsInvType, l_Code = :lsLoc, Country_of_Origin = :ls_COO, Serial_no = :asNewSerial
//					Where do_no = :lsCurrDono and sku = :ls_SKU and Serial_no = :asorigserial
//					Using SQLCA;
//					
//				End If
//				
//				If sqlca.sqldbcode = 0 Then
//					
//					Update DElivery_Picking_Detail
//					Set Inventory_type = :lsInvType, l_Code = :lsLoc, Country_of_Origin = :ls_COO, Serial_no = :asNewSerial
//					Where do_no = :lsCurrDono and sku = :ls_SKU and Serial_no = :asorigserial
//					Using SQLCA;
//					
//				End If
//			
//				If sqlca.sqldbcode = 0 Then
//					
//					Execute Immediate "Commit" using SQLCA;
//					
//					//Set The ITems on the current Row
//					idw_Pick.SetITem(aiRow,'l_code',lsLoc)
//					idw_Pick.SetITem(aiRow,'inventory_type',lsInvType)
//					idw_Pick.SetITem(aiRow,'country_of_Origin',ls_COO)
//				
//					//idw_pick.AcceptText()
//					//idw_pick.SetITemStatus(aiRow,0,Primary!,NotModified!)
//					
//					// Set INdicator on Pick Row so we don't send to WEbsphere (setting to not modified doesn't appear to work. It is getting set to modified somewhere else)
//					idw_pick.SetItem(aiRow,'c_no_websphere_ind','Y')
//					
//				Else
//					
//					lsErrText = sqlca.sqlerrText
//					Execute Immediate "Rollback" using SQLCA;
//					Messagebox(is_title,"Unable to swap Serial numbers:~r " + lsErrText )
//					return -1
//					
//				End If
//						
//			End If
//			
//		End If
//		
//	Else /* not found in content or on another order, must be invalid*/
//		
//		Messagebox(is_title,"THIS SERIAL NUMBER '" + asnewserial + "' IS NOT VALID! ~r(Not in inventory or allocated to another order)",StopSign!)
//		Return -1
//		
//	End If
//	
//	
//End If
//
//
//
//
REturn 0
end function

public function integer getnbrchecked ();/* Return the number of pick rows that have been checked for deletion */
int il_checked, il_row, il_rows

il_checked = 0
for il_row = 1 to idw_pick.RowCount()
	if idw_pick.Object.Data.c_delete_ind(il_row).checked then
		il_checked ++
	end if
next

return il_checked
	
	
end function

public function string wf_set_pack_carton (long alcurrentrow);

Long llCarton, llFindRow, llPackPos,  llCartonCount
String  lsNextCarton, ls_carton_no_calc, lsSeq, lsLast4Seq



IF gs_project = 'LINKSYS' or gs_project = 'PHXBRANDS' THEN

	// 07/04 - MANDERSON - Handle Correct carton for linksys.

	
	ls_carton_no_calc =  right(string(today(),"YYYY"),1) + string(today(),"MM") + string(today(),"DD") 
	lsSeq = string(g.of_next_db_seq(gs_project,'DELIVERY_PACKING','CARTON_NO'),"0000")
	lsLast4Seq = Right(lsSeq, 4)
	
	if lsLast4Seq = "0000" then
		
		lsSeq = string(g.of_next_db_seq(gs_project,'DELIVERY_PACKING','CARTON_NO'))
		lsLast4Seq = Right(lsSeq, 4)
	
	end if
	
	lsNextCarton = ls_carton_no_calc + lsLast4Seq
		
ElseIF gs_project = 'POWERWAVE' Then /*10/06 - PCONKL*/
	
	// 12/07 - Carton Prefix is warehouse specific (added Suzhuo)
	Choose Case Upper(idw_main.GetItemString(1,'wh_Code'))
			
		Case 'PWAVE-FG', 'PWAVE-USED' /*Eersel*/
			ls_carton_no_calc =  "ERS" + String(today(),"DDMMYYYY") + "-" 
		Case 'PWAVE-SUZ' /*Suzhou*/
			/* 12/07 ls_carton_no_calc =  "SUZ" + String(today(),"DDMMYYYY") + "-"  */
			ls_carton_no_calc =  "MSZ" + String(today(),"DDMMYYYY") + "-" 
		Case 'PWAVE-SBLC' /* MEA 6/12 */  /*PCH*/
			ls_carton_no_calc =  "PCH" + String(today(),"DDMMYYYY") + "-" 	
		Case Else
			ls_carton_no_calc =  "XXX" + String(today(),"DDMMYYYY") + "-" 
	End Choose
	
	lsSeq = string(g.of_next_db_seq(gs_project,'DELIVERY_PACKING','CARTON_NO'),"0000")
	lsLast4Seq = Right(lsSeq, 4)
	
	if lsLast4Seq = "0000" then
		
		lsSeq = string(g.of_next_db_seq(gs_project,'DELIVERY_PACKING','CARTON_NO'))
		lsLast4Seq = Right(lsSeq, 4)
	
	end if
	
	lsNextCarton = ls_carton_no_calc + lsLast4Seq	
	
ElseIF gs_Project = 'NETAPP' Then /* 07/07 - PCONKL */
	
	//If line is PTO, we need to format the Carton ID, otherwise, leave as is
	llFindRow = idw_Detail.Find("Line_Item_No = " + String(idw_PAck.GetITemNumber(alCurrentRow,'Line_Item_No')),1,idw_Detail.RowCount())
	If llFIndRow > 0 Then
		
		If idw_Detail.GetITemString(llFindRow,'user_Field1') = 'PTO' Then
			
			//format the carton id as Sales ORder NUmber (6 or 7 digits) + Line Number (2 or 3), Total boxes per line (2 or 3) and current box of line (2 or 3)
						
			If idw_Main.GetITemString(1,'User_Field6') > "" Then /*SO should be in UF 6, if not take from Invoice no (left 6)*/
				lsNextCarton = Left(idw_Main.GetITemString(1,'User_Field6'),6)
			Else
				lsNextCarton = Left(idw_Main.GetITemString(1,'invoice_No'),6)
			End If
			
			//If we have over 100 lines or boxes in a line, take the SO as 6 char, otherwise pad to 7
			If idw_Detail.RowCount() < 100 and idw_Detail.GetITemNumber(llFindRow,'alloc_qty') < 100 Then
				lsNextCarton = "0" + lsNextCarton
			End If
			
			//If we have over 100 boxes in the line, take the Line Number as 2 char, otherwise pad to 3
			If (idw_Detail.RowCount() < 100 and idw_Detail.GetITemNumber(llFindRow,'alloc_qty') < 100) or  idw_Detail.RowCount() > 99 Then
				lsNextCarton += String(idw_Detail.GetITemNumber(llFindRow,'Line_Item_No'),"000")
			Else
				lsNextCarton += String(idw_Detail.GetITemNumber(llFindRow,'Line_Item_No'),"00")
			End If
			
			//Total Boxes for Row - 2 char unless over 99 boxes (each Qty in seperate box)
			If idw_Detail.GetITemNumber(llFindRow,'alloc_qty') < 100 Then
				lsNextCarton += String(idw_Detail.GetITemNumber(llFindRow,'alloc_qty'),"00")
			Else
				lsNextCarton += String(idw_Detail.GetITemNumber(llFindRow,'alloc_qty'),"000")
			End If
			
			//Current box of the line (count previous packing rows for this line)
			llCartonCount = 0
			For llPAckPos = 1 to alCurrentRow
								
				If idw_PAck.GetITemNumber(llPAckPos,'Line_Item_No') = idw_PAck.GetITemNumber(alCurrentRow,'Line_Item_No') Then
					llCartonCount ++
				End If
				
			Next 
			
			If llCartonCount < 100 Then
				lsNextCarton += String(llCartonCount,"00")
			Else
				lsNextCarton += String(llCartonCount,"000")
			End If
			
		Else /*Not PTO, take next sequential number*/
			lsNextcarton = String( getCartonNo() )
		End If
		
	Else /*Detail not found, should not happen*/
		lsNextcarton = String( getCartonNo() )
	End If
		
ELSE /*All other Projects*/

	// 09/03 - PCONKL - If generating Carton Numbers, get the next available on an Insert
	If g.is_unique_pack_cartonNumbers = 'Y' Then
		
		If idw_pack.rowCount() > 1 Then
			If isnumber(idw_pack.getITemString((idw_pack.rowCount() - 1),'carton_no')) Then
				llCarton = Long(Right(idw_pack.getITemString((idw_pack.rowCount() - 1),'carton_no'),3))
			Else
				// pvh - 11/16/06
				llCarton = getCartonNo()
				//llCarton = idw_pack.RowCount()
			End If
		Else
			llCarton = 1
		End If
		
		lsNextCarton = String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + String(llCarton,'000')
		//If found, keep bumping until no longer present
		llFindRow = idw_pack.Find("carton_no = '" + lsNextCarton + "'",1,idw_pack.RowCount())
		Do While llFindRow > 0
			llCarton ++
			lsNextCarton = String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + String(llCarton,'000')
			llFindRow = idw_pack.Find("carton_no = '" + lsNextCarton + "'",1,idw_pack.RowCount())
		Loop
		
	Else /*Next sequential carton*/
	   	// pvh - 11/16/06
		lsNextcarton = String( getCartonNo() )		
		//lsNextcarton = String(ilCartonNo)

	End IF
	
END IF 

Return lsnextCarton
end function

public function boolean wf_authorize (string as_dono, string as_authorizetype);//TimA 12/10/13
//Baseline change for authorization to confirm an order

string 	ls_User
string 	ls_License
string   lsNull
datetime	ldt_Date, ldtNull
long     lrtn,llNewRow, nAuthorizedCnt
Datastore ldw_Authorize

boolean lbRtn = FALSE
str_authorize strEC

SetNull(lsNull)
SetNull(ldtNull)

//See if there is a record in the table already. 
//The only way this should happen if something failed on the confirm.
SELECT count(*) INTO :nAuthorizedCnt
	FROM Authorized_Signer
	WHERE DO_No = :as_dono
	AND   Authorize_Type = :as_authorizetype
	USING SQLCA;

If nAuthorizedCnt > 0 then
	Delete from Authorized_Signer
	WHERE DO_No = :as_dono
	AND   Authorize_Type = :as_authorizetype
	USING SQLCA;
	//MessageBox('Authorization Error','This ider was already Authorized.  Please have support delete the entry in the Authorized_Signer table.',StopSign!)
	//Return lbRtn
End if

strEC.authorize_type = as_authorizetype

 //open the work window
OpenWithParm(w_authorization, strEC)

strEC = Message.PowerObjectParm	


IF strEC.nReturn = 1 THEN
	If Not isvalid(ldw_Authorize) then
		ldw_Authorize = Create datastore
		ldw_Authorize.Dataobject = 'd_authorize' 
		ldw_Authorize.SetTransObject(sqlca)
	End if
	// write the data to the fields
	llNewRow = ldw_Authorize.InsertRow(0)
	lrtn = ldw_Authorize.SetItem(llNewRow, 'Do_No', as_dono )
	lrtn = ldw_Authorize.SetItem(llNewRow, 'Authorize_Type', as_authorizetype )
	lrtn = ldw_Authorize.SetItem(llNewRow, 'UserId', strEC.Authorize_User )
	lrtn = ldw_Authorize.SetItem(llNewRow, 'license_no', strEC.Authorize_License )
	lrtn = ldw_Authorize.SetItem(llNewRow, 'Authorize_date', strEC.Authorize_Date )
	lrtn = ldw_Authorize.update( )

ELSE
	// no go - 
	lrtn = -1

END IF

IF (lrtn >= 1) THEN
	// SUCCESS
	lbRtn = True
ELSE
	lbRtn = False
END IF 

Return lbRtn




end function

public function integer pandora_getlpn (string asvalue);/* Created 01/15/2014 - GailM - Pandora Issue 668 - Determine if SKU/GPN is an LPN or merely serialized */
/* Return integer: 0 = Not LPN or serialized; 1 = LPN GPN; 2 = Serialized GPN                                         */

integer liReturn = 0
string lsSerialized_Ind, lsPo_No2_Controlled_Ind, lsContainer_Tracking_Ind

	select  Serialized_Ind,Po_No2_Controlled_Ind, Container_Tracking_Ind, COUNT(*)
	into :lsSerialized_Ind, :lsPo_No2_Controlled_Ind, :lsContainer_Tracking_Ind, :liReturn
	from item_master
	where project_id = 'PANDORA'
	and sku = :asValue
	group by Serialized_Ind,Po_No2_Controlled_Ind, Container_Tracking_Ind ;

if liReturn <> 0 then
	if lsSerialized_Ind = 'B' and lsPo_No2_Controlled_Ind = 'Y' and lsContainer_Tracking_Ind = 'Y' then
		return 1		// LPN
	elseif lsSerialized_Ind <> 'N' then
		return 2		// Pandora NonLPN but serialized
	end if
end if

return liReturn
end function

public function integer uf_process_pack_complete ();
// 03/14 - PCONKL - Process the pack complete, set the date and send transaction to websphere - added for Embraer but available for baseline

DateTime	ldtToday

If ib_Changed Then
	Messagebox(is_title, 'Please save your changes first.')	
End If
// Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
if gs_project = 'PANDORA' then
			If idw_main.getitemstring(1,'Ord_status') = 'L' Then
			
			//TODO - Add websphere call
			
			ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 
			idw_Main.SetITem(1,'pack_complete_Date', ldtToday)
			tab_main.tabpage_Main.cb_custom1.enabled = False
			
			Messagebox(is_title,'Pack Complete Message sent to customer.')
		
			End If
	// End-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
else
			If idw_main.getitemstring(1,'Ord_status') = 'A' Then
			
			//TODO - Add websphere call
			
			ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 
			idw_Main.SetITem(1,'pack_complete_Date', ldtToday)
			tab_main.tabpage_Main.cb_custom1.enabled = False
			
			Messagebox(is_title,'Pack Complete Message sent to customer.')
			end if
End if			

REturn 0
end function

public function integer uf_send_websphere_gi (string astype);String	lsPost, lsXML, lsXMLResponse, lsID
DateTime ldtToday

If not isValid(iuoWebsphere) Then
	iuoWebsphere = CREATE u_nvo_websphere_post
	linit = Create Inet
End If

Choose Case Upper(astype)
		
	Case "ORDER" /*Confirming the current DO */
		
		lsID = idw_Main.GetITemString(1,'do_no')
		lsXML = "<Id_No>" + lsID  + "</Id_No><Id_Type>order</Id_Type>"
		
	Case "SHIPMENT" /*Confirming the current Shipment */
		
		lsID = idw_Main.GetITemString(1,'consolidation_no')
		lsXML = "<Id_No>" + lsID  + "</Id_No><Id_Type>shipment</Id_Type>"
		
End Choose

//16-Jan-2019 :Madhu S28196 Bosch Post GoodsIssueRequest to Websphere. - START
 //Moved code to Sweeper
 
//lsPost = iuoWebsphere.uf_request_header("GoodsIssueRequest", "ProjectID='" + gs_Project + "'")
//lsPost += lsXML
//lsPost = iuoWebsphere.uf_request_footer(lsPost)
//
//lsXMLResponse = iuoWebsphere.uf_post_url(lsPost)
//
//
//
////Check for Valid Return...
////If we didn't receive an XML back, there is a fatal exception error
//If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
//	f_method_trace_special( gs_project, this.ClassName() + ' - uf_send_websphere_Gi', 'Websphere Fatal Exception Error:  ',is_dono, ' ',lsXMLResponse,lsID) 
//	Messagebox("Websphere Fatal Exception Error","Unable to send Goods Issue Transaction: ~r~r" + lsXMLResponse,StopSign!)
//	Return -1
//End If

ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 

Insert into Batch_Transaction (Project_Id, Trans_Type, Trans_Order_Id, Trans_Status, Trans_Create_Date, Trans_Parm, Record_Create_Date)
	values (:gs_project, 'GI', :lsID, 'N', :ldtToday, :lsXML, :ldtToday);

//16-Jan-2019 :Madhu S28196 Bosch Post GoodsIssueRequest to Websphere. - END
Return 0
end function

protected function boolean wf_select_reconfirm_records (string as_dono);//TimA 04/16/14
long     lrtn
boolean lbRtn = FALSE

istrparms.String_arg[1 ] = as_dono
istrparms.String_arg[2 ] = 'OUTBOUND' //This is pass because the window can handle inbound or outbound.
//Open window that has detail records from orders
OpenWithParm(w_reconfirm_detail_lines,istrparms)
istrparms = Message.PowerObjectParm	

IF istrparms.string_arg_2[1 ] <> '' THEN
	If istrparms.string_arg_2[1 ] = Upper('NONE' ) Then
		MessageBox('Selection Error','You need to select detail records for Re-Confirm.',StopSign!)
		lrtn = -1
	Else
		isDetailRecordsToReConfirm = istrparms.string_arg_2[1 ]
		lrtn = 1
	End if

ELSE
	// no go - 
	lrtn = -1

END IF
//
IF (lrtn >= 1) THEN
	// SUCCESS
	lbRtn = True
ELSE
	lbRtn = False
END IF 

Return lbRtn




end function

public function integer wf_check_serials_scanned ();/* 06/18/2014 - GailM - Pandora Issue 861 - Do not allow pack list generate if serial numbers have not been scanned
   RETURN CODES:
	0 = Required to scan but not yet scanned 
	1 = Required to scan and scan completed 
	2 - Not required to scan serial numbers
	3 - Pick List is empty = 3 	
	4 - Pandora DejaVu - ContainerIDs to be scanned  //TAM 2014/09/19 Add HONDA-TH to use DejaVu
*/

Int li_Return, li_PickCount, li_ReqdScanCount, li_SerialCount, li_ScanCount, li_PickRow, li_SerialRow,li_SerailScan
Int li_NonSerRows, li_SerRows
String ls_Filter, ls_Wh, ls_Ind

li_return = 0
li_ReqdScanCount = 0
li_ScanCount = 0
ls_Filter = "serialized_ind = 'B'"
//ls_Filter = "serialized_ind in ('Y','B')"	  Changed to only check if serialized ind is Both
li_NonSerRows = 0
li_SerRows = 0
ibMixedSerialPickRows = FALSE

li_PickCount = idw_Pick.RowCount()
If li_PickCount = 0 Then
	li_Return = 3		// This will probably never happen since other validation covers this.
Else
	//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab
	//Before we check the serialized rows, count the number of serialized and non-serialized pick rows.
	for li_PickRow = 1 to li_PickCount
		ls_Ind = idw_pick.getitemstring( li_PickRow, "Serialized_Ind" )
		If ls_Ind = "O" or ls_Ind = "B" Then li_SerRows ++
		If ls_Ind = "N" Then li_NonSerRows ++
	next
	If li_NonSerRows > 0 and li_SerRows > 0 Then ibMixedSerialPickRows = TRUE
	If li_SerRows > 0 Then ibSerialRows = TRUE
	
	idw_pick.setfilter(ls_filter)
	idw_pick.filter( )
	li_PickCount = idw_pick.rowcount()
	if li_PickCount = 0 then
		// GailM 8/20/2014 - Pandora #882 - DejaVu - Containers must be scanned - use Serial# tab
		If UPPER(gs_project) = 'PANDORA' Then
			ls_Filter = "container_id <> '' "
			idw_pick.setfilter(ls_filter)
			idw_pick.filter( )
			li_PickCount = idw_pick.rowcount()
			if li_PickCount > 0 then		// Containers Need to be scanned
				li_Return = 4		
			Else
				li_Return = 2
			End If
		// TAM 2014/09/19 - Honda-Th - DejaVu - PONO's(PalletId) must be scanned - use Serial# tab
		ElseIf UPPER(gs_project) = 'Honda-Th' and idw_main.GetItemString(1,'wh_code') = 'EXP-HONDA' Then
			ls_Filter = "PO_No <> '' "
			idw_pick.setfilter(ls_filter)
			idw_pick.filter( )
			li_PickCount = idw_pick.rowcount()
			if li_PickCount > 0 then		// Containers Need to be scanned
				li_Return = 4		
			Else
				li_Return = 2
			End If
		Else
			li_Return = 2				
		End If
		li_Return = 2		// No serialized SKUs on pick list - Serial numbers not required 
	else
		li_SerialCount = idw_serial.rowcount()
// TAM 2018/02 - S14838 - No longer doing this. LPN is going away and now we are getting all serial Numbers for the Pallet
//		// LPN = one serial# row for one pick row (palletID), 	if first row shows LPN, then all rows are LPN	
//		if idw_pick.GetItemString(1,"po_no2_controlled_ind") = 'Y' and idw_pick.GetItemString(1, "container_tracking_ind")  = 'Y' then
//			if  li_SerialCount = li_PickCount then
//				li_return = 1
//			else
//				li_return =  0
//			end if
//		else
			// NonLPN count quantity
			for li_PickRow = 1 to li_PickCount
				li_ReqdScanCount = li_ReqdScanCount + idw_Pick.GetItemNumber( li_PickRow, "quantity" )
			next
			if li_SerialCount = 0 then		/* There are no serial numbers on Serial # tab - Do not check pick list for entered serial numbers.  The SNs are populated automatically */
				li_Return = 0			
			else
				if li_SerialCount = li_ReqdScanCount then
					li_Return = 1		// All serial numbers have been scanned
				else
					li_Return = 0		// Required to scan serial numbers and haven't.  
				end if
			end if
			
			//07-Apr-2016 :Madhu- for Pandora, Kitty Hawk Books parts set to 'B' are not scanned at outbound. START
			For li_SerailScan = 1 to li_PickCount
				
				If (idw_pick.GetITemString(li_SerailScan,'serialized_ind') = 'O' or idw_pick.GetITemString(li_SerailScan,'serialized_ind') = 'B'	&
					or g.ibScanAllOrdersRequired) 	and UPPER(gs_project) = 'PANDORA'Then

					if idw_pick.GetItemString(li_SerailScan, 'grp') = 'KHBOOKS'  then
						li_Return =2
						continue
					else
					//else //25-Apr-2016 :Madhu - Don't prompt error message for Non-KHBOOKS
					//	li_Return =0									
					end if
				End If
			Next
			//07-Apr-2016 :Madhu- for Pandora, Kitty Hawk Books parts set to 'B' are not scanned at outbound. END
//		end if
	end if	
	idw_pick.setfilter("")	// Reset pick list count 
	idw_pick.filter()
End If

// Even if order is serialized and serial numbers have not been scanned, the requirement can ve overwritten if the warehouse is in the lookup_table.
//  LookupTable ProjectID PANDORA, CodeType WH_EXCEPT, CodeId PACK LIST.  Code descript contains WH_CODE
If li_Return = 0 Then
	ls_Wh =  idw_main.GetItemString(1,'user_field2')
	
	select count(*) into :li_Return
	from lookup_table WITH (NOLOCK) where project_id = :gs_project and code_type = 'WH_EXCEPT' and code_id = :ls_Wh;		//7/21/2014 - changed code_descript to code_id
	
	If li_Return > 0 Then
		ibWHExceptionFromSerialScan = TRUE		// Pack list will be generated from pick list without considering serial tab
//		ibMixedSerialPickRows = FALSE				// Consider there are no mixed serial/non-serial rows
	End If
End if

return li_Return


end function

public function boolean getauthorize (string as_dono, string as_authorizetype);// GailM 07/01/2014 - PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship

Boolean lbRtn
Long nAuthorizedCnt


SELECT count(*) INTO :nAuthorizedCnt
	FROM Authorized_Signer
	WHERE DO_No = :as_dono
	AND   Authorize_Type = :as_authorizetype
	USING SQLCA;

IF (nAuthorizedCnt >= 1) THEN
	// SUCCESS
	lbRtn = True
ELSE
	lbRtn = False
END IF 

Return lbRtn



end function

public function boolean remauthorize (string as_dono, string as_authorizetype);// GailM 07/01/2014 - PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship

Boolean lbRtn
Long nAuthorizedCnt


DELETE 
	FROM Authorized_Signer
	WHERE DO_No = :as_dono
	AND   Authorize_Type = :as_authorizetype
	USING SQLCA;

IF ( SQLCA.SQLCode = 0 ) THEN
	// SUCCESS
	lbRtn = True
ELSE
	lbRtn = False
END IF 

Return lbRtn

end function

public subroutine resetordstatus (string as_dono, string as_status);/* GailM 8/6/2014 Pandora Issue 888 - Reset ord_status from "Z" confirming upon leaving ue_confirm unless order is confirmed */
/*String ls_status

if idw_pack.RowCount() > 0 Then
ls_status = 'A'
Elseif idw_pick.RowCount() > 0 Then
ls_status = 'P'
Else
ls_status = 'N'
End If
*/

//24-May-2016 :Madhu- compare Ord Status against DB, set OrdStatus ='C', if it is already completed
string lsOrdstatus, lsStatus
select ord_status into :lsOrdstatus from Delivery_Master with(nolock) 
where Project_Id= :gs_project and Do_No=:as_dono
using sqlca;

//26-Jul-2016 :Madhu- Re-write condition for completed order shouldn't be on "confirming" status on another instance. -START
//set Order Status based on DB.
CHOOSE CASE lsOrdstatus

	CASE 'C'
		lsStatus ='C'	//set Order status to 'C'

	CASE 'Z'
		If idw_pack.rowcount( ) > 0 Then
			//if gs_project='PANDORA' then
//				lsStatus ='L' //set Order status to Loading // Dinesh - 04/20/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
//			else
				lsStatus ='A' //set Order status to packing
//			//end if
		elseIf idw_pick.rowcount( ) > 0 Then
			lsStatus ='P' //set Order status to process
		else
			lsStatus ='N' //set Order status to New
		End If
	
	CASE	ELSE
		lsStatus =as_status //set with default DW status

END CHOOSE

idw_main.setItem(1,"ord_status",lsStatus) //set Order status to DW

UPDATE delivery_master SET ord_status = :lsStatus WHERE Project_Id= :gs_project and do_no = :as_DONo; //update Order Status into DB.

//26-Jul-2016 :Madhu- Re-write condition for completed order shouldn't be on "confirming" status on another instance. -END

If sqlca.sqlcode <> 0 Then 
	messagebox('Database Error','Could not update order status.  Order may still be in confirming status')
End if

end subroutine

public function string wf_is_confirming (string as_dono);//*************************************************************************//
//* This function will check DO ord status.  If 'Z' give message that another use is     //
//  confirming order.  If 'A' (or 'P'?), then set status to 'Z' and allow confirmation.  //
//*************************************************************************//

// Gailm 08.05.14  

string fs_Rtn, fs_Status, fs_msg

fs_Rtn = ""

SELECT ord_status INTO :fs_Status
FROM delivery_master with (NOLOCK)
WHERE do_no = :as_dono;
 
If sqlca.sqlcode <> 0 Then Return ""

If ( fs_Status = 'Z' ) Then
	fs_msg = 'This order is actively being confirmed.  If you feel this order is not~n~r being worked by another, please contact your superviisor~n~rto refresh order status'
	messagebox('Confirming Order', fs_msg)
	idw_main.SetItem(idw_main.RowCount(),'ord_status', fs_Status)

	wf_check_status() //27-Jul-2016 :Madhu- calling to lock order same as completed Order
	
Elseif fs_Status = 'A' or fs_Status = 'L' or fs_Status = 'P' Then // Dinesh - 04/20/2023- SIMS-53 -Google - SIMS - Load Lock and New Loading Status
	UPDATE delivery_master
	SET ord_status = 'Z'
	WHERE do_no = :as_dono;
	
	If sqlca.sqlcode <> 0 Then 
		messagebox('Error confirming order','Could not update order status to confirming.  No Action has Been Taken')
	End If
End If

Return fs_Status
end function

public function integer uf_generate_container_scan ();String			lsSku,lsDoNo,lsSupplier,lsCOO, lsLoc,lsInvType,lsLot, lsPO,lsPO2,lsSerialized,lsDash, &
				lsDesc, lsFind, lsContainer, lsGrp,lsBOM_UF3,  ls_child_sku, ls_parent_sku, ls_shippable_flag
Long			llOwner, llPickCOunt, llPickPos, llCount,llID, llNewRow,i, llMaxSeq,llFindRow, llCompNo, llLineItemNo
Decimal		ldMod, ldPickQty, ldParentQty,ldUnitQty, ldUPC, ldQty
String      	ls_uf4, lsNativeDescription
DateTime	ldtExpDt
Long	 		llRowPos


Choose Case upper(gs_Project)
		
	Case 'PANDORA'
		For llRowPos = 1 to idw_pick.RowCount()
			messagebox("ContainerID", idw_pick.GetItemString(llRowPos,'container_id'))
		next

End Choose

Return 0



end function

public function integer wf_check_status_mobile ();
String	lsWarehouse, lsFindStr, lsMobileStatus
Integer	i

idw_Pick.Object.Datawindow.ReadOnly = False
idw_Pack.Object.Datawindow.ReadOnly = False

// F10 unlock may have changed these settings...
idw_mobile.Object.mobile_status_Ind.Protect = True
idw_mobile.Modify("mobile_status_Ind.Background.Color = '12639424'")
	
idw_Pick.Object.mobile_status_Ind.Protect = True
idw_Pick.Modify("mobile_status_Ind.Background.Color = '12639424'")

idw_Pack.Object.mobile_status_Ind.Protect = True
idw_Pack.Modify("mobile_status_Ind.Background.Color = '12639424'")


lsMobileStatus = idw_main.GetItemString(1, "mobile_status_Ind")
If isNull(lsMobileStatus) Then lsMobileStatus = ''

lsWarehouse = idw_main.GetItemString(1, "wh_code")
lsFindStr = "wh_code = '" + lsWarehouse + "'"
i = g.ids_project_warehouse.Find(lsFindStr,1,g.ids_project_warehouse.rowcount())
If i > 0 Then
	
	If g.ids_project_warehouse.GetItemString(i, "Mobile_Enabled_Ind") = 'Y' Then
		
		idw_mobile.visible = true
		
		//Header fields
		idw_Main.Modify("mobile_status_ind.visible=true mobile_Status_ind_t.visible=true mobile_pack_status_ind.visible=true mobile_pack_Status_ind_t.visible=true")
		
		//Picking fields
		idw_pick.Modify("mobile_status_ind.visible=true mobile_status_Ind_t.visible=true mobile_picked_qty.visible=true mobile_picked_qty_t.visible=true mobile_pick_start_time.visible=true mobile_pick_start_time_t.visible=true mobile_pick_Complete_time.visible=true mobile_pick_complete_time_t.visible=true mobile_picked_by.visible=true mobile_picked_by_t.visible=true mobile_current_location.visible=true mobile_current_location_t.visible=true")
		
		//Packing fields 
		idw_pack.Modify("mobile_status_ind.visible=true mobile_status_Ind_t.visible=true mobile_packed_qty.visible=true mobile_packed_qty_t.visible=true mobile_pack_start_time.visible=true mobile_pack_start_time_t.visible=true mobile_pack_Complete_time.visible=true mobile_pack_complete_time_t.visible=true mobile_packed_by.visible=true mobile_packed_by_t.visible=true ")
		
	Else /* Not mobile Enabled */
		
		idw_mobile.visible = False
		
		//Header fields
		idw_Main.Modify("mobile_status_ind.visible=false mobile_Status_ind_t.visible=false mobile_pack_status_ind.visible=false mobile_pack_Status_ind_t.visible=false")
		
		//Picking Fields
		idw_pick.Modify("mobile_status_ind.visible=false mobile_status_Ind_t.visible=false mobile_picked_qty.visible=false mobile_picked_qty_t.visible=false mobile_pick_start_time.visible=false mobile_pick_start_time_t.visible=false mobile_pick_Complete_time.visible=false mobile_pick_complete_time_t.visible=false mobile_picked_by.visible=false mobile_picked_by_t.visible=false mobile_current_location.visible=false mobile_current_location_t.visible=false")
		
		//Packing Fields
		idw_pack.Modify("mobile_status_ind.visible=false mobile_status_Ind_t.visible=false mobile_packed_qty.visible=false mobile_packed_qty_t.visible=false mobile_pack_start_time.visible=false mobile_pack_start_time_t.visible=false mobile_pack_Complete_time.visible=false mobile_pack_complete_time_t.visible=false mobile_packed_by.visible=false mobile_packed_by_t.visible=false ")
		
		
	End If
	
End If

//Order based validations...
//If released to mobile, can't make any changes to Pick List unless it is a discrepancy in which case, we'll allow a new row to be inserted and the discrepent row modified
If lsMobileStatus <> '' Then
			
	//Pick
	//icb_pick_insert.Enabled = False
	//icb_pick_copy.Enabled = False 
	//icb_pick_delete.Enabled = False
	icb_pick_generate.Enabled = False
	tab_main.tabpage_Pick.cbx_selectall.Enabled=false
	
	// Only allow Release to mobile box to be checked/unchecked if status is blank or released and Pick List exists
	If (lsMObileStatus = '' or lsMobileStatus = 'R' or isNull(lsMobileStatus)) and idw_Pick.RowCount() > 0 and not ibSplitContainerRequired Then
		idw_Mobile.Modify("mobile_Enabled_ind.Protect=0")
	Else
		idw_Mobile.Modify("mobile_Enabled_ind.Protect=1")
	End If
	
	//We will allow rows to be changed for a discrepency 
	// 11/14 - PCONKL - Allow discrepent lines to be changed while in-process, selected or suspended to allow for new commands to be sent to mobile device
	
	If lsMobileStatus <> 'D' and lsMobileStatus <> 'P' and lsMobileStatus <> 'S' and lsMobileStatus <> 'X'  Then
		
		idw_Pick.Object.Datawindow.ReadOnly = True
		
	Else /*Discrepancy*/
		
		icb_pick_insert.Enabled = True /* allow a new pick row to be added to make up for the short pick*/
		
	End If
	
	//Pack
//	If lsMobileStatus = 'R' or lsMobileStatus = 'P' or lsMobileStatus = 'S' Then
//		
//		icb_pack_insert.Enabled = False
//		icb_pack_delete.Enabled = False
//		icb_pack_copy.Enabled = False
//		tab_main.tabpage_pack.cb_pack_generate.Enabled = False
//		tab_main.tabpage_pack.cb_import_pack.Enabled = False
//		idw_Pack.Object.Datawindow.ReadOnly = True
//		
//	End If
		
End If

		
REturn 0
end function

public function integer wf_check_confirm_mobile ();
//Mobile confirmation validations

Long	llRowPos, llRowCount

If idw_Main.GetItemString(1,'mobile_status_Ind') = '' Then
	Return 0
End If

//Must be complete to confirm
If idw_Main.GetItemString(1,'mobile_status_Ind')  <> "C"  Then 
	wf_display_message("Mobile Status is not 'Complete'.~rOrder cannot be confirmed!")
	return -1
End If

//If rows are in discrepancy, the Allocated Qty must match the mobile picked qty
llRowCount = idw_Pick.RowCount()
For llRowPos = 1 to llRowCOunt
	
	If idw_Pick.GetITemString(llRowPos,'mobile_status_Ind') = 'D' Then
		
		If idw_pick.GetITemNumber(llRowPos,'Quantity') > idw_pick.GetITemNumber(llRowPos,'Mobile_Picked_Qty') Then
			wf_display_message("Pick Row: " + String(llRowPos) + " - Allocated Qty > Mobile Picked Qty.~rOrder cannot be confirmed!")
			Return -1
		End If
				
	End If /*discrepancy*/
	
Next


REturn 0
end function

public function integer wf_duplicate_serial_no_scan_validation (string as_sku, string as_serialno, string as_ownercd);//24-Oct-2014 :Madhu-  Don't Assign same SN to multiple orders 
string ls_whcode,ls_dono,ls_scan_invoiceno,ls_process_dono,ls_process_invoiceno
long ll_count,ll_count1

f_method_trace_special( gs_project, this.ClassName() , 'Start wf_duplicate_serial_no_scan_validation process: ' ,is_dono, '','',isinvoice_no)

ls_whcode= idw_main.getItemString(1,'wh_code') //Get WH Code

//Look for same serial is scanned for another order 
select Do_No,count(*) into :ls_process_dono,:ll_count
From Serial_Number_Inventory with (nolock)
Where Project_Id=:gs_project
and SKU =:as_sku
and Serial_No=:as_serialno
and Wh_Code= :ls_whcode
and Owner_Cd =:as_ownercd
and Serial_Flag ='P'
GROUP BY Do_No
using SQLCA;

select Do_No,count(*) into :ls_dono,:ll_count1
From Serial_Number_Inventory with (nolock)
Where Project_Id=:gs_project
and SKU =:as_sku
and Serial_No=:as_serialno
and Wh_Code= :ls_whcode
and Owner_Cd =:as_ownercd
and Serial_Flag ='Y'
GROUP BY Do_No
using SQLCA;

//get order no#
select Invoice_No into :ls_scan_invoiceno from Delivery_Master where Project_Id=:gs_project and Do_No=:ls_dono;
select Invoice_No into :ls_process_invoiceno from Delivery_Master where Project_Id=:gs_project and Do_No=:ls_process_dono;

//same serial scanned, do you want to override or not.
If ll_count > 0 And ls_process_dono <> is_dono THEN		//GailM 7/8/2020 DE14365 Google serial scan validation error (do not show error if same order)
	doDisplayMessage("Serial Error","Serial No#" + as_serialno+" is already in process with Order# "+ ls_process_invoiceno+ ". ~r~n Please scan another valid Serial No or Delete from the existing Order!")
	Return 1	

ELSEIF ll_count1 >0 THEN
	doDisplayMessage("Serial Error","Serial No# " + as_serialno+ " has already assigned to another order# "+ls_scan_invoiceno+". Could you please scan another Serial No.")
	Return 1

ELSE
	Update Serial_Number_Inventory set Do_No=:is_dono, Serial_Flag='P', Transaction_Type = 'Reset Serial Flag to P duplicate serial scan', Transaction_Id = :is_dono 
	where Project_Id=:gs_project and SKU =:as_sku and Serial_No=:as_serialno and Wh_Code= :ls_whcode and Owner_Cd =:as_ownercd; 
	
	f_method_trace_special( gs_project, this.ClassName() , 'Set Serial_Flag =P on Serial Number Inventory table with SKU: '+as_sku+ ' Serial_No: '+as_Serialno+' Wh_Code: '+ls_whcode+ ' Do_No: '+is_dono ,is_dono, '','',isinvoice_no)
END IF

f_method_trace_special( gs_project, this.ClassName() , 'END wf_duplicate_serial_no_scan_validation process: ' ,is_dono, '','',isinvoice_no)

Return 0

end function

public subroutine wf_reset_serial_flag ();//06-Nov-2014 :Madhu- Reset Serial Flag to N on SNI table -START
long ll_count,ll_serialcount

select count(*) into :ll_count from Serial_Number_Inventory with(nolock)
where do_no =:is_dono
and Serial_Flag in ('P','L')
Using SQLCA;

//Look for any records exists in Delivery serial detail table
select count(*) into :ll_serialcount from Delivery_Picking_Detail with(nolock), Delivery_Serial_Detail with(nolock)
where Delivery_Picking_Detail.Do_No=:is_dono
and Delivery_Picking_Detail.Id_No=Delivery_Serial_Detail.Id_No
and Delivery_Picking_Detail.SKU = Delivery_Serial_Detail.SKU_Substitute
using SQLCA;

//when use hit save button, it stores records into Delivery Serial Detail table. If count is 0, clear Flag for all SN#.
If ll_count > 0 and ll_serialcount=0 THEN
	Update Serial_Number_Inventory set Do_No='-', Serial_Flag='N', Transaction_Type = 'Reset Serial Flag to N on wf_reset_serial_flag function', Transaction_Id = :is_dono 
	where Project_Id=:gs_project and Do_No=:is_dono;
	f_method_trace_special( gs_project, this.ClassName() , 'Set Serial_Flag =N on Serial Number Inventory table For Do_No:  '+is_dono ,is_dono, '','',isinvoice_no)
END IF
end subroutine

public function integer uf_print_a4_label_puma ();//30-Dec-2014 Madhu- Print A4 Label for PUMA

Str_Parms	lstrparms
String ls_sql,ERRORS,ls_uf7,ls_custcode,lsPrintText,ls_invoiceno,ls_carton_count
long ll_rowcount,llPrintJob,li_row,ll_carton_no

Datastore lds_records,lds_labela4


If idw_Main.RowCount() = 0 Then Return 0

If ib_changed then
	Messagebox('Print A4 label','Please save your changes first.')
	Return 0
End If

ls_invoiceno =idw_main.getitemstring(1,'Invoice_No')
ls_uf7 =idw_main.getitemstring(1,'User_Field7')
ls_custcode =idw_main.getitemstring(1,'Cust_Code')

lds_records =CREATE Datastore

ls_sql ="SELECT A.Carton_No,B.Grp,SUM(A.Quantity) as Quantity "
ls_sql +=" FROM Delivery_Packing A INNER JOIN Item_Master B ON A.SKU=B.SKU "
ls_sql +=" AND A.Supp_code= B.Supp_Code "
ls_sql +=" WHERE A.Do_No ='"+is_dono+"' "
ls_sql +=" GROUP BY A.Carton_No,B.Grp "
ls_sql +=" ORDER BY A.Carton_No"

lds_records.create(SQLCA.Syntaxfromsql( ls_sql, "", ERRORS))
lds_records.setTransobject( SQLCA)
ll_rowcount= lds_records.retrieve( )

IF len(ERRORS) > 0 THEN
	MessageBox(is_title,"Unable to retrieve Delivery Pack Carton records!")
	Return -1
END IF

//Assign a DW to Datastore
lds_labela4 = CREATE Datastore
lds_labela4.Dataobject='d_a4_label_unicode_puma'
lds_labela4.settransobject( SQLCA)

//Open Print Dailog Box
OpenWithParm(w_label_print_options,lStrParms)
Lstrparms = Message.PowerObjectParm		  
If lstrParms.Cancelled Then
	Return 0
End If
				
lsPrintText = gs_project +  ' Shiping Labels'

//Open Printer File 
llPrintJob = PrintOpen(lsPrintText)
	
If llPrintJob <0 Then 
	Messagebox('Labels', 'Unable to open Printer file. Labels will not be printed')
	Return 0
End If

//Get distinct carton no value
SELECT COUNT(DISTINCT Carton_No) into :ll_carton_no FROM Delivery_Packing with (nolock) WHERE Do_No=:is_dono;

//Assign values to Datastore to print A4 Label
IF ll_rowcount > 0 THEN
	For li_row =1 to ll_rowcount 
			lds_labela4.insertrow( 0)
			lds_labela4.setitem( li_row, 'user_field7', ls_uf7)
			lds_labela4.setitem(li_row, 'invoice_no',ls_invoiceno)
			lds_labela4.setitem(li_row,'item_type', lds_records.getitemstring(li_row,'Grp'))
			lds_labela4.setitem(li_row,'cust_code',ls_custcode)
			lds_labela4.setitem(li_row,'qty',string(lds_records.getitemnumber( li_row,'Quantity')))
			lds_labela4.setitem(li_row,'carton_no',lds_records.getitemstring(li_row,'Carton_No'))
			
			ls_carton_count = lds_records.getitemstring(li_row,'Carton_No') +' / '+ string(ll_carton_no)
			lds_labela4.setitem(li_row,'carton_count',ls_carton_count)
	NEXT
	
	PrintDataWindow (llPrintJob, lds_labela4)	
END IF
PrintClose(llPrintJob)

DESTROY lds_records
DESTROY lds_labela4

Return 0
end function

public function integer wf_named_field_enable (boolean abenable);
If AbEnable THen
	idw_main.object.account_nbr.protect = false
	idw_main.object.asn_number.protect = false
	idw_main.object.sli_nbr.protect = false
	idw_main.object.client_cust_po_nbr.protect = false
	idw_main.object.client_cust_so_nbr.protect = false
	idw_main.object.seal_nbr.protect = false
	idw_main.object.fob.protect = false
	idw_main.object.dock_code.protect = false
	idw_main.object.document_codes.protect = false
	idw_main.object.fob_bill_duty_party.protect = false
	idw_main.object.fob_bill_duty_acct.protect = false
	idw_main.object.fob_bill_freight_party.protect = false
	idw_main.object.fob_bill_freight_to_acct.protect = false
	idw_main.object.container_nbr.protect = false
	idw_main.object.routing_nbr.protect = false
	idw_main.object.equipment_nbr.protect = false
	idw_main.object.from_wh_loc.protect = false
	idw_main.object.shipping_route.protect = false
Else
	idw_main.object.account_nbr.protect = true
	idw_main.object.asn_number.protect = true
	idw_main.object.sli_nbr.protect = true
	idw_main.object.client_cust_po_nbr.protect = true
	idw_main.object.client_cust_so_nbr.protect = true
	idw_main.object.seal_nbr.protect = true
	idw_main.object.fob.protect = true
	idw_main.object.dock_code.protect = true
	idw_main.object.document_codes.protect = true
	idw_main.object.fob_bill_duty_party.protect = true
	idw_main.object.fob_bill_duty_acct.protect = true
	idw_main.object.fob_bill_freight_party.protect = true
	idw_main.object.fob_bill_freight_to_acct.protect = true
	idw_main.object.container_nbr.protect = true
	idw_main.object.routing_nbr.protect = true
	idw_main.object.equipment_nbr.protect = true
	idw_main.object.from_wh_loc.protect = true
	idw_main.object.shipping_route.protect = true
End If

Return 0
end function

public function string wf_tab_next (str_multiparms astr_parms);
String lsTabNext, lsInvisible, lsColName
Long llStartCol, llEndCol, llCnt
Integer liProtect, li_visible

llStartCol = 24		//First Named Field - Account Nbr
llEndCol   = 42		//Last NamedField - SLI_Nbr

For llCnt = llStartCol to llEndCol

	lsColName = astr_parms.string_arg1[llCnt]
	//lsColName = idw_main.Describe( "#" + String(llCnt) + ".name")
	liProtect = Integer(idw_main.Describe(lsColName + ".protect"))
	li_visible = Integer(idw_main.Describe(lsColName + ".visible"))

	If liProtect = 0 and li_visible = 1 Then
		Return lsColName
	End if
	
Next

return "Request_Date"
end function

public function integer uf_print_h2o_invoice ();
Str_parms	lstrparms
String	ls_dono, lsPrinter
Datastore ldsInvoice
Boolean lb_invoice


If idw_Main.RowCount() = 0 Then Return 0

If ib_changed then
	Messagebox('Print Invoice','Please save your changes first.')
	Return 0
End If

ls_dono = idw_main.GetItemString(1,"do_no")     

//Label datastore
ldsInvoice = Create Datastore

//If Document COdes contains Disney, load Disney Invoice, otherwise standard H2O
If Pos(Upper(idw_Main.GetITemString(1,'Document_Codes')),'DISNEY') > 0 Then
	ldsInvoice.dataobject = 'd_h2o_invoice_disney'
	ldsInvoice.SetTransObject(SQLCA) //S55411-H2O+ - SIMS: Update Packing Lst 2
	ldsInvoice.Retrieve(ls_dono)
	//lb_invoice = true
Else
	//03/31/2021 - Dinesh - S55411-H2O+ - SIMS: Update Packing Lst 2
	//Simply triggered the Print of Packlist
	//w_do.trigger event ue_pack_print() /*use default for non Home Depot Orders*/
	//lb_invoice = False
// Begin Dinesh - 04/12/2021- DE20922- F26406 - Packing List Defects
     //ldsInvoice.dataobject = 'd_h2o_invoice'
	ldsInvoice.dataobject = 'd_h2o_invoice_new'
	
End If
	// End Dinesh - 04/12/2021- DE20922- F26406 - Packing List Defects
	ldsInvoice.SetTransObject(SQLCA)
	ldsInvoice.Retrieve(ls_dono)
	
//S55411-H2O+ - SIMS: Update Packing Lst 2- Commented on 03/31/2021- Dinesh
//ldsInvoice.SetTransObject(SQLCA)
//
//ldsInvoice.Retrieve(ls_dono)
// H2O+ - SIMS: Update Packing Lst 2
//
//  If we have a default printer for H2O Invoice, Load now
lsPrinter = ProfileString(gs_iniFile,'PRINTERS','H2OINVOICE','')
If lsPrinter > '' Then PrintSetPrinter(lsPrinter)
 
//Send the report to the Print report window
//if lb_invoice=true then //04/02/2021 - Dinesh - S55411-H2O+ - SIMS: Update Packing Lst 2
OpenWithParm(w_dw_print_options,ldsInvoice) 
//else
//end if
 
// 09/04 - PCONKL - We want to store the last printer used for Printing the H2O Invoice for defaulting later
lsPrinter = PrintGetPrinter()
SetProfileString(gs_inifile,'PRINTERS','H2OINVOICE',lsPrinter)

 



Return 0
end function

public subroutine wf_check_dana ();// Nxjain : calculate the Gross Weight and net column in Order Detail screen for Dana-TH 01/11/2016


int ll_row ,i ,ls_req
String ls_suup_code ,ls_sku ,ls_net ,ls_gross 
Dec ll_gross ,ll_net,ll_Weight_1



idw_detail.Modify("user_field1_t.Text='Net Wt-K'")
idw_detail.Modify("user_field2_t.Text='Gross Wt-K'")


ll_row =idw_detail.rowcount( ) 
	if ll_row >0  then
 		 for i = 1 to  ll_row
			ls_sku =idw_detail.getItemstring(i,'sku')
			ls_req =idw_detail.getItemnumber(i,'req_qty')
			ls_suup_code =idw_detail.getItemString(i,'supp_code') 
			
			Select Weight_1 into :ll_Weight_1
			from Item_Master
			where SKU = :ls_sku and Supp_Code = :ls_suup_code ;
			
			If isnull(ll_Weight_1) then
				ll_Weight_1 =0.00
			end if 
			
			ll_net =round(ll_Weight_1 ,3)
			ls_net = string(ll_net)
			ll_gross =round( (ll_Weight_1 * ls_req),4)
			ls_gross = string(ll_gross)

			idw_detail.SetItem(i,'user_field1', ls_net)
			idw_detail.SetItem(i,'user_field2', ls_gross)
			
		next 
	end if 
end subroutine

public function integer wf_batch_validation (string asdono);//25-Jan-2016 Madhu- Added to Avoid Duplicate Batch Transaction Records .
//ANKI does Multi Confirm process by multiple users and there're chances to have same order in multi confirm process.
//Once, it is confirmed -> Insert Record into Batch Transaction table and same record would be inserted by another user Multi Confirm process.
//ANKI wants to avoid duplicate insertions against same Order.

String lsTransType, lsTransStatus,lsMsg
DateTime ltdTransCreateDate, ldtTransCompleteDate

//14-Mar-2017 :Madhu -PEVS-492 - Don't create duplicate GI file for KENDO -START
//If GI file created through ReadyToShip Process, don't create again during Order confirmation
//Re-create GI file only when order is Re-confirmed.
long llrscount, llgicount

IF upper(gs_project) ='KENDO' THEN

	//get Batch Transaction records against DoNo
	select  count(*) into :llrscount from Batch_Transaction with(nolock)
	where Project_Id= :gs_project and Trans_Order_Id= :asDoNo and Trans_Type ='RS';

	select  count(*) into :llgicount from Batch_Transaction with(nolock)
	where Project_Id= :gs_project and Trans_Order_Id= :asDoNo and Trans_Type ='GI';

	if Left(icb_confirm.Text,2) =  'Re' Then //If it is re-confirm an order, generate GI file
		return 0
	//elseif llrscount =0 and llgicount =0 then //If No GI file created, generate GI file.
	elseif llrscount =0 or llgicount =0 then //If No GI file created, generate GI file. // Dinesh - 02/16/2023 - SIMS-167- Kendo PGI file
		return 0
	else 
		return -1
	End if
	
ELSE
//14-Mar-2017 :Madhu -PEVS-492 - Don't create duplicate GI file for KENDO -END

Select Trans_Type, Trans_status, Trans_Create_Date, Trans_Complete_Date
Into :lsTransType, :lsTransStatus, :ltdTransCreateDate, :ldtTransCompleteDate
From batch_Transaction 
Where Project_ID = :gs_Project and Trans_Type = 'GI' and Trans_Order_ID = :asDoNo and Trans_create_date =
(SELECT Max(Trans_create_date) AS Trans_create_date 
FROM batch_Transaction
GROUP BY  Trans_Type, Project_ID,  Trans_Order_ID
HAVING Project_ID = :gs_Project and Trans_Type = 'GI' and Trans_Order_ID = :asDoNo);				
		
//same order confirmed by another User without re-confirming.
IF lsTransStatus = 'C' and Left(icb_confirm.Text,2) <>  'Re' and NOT (IsNull(ldtTransCompleteDate)) Then 
	lsMsg = "A ship-confirmation batch transaction for this order# "+asDoNo+" has already completed. Do you want to Re-Process again? '"
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' A ship-confirmation batch transaction for this order has already in Completed status' ,is_dono, ' ',' ',isinvoice_no)

	If messagebox(is_title,lsMsg,Question!,YesNo!,2) =2 Then
		Return -1
	else 
		Return 0
	end if

ELSEIF lsTransStatus = 'N' or IsNull(ldtTransCompleteDate) then
		lsMsg = "A ship-confirmation batch transaction for this order already exists in New status.  Please Wait'"
		messagebox(is_title,lsMsg)
		f_method_trace_special( gs_project, this.ClassName() + ' - ue_confirm', 'End ue_confirm' + ' A ship-confirmation batch transaction for this order already exists in New status' ,is_dono, ' ',' ',isinvoice_no)
		Return -1
ELSE
	Return 0
END IF

END IF //14-Mar-2017 :Madhu -PEVS-492 - Don't create duplicate GI file for KENDO -END
end function

public function integer wf_check_carrier_dangerous_goods ();//31-May-2016 :Madhu- Added code to prevent AIR carrier for Dangerous Goods.

//Get Assigned Carrier Transporation code.
//Get SKU from Detail and have "Hazard_cd value
//Against Hazard_cd value, look at "Shipping_Restriction" value on Hazardocus_Material table.
//If carrier.Transportation Mode= AIR and Shipping_Restriction=AIR, should prompt an error message.

long 	ll_row,ll_carrier_row,ll_detail_rowcount,ll_sku_row,ll_hazardous_rowcount,ll_findrow
string ls_transportmode,ls_sku,ls_suppcode,ls_hazardcd,ls_find,ls_carrier_find,ls_carrier,ls_transmode,ls_allow_dg

//Load Hazardous Materials
ids_hazardoussku.reset()
ids_hazardoussku.retrieve( )
ll_hazardous_rowcount =ids_hazardoussku.rowcount( )


ls_carrier = UPPER(TRIM(idw_other.getitemstring( 1, 'carrier' ))) //Get carrier name
ls_carrier_find ="Carrier_Code='"+ls_carrier+"'"

ls_transmode =UPPER(TRIM(idw_other.getitemstring(1,'transport_mode'))) //Get Order Level Transportation mode
//GailM 1/23/2018 - Error when reconfirming order where carrier is no longer active.  Received invalid row/column error.
// If Re-Confirming, the carrier may no longer be active.  If so, dangerous items cannot be determined.
ll_carrier_row =g.ids_dddw_carrier.find( ls_carrier_find, 1, g.ids_dddw_carrier.rowcount( )) //find carrier row
If ll_carrier_row <> 0 Then
	ls_transportmode = g.ids_dddw_carrier.getitemstring(ll_carrier_row,'transport_mode') //get Carrier Level Transportation Mode
	//ls_allow_dg = g.ids_dddw_carrier.getitemstring(ll_carrier_row,'allow_dg') //get Carrier Level allow dg //Dinesh - 11/10/2023- SIMS-348- Google - SIMS - Dangerous Goods Exception
	select allow_dg into :ls_allow_dg from carrier_master where Carrier_Code=:ls_carrier using sqlca;  //get Carrier Level allow dg //Dinesh - 11/10/2023- SIMS-348- Google - SIMS - Dangerous Goods Exception
	If upper(ls_transportmode) = "AIR"  OR upper(ls_transmode) ="AIR" Then
		ll_detail_rowcount =idw_detail.rowcount( ) //Get Detail row count
		
		If ll_detail_rowcount > 0 Then
			
			For ll_row =1 to ll_detail_rowcount
				ls_sku =idw_detail.getItemString(ll_row,'sku')  //get SKU
				ls_suppcode =idw_detail.getItemString(ll_row,'supp_code') //get Supp Code
				
				//Look for an Item Master to get Hazard_Cd value
				select Hazard_Cd into :ls_hazardcd from dbo.Item_Master with(nolock) 
				where Project_Id =:gs_project and sku=:ls_sku and supp_code =:ls_suppcode 
				using sqlca;
				
				//Look for Shipping_Restriction value against HazardCd
				ls_find ="Identification_No='"+ls_hazardcd+"'"
				ll_findrow=ids_hazardoussku.find( ls_find, 0, ids_hazardoussku.rowcount())
	
				//If Shipping Restrictions value is AIR return -1 to throw an error message
				//If upper(ids_hazardoussku.getitemstring(ll_findrow,'Shipping_Restrictions')) ="AIR" Then //Dinesh - 11/10/2023- SIMS-348- Google - SIMS - Dangerous Goods Exception
				If upper(ids_hazardoussku.getitemstring(ll_findrow,'Shipping_Restrictions')) ="AIR" and  ls_allow_dg ='N' Then //Dinesh - 11/10/2023- SIMS-348- Google - SIMS - Dangerous Goods Exception
					is_dangerous_item =ls_sku //set Dangerous Item
					Return -1
				End If
					
			NEXT
		End If
	End If //
	 
Else
	// The carrier is no longer active -  Cannot determine dangerous goods.
	MessageBox("Dangerous Cargo Warning","Carrier is no longer active.~nCould not determine dangerous items, if appropriate." )
End If

Return 0
end function

public function integer uf_generate_kendo_level2_carton_count ();Long	llRowPos, llRowCount, llFullCarton, llpartialCarton, llTotalCartons
String	lsSku, lsSupplier
Decimal	ld_qty2, ldPickQty


llTotalCartons = 0

//For each Pick row, calc full and partial cartons based on level 2 qty.
llRowCount = idw_Pick.RowCount()

For llRowPos = 1 to llRowCount
	
	lsSku = idw_pick.GetITemString(llRowPos,'Sku')
	lsSupplier = idw_pick.GetItemString(llRowPos,"supp_code")
	ldPickQty = idw_pick.GEtITemDecimal(llRowPos,'Quantity')
	
	Select qty_2 into :ld_Qty2
	FROM Item_Master 
	WHERE Project_id = :gs_project and
	SKU = :lsSKU and
	supp_code = :lsSupplier;
	
	//If we don't have a level 2 qty for an item, we can't calculate for the order so get out...
	If isnull(ld_Qty2) or ld_Qty2 = 0 Then
		Return 0
	End If
	
	llFullCarton = Truncate(ldPickQty/ld_Qty2,0)
	llpartialCarton = mod(ldPickQty,ld_Qty2) /* remainder*/
	
	llTotalCartons += llFullCarton 
	
	If llPartialCarton > 0 Then
		llTotalCartons ++
	End If
			
Next

Return llTotalCartons
end function

public subroutine wf_check_container_scanned ();//GailM 06/20/2017 - Determine if pick rows have container tracked records - Pandora SIMSPEVS-605

Long	llRowCount,	llRowPos, llContainerCount, llHyphen
String ls_mod, ls_err, ls_yes

il_CountNotScanned = 0
il_ContainerTracked = 0
llHyphen = 0

llRowCOunt = idw_pick.RowCount()

//GailM 09/20/2017 - SIMSPEVS-849 - Fix to SIMSPEVS-605 to all all GPNs to be validated
//	The data contains 4,300+ container tracked inventory records with a hyphen in container_id
//  	We will treat these as validaated.  Set container_tracking_ind to Y for these.  They will eventually go away
For llRowPos = 1 to llRowCount
	If Upper(gs_project) = 'PANDORA' and idw_pick.GetItemString( llRowPos,'Container_Tracking_Ind' ) = 'Y' and (idw_pick.GetItemString( llRowPos, 'Container_Id' ) = '-' or idw_pick.GetItemString( llRowPos, 'Container_Id' ) = 'NA') and idw_pick.GetItemString( llRowPos, 'Container_Id_Scanned_Ind' ) = 'N'  Then
		idw_pick.SetItem( llRowPos, 'Container_ID_Scanned_Ind', 'Y' )
		llHyphen ++
	End If
Next

//If llHyphen > 0 Then			//Update idw_pick to save the changes
//	idw_pick.Update( )
//End If

If llRowCount > 0 Then		// Do nothing if no picking rows.
	For llRowPos = 1 to llRowCount
		If Upper(gs_project) = 'PANDORA' and idw_pick.GetItemString(llRowPos,'Container_Tracking_Ind') = 'Y' Then
			il_ContainerTracked++
			If idw_pick.GetItemString(llRowPos,'Container_ID_Scanned_Ind') = 'N' Then
				il_CountNotScanned++
			End If
		End If
	Next
End If

if upper(gs_project) = 'PANDORA' Then
	If il_CountNotScanned > 0  then
		tab_main.tabpage_pack.cb_pack_generate.Enabled = false
		tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = False
		tab_main.tabpage_pick.cb_replace_boxid.visible = True
		tab_main.tabpage_pick.cb_replace_boxid.enabled = True
	Else
		tab_main.tabpage_pick.cb_replace_boxid.enabled = false
		//tab_main.tabpage_pick.cb_replace_boxid.visible = false
		ibSplitContainerRequired = FALSE	//GailM 5/10/2019 DE9847 Control generate buttons
	End If
End If

end subroutine

public function integer wf_check_sscc_no ();//GailM - 09/15/2017  - SIMSPEVS-841 - KDO not all SSCC numbers are being processed successfully
Int liRtn 
Long llRow, llRowCount
String lsCustCode, lsUserField1, lsDoNo

liRtn = 0
lsCustCode = idw_Main.GetItemString( 1, 'cust_code' )
lsDoNo = idw_Main.GetItemString( 1, 'do_no' )

	Select user_field1 Into :lsUserField1
	From customer
	Where project_id = 'KENDO' and cust_code = :lsCustCode;

	If Not isNull( lsUserField1 ) and lsUserField1 <> '' Then
	
		Select count(*) Into :llRowCount
		From delivery_packing
		Where do_no = :lsDoNo and ( pack_sscc_no IS NULL or pack_sscc_no = '' );
	
		If llRowCount > 0 Then
			liRtn = -1
		End If
	End If
	
Return liRtn


end function

public function integer wf_return_to_stock ();//26-SEP-2017 :Madhu PEVS-848 Kendo Return to Stock

String  ls_new_loc
long llRowCount

SetPointer(HourGlass!)

llRowCount = idw_pick.rowcount( )
ls_new_loc = idw_pick.getItemString(1, 'l_code')

//update Delivery Picking and Delivery Picking Detail table
Execute Immediate "BEGIN TRANSACTION" using SQLCA;
	
UPDATE Delivery_Picking_Detail SET l_code =:ls_new_loc WHERE Do_No =:is_dono;

UPDATE Delivery_Picking SET l_code =:ls_new_loc WHERE Do_No =:is_dono;

Execute Immediate "COMMIT" using SQLCA; 

//re-retrieve picking list
idw_pick.retrieve( is_dono)
idw_pick.SetRedraw(False)

DO WHILE llRowCount > 0
	idw_pick.deleterow( llRowCount)	
	llRowCount = llRowCount -1
LOOP

ib_changed = True
idw_pick.SetRedraw(True)
ibpickmodified = True

//save order
this.event ue_save()
idw_detail.retrieve(is_dono)

Return 0
end function

public subroutine wf_refresh_serial_flag ();//07-Mar-2018 :GailM- Refresh Serial Flag to N on SNI table -START
long ll_count,ll_serialcount, ll_rowcount, llRowFound
String ls_sql_syntax, ERRORS, lsFind, lsSerialNo, lsDoNo
Datastore lds

select count(*) into :ll_count from Serial_Number_Inventory with(nolock)
where do_no =:is_dono
and Serial_Flag ='P'
Using SQLCA;

//Look for any records exists in Delivery serial detail table
select count(*) into :ll_serialcount from Delivery_Picking_Detail with(nolock), Delivery_Serial_Detail with(nolock)
where Delivery_Picking_Detail.Do_No=:is_dono
and Delivery_Picking_Detail.Id_No=Delivery_Serial_Detail.Id_No
and Delivery_Picking_Detail.SKU = Delivery_Serial_Detail.SKU_Substitute
using SQLCA;

//when use hit save button, it stores records into Delivery Serial Detail table. If count is 0, clear Flag for all SN#.
//If ll_count <> ll_serialcount THEN
	lds = Create datastore
	int i
	ls_sql_syntax = "SELECT serial_no FROM Serial_Number_Inventory WHERE project_id = '" + gs_project + "' AND do_no = '"+ is_dono + "';"
	
	lds.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax,"", ERRORS))
	if Len(ERRORS) > 0 then
		MessageBox("Errors", "Unable to create datastore to check for refreshing serial flags for serial number inventory.~r~r" + Errors)
		return
	end if
	lds.SetTransObject(SQLCA)
	ll_rowcount = lds.retrieve( )
	
	For i = 1 to ll_rowcount		// Find records no longer valid
		lsFind = "Serial_No = '" + lds.GetItemString( i, 'serial_no' ) + "'"
		llRowFound = idw_serial.Find( lsFind, 1, idw_serial.rowcount() )
		If llRowFound = 0 Then
			lsSerialNo =  lds.GetItemString( i, 'serial_no' )
			Update Serial_Number_Inventory set Do_No='-', Serial_Flag='N', Transaction_Type = 'Reset Serial Flag to N on refresh serial flag function', Transaction_Id = :is_dono 
			where Project_Id=:gs_project and Do_No=:is_dono and Serial_No = :lsSerialNo ;
		End If
	Next
	
	for i = 1 to idw_serial.rowcount( ) 
		lsSerialNo = idw_serial.GetItemString( i, 'serial_no' )
		Update Serial_Number_Inventory set Do_No = :is_dono, Serial_Flag = 'P', Transaction_Type = 'Reset Serial Flag to P on refresh serial flag function', Transaction_Id = :is_dono 
		Where Project_Id=:gs_project and Serial_No = :lsSerialNo ;
	Next
	
	f_method_trace_special( gs_project, this.ClassName() , 'Refresh Serial_Flag on Serial Number Inventory table For Do_No:  '+is_dono ,is_dono, '','',isinvoice_no)

	Destroy lds
//END IF

end subroutine

public function integer wf_multiple_coo_validation (string as_wh_code);//11-APR-2018 :Madhu S18131 - 1 COO Per Line Item No of an International Order

String ls_Country_FROM, ls_country_TO, ls_coo, ls_prev_coo

long ll_row, ll_line_item_no, ll_prev_line_item_no

boolean lb_multiple_coo_enabled, lb_eu_to_eu

lb_multiple_coo_enabled = False

lb_eu_to_eu = False

//get To Country

ls_Country_TO = tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country")

//get From Country

Select Country

into :ls_Country_FROM

From Warehouse WITH (NOLOCK)

where Wh_Code = :as_wh_code;

//check - Is Multiple COO Validation Flag Enabled?

lb_multiple_coo_enabled = (f_retrieve_parm(gs_project, 'MULTIPLE_COO', as_wh_code, 'USER_UPDATEABLE_IND' ) ='Y')

//EU TO EU Country Validation

lb_eu_to_eu = wf_is_country_eu_to_eu(ls_Country_FROM, ls_Country_TO)

//International Order + Flag is Enabled for MULTIPLE_COO Validation + Pick Row Count > 0 + Not EU to EU.

IF ls_Country_FROM <> ls_Country_TO and (lb_eu_to_eu = false) and lb_multiple_coo_enabled and idw_pick.rowcount() > 0 THEN

//If Flag is Enabled, On Pick List loop through each Pick Line No.

For ll_row =1 to idw_pick.rowcount( )

ll_line_item_no = idw_pick.getItemNumber( ll_row, 'line_item_no')

ls_coo = idw_pick.getItemString(ll_row, 'user_field1') //COO

//If multiple COO exists for same Line Item No throw an error

If ( ll_prev_line_item_no = ll_line_item_no ) and ( ls_prev_coo <> ls_coo ) Then

Messagebox(is_title,"This is an International order and only 1 COO is allowed per pick. Please choose Inventory which has same COO for Line# "+ string(ll_line_item_no) +"." + " If there is not enough inventory to ship this order. Order must be cancelled in gShip.",StopSign!)

tab_main.selecttab(4)

f_setfocus(idw_pick, ll_row, "line_item_no")

Return -1

End IF

//store current values

ll_prev_line_item_no = ll_line_item_no

ls_prev_coo = ls_coo

Next

END IF

//24-01-2021 Dhirendra S52818: Google - SIMS - COO Specific warning message

String ls_sql_syntax, ERRORS,ls_ship_in, ls_sku,ls_gpn,ls_remark,ls_shipping_ins,ls_remark_msg,lsDONO

long ll_foundrow,ll_count,ll_msg_count,ll_search_row,ll_row_count

datastore lds_coo

dwItemStatus l_status

lsDONO = idw_Main.GetItemString(1,'do_no')

//ll_row_count = tab_main.tabpage_pick.dw_ship_remark_info.retrieve(lsDONO)

ls_ship_in=idw_main.getitemstring(1,'Shipping_instructions',primary!,true)

ls_remark_msg ="INBOUND WH TEAM:IF YOU SEE 'COO CN' ON THE SHIPPING CTN LABEL WITH 'COO HK' ON THE PART, REFER TO SWI 39440 (INBOUND VERIFY) FOR RECEIVING INSTRUCTIONS.  ~r~n " &
+ "Note to Outbound Picking: If possible please pick inventory with COO not equal to HK"



lds_coo = create datastore

ls_sql_syntax = "Select Code_id,Code_Descript From Lookup_Table WITH (NOLOCK) where Code_type = 'COO_block'; "

lds_coo.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax,"", ERRORS))

IF Len(ERRORS) > 0 then

MessageBox("Errors", "Unable to create datastore to check COO , .~r~r" + Errors)

return -1

end if

if lds_coo.SetTransObject(SQLCA) <> 1 then

MessageBox("Error","Error setting datastore's transaction object to check COO")

return -1

end if

lds_coo.retrieve()

IF ls_Country_FROM <> ls_Country_TO and (lb_eu_to_eu = false) and idw_pick.rowcount() > 0 and ilHelpTopicID = 555 THEN

For ll_row =1 to idw_pick.rowcount()

ls_coo = idw_pick.getItemString(ll_row, 'user_field1') //COO

ll_foundrow = lds_coo.Find( "code_id = '" + ls_coo + "' and Code_Descript = '"+ls_Country_TO+"'", 1, lds_coo.rowcount())

IF ll_foundrow > 0 and ll_msg_count = 0 Then

Messagebox( is_title,"COO "+ls_coo+" is not valid for the ship to country code.Please check your inventory and if possible pick from another COO")

ll_msg_count++

end if

ls_coo = idw_pick.getItemString(ll_row, 'Country_Of_Origin') //COO

ll_foundrow = lds_coo.Find( "code_id = '" + ls_coo + "' and Code_Descript = '"+ls_Country_TO+"'", 1, lds_coo.rowcount())

IF ll_foundrow > 0 and idw_pick.getItemString(ll_row, 'user_field1') = 'CN' then

ls_sku = idw_pick.getItemString(ll_row, 'sku') +','

ls_gpn += ls_sku

ll_count++

end if

next

IF ll_count = 1 then

len(ls_remark_msg)

ls_gpn = left(ls_gpn, (len(ls_gpn) -1))

ls_shipping_ins = "GPN '"+ls_gpn+"' is product of HK / COO of CN is for Marking Purposes. "

idw_main.setitem(1,'Shipping_instructions', ls_shipping_ins)

ls_remark = idw_main.getitemstring(1,'Remark')

IF len(ls_remark) > 134 then

idw_main.setitem(1,"remark",ls_remark_msg)

else

idw_main.setitem(1,"remark",ls_remark_msg)

end if

elseif ll_count > 1 then

ls_gpn = left(ls_gpn, (len(ls_gpn) -1))

ls_shipping_ins ="GPN '"+ls_gpn+"' are products of HK / COO of CN is for Marking Purposes."

idw_main.setitem(1,'Shipping_instructions', ls_shipping_ins)

ls_remark = idw_main.getitemstring(1,'Remark')

IF len(ls_remark) > 134 then

idw_main.setitem(1,"remark",ls_remark_msg)

else

idw_main.setitem(1,"remark",ls_remark_msg)

end if

end if

end if

IF ls_Country_FROM <> ls_Country_TO and (lb_eu_to_eu = false) and idw_pack.rowcount() > 0 and ilHelpTopicID = 557 THEN

For ll_row =1 to idw_pack.rowcount( )

ls_coo = idw_pack.getItemString(ll_row, 'country_of_origin') //COO

ll_foundrow = lds_coo.Find( "code_id = '" + ls_coo + "' and Code_Descript = '"+ls_Country_TO+"'", 1, lds_coo.rowcount())

IF ll_foundrow > 0 Then

ll_msg_count++

for ll_count = 1 to idw_pick.rowcount()

ls_coo = idw_pick.getItemString(ll_count, 'user_field1') //COO

ll_search_row = lds_coo.Find( "code_id = '" + ls_coo +"'",1, lds_coo.rowcount())

IF ll_search_row > 0 then

idw_pick.selectrow(ll_count,true)

end if

next

If ll_msg_count > 0 then

Messagebox( is_title,"COO "+ls_coo+" is not valid for the ship to country code. Please change COO in the Picking list screen")//

tab_main.selecttab(4)

return -1

end if

end if

next

end if

destroy lds_coo

// Dhirendra end here S52818

Return 0
end function

public function string uf_get_serialnos (string as_sku, string as_carton_no);//23-MAR-2018 :Madhu S16805 - Get associated SN's from Serial Tab
//Since, we're rolloing up SKU's by Carton No, don't include Line Item No.

string ls_serial, lsFind
long llFindRow

ls_serial = ""
IF idw_serial.RowCount() > 0 Then
	lsFind = " sku ='"+ as_sku+ "' and Upper(Carton_No) = '" + as_carton_no + "'"
	llFindRow = idw_serial.Find(lsFind,1,idw_serial.RowCount())
	Do While llFindRow > 0
		ls_serial += ", " + idw_serial.GetItemString(llFindRow,'serial_no')
		
		llFindRow ++
		If llFindRow > idw_serial.RowCount() Then
			llFindRow = 0
		else
			llFindRow = idw_serial.Find(lsFind,llFindRow,idw_serial.RowCount())
		End If
	Loop
End IF

If Left(ls_serial,2) = ', ' Then ls_serial = mid(ls_serial,3,999999999)

return ls_serial
end function

public function integer wf_set_special_packaging_comments ();int liRet

	Long j, ll_QACount, llEdgePos, llListPos
	String ls_packaging //TAM -2017/03 - SIMSPEVS-421
	String lsOwnerCd, lsCommodityCd, lsGPN, lsShipToLoc, lsEdgeCommodity, lsEdgeGPN, lsEdgeLoc	, lsLoc		//GailM 2018/05
	Long llEdgeCount, llPickCount, llFoundRow, li_idx, llSpPackCount
	String lsFind, lsFilter, lsSort, lsSpEdgeMsg, lsQACheckInd, lsPackChar
	Boolean lbEdge
	
	isHriComment = "Attention! GPNs highlighted in blue are High Risk Parts,~r Please follow Instruction according SWI WORK43225"
	isDangerComment = "The following GPN(s) are  flagged to check for Dangerous Material.  Take appropriate measure. ~r~r~t" 
	isDefectComment = "The following GPN(s) are flagged to check for Defective Packaging.  If packaging is defective please contact your Local CSR: ~r~r~t" 
	isDriveComment = "The following GPN(s) are SSD/Stegodon Drives and needs additional packaging requirement for owner PX.  Please contact Ops Management if you have any questions! ~r~r~t"
	isEdgeComment = ''
	isHriList = ''
	isDangerList = ''
	isDefectList = ''
	isDriveList = ''
	isEdgeList = ''
	
	lsSort = "commodity_cd, gpn desc, ship_to_location_id desc"
	lsLoc = idw_main.Object.Cust_Code[1]
	
	//GailM 6/13/2018 S19742 F7864 I898 Google Edge Packaging - GPN level mapping with Commodity Code level
	If Not isvalid(idsEdgeConfiguration) then
		idsEdgeConfiguration = Create datastore
		idsEdgeConfiguration.Dataobject = 'd_edge_configuration' 
		idsEdgeConfiguration.SetTransObject(sqlca)
	End if
	llEdgeCount = idsEdgeConfiguration.Retrieve()
	
	llPickCount = tab_main.tabpage_pick.dw_pick.RowCount()
	for j = 1 to llPickCount
		lbEdge = False
		lsQACheckInd = idw_pick.Object.qa_Check_Ind[j]
		// First check the Edge Configuration for each row.  If found, overridge the special packaging 
		//lsGPN = UPPER(idw_detail.Object.sku[j])
		//lsOwnerCd = UPPER(idw_detail.Object.owner_owner_cd[j])
		lsGPN = UPPER(idw_pick.Object.sku[j])
		lsOwnerCd = UPPER(idw_pick.Object.owner_owner_cd[j])
		lsCommodityCd = UPPER(idw_pick.Object.user_field5[j])
		iF isnull(lsCommodityCd) or lsCommodityCd = '' Then
			SELECT user_field5 INTO :lsCommodityCd FROM item_master with (nolock) 
			WHERE  Project_ID = :gs_project AND sku = :lsGPN USING SQLCA;
		End If
		
		lsFilter = " Upper(owner_cd) = '" + Upper(lsOwnerCd)  + "' "
		llFoundRow = idsEdgeConfiguration.Find(lsFilter, 1, idsEdgeConfiguration.RowCount())
		If llFoundRow > 0 Then
			idsEdgeConfiguration.SetFilter( lsFilter )
			idsEdgeConfiguration.Filter()
			idsEdgeConfiguration.SetSort( lsSort )
			idsEdgeConfiguration.Sort()
			llEdgeCount = idsEdgeConfiguration.RowCount()
			FOR li_idx = 1 to llEdgeCount
				lsSpEdgeMsg = ""
				lsEdgeCommodity = Left( idsEdgeConfiguration.GetItemString( li_idx, "commodity_cd" ), pos( idsEdgeConfiguration.GetItemString( li_idx, "commodity_cd" ), "*") - 1 )
				lsEdgeGPN = idsEdgeConfiguration.GetItemString( li_idx, "gpn" )
				lsEdgeLoc = idsEdgeConfiguration.GetItemString( li_idx, "ship_to_location_id" )
				
				If lsEdgeCommodity = Left(lsCommodityCd,Len(lsEdgeCommodity)) Then 
					//Found the commodity code, now check GPN if available
					If lsEdgeGPN <> '*' Or lsEdgeLoc <> '*' Then	//Additional checking
						iF (lsEdgeGPN = lsGPN and lsEdgeLoc = lsLoc) Or (lsEdgeGPN = lsGPN and lsEdgeLoc = "*")	Or (lsEdgeLoc = lsLoc and lsEdgeGPN = "*") Then		//We got a match
							lsSpEdgeMsg = idsEdgeConfiguration.GetItemString( li_idx, "comments" )
							idw_pick.SetItem( j, 'QA_Check_Ind', 'P')
							lbEdge = True
						End If
					Else
						lsSpEdgeMsg = idsEdgeConfiguration.GetItemString( li_idx, "comments" )
						idw_pick.SetItem( j, 'QA_Check_Ind', 'P')
						lbEdge = True
					End If
					If Len(lsSpEdgeMsg) > 0 Then
						If len(isEdgeComment) = 0 Then
							isEdgeComment = lsSpEdgeMsg
							llSpPackCount ++
							isEdgeList = '~r~t' + lsGPN + '~r~t'
						Else
							If isEdgeComment = lsSpEdgeMsg Then
								isEdgeList += lsGPN + '~r~t'
							Else
								isEdgeComment += "*" + lsSpEdgeMsg
								isEdgeList += "*" + lsGPN + '~r~t'
							End If
						End If	
	
						EXIT
					End If
				End If
			Next	
		End If
		If Not IsNull(lsQACheckInd) And Not lsQACheckInd = "" And Not lbEdge then
			//TAM -2017/03 - SIMSPEVS-421 - If Sku is found in the lookup table for special packaging then display message in a second pop_up window
			//GailM 6/20/2018 S19742 F7864 I898 ls_packing left in but obsolete.  No lookup entries anticipated.  Replaced by Edge Packaging
			If lsQACheckInd = 'P'  Then
				Select User_Updateable_Ind INTO :ls_packaging FROM lookup_table with (NoLock) 
				Where Project_ID = :gs_project AND Code_Type = 'SPECIAL_PKG' AND code_descript = :lsGPN USING SQLCA;
				If ls_packaging = 'Y' Then
					If Len(isDriveList) > 0 Then
						If Pos(isDriveList, lsGPN) = 0 Then
							isDriveList += lsGPN  + '~r~t'
						end If
					Else
						isDriveList = lsGPN  + '~r~t'
					End If
				Else
					If Len(isDefectList) > 0 Then
						If Pos(isDefectList, lsGPN) = 0 Then
							isDefectList += lsGPN + '~r~t'
						End If
					Else
						isDefectList = lsGPN + '~r~t'
					End if
				end if 
			ElseIf lsQACheckInd = 'M' Then
				// lsGPNls_Get_sku = idw_pick.GetItemString(llRowPos, 'sku')
				// Already have it - ls_QA_Check_Ind = idw_pick.GetItemString(llRowPos, 'qa_check_ind')	
				//ls_Supp_Code = idw_pick.GetItemString(llRowPos,"supp_code")	
				If Len(isDangerList) > 0 Then
					//Only list 20 GPN's
					If ll_QACount < 20 Then
						isDangerList  +=  lsGPN + '~r~t'			
						ll_QACount ++
					End if
				Else
					isDangerList = lsGPN + '~r~t'
					ll_QACount ++
				End If
			ElseIf lsQACheckInd = 'H' Then
				If Len(isHriList) > 0 Then
					If Pos(isHriList, lsGPN) = 0 Then
						isHriList += lsGPN + '~r~t'
					End If
				Else
					isHriList = lsGPN + '~r~t'
				End If
			End If
		End If		/* End check QA check indicator */
		
		//If this row is Edge Packaging, save isEdgePackaging to delivery detail recored.  Will be used for color on detail and pick lists.
		If lbEdge Then
			lsFind = "SKU = '" + lsGPN + "' "
			llFoundRow = idw_detail.Find(lsFind, 1, idw_detail.rowcount()) 
			IF 	llFoundRow > 0 Then
				lsPackChar = idw_detail.GetItemString(llFoundRow, 'packaging_characteristics')
				If isnull( lsPackChar ) or lsPackChar <> 'E' Then
					Execute Immediate "BEGIN TRANSACTION" using SQLCA;
						UPDATE Delivery_Detail SET packaging_characteristics ='E' WHERE Do_No =:is_dono and SKU = :lsGPN;
					Execute Immediate "COMMIT" using SQLCA; 
				End If
			End If
		End If
		
	Next
	//If there are multiple Edge Packaging comments, parse and include GPNs
	llEdgePos = pos( isEdgeComment, "*", 1 )
	llListPos = pos( isEdgeList, "*" , 1 )
	If llEdgePos > 0 Then
		lsSpEdgeMsg = Left(isEdgeComment, llEdgePos - 1) + "~r" + Left(isEdgeList, llListPos - 1) + "~r~r" + Right(isEdgeComment, Len(isEdgeComment) - llEdgePos )  + "~r~r~t" + Right(isEdgeList, Len(isEdgeList) - llListPos)
		isEdgeComment = lsSpEdgeMsg
	Else
		isEdgeComment = isEdgeComment + "~r" + isEdgeList
	End If

return liRet

end function

public function integer wf_check_footprint_containers ();//GailM 08/16/2018 Google Footprint Container Split

int liRowCount, liRowPos, liRowContent, liRowContentPos, liRtn, liNbrAlloc, liAllocQty, liOtherQty, liThisCount
int ll_idx, ll_Count, ll_Qty, liNbrFullContainers, liNbrContainersInPallet, liNbrPartialContainers, liCSRows
String lsSKU, lsPoNo2, lsContainer, lsSqlSyntax, lsOrderNbr, lsOrdStatus, lsOrderType, lsSUpplier, lsLocation
String lsFind, lsRtn, lsPrevPallet, lsPrevContainer, lsThisOrderType, lsSharedContainer, lsMixedType
string lsMsg1, lsMsg2, lsMsg3, lsMsg4, lsMsg5, lsFilter
Long llPickQty, llContentAvail, llContentAlloc, llThisOrder
Long llAvailQty, llEmptyContainers, llAllocContainers, llFound

Boolean lbFootprint, lbAllocated, lbSerialFlagSet, lbMixedContainerization, lbDashed
String lsSerialized, lsPONO2Ind, lsContainerInd, lsMixedContFlag, lsGPNConversionFlag
String lsContainers[], lsNull[]
Long llNbrAlloc, llOtherQty, llAllocQty, llFootprintSerialNumbersPresent, llNbrSerialLinked
str_parms lstr_parms 

u_ds_ancestor ldsContent 
u_ds_ancestor ldsCS
u_ds_ancestor ldsSerial

ldsContent = Create u_ds_ancestor
ldsContent.dataobject = 'd_content_pallet'
ldsContent.SetTransObject(SQLCA)

ldsCS = Create u_ds_ancestor
ldsCS.dataobject = 'd_content_summary_pallet'
ldsCS.SetTransObject(SQLCA)

ldsSerial = Create u_ds_ancestor
ldsSerial.dataobject = 'd_serial_container'
ldsSerial.SetTransObject(SQLCA)

//f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', 'Start wf_check_footprint_containers  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added

ibCanSplitContainer = TRUE			//Always make true unless the pallet is multi-allocated
lsMixedContFlag = f_retrieve_parm("PANDORA","FLAG","CONTAINERIZATION")
lsOrdStatus = tab_main.tabpage_main.dw_main.getitemstring(1, "ord_status")
isWhCode = tab_main.tabpage_main.dw_main.getitemstring(1, "wh_code")
liRtn = 0
liNbrAlloc = 0
liNbrFullContainers = 0
liNbrPartialContainers = 0
lbFootprint = FALSE
lsPrevPallet = ""
liRowCount = idw_pick.rowcount()
for liRowPos = 1 to liRowCount							//Are any containers allocated?
	lsPoNo2 = idw_pick.getitemstring(liRowPos, "po_no2") 
	lsContainer = idw_pick.getitemstring(liRowPos, "container_id")
	lsSKU = idw_pick.GetItemString(liRowPos, 'sku')
	lsLocation = idw_pick.GetItemString(liRowPos, 'l_code')
	lsSUpplier = idw_pick.GetItemString(liRowPos, 'supp_code')
	ll_Qty = idw_pick.GetItemNumber(liRowPos, 'quantity')
	lbFootprint = f_is_sku_foot_print(lsSKU, lsSUpplier)
	
	//GailM 9/5/2019 S37314 F17337 I1304 Google Footprints GPN Conversion Process - Are serial numbers present for this SKU
	lsGPNConversionFlag = f_retrieve_parm("PANDORA","FOOTPRINT","GPN_CONVERSION")
	If lbFootprint and lsGPNConversionFlag = 'Y' Then
		If (lsPoNo2 = gsFootPrintBlankInd and lsContainer = gsFootPrintBlankInd) OR  (lsPoNo2 = '-' and lsContainer = '-') Then
			select count(*) into :llNbrSerialLinked	from serial_number_inventory with (nolock) where project_id = :gs_project and wh_code = :isWhCode
			and sku = :lsSKU and l_code = :lsLocation and po_no2 = :lsPoNo2 and carton_id = :lsContainer and do_no = :is_dono using sqlca;

			//ll_count = ldsSerial.Retrieve( gs_project, isWhCode, lsSku, lsPoNo2)	//for testing
			
			select count(*) into :llFootprintSerialNumbersPresent from serial_number_inventory with (nolock) where project_id = :gs_project 
			and wh_code = :isWhCode and sku = :lsSKU and l_code = :lsLocation and po_no2 = :lsPoNo2 and carton_id = :lsContainer using sqlca;
			
			If llNbrSerialLinked < ll_Qty Then								//Not enough SNs linked
				If llFootprintSerialNumbersPresent >= ll_Qty Then		//But enough SNs present
					llFootprintSerialNumbersPresent = 0	
				Else
					llFootprintSerialNumbersPresent = llFootprintSerialNumbersPresent - llNbrSerialLinked		//Not enough linked and not enough present - add SNs
				End If
			ElseIf llNbrSerialLinked = ll_Qty Then
				llFootprintSerialNumbersPresent = 0
			End If
		Else
			llFootprintSerialNumbersPresent = f_footprint_serial_numbers(lsSKU, isWhCode, lsLocation, lsPoNo2, lsContainer, ll_Qty)
		End If
		
		If llFootprintSerialNumbersPresent <> 0 Then
			lsMsg4 += "Footprint GPN " + lsSKU + " must contain serial numbers for pallet " + lsPoNo2 + " and container " + lsContainer + "."
			If ll_Qty < llFootprintSerialNumbersPresent Then		//Quantity required is less that difference between Content and Serial Number Inventory
				lsMsg4 += "~n~r~n~rPick row " + string(liRowPos) + " requires " + string(ll_Qty) + " serial numbers.  Missing serial numbers"
				lsMsg4 += " for this WH/GPN/Loc/Pallet/Container: " + string(ABS(llFootprintSerialNumbersPresent)) + "~n~r~n~r"
			Else
				lsMsg4 += "~n~rPick row " + string(liRowPos) + " has " + string(Abs(llFootprintSerialNumbersPresent)) + " missing serial numbers for this WH/GPN/Loc/Pallet/Container.~n~r~n~r" 
			End If

			idw_pick.SetItem(liRowPos, "color_code", "9")
			idw_pick.SetItemStatus(liRowPos, "color_code", Primary!, NotModified! )
			ibSplitContainerRequired = TRUE
			continue
		End If
	End If
	
	
//f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', 'Mid1 wf_check_footprint_containers  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added
	
	//19-MAR-2019 :Madhu S30668 -Mixed Containerization - Removed Pallet and Container Id condition
	// TAM - 2019/04  - DE9774 need to skip Loose serial numbers from footprint validation
	//GailM 10/22/2019 DE13104
	If lbFootprint Then
		SetMicroHelp("Checking for pallet allocation")
		SetPointer(HourGlass!)
		
		lstr_parms = f_is_footprint_allocated( lsPoNo2, lsContainer, idw_pick, isWhCode, lsSKU )
		lsOrderNbr = lstr_parms.String_Arg[1]
		lsOrderType = lstr_parms.String_Arg[2]
		lsSharedContainer = lstr_parms.String_Arg[3]
		lsThisOrderType = lstr_parms.String_Arg[4]
		llAvailQty = lstr_parms.Long_Arg[1]
		llEmptyContainers = lstr_parms.Long_Arg[2]
		llAllocContainers = lstr_parms.Long_Arg[3]
		llThisOrder = lstr_parms.Long_Arg[4]
		liCSRows = lstr_parms.Integer_Arg[1]
		
		SetMicroHelp("Continuing with pallet/container discovery...")
		
		IF lsOrderNbr <> "" and llThisOrder > 0 Then

			CHOOSE CASE lsOrderType
				CASE "S"
					lsOrderNbr = "Outbound Order " + lsOrderNbr
				CASE "O"
					lsOrderNbr = "Stock Owner Change " + lsOrderNbr
				CASE "I"
					lsOrderNbr = "Stock Transfer " + lsOrderNbr
			END CHOOSE
			If lsMsg1 > "" Then lsMsg1 = lsMsg1 + "~r~n~r~n"
			lsMsg1 += "Footprint GPN " + lsSKU + " must maintain full pallet and containers.~n~r" + &
						+ "PalletID " + lsPoNo2 + " at Row " + String(liRowPos)  + " is allocated in order~n~r" + &
						+ lsOrderNbr + " and cannot be split at this time.~n~r" 
			lbAllocated = TRUE
			ibSplitContainerRequired = TRUE
			//tab_main.tabpage_serial.cb_generate_ob_serial.Enabled = False
			
			idw_pick.SetItem(liRowPos, "color_code", "6")
			idw_pick.SetItemStatus(liRowPos, "color_code", Primary!, NotModified! )
		End If
		
		ll_count = ldsSerial.Retrieve( gs_project, isWhCode, lsSku, lsPoNo2)
					lsFilter = "carton_id = '" + lsContainer + "' "
					ldsSerial.SetFilter(lsFilter)
					ldsSerial.Filter()
		ll_count = ldsSerial.RowCount()
		If lsPoNo2 = gsFootPrintBlankInd or lsContainer = gsFootPrintBlankInd Then lbMixedContainerization = TRUE
		If lsPoNo2 = "-" or lsContainer = "-" Then lbDashed = TRUE
		
		IF Not lbAllocated Then	
			If ll_Qty <> ll_count and lsMixedContFlag = "Y"  and lbMixedContainerization Then 	//No serial numbers found for this container -- Error!
				
				//GailM 6/14/2019 DE11156 Set mixed containerization type - P=Pallet, C=Container, S=Loose Serials
				If lsPoNo2 = gsFootPrintBlankInd and lsContainer = gsFootPrintBlankInd Then
					//Check loose serials for SerialFlag = "L".  If they are already set, do not set highlight to yellow
					lsFilter = "carton_id = '" + lsContainer + "' and do_no = '" + is_dono + "' "
					ldsSerial.SetFilter(lsFilter)
					ldsSerial.Filter()
					
					ll_count = ldsSerial.RowCount()
					If ll_Qty <> ll_count Then
						lsMixedType = "S"		//Loose Serials
					Else
						continue
					End If
				Elseif lsPoNo2 <> gsFootPrintBlankInd and lsContainer = gsFootPrintBlankInd Then
					lsMixedType = "P"		//Container w/serials
				Elseif lsPoNo2 = gsFootPrintBlankInd and lsContainer <> gsFootPrintBlankInd Then
					lsMixedType = "C"		//Pallet w/serials
				Else
					lsMixedType = "N"		//Not mixed
				End If
					
				If lsMsg2 > "" Then lsMsg2 = lsMsg2 + "~r~n~r~n"
				lsMsg2 += "Mixed Containerization~r~n" + &
						"The serial numbers scanned will be allocated to the line item number on the pick list.~r~n" 
						
				idw_pick.SetItem(liRowPos, "color_code", "8")
				idw_pick.SetItem(liRowPos, "mixed_type", lsMixedType)
				idw_pick.SetItemStatus(liRowPos, "color_code", Primary!, NotModified! )
				idw_pick.SetItemStatus(liRowPos, "mixed_type", Primary!, NotModified! )
				ibSplitContainerRequired = TRUE
			Else
				If ll_Qty <> ll_count and llThisOrder > 0 and Not lbMixedContainerization and Not lbDashed Then	//This container requires split
					If lsMsg2 > "" Then lsMsg2 = lsMsg2 + "~r~n~r~n"
					lsMsg2 += "Footprint pallets/containers must remain full to be moved." + &
						"~r~nRow " + String(liRowPos) + " GPN " + lsSKU + " has a quantity of " + string(ll_Qty) + " and " + &
						"container: " + lsContainer + " has " + string(ll_count) + " units." + &
						"  Pallet: " + lsPoNo2 + " units not included in~rthis move will have new pallet/container numbers.~r~n" 
					idw_pick.SetItem(liRowPos, "color_code", "5")
					idw_pick.SetItemStatus(liRowPos, "color_code", Primary!, NotModified! )
					ibSplitContainerRequired = TRUE
				ElseIf  lsPoNo2 = gsFootPrintBlankInd or lsContainer = gsFootPrintBlankInd  Then
					// Mixed Containerization cannot be processed for multiple empty contains.  If one or the other is NA then skip splitting full containers
				ElseIf lbFootprint and lbDashed Then 
					If lsMsg5 = "" Then			//Only show one message
						lsMsg5 += "GPN " + lsSKU + ", as a footprint, under mixed containerization, the pallet and/or container must be changed to " + gsFootPrintBlankInd + &
									" as a default.  The dash remains the default for serialized GPNs and are not considered as mixed containerization.~r~n~r~n" + &
									"      Please make the change at the earliest convenience.~n~r~n~r"
						//ibMixedContainerization = TRUE
					End If
				ElseIf llEmptyContainers > 0 and llAllocContainers > 0 Then	//This container requires pallet split being full container unless it's mixed containerization
					lsMsg3 +=  "Footprint GPN " + lsSKU + " must maintain full pallet and containers.~n~r~n~r" + &
						"There are " + string(llAllocContainers) + " full footprint container(s) with " +string(llEmptyContainers + llAllocContainers) + " containers in Pallet " + lsPoNo2 + "~r~n~r" + &
						"The extra container(s) must be moved to another pallet.  The allocated container(s) will retain the pallet id~n~r~n~r"
					idw_pick.SetItem(liRowPos, "color_code", "7")
					idw_pick.SetItemStatus(liRowPos, "color_code", Primary!, NotModified! )
					ibSplitContainerRequired = TRUE
				End If
			End If
		End IF
	END IF
	lbAllocated = FALSE

NEXT

//f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', 'Mid2 wf_check_footprint_containers  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added

//GailM 04/18/2019 DE10131 Cannot have both a pallet split and container split for the same pallet.  If a container is to be split, turn off pallet split.
for liRowPos = 1 to liRowCount
	If idw_pick.GetItemString(liRowPos,'color_code') = "7" Then		//Pallet split
		lsPoNo2 = idw_pick.GetItemString(liRowPos, 'po_no2')			
		lsFind = "color_code = '5' and po_no2 = '"	+ lsPoNo2 + "' "	
		llFound = idw_pick.Find(lsFind, 1, liRowCount)
		If llFound > 0 Then
			idw_pick.SetItem(liRowPos, "color_code", "0")
			lsMsg3 = ""		// Also turn off pallet split message
		End If
	End If
Next


If lsMsg1 > "" Then			//Pallet is allocated, stop	(6)
	lsMsg1 += "~r~nPick another pallet and re-generate the pick list or wait for the other order to process."
	MessageBox ("Pallet / Container Warning", lsMsg1 )
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', lsMsg1,gs_system_no, ' ',' ',gs_system_no)
End If

If lsMsg2 > "" Then		//Need to split	(5)
	lsMsg2 += "~r~nDouble-click the PoNo2 field on the Pick List screen to split the container."
	MessageBox ("Pallet / Container Warning", lsMsg2 )
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', lsMsg2,gs_system_no, ' ',' ',gs_system_no)
End If

If lsMsg3 > "" Then		//Full containers, excess containers (7)	
	messagebox("Full Footprint Containers", lsMsg3)
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', lsMsg3,gs_system_no, ' ',' ',gs_system_no)
End If

If lsMsg4 > "" Then		//Missing serial numbers
	lsMsg4 += "Double-click pick list PoNo2 column to enter serial numbers. " 
	messagebox("Missing serial numbers", lsMsg4)
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', lsMsg4,gs_system_no, ' ',' ',gs_system_no)
End If

If lsMsg5 > "" Then		//Dash in pono2 and/or container
	messagebox("Footprint GPN has dash in pallet or container", lsMsg5)
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', lsMsg5,gs_system_no, ' ',' ',gs_system_no)
End If

SetMicroHelp("Ready")
SetPointer(Arrow!)

//f_method_trace_special( gs_project, this.ClassName() + ' - wf_check_footprint_containers', 'End wf_check_footprint_containers  ',gs_system_no, ' ',' ',gs_system_no)

return liRtn
end function

public function integer wf_is_footprint_pallet_allocated ();Int liRtn = 0


Return liRtn
end function

public function integer wf_create_edi_outbound_expansion (string as_invoiceno, long al_batchseq, long al_new_batchseq);//4-MAR-2019 :Madhu PHILIPSCLSBlueHeart Create EDI Outbound Expansion records for Back Order.
//When Back Order created, copy expansion records (against old batch_seq_no) and write for NewBatch_Seq_no.

String 	sql_syntax, ERRORS, lsErrText, ls_project, ls_user_line , ls_ord_table, ls_field_name, ls_field_data, ls_upload
long 		llRowPos, llRowCount, ll_ord_seq, ll_ord_line

Datastore ldsOutboundExpansion

ldsOutboundExpansion = Create Datastore
sql_syntax = "select Project_Id, Order_Seq_No, Order_Line_No, User_Line_Item_No, Order_Table, Field_Name, Field_Data, Upload"
sql_syntax += " from EDI_Outbound_Expansion with(nolock)"
sql_syntax += " where Project_Id ='"+gs_project+"' and Order_No ='"+as_invoiceno+"' and EDI_Batch_Seq_No ="+string(al_batchseq)

ldsOutboundExpansion.Create(SQLCA.SyntaxFromSQL(sql_syntax, "", ERRORS))
IF Len(Errors) > 0 THEN
		Messagebox('EDI_Outbound_Expansion', "Unable to create datastore for EDI_Outbound_Expansion .!~r~r" + Errors)
else
	ldsOutboundExpansion.SetTransObject(SQLCA)
	llRowCount = ldsOutboundExpansion.Retrieve()	
end if

For llRowPos =1 to llRowCount
	
	ll_ord_seq = ldsOutboundExpansion.getItemNumber( llRowPos, 'Order_Seq_No')
	ll_ord_line = ldsOutboundExpansion.getItemNumber( llRowPos, 'Order_Line_No')
	ls_user_line = ldsOutboundExpansion.getItemString( llRowPos, 'User_Line_Item_No')
	ls_ord_table = ldsOutboundExpansion.getItemString( llRowPos, 'Order_Table')
	ls_field_name = ldsOutboundExpansion.getItemString( llRowPos, 'Field_Name')
	ls_field_data = ldsOutboundExpansion.getItemString( llRowPos, 'Field_Data')
	ls_upload = ldsOutboundExpansion.getItemString( llRowPos, 'Upload')

	
	//Insert Record into OM_Expansion_Table
	Execute Immediate "Begin Transaction" using SQLCA;
		INSERT INTO EDI_Outbound_Expansion (Project_Id, EDI_Batch_Seq_No, Order_Seq_No, Order_Line_No, Order_No, 
				User_Line_Item_No, Order_Table, Field_Name, Field_Data, Upload)
			values ( :gs_project, :al_new_batchseq, :ll_ord_seq, :ll_ord_line, :as_invoiceno, 
				:ls_user_line, :ls_ord_table, :ls_field_name, :ls_field_data, :ls_upload )
		using sqlca;
		
		If sqlca.sqlcode <> 0 Then
			lsErrText = sqlca.sqlerrtext
			Execute Immediate "ROLLBACK" using SQLCA;
			Messagebox('EDI_Outbound_Expansion',"Unable to Insert Record into EDI_Outbound_Expansion .!~r~r" + lsErrText)
			Return -1
		End If
	
	Execute Immediate "COMMIT" using SQLCA;
	If sqlca.sqlcode <> 0 Then
		Execute Immediate "ROLLBACK" using SQLCA;
		MessageBox('EDI_Outbound_Expansion',"Unable to Commit changes! No changes made to Database!")
		Return -1
	End If

Next

destroy ldsOutboundExpansion
Return 0	
end function

public function string wf_is_pallet_allocated (string aspallet, datawindow adwpick, string aswhcode, string assku, string ascontainer);String lsFind, lsContainer, lsOrderNbr
Long llNbrAlloc, llOtherQty, llAllocQty, llFound, llNbrReq
Int liCSRows, liCSRow, liRowPos, liPickRow, liPickRows

u_ds_ancestor ldsCS

ldsCS = Create u_ds_ancestor
ldsCS.dataobject = 'd_content_summary_pallet'
ldsCS.SetTransObject(SQLCA)

lsOrderNbr = ""

//Check content summary for allocated units.  Cannot allow this pallet to be split while other orders are allocated.
liCSRows = ldsCS.Retrieve(gs_project,asWhCode, asSku, asPallet, asContainer, gsFootprintBlankInd)
If liCSRows > 0 Then
	//Loop through, removing unallocated rows
	For liCSRow = liCSRows to 1 step -1
		llAllocQty = ldsCS.GetItemNumber( liCSRow, 'alloc_qty') + ldsCS.GetItemNumber( liCSRow, 'tfr_out') + ldsCS.GetItemNumber( liCSRow, 'tfr_in') + ldsCS.GetItemNumber( liCSRow, 'wip_qty') + ldsCS.GetItemNumber( liCSRow, 'sit_qty')
		if llAllocQty = 0 Then ldsCS.deleterow( liCSRow)
	Next
End If

// Check CS for extra allocated stock
lsContainer = ''
liCSRows = ldsCS.Rowcount()
liPickRows = adwPick.Rowcount()
For liCSRow = 1 to liCSRows
	lsFind = "container_id = '" + ldsCS.GetItemString( liCSRow, "container_id" ) + "' "
	llFound = adwPick.Find( lsFind, 1, liPickRows )
	If llFound > 0 Then
		llNbrReq = adwPick.GetItemNumber(llFound, 'quantity')
		llNbrAlloc = ldsCS.GetItemNumber(liCSRow,'alloc_qty')
		If llNbrAlloc > llNbrReq Then	//Extra allocated to another order
			lsContainer = ldsCS.GetItemString(liCSRow,'container_id')
		End If
	Else
		lsContainer = ldsCS.GetItemString(liCSRow,'container_id')
	End If
Next

// If lsContainer is not blank, this pallet is allocated to another order.  Find the order nbr
If lsContainer <> '' Then
	
	select dm.invoice_no into :lsOrderNbr
	from delivery_master dm with (nolock), delivery_picking dp with (nolock)
	where dm.project_id = :gs_project and dp.do_no = dm.do_no
	and dm.ord_status not in ('C','D')
	and dp.po_no2 = :asPallet
	and dp.container_id = :lsContainer
	using sqlca;
	
	If lsOrderNbr = "" Then			//Must be SOC or ST
		select tm.user_field3 into :lsOrderNbr
		from transfer_master tm with (nolock), transfer_detail td with (nolock)
		where tm.project_id = :gs_project and td.to_no = tm.to_no and tm.ord_status not in ('C')
		and td.po_no2 = :asPallet and td.container_id = :lsContainer
		using sqlca;
	End If
		
End If
			
Destroy ldsCS


return lsOrderNbr
end function

public function integer wf_pick_pack_qty_validation (boolean lb_confirm_button_clicked);//19-MAR-2018 :Madhu DE3511 - Wrapped Pick Qty <> Pack Qty validation.
long ll_cnt, i, ll_owner_id, lllineitemno, llcompno, ll_row1, ll_row2, ll_row3, ll_prev_owner_id
long	llPrevLineItemNo, llprevcompno, ll_row, llfindrow, j, k, ll_pick_qty

string ls_sku, ls_supp_code, ls_loc, ls_serial, ls_lot, ls_po, ls_type, ls_order, lsMsg
string ls_coo, lszone, ls_po_no2, lscont, lsfind, ls_prev_sku, ls_prev_supp, ls_prev_serial
string ls_prev_po_no2, ls_prev_coo, ls_prev_lot, ls_prev_loc, ls_prev_po, ls_prev_type
string lsprev_cont,lsprevzone, ls_pack, ls_componant_ind,ls_prev_pack, ls_whcode
string ls_pick_coo, ls_pack_coo, ls_uf1			//DE15963
boolean lb_coo_mismatch 						//DE15963
datetime ldtexpdate, ldtprev_expdate
decimal ldserializedqty, ld_pack_qty, ld_pick_qty

Datastore ldsCompareCoo

ldsCompareCoo = Create Datastore
ldsCompareCoo.DataObject = 'd_do_compare'
ldsCompareCoo.SetTransObject(sqlca)

lb_coo_mismatch = FALSE

ids_compare.reset()
ls_order = idw_main.GetItemString(1,"do_no")

// 10/08/2010 - must default crossdock_ind since datawindow considers it required, even though it's not.
if isnull(idw_main.GetItemString(1, "crossdock_ind")) or trim(idw_main.GetItemString(1, "crossdock_ind")) ='' then
	idw_main.SetItem(1, 'crossdock_ind', 'N')
end if

//Jxlim 06/02/201
if isnull(idw_main.GetItemString(1, "ignore_shelflife_ind")) or trim(idw_main.GetItemString(1, "ignore_shelflife_ind")) ='' then
	idw_main.SetItem(1, 'ignore_shelflife_ind', 'N')
end if

//// Begin 01/25/2022 - S64720- Dinesh - Buy sell purchase order since datawindow considers it required, even though it's not.
if isnull(idw_main.GetItemString(1, "user_field21")) or trim(idw_main.GetItemString(1, "user_field21")) ='' then
	idw_main.SetItem(1, 'user_field21', '')
end if
//// End 01/25/2022 -S64720- Dinesh - Buy sell purchase order since datawindow considers it required, even though it's not.

doResetSupplierArrays()

If idw_main.AcceptText() = -1 Then 
	tab_main.SelectTab(1) 
	idw_main.SetFocus()
	return -1
End If

If idw_other.AcceptText() = -1 Then 
	tab_main.SelectTab(2) 
	idw_other.SetFocus()
	return -1
End If

If idw_detail.AcceptText() = -1 Then 
	tab_main.SelectTab(3) 
	idw_detail.SetFocus()
	return -1
End If

If idw_pick.AcceptText() = -1 Then
	tab_main.SelectTab(4) 
	idw_pick.SetFocus()
	return -1
End If

If idw_pack.AcceptText() = -1 Then
	tab_main.SelectTab(5) 
	idw_pack.SetFocus()
	return -1
End If

If tab_main.tabpage_serial.dw_Serial.AcceptText() = -1 then
	Return -1
End If

SetMicroHelp("Checking required fields...")

// Check required fields for master record
If f_check_required(is_title, idw_main) = -1 Then
	tab_main.SelectTab(1) 
	return -1
End If

// Check picking list records
ll_cnt = idw_pick.RowCount()
For i = 1 to ll_cnt /*each Pick*/
	
	SetMicroHelp("Checking picking list record " + String(i) + " of " + String(ll_cnt))
	
	ls_sku = idw_pick.GetItemString(i, "sku")
	ls_supp_code = idw_pick.GetItemString(i, "supp_code")
	ls_loc = idw_pick.GetItemString(i, "l_code")
	ls_serial = idw_pick.GetItemString(i, "serial_no")
	ls_lot = idw_pick.GetItemstring(i, "lot_no")	
	ls_po = idw_pick.GetItemstring(i, "po_no")	
	ls_type = idw_pick.GetItemstring(i, "inventory_type")	
	ll_owner_id = idw_pick.getitemnumber(i,'owner_id')
	llLineItemNo = idw_pick.getitemnumber(i,'line_item_no')
	llCompNo = idw_pick.getitemnumber(i,'Component_no')
	ls_coo = idw_pick.getitemstring(i,'country_of_origin')
	ls_uf1 = idw_pick.getitemstring(i,'user_field1') 	//DE15963
	lsZone = idw_pick.getitemstring(i,'Zone_ID')
	ls_po_no2 = idw_pick.getitemstring(i,'po_no2')
	lsCont = idw_pick.getitemstring(i,'container_ID')
	ldtExpDate = idw_pick.getitemDateTIme(i,'expiration_date')
	
	// pvh - 12/20/05
	if isNull( llLineItemNo ) or llLineItemNo = 0 then
		Messagebox(is_title,"Line Item Number Missing or Invalid in row " + string(i) +"!~r~n~r~nPlease enter a value for Line Item Number!", StopSign!)
		tab_main.selecttab(4)	
		idw_pick.setrow( i )
		idw_pick.scrolltorow(i)
		return -1
	end if
	
	//23-APR-2019 :Madhu S32603 Philips BlueHeart Don't Include Component Ind ='W' SKU's
	If idw_pick.GetItemString(i,'component_ind') = 'Y' or idw_pick.GetItemString(i,'component_ind') = 'N' Then
	//idw_pick.GetItemString(i,'component_ind') = 'W' Then

		// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier, 07/03 - Added 'A' for 'All suppliers equally, 'Y' = Primary first
		lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
		If g.is_allow_alt_supplier_pick = "N" Then
			lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
		End If
		
		ll_row1 = ids_compare.find(lsFind, 1,ids_compare.rowcount())
		
		if ll_row1 < 1 then
			ll_row2 = ids_compare.insertrow(0)
			ids_compare.setitem(ll_row2,'sku',ls_sku)
			ids_compare.setitem(ll_row2,'supp_code',ls_supp_code)
			ids_compare.setitem(ll_row2,'pick',idw_pick.getitemnumber(i,'quantity'))
			ids_compare.setitem(ll_row2,'line_item_no',llLineItemNo)
		else
			ids_compare.setitem(ll_row1,'pick',ids_compare.getitemnumber(ll_row1,'pick') + idw_pick.getitemnumber(i,'quantity'))
		end if
	End If
	
	// 10/00 PCONKL - Dont validate Component Children
	If idw_pick.GetItemString(i,'component_ind') = '*' or idw_pick.GetItemString(i,'component_ind') = 'B'  Then Continue
	
	//Quantiy must be > 0 
	If ((isnull(idw_pick.GetItemNumber(i,"quantity"))) or (not idw_pick.GetItemNumber(i,"quantity") > 0)) Then
		Messagebox(is_title,"Quantity Must be > 0!",StopSign!)
		tab_main.selecttab(4)
		f_setfocus(idw_pick, i, "quantity")
		return -1
	End If
	
	//If Outbound Serialized, sum up the qty so we can validate below if necessary
	//02/09 - PCONKL - added Type B to denote capture at IB and OB
	If idw_pick.GetItemString(i, "Serialized_Ind") = 'O' or idw_pick.GetItemString(i, "Serialized_Ind") = 'B' Then
		ldSerializedQty += idw_pick.GetItemNumber(i,"quantity")
	End If
	
	// Check for duplicate records
	If (ls_sku = ls_prev_sku and ls_prev_supp = ls_supp_code and ls_serial = ls_prev_serial and &
		ls_po_no2 = ls_prev_po_no2 and ll_owner_id = ll_prev_owner_id and ls_coo = ls_prev_coo and &
		ls_lot = ls_prev_lot and ls_loc = ls_prev_loc and ls_po = ls_prev_po and  ls_type = ls_prev_type and &
		llLineItemNo = llPrevLineItemNo) and 	lsCont = lsPRev_Cont and ldtExpDate = ldtPrev_expDAte and &
		llCompNo = llPrevCompNo  and lsZone = lsPrevZone Then
		
		Messagebox(is_title,"Found duplicate picking list item, please check!",StopSign!)
		tab_main.selecttab(4)
		f_setfocus(idw_pick, i, "sku")
		return -1
	End If
	
	// Check against order details
	// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier	
	If  idw_pick.GetItemString(i,'component_ind') = 'W' Then /* IF validating a free range child, validate parent SKU instead*/
	Else
		lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
		If g.is_allow_alt_supplier_pick = "N" Then
			lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
		End If
		
		ll_row = idw_detail.Find(lsFind, 1, idw_detail.RowCount())
		// 07/01 - PCONKL - If allowing pick of Alt SKU, Check against Alt SKU on detail
		If g.is_allow_alt_sku_Pick = 'Y' and ll_row < 1 Then
			lsFind =  "Upper(alternate_sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
			ll_row = idw_detail.Find(lsFind, 1, idw_detail.RowCount())
		End If
		
		If ll_row < 1 Then
			Messagebox(is_title,"Picking list item not found in order detail!",StopSign!)
			tab_main.selecttab(4)
			f_setfocus(idw_pick, i, "sku")
			return -1
		End If	
	
	End If /* not a free range child */
	
	ls_prev_sku = ls_sku
	ls_prev_serial = ls_serial
	ls_prev_loc = ls_loc
	ls_prev_lot = ls_lot
	ls_prev_po = ls_po
	ls_prev_type = ls_type
	ls_prev_supp = ls_supp_code
	ls_prev_po_no2 = ls_po_no2
	lsPrev_Cont = lsCont
	ldtPrev_ExpDate = ldtExpDate
	ll_prev_owner_id = ll_owner_id 
	ls_prev_coo = ls_coo
	llPrevLineItemNo = llLineItemNo
	llPrevCompNo = llCompNo
	lsPrevZone = lsZone
	
	//TimA 01/28/15 Pandora issue #859.  Changing Box ID's.  Need to reset the containerId  switch.
	//DE15963 add a row to ldsCompareCoo
	If gs_project = 'PANDORA' Then	
		If  idw_pick.GetItemstring(i, 'containerid_found')	<> '0' then
			idw_pick.SetItem(i,'containerid_found', '0') 
		end if
		ll_row3 = ldsCompareCoo.insertrow(0)	//DE15963
		ldsCompareCoo.setitem(ll_row3,'sku',ls_sku)
		ldsCompareCoo.setitem(ll_row3,'supp_code',ls_supp_code)
		ldsCompareCoo.setitem(ll_row3,'line_item_no',llLineItemNo)
		ldsCompareCoo.setitem(ll_row3,'pickcoo',ls_uf1)	
		ldsCompareCoo.setitem(ll_row3,'pick',ll_row3)  //Include in search
	End if
	
	//26-JAN-2018 :Madhu S15195 - Don't Allow Multiple Projects against same Line Item No - START
	IF upper(gs_project) ='PANDORA' THEN
		lsFind ="line_item_no ="+string(llLineItemNo) +" and Po_No <> '"+ls_po+"'"
		llFindRow =idw_pick.find( lsFind, 1, idw_pick.RowCount())
		If llFindRow > 0 Then
			Messagebox(is_title,"Multiple Project Codes cannot be saved on same Line Number: " + string(llLineItemNo), StopSign!)
			tab_main.selecttab(4)
			f_setfocus(idw_pick, i, "Po_No")
			return -1
		End If
	END IF
	//26-JAN-2018 :Madhu S15195 - Don't Allow Multiple Projects against same Line Item No - END
	
Next /*Next Pick Record*/

ibPackModified = False

// Checking packing list records
idw_pack.Sort()
ll_cnt = idw_pack.RowCount()
ll_row = 1
For i = 1 to ll_cnt 
	SetMicroHelp("Checking packing list record " + String(i) + " of " + String(ll_cnt))
	ls_sku = idw_pack.GetItemString(i, "sku")
	ls_supp_code = idw_pack.GetItemString(i, "supp_code")
	ls_pack = idw_pack.GetItemString(i, "carton_no")
	ls_coo = idw_pack.GetItemString(i, "country_of_Origin")
	llLineItemNo = idw_pack.GetITemNumber(i,'line_item_no')
	
	//S20849 Add lsPackContainer to duplicate check.  
	string lsPackLotNo, lsPackPoNo, lsPackPoNo2, lsPrevPackLotNo, lsPrevPackPoNo, lsPrevPackPoNo2
	datetime ldtPackExpDate, ldtPrevPackExpDate
	string lsPackContainerId, lsPrevPackContainerId
	
	lsPackLotNo = idw_pack.GetITemString(i,'pack_lot_no')
	lsPackPoNo = idw_pack.GetITemString(i,'pack_po_no')
	lsPackPoNo2 = idw_pack.GetITemString(i,'pack_po_no2')
	ldtExpDate = idw_pack.GetITemDateTime(i,'pack_expiration_date')
	lsPackContainerId = idw_pack.GetITemString(i,'pack_container_id')
	
	//08/16 - PCONKL - Make sure Lot is populated for Kendo
	If gs_project = 'KENDO' Then
		If lsPackLotNo = "" Then
			Messagebox(is_title,"Batch Code is required. Enter '-' if no batch code.",StopSign!)
			f_setfocus(idw_pack, i, "pack_lot_no")
			return - 1
		End If
	End If
	
	// 11/03 - PCONKL - Make Sure Supplier is present
	If isnull(ls_supp_code) or ls_supp_code = '' Then
		Messagebox(is_title,"Supplier must be present!", StopSign!)
		tab_main.selecttab(5)
		f_setfocus(idw_pack, i, "supp_code")
	End If

	ls_componant_ind=idw_pack.GetItemString(i,'component_ind')
	IF ls_componant_ind = '' or ISNULL(ls_componant_ind) THEN 
		ls_componant_ind = 'N'
		idw_pack.object.component_ind[i] = 'N'
		idw_pack.Accepttext()
	END IF	
	
	long ld_pack_qty1
	If ls_componant_ind = 'Y' or ls_componant_ind = 'N' or ls_componant_ind = 'W' Then
		// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier
		lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
		If g.is_allow_alt_supplier_pick = "N" Then
			lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
		End If
		// Begin - Dinesh - 08/02/2024- SIMS-497-Google SIMS Packing list saving issue.
		if gs_project='PANDORA' then
				ld_pack_qty=idw_pack.getitemnumber(i,'quantity')
				if ld_pack_qty= 0 then
					//Messagebox(is_title,"Packing inventory quantity can not be Null or 0, please check!", StopSign!)
					Messagebox(is_title,"Packing inventory quantity can not be Null or 0, please check!")
					return -1
				end if
		end if
		// End - Dinesh - 08/02/2024- SIMS-497-Google SIMS Packing list saving issue.
		ll_row1 = ids_compare.find(lsFind, 1,ids_compare.rowcount())
	
		if ll_row1 < 1 then
			Messagebox(is_title,"Packing inventory Does not exist in picking list, please check!", StopSign!)
			tab_main.selecttab(5)
			f_setfocus(idw_pack, i, "sku")
		else
			if isnull(ids_compare.getitemnumber(ll_row1,'pack')) then
				ld_pack_qty=idw_pack.getitemnumber(i,'quantity')
				ids_compare.setitem(ll_row1,'pack',ld_pack_qty)
				ld_pack_qty1=ld_pack_qty+ld_pack_qty1
			else
				ids_compare.setitem(ll_row1,'pack',ids_compare.getitemnumber(ll_row1,'pack') + idw_pack.getitemnumber(i,'quantity'))
				ld_pack_qty1=ld_pack_qty+ld_pack_qty1
			end if
		end if
	
	End If 
	
	// Check for duplicate records
	If ls_sku = ls_prev_sku and ls_prev_supp = ls_supp_code and ls_pack = ls_prev_pack and llLineItemNo = llPrevLineItemNo and ls_coo = ls_Prev_Coo  and lsPackLotNo = lsPrevPackLotNo  and lsPackPoNo = lsPrevPackPoNo  and lsPackPoNo2 = lsPrevPackPoNo2  and ldtPackExpDate = ldtPrevPackExpDate and lsPackContainerId = lsPrevPackContainerId Then
		Messagebox(is_title,"Found duplicate packing list, please check!", StopSign!)
		tab_main.selecttab(5)
		f_setfocus(idw_pack, i, "carton_no")
		return -1
	End If
	
	//2/01 PCONKL - Validate against Pick LIst to pick up Component Children in validation
	// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier
	lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
	If g.is_allow_alt_supplier_pick = "N" Then
		lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
	End If
	
	ll_row = idw_Pick.Find(lsFind, 1, idw_pick.RowCount())
	If ll_row < 1 Then
		Messagebox(is_title,"Packing list item not found in order detail!",StopSign!)
		tab_main.selecttab(5)
		f_setfocus(idw_pack, i, "sku")
		return -1
	End If		
	
	//GailM 6/22/2020 DE15963 Google COO on picklist is not updating on the packing list	ls_prev_sku = ls_sku
	//GailM 10/13/2020 DE18105 Added pickcoo to find statement
	lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
	lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "' and Upper(pickcoo) = '" + ls_coo + "' "
	ll_row = ldsCompareCoo.Find(lsFind, 1, ldsCompareCoo.RowCount())		//Start search at i for multiple pick rows per line item
	If ll_row > 0 Then
		ldsCompareCoo.setitem(ll_row,'packcoo',ls_coo)
	End If
	
	ls_prev_pack = ls_pack
	ls_prev_supp = ls_supp_code
	ls_prev_coo = ls_coo
	llPrevLineItemno = llLineItemNo
	
	lsPrevPackLotNo = lsPackLotNo
	lsPrevPackPoNo = lsPackPoNo
	lsPrevPackPoNo2 = lsPackPoNo2
	ldtPrevPackExpDate = ldtPackExpDate
	lsPrevPackContainerId = lsPackContainerId
	
	//BCR 28-NOV-2011 : Lot_Nbr is reqd for Geistlich Pack List
	String lsLotNbr
	
	IF gs_project = "GEISTLICH" THEN
		lsLotNbr = idw_pack.getitemstring(i, "user_field1")
		IF IsNull(lsLotNbr) OR lsLotNbr  ='' THEN 
			MessageBox(is_title,'Lot Nbr is required. Please enter a value.')
			tab_main.SelectTab(5)
			f_setfocus(w_do.idw_pack,i,"user_field1")
			SetMicroHelp("Save failed!")
			Return - 1
		END IF
	End IF
NEXT

// Validate picking records
ll_cnt = idw_pick.RowCount()
ls_whcode = idw_main.getitemstring(1,'wh_code')

For i = 1 to ll_cnt
	j = 0
	
	// 10/00 PCONKL - Dont validate Component Children
	If idw_pick.GetItemString(i,'component_ind') = '*' or idw_pick.GetItemString(i,'component_ind') = 'B' or idw_pick.GetItemString(i,'component_ind') = 'W' Then Continue
	
	If IsNull(idw_pick.GetItemString(i, "do_no")) Then
		idw_pick.SetItem(i, "do_no", idw_main.GetItemString(1, "do_no"))
	End If
	ls_sku = idw_pick.GetItemString(i, "sku")
	ls_supp_code = idw_pick.GetItemString(i, "supp_code")
	
	// 07/02 - Pconkl - Don't include supplier in find if we're allowing pick by Alt Supplier
	lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "'"
	If g.is_allow_alt_supplier_pick = "N" Then
		lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"
	End If
	
	j = idw_detail.Find(lsFind, j, idw_detail.RowCount())
	
	If j > 0 Then
		k = 0
		If idw_pick.GetItemString(i, "sku_pickable_ind") = 'Y' Then /*if sku is non pickable, location will be set to N/A - dont validate*/
			ls_loc = idw_pick.GetItemString(i, "l_code")
			If ls_loc = '' or  IsNull(ls_loc) Then
				MessageBox(is_title, "Location is required!", StopSign!)	
				tab_main.SelectTab(4) 
				f_setfocus(idw_pick, i, "l_code")
				Return -1				
			End If
		End If /* Pickable SKU*/
	End If
NEXT

// Validate picking records quantity match packing records'
IF ( idw_pack.RowCount() >0)  Then

	For i = 1 to ids_compare.rowcount()
	
		ld_pick_qty=ids_compare.getitemnumber(i,'pick')
		ld_pack_qty=ids_compare.getitemnumber(i,'pack')
		
		if isnull(ld_pack_qty) then ld_pack_qty =0
		if isnull(ld_pick_qty) then ld_pick_qty =0
		if (ld_pack_qty <>  ld_pick_qty) then
			// 01/05 - PCONKL - For a 3COM bundled parent, ignore -
			If Upper(gs_Project) = '3COM_NASH' Then
				If idw_pick.Find("Upper(SKU) = '" + Upper(ids_compare.getitemString(i,'sku')) + "' and grp = 'B'",1, idw_pick.RowCount()) > 0 Then
				Else
					MessageBox(is_title, "Packing Quantity is not Equal to that of picking, please check! Sku = " + ids_compare.getitemString(i,'sku') + ", Pick = " + String(ids_compare.getitemnumber(i,'pick')) + ", pack = " + String(ld_pack_qty), StopSign!)	
					tab_main.SelectTab(5) 
					Return -1
				End IF
			Else
			
				// 12/11 - PCONKL - Allow Nike to save short, we will validate at confirmation...
				// 08/16 - PCONKL - Added Kendo (and removed Nike) - building Pack List one record at a time
				If UPPER(gs_project) = 'RIVERBED' OR  UPPER(gs_project) ='KENDO'  OR UPPER(gs_project) = 'COTY' then
				
				//24-APR-2019 :Madhu S32730 Picking and Packing Quantity Validation
				//If confirm button clicked, it is a hard stop else soft stop.
				elseIf lb_confirm_button_clicked then
					icb_ci_load_tender.enabled =false
					MessageBox(is_title, "Packing Quantity is not Equal to that of picking, please check! Sku = " + ids_compare.getitemString(i,'sku') + ", Pick = " + String(ids_compare.getitemnumber(i,'pick')) + ", pack = " + String(ld_pack_qty), StopSign!)	
					tab_main.SelectTab(5) 
					Return -1
				else
					icb_ci_load_tender.enabled =false
					MessageBox(is_title, "Packing Quantity is not Equal to that of picking, please check! Sku = " + ids_compare.getitemString(i,'sku') + ", Pick = " + String(ids_compare.getitemnumber(i,'pick')) + ", pack = " + String(ld_pack_qty), StopSign!)	
				End If
			End If
		END IF
   NEXT
END IF

//GailM 6/22/2020 DE15963 Google COO on picklist is not updating on the packing list
For i = 1 to ldsCompareCoo.rowcount()
	ls_pick_coo = ldsCompareCoo.getitemstring(i,'pickcoo')
	ls_pack_coo = ldsCompareCoo.getitemstring(i,'packcoo')
	If ls_pick_coo <> ls_pack_coo Then 
		lb_coo_mismatch = TRUE
	End If
Next

//nxjain 07232016
IF ( idw_pack.RowCount() >0)  Then

	IF gs_project ='RIVERBED' Then
		Select SUM(Quantity) into :ll_pick_qty
		from Delivery_Picking with(nolock)  where DO_No =:ls_order and Component_Ind <>'W' ;
		IF ( ld_pack_qty1 <> ll_pick_qty ) then
			MessageBox(is_title, "Packing Quantity is not Equal to that of picking, please check!")	
			tab_main.SelectTab(5) 
			Return -1
		END IF
	END IF

	//16-MAY-2019 :Madhu S33666 Picking and Packing Container Quantity Validation
	IF upper(gs_project)='PANDORA' THEN
		IF wf_pick_pack_container_qty_validation(lb_confirm_button_clicked, false, false) < 0 Then Return -1
		If lb_coo_mismatch Then 
			lsMsg   = "Country of Origin mismatch between picking and packing.~n~r"
			lsMsg += "Please re-generate the packing list and update COOs.~n~r~n~r"
			lsMsg += "Order has not been saved."
			MessageBox(is_title, lsMsg, Stopsign!)
			Return -1		//F24563 make this a stop message to re-generate packing list	//DE15963 was a warning only
		End If
	END IF
	
END IF
//Nxjain 06032016 

SetMicroHelp("Validation complete!")

Return 0

end function

public function integer wf_pick_pack_qty_comparision ();//24-APR-2019 :Madhu S32730 Picking and Packing Quantity Validation
long ll_row, llPickQty, llPackQty, ll_cnt
long llLineItemNo, llPickFindRow, llPackFindRow
string ls_sku, ls_supp_code, lsFind

IF ids_compare.rowcount( ) > 0 THEN

	For ll_row = 1 to ids_compare.rowcount()
		llPickQty=ids_compare.getitemnumber(ll_row,	'pick')
		llPackQty=ids_compare.getitemnumber(ll_row, 'pack')
		
		IF isnull(llPackQty) THEN llPackQty =0
		IF isnull(llPickQty) THEN llPickQty =0
	
		IF (llPackQty <>  llPickQty) THEN
			If not (UPPER(gs_project) = 'RIVERBED' OR  UPPER(gs_project) ='KENDO'  OR UPPER(gs_project) = 'COTY') then
				MessageBox(is_title, "Packing Quantity is not Equal to that of picking, please check! Sku = " + ids_compare.getitemString(ll_row, 'sku') + ", Pick = " + String(ids_compare.getitemnumber(ll_row, 'pick')) + ", pack = " + String(llPackQty), StopSign!)	
				tab_main.SelectTab(5) 
				Return -1
			End If
		END IF
	NEXT

ELSE
	
	//sort pick records by Line Item No, SKU
	idw_pick.setsort( "Line_Item_No A, SKU A")
	idw_pick.sort( )
	ll_cnt = idw_pick.RowCount()

	For ll_row = 1 to ll_cnt
		ls_sku = idw_pick.GetItemString(ll_row, "sku")
		ls_supp_code = idw_pick.GetItemString(ll_row, "supp_code")
		llLineItemNo = idw_pick.getitemnumber(ll_row,'line_item_no')
	
		IF idw_pick.GetItemString(ll_row,'component_ind') = 'Y' or idw_pick.GetItemString(ll_row,'component_ind') = 'N' THEN
	
			lsFind =  "Upper(sku) = '" + Upper(ls_sku) +  "' and Line_item_no = " + string(llLIneItemNo)
			If g.is_allow_alt_supplier_pick = "N" Then	lsFind += 	" and Upper(supp_code) = '" + Upper(ls_supp_code) + "'"

			llPickQty =0
			llPickFindRow = idw_pick.find( lsFind, 0, ll_cnt)

			DO WHILE llPickFindRow > 0 
				llPickQty += idw_pick.getItemNumber(llPickFindRow, 'quantity')
				ll_row =llPickFindRow
				llPickFindRow = idw_pick.find( lsFind, llPickFindRow+1, ll_cnt+1)
			LOOP
			
			//get appropriate Pack Record
			llPackQty =0
			llPackFindRow = idw_pack.find( lsFind, 0, idw_pack.rowcount())

			DO WHILE llPackFindRow > 0 
				llPackQty += idw_pack.getItemNumber(llPackFindRow, 'quantity')
				llPackFindRow = idw_pack.find( lsFind, llPackFindRow+1,idw_pack.rowcount()+1)
			LOOP
			
			IF (llPackQty <>  llPickQty) THEN
				If not (UPPER(gs_project) = 'RIVERBED' OR  UPPER(gs_project) ='KENDO'  OR UPPER(gs_project) = 'COTY') then
					MessageBox(is_title, "Packing Quantity is not Equal to that of picking, please check! Sku = " + ls_sku + ", Pick = " + String(llPickQty) + ", Pack = " + String(llPackQty), StopSign!)	
					tab_main.SelectTab(5) 
					Return -1
				End If
			END IF			
		END IF
	NEXT
END IF

//re-set sort
idw_pick.setsort( " ")
idw_pick.sort( )
ll_cnt = idw_pick.RowCount()

Return 0
end function

public function integer wf_pick_pack_container_qty_validation (boolean lb_confirm_button_clicked, boolean lb_pack_print_button_clicked, boolean lb_ci_button_clicked);//15-MAY-2019 :Madhu S33666 F16103 Pack List validations for container tracked items
string ls_pick_sku, ls_pick_container_id, ls_pick_find, ls_pack_find, ls_prev_pick_find, ls_container_tracking_ind	
long ll_pick_row, ll_pick_line_item_no, ll_pack_qty, ll_pick_find_row, ll_pick_qty, ll_pack_find_row
//string ls_pick_pono2 - Commented out - DE13014 OCT-2019 - MikeA - Error on Container/Qty validation on Packing

IF idw_pack.rowcount( ) > 0 THEN
	
	For ll_pick_row =1 to  idw_pick.rowcount( )	

		ls_pick_sku = idw_pick.getItemString(ll_pick_row, 'sku')
		ll_pick_line_item_no = idw_pick.getItemNumber(ll_pick_row, 'line_item_no')
		ls_pick_container_id = idw_pick.getItemString( ll_pick_row, 'container_id')
//		ls_pick_pono2 = idw_pick.getItemString( ll_pick_row, 'po_no2') Commented out - DE13014 OCT-2019 - MikeA - Error on Container/Qty validation on Packing
		ls_container_tracking_ind = idw_pick.getItemString(ll_pick_row, 'container_tracking_Ind')
		
		//pick find
		ls_pick_find = "sku='"+ls_pick_sku+"' and line_item_no="+string(ll_pick_line_item_no)+" and container_id ='"+ls_pick_container_id+"'"
		
		IF NOT (IsNull(ls_pick_container_id) or ls_pick_container_id='-' or ls_pick_container_id='NA' or ls_pick_container_id ='DUMMY')  and ls_container_tracking_ind ='Y' and ls_prev_pick_find <> ls_pick_find THEN
			
			//reset values
			ll_pick_qty =0
			ll_pack_qty =0
			
			//get sum(qty) of sku, container_Id from Pick
			ll_pick_find_row = idw_pick.find( ls_pick_find, 1, idw_pick.rowcount())
			
			DO WHILE ll_pick_find_row > 0
				ll_pick_qty += idw_pick.getItemNumber(ll_pick_find_row, 'quantity')
				ll_pick_find_row = idw_pick.find( ls_pick_find, ll_pick_find_row +1, idw_pick.rowcount() +1)
			LOOP
			
			//get qty of sku, container_Id from Pack
			ls_pack_find = "sku='"+ls_pick_sku+"' and line_item_no="+string(ll_pick_line_item_no)
//			Removed po_no2 DE13014 OCT-2019 - MikeA - Error on Container/Qty validation on Packing
			ls_pack_find += " and (pack_container_id ='"+ls_pick_container_id+"') "
//			ls_pack_find += " and (pack_container_id ='"+ls_pick_container_id+"' or pack_container_id = '" + ls_pick_pono2 + "') " 

			//get sum(qty) of sku, container_Id from Pack
			
			ll_pack_find_row = idw_pack.find( ls_pack_find, 1, idw_pack.rowcount())
			
			//DE13014 OCT-2019 - MikeA - Error on Container/Qty validation on Packing
			//Need to loop thru if there are multiple pack rows.
		
//			IF ll_pack_find_row > 0 THEN
//				ll_pack_qty = idw_pack.getItemNumber( ll_pack_find_row, 'quantity')
//			ELSE
//				ll_pack_qty =0
//			END IF
			

			DO WHILE ll_pack_find_row > 0
				ll_pack_qty += idw_pack.getItemNumber( ll_pack_find_row, 'quantity')
				ll_pack_find_row =  idw_pack.find( ls_pack_find, ll_pack_find_row +1, idw_pack.rowcount() +1)
			LOOP
			
			
			ls_prev_pick_find = ls_pick_find
			
			//compare Quantities
			IF  ll_pack_qty <> ll_pick_qty THEN
				
				//If confirm button clicked /pack print button clicked, it is a hard stop else soft stop.
				IF lb_confirm_button_clicked OR lb_pack_print_button_clicked OR lb_ci_button_clicked THEN
					icb_ci_load_tender.enabled =false
					MessageBox(is_title, "Quantities are mismatch against Container Id = " + ls_pick_container_id + ", Sku = " + ls_pick_sku + ", Pick Qty = " + String(ll_pick_qty)+", Pack Qty ="+string(ll_pack_qty), StopSign!)
					f_SetFocus(idw_pack, ll_pack_find_row, "pack_container_id")
					tab_main.SelectTab(5)
					Return -1
				ELSE
					icb_ci_load_tender.enabled =false
					MessageBox(is_title, "Quantities are mismatch against Container Id = " + ls_pick_container_id + ", Sku = " + ls_pick_sku + ", Pick Qty = " + String(ll_pick_qty)+", Pack Qty ="+string(ll_pack_qty), StopSign!)
				END IF
			END IF
		END IF
	NEXT

END IF

Return 0
end function

public function integer wf_check_pack_predelete_validation (integer airowind[]);Int liRtn, liRows, i
Integer liRowInd[]
liRtn = 0

liRowInd = aiRowInd
liRows = Upperbound(liRowInd)

If tab_main.tabpage_pack.cbx_show_comp_pack.Enabled and tab_main.tabpage_pack.cbx_show_comp_pack.Checked = False Then
	Messagebox(is_title,'You must show components before you can delete any rows.')
	liRtn = -1
End If

//09/05 - PCONKL - Can't delete a row that was shipped by TRAX until it is voided
For i = 1 to liRows
	If idw_pack.GetItemString( i, 'tracking_id_Type') = 'T' Then
		//Messagebox(is_title,"Carton at row " + String(i) + " has been shipped by TRAX.~rYou must Void the carton before you can delete it.",StopSign!)
		Messagebox(is_title,"Carton at row " + String(i) + " has been shipped by ConnectShip.~rYou must Void the carton before you can delete it.",StopSign!)//Dinesh - 02/06/2025- SIMS-641-Development for Delivery Order screen change for ConnectShip 
		liRtn = -2
		continue
	End If
Next

//12/15 - PCONKL - Cant delete a row if currently being packed by mobile
For i = 1 to liRows
	If idw_Pack.GetItemString( i, 'mobile_status_ind') = 'P' or idw_Pack.GetItemString(i, 'mobile_status_ind') = 'X'  Then
		Messagebox(is_title,"Carton at row " + String(i)  + " is actively being packed on a mobile device. It cannot currently be deleted.",StopSign!)
		liRtn = -3
		continue
	End If
Next

//TAM 2018/10/29 - S24556 - DE1019- Prevent Rema from Deleting the packlist
//MikeA - 3/2020 - DE14755 - Added Kendo
For i = 1 to liRows
	If (gs_project = 'REMA' OR gs_project = 'KENDO')  and idw_pack.GetItemString( i, 'pack_sscc_no')  <> '' and not isnull(idw_pack.GetITemString( i, 'pack_sscc_no')) Then
		Messagebox(is_title, "Cannot Delete the PackRow at row " + String(i) + ". The SSCC numbers have already been created.",Stopsign!)
		liRtn = -4
		continue
	End If
Next

return liRtn

end function

public function integer wf_riverbed_enable_serial_tabpage ();
// 2019/08 - MikeA - S36602 - I2406 - Riverbed - SKU scanning validation

string lsStatus, lsFind
integer li_idx 
long ll_Find 

lsStatus = idw_main.GetItemString(1,"ord_status")


ll_Find =   idw_Detail.Find(lsFind + " serialized_ind = 'O' and (IsNull(user_field5)   OR (long(user_field5) < alloc_qty)) " ,1,idw_Detail.RowCount())

	
//Serialized_Ind

Choose Case lsStatus

Case "N" 
	tab_main.tabpage_serial.enabled = false
Case "P", "I", "A","Q"
	
	if  idw_detail.RowCount() <= 0 then
		tab_main.tabpage_serial.enabled = false
		return 0
	end if
		
	ll_Find =   idw_Detail.Find(lsFind + " Serialized_Ind = 'O' and (IsNull(user_field5)  OR (long(user_field5) < alloc_qty)) " ,1,idw_Detail.RowCount())

	
	if ll_Find > 0 AND tab_main.tabpage_serial.dw_serial.RowCount() <= 0 then
		tab_main.tabpage_serial.enabled = false
	else
		tab_main.tabpage_serial.enabled = true	
	end if 
	
	return 0
	
	
CASE "C" , "D", "R","Z"
	tab_main.tabpage_serial.enabled = true
CASE "V", "H"
	tab_main.tabpage_serial.enabled = true
END CHOOSE

return 0
end function

public function string getlocationtype (string aswhcode, string aslocation);String lsLocType

SELECT  l_type INTO :lsLocType
	FROM Location with (nolock)
	WHERE wh_code = :aswhcode
	AND   L_Code = :aslocation
	USING SQLCA;

If IsNull(lsLocType) Then lsLocType = ''

Return lsLocType
end function

public function string addcomma (string asinput, string asallinput);//GailM 7/1/2020 S47390 Add a comma to the end of the string if data is already there
String lsComma, lsSpace

lsComma = ","
lsSpace = " "
If Len(asAllInput) > 0 Then
	If pos(asAllInput,asInput) = 0 Then
		asAllInput = asAllInput + lsComma + lsSpace + asInput
		asAllInput = f_sort_string(asAllInput,lsComma)
	End If
Else
	asAllInput = asInput
End If

Return asAllInput
end function

protected function integer uf_print_a4_label ();//Jxlim 05/27/2014 Print A4 label  Funai TPV and SG-MUSER

Str_Parms	lstrparms
Datastore lds_label,  lds_Labela4_ext, ldsNotes
Long	i,n, llRowCount, llRowPos, 	llPrintJob,  llLabelPos, llBeginRow, llEndRow, llLabelCount, llnotesCount, llMax
String	lsPrintText, lsShipFormat, lsSKUFormat, lsCarton, lsCartonSave, lsOEMFormat, lsCustomer, lsNullLabel[]
String ls_dono, ls_Invoice,ls_custname, ls_notes, ls_remark, lsnooflabel, lsSkuQty, ls_reqDate

If idw_Main.RowCount() = 0 Then Return 0

If ib_changed then
	Messagebox('Print A4 label','Please save your changes first.')
	Return 0
End If

ls_dono = idw_main.GetItemString(1,"do_no")     
ls_Invoice =  idw_main.GetItemString(1,"invoice_no")  
ls_custname = idw_main.GetItemString(1, "cust_name")		
ls_ReqDate = String( idw_main.GetItemDateTime(1,"Request_Date"), 'dd-mmmm-yyyy') 
ls_remark= idw_other.GetItemString(1, "remark")		

//Label datastore
lds_label = Create Datastore
lds_label.dataobject = 'd_a4_label_unicode'
lds_label.SetTransObject(SQLCA)

llRowCount = lds_label.Retrieve(gs_project,ls_dono)
If llRowCount = 0 Then Return 0

//Note_text from Delivery_notes table (DO Order Info Screen)
ldsNotes = Create Datastore
ldsNotes.dataobject = 'd_dono_notes'
ldsNotes.SetTransObject(SQLCA)

lds_labela4_ext = CREATE datastore
lds_labela4_ext.dataobject = "d_a4_label_unicode_ext"
lds_labela4_ext.Modify("DataWindow.Print.quality=1")

//Jxlim 05/28/2014 Need this to open w_label_print_options
OpenWithParm(w_label_print_options,lStrParms)
Lstrparms = Message.PowerObjectParm		  
If lstrParms.Cancelled Then
	Return 0
End If
				
lsPrintText = gs_project +  ' Shiping Labels'

//Open Printer File 
llPrintJob = PrintOpen(lsPrintText)
	
If llPrintJob <0 Then 
	Messagebox('Labels', 'Unable to open Printer file. Labels will not be printed')
	Return 0
End If

 
//Concatenate Note_text from Delivery_notes table for all rows for a single order
If llRowCount > 0 Then
	ldsNotes.Retrieve(gs_project,ls_dono)	
	llNotesCount = ldsNotes.Rowcount()	
	If llNotesCount > 0 Then
		ls_notes = ''
		For n= 1 to llNotesCount
			ls_notes += ldsNotes.GetItemString(n, "note_text") + "~t"
		Next
	End If
End if

Integer liRow, liMax, liCount
Decimal  ldLabelCount
//Print carton content label for last/only carton
If llRowCount > 0 Then   //max 6 sku per label	
	limax = 6
	ldLabelCount=llRowCount/liMax	
	ldLabelCount= Ceiling(ldLabelCount)    //Round up to determine Number of label to print
	
	For liRow=1 to ldLabelCount     //Number of label to print
			lds_labela4_ext.InsertRow(0)
			
			lsSkuQty = ''
			liCount = 0
			n= i + 1	
			For i= n To  llrowcount //Go to next label(ldLabelCount) when it reached 6 max rows; //6 SKU is limit per label		
				//“DVP3500K/98-10-(PCE)” should be “DVP3500K/98 – (10 PCE)”	
				//Take note of the white spaces between SKU, hyphen, parentheses, qty, UOM, etc.
					lsSkuQty +=Trim(lds_label.getitemstring(i,"sku"))  + " - ("						
					lsSkuQty += String(lds_label.GetItemNumber(i, "req_qty")) + " "	
					lsSkuQty +=Trim(lds_label.getitemstring(i,"uom"))  + ")~r"	
				licount ++
				If licount = limax Then Exit
			Next
		
			lds_labela4_ext.SetItem(liRow, "cust_name", ls_custname)
			lds_labela4_ext.SetItem(liRow,"note_text",  ls_notes)
			lds_labela4_ext.SetItem(liRow,"invoice_no",  ls_invoice)		
			lds_labela4_ext.SetItem(liRow,"req_Date",  ls_reqdate)		
			lds_labela4_ext.SetItem(liRow,"remark",  ls_remark)		
			lds_labela4_ext.SetItem(liRow,"skuqty",  lsSkuQty)	
			
			lsnoofLabel = String(liRow) +" /  " + String(ldLabelCount)
			lds_labela4_ext.SetItem(liRow, "LabelCount", lsnoofLabel)	
						
		//	PrintDataWindow (llPrintJob, lds_labela4_ext )			
	Next
		PrintDataWindow (llPrintJob, lds_labela4_ext )	
End If
	
PrintClose(llPrintJob)		

DESTROY lds_label;
DESTROY lds_labela4_ext;
DESTROY ldsNotes;

Return 0
end function

public subroutine f_crossdock ();//// dinesh - 02/03/2021- S52817 -Google - SIMS - SAP Conversion - GUI
//
//string ls_User_field16,ls_User_field18,ls_order
//ls_order=tab_main.tabpage_main.sle_order.text
//select User_field16,User_field18 into :ls_User_field16, :ls_User_field18 from delivery_master where invoice_no=:ls_order and project_id=:gs_project;
//	if   (isnull(ls_User_field16) or ls_User_field16= '') and (not isnull(ls_User_field18) or ls_User_field18<> '') then
//			idw_main.SetItem(1, "crossdock_ind",'N')
//	elseif   (isnull(ls_User_field16) or ls_User_field16= '') and (isnull(ls_User_field18) or ls_User_field18= '') then
//			idw_main.SetItem(1, "crossdock_ind",'N')
//	elseif   (not isnull(ls_User_field16) or ls_User_field16 <>'') and (isnull(ls_User_field18) or ls_User_field18= '') then
//			idw_main.SetItem(1, "crossdock_ind",'Y')
//	elseif  (not isnull(ls_User_field16) or ls_User_field16 <>'') and (not isnull(ls_User_field18) or ls_User_field18 <> '') then
//			idw_main.SetItem(1, "crossdock_ind",'Y')
//end if
end subroutine

public subroutine wf_set_carton_type ();string ls_pack_po_no2
long k,ll_line_item_pack,ll_line_item_pick,j

// Begin Dinesh - 06222022- S72575 Google - SIMS - Outbound Processing Changes (Carton_Type / Pack_PO_NO2 portion)
//Begin - Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
	if upper(gs_project) = 'PANDORA' then
		
		for k=1 to idw_Pack.rowcount()
			ll_line_item_pack=idw_Pack.GetItemnumber(k, "line_item_no")
			 for j =1 to idw_pick.rowcount()
				ll_line_item_pick=idw_pick.GetItemnumber(j, "line_item_no")
				if ll_line_item_pack= ll_line_item_pick then
						ls_pack_po_no2=idw_pick.GetItemString(j, "po_no2")
					
				end if

		if ls_pack_po_no2= "" then
			
			setnull(ls_pack_po_no2)
			
		end if
		//commented the above line - End - Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
		//if  ((ls_Pack_Po_No2 <> "" or not isnull(ls_Pack_Po_No2))  then
		if  (ls_Pack_Po_No2 <> "" or not isnull(ls_Pack_Po_No2) ) then //Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
			idw_Pack.object.carton_type[k]='Pallet'
		end if
		if  (ls_Pack_Po_No2 = '-') then
			
			idw_Pack.object.carton_type[k]=''
		end if
			
		if  (ls_Pack_Po_No2 = "" or  isnull(ls_Pack_Po_No2)) then //Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
			idw_Pack.object.carton_type[k]=''
		end if
		
		next
		
	next
		
	end if
		
		// End Dinesh - 06222022- S72575 Google - SIMS - Outbound Processing Changes (Carton_Type / Pack_PO_NO2 portion)

end subroutine

public subroutine wf_delivery_order_readonly (boolean ab_read);
if ab_read=True then
	idw_other.object.datawindow.readonly = 'yes'
	idw_main.object.datawindow.readonly = 'yes'
	idw_detail.object.datawindow.readonly = 'yes'
	idw_pick.object.datawindow.readonly = 'yes'
	idw_pack.object.datawindow.readonly = 'yes'
	idw_serial.object.datawindow.readonly = 'yes'
	tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_bt.dw_bt.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_it.dw_it.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_st.dw_st.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_trax_3rd_party.dw_trax_3rd_party.Enabled = False
	tab_main.tabpage_main.tab_address.tabpage_rt.dw_rt.Enabled = False 	
	tab_main.tabpage_detail.sle_verify.enabled=False
	tab_main.tabpage_serial.cb_undo.enabled = False
	tab_main.tabpage_serial.cb_generate_ob_serial.enabled = False
	tab_main.tabpage_serial.cb_ob_serial_insert.enabled = False
	tab_main.tabpage_serial.cb_new_carton.enabled = False
	tab_main.tabpage_serial.cb_copy_serial.enabled = False
	tab_main.tabpage_serial.cb_ob_serial_delete.enabled = False
	tab_main.tabpage_serial.cbx_print_labels.enabled = False
	tab_main.tabpage_serial.rb_manual.enabled = False
	tab_main.tabpage_serial.rb_barcode.enabled = False
	tab_main.tabpage_pack.cb_print_dn.enabled = False
	tab_main.tabpage_pack.cb_pack_generate.enabled = False
	tab_main.tabpage_pack.cb_pack_insert.enabled = False
	tab_main.tabpage_pack.cb_pack_copy.enabled= False
	tab_main.tabpage_pack.cb_pack_delete.enabled= False
	tab_main.tabpage_pack.cb_import_pack.enabled= False
	tab_main.tabpage_pack.cb_calc_carton_count.enabled= False
	tab_main.tabpage_pack.cb_ci_load_tender.enabled= False
	tab_main.tabpage_pack.cb_import_pack.enabled= False
	tab_main.tabpage_pack.rb_metric.enabled= False
	tab_main.tabpage_pack.rb_eng.enabled= False
	tab_main.tabpage_pack.cbx_show_comp_pack.enabled= False
	tab_main.tabpage_pack.dw_packlist_notes.object.datawindow.readonly='yes'
	tab_main.tabpage_pack.cbx_gen_level2_qty.enabled= False
	tab_main.tabpage_detail.cb_do_det_insert.enabled = False
	tab_main.tabpage_detail.cb_do_det_delete.enabled = False	
	tab_main.tabpage_detail.cb_import_ib.Enabled = False
	tab_main.tabpage_pick.cb_pick_generate.enabled = False
	tab_main.tabpage_pick.cb_pick_delete.enabled = False	
	tab_main.tabpage_pick.cb_pick_insert.enabled = False		
	tab_main.tabpage_pick.cb_pick_copy.enabled = False	
	tab_main.tabpage_pick.cb_lmsroute.enabled = False  
	tab_main.tabpage_pick.cb_pick_unallocate.enabled= False
	tab_main.tabpage_pick.cbx_partial_bom.enabled= False
	tab_main.tabpage_pick.cbx_show_comp.enabled= False
	//tab_main.tabpage_pick.cb_pick_print.enabled = False
	tab_main.tabpage_pick.cb_picklocs.enabled = False 
	tab_main.tabpage_pick.dw_pick_mobile.object.datawindow.readonly='yes'
	tab_main.tabpage_main.cb_do_confirm.enabled = False
	tab_main.tabpage_main.cb_do_void.enabled = False
	tab_main.tabpage_main.cb_do_notes.enabled = False
	tab_main.tabpage_main.cb_do_readytoship.enabled = False
	

end if
end subroutine

on w_do.create
int iCurrent
call super::create
this.dw_scanner=create dw_scanner
this.dw_print_invoice=create dw_print_invoice
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.dw_scanner
this.Control[iCurrent+2]=this.dw_print_invoice
end on

on w_do.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.dw_scanner)
destroy(this.dw_print_invoice)
end on

event ue_edit;// pvh 09/08/05 - modified to remove references to Gemini Tab

// Looking for unsaved changes
If wf_save_changes() = -1 Then Return	

This.Title = is_title + " - Edit"

ib_edit = True
ib_changed = False
ib_under_picked = False		//843

// Changing menu properties

im_menu.m_file.m_save.Enabled = False
im_menu.m_file.m_retrieve.Enabled = True
im_menu.m_file.m_print.Enabled = False
im_menu.m_file.m_refresh.Enabled = False
im_menu.m_record.m_delete.Enabled = False

tab_main.tabpage_other.Enabled = False
tab_main.tabpage_detail.Enabled = False
tab_main.tabpage_pick.Enabled = False
tab_main.tabpage_Serial.Enabled = False
tab_main.tabpage_pack.Enabled = False
tab_main.tabpage_bol.Enabled = False
tab_main.tabpage_Carrier.Enabled = False /* 03/03 - PCONKL*/
tab_main.tabpage_Trax.Enabled = False
tab_main.tabpage_Shipments.Enabled = False /* 04/14 - PConkl */
// Tab properties

is_doNo = ''
isle_Order2.Visible=False
isle_Order.Visible=True
isle_order.DisplayOnly = False
isle_order.TabOrder = 10

idw_main.Hide()
tab_main.tabpage_Main.tab_address.Hide()
tab_main.tabpage_Main.tab_address.TriggerEvent('ue_reset')

tab_main.tabpage_main.cb_do_select_customer.visible=false

wf_clear_screen()

tab_main.tabpage_serial.sle_carton_no.Text = ''

isle_order.SetFocus()
end event

event ue_new;Long ll_bol, ll_len, ll_no
integer li_Index  
String ls_bol
u_nvo_custom_validations	lu_val


// Acess Rights
If f_check_access(is_process,"N") = 0 Then Return

// Looking for unsaved changes
If wf_save_changes() = -1 Then Return	

This.Title = is_title + " - New"
ib_edit = False
ib_changed = False
ibPackNotified = False
ibCCCFirstSave = True /* 12/03 - PCONKL - for first time saving of an order*/
ibserialsupdated = False
isPandoraToProject = "" /*used to default 'To Project' based on PAndora Ship To Customer*/

isle_order2.text = ""
tab_main.tabpage_pick.batch_pick_t.Text = '' /* 05/05 - Pconkl*/

wf_clear_screen()

idw_main.InsertRow(0)

// 11/00 - PCONKL - default to customer (not a return to supplier)
idw_main.Modify('cust_code_t.Text = "Customer Code:" cust_name_t.Text="Customer Name:" ')

idw_main.SetItem(1, "ord_date", Today())
idw_main.SetItem(1, "wh_code", gs_default_wh)
idw_main.SetItem(1, "create_user", gs_userid)
idw_main.SetItem(1,"Source_Type","MANUAL") //10-Dec-2015 Madhu Added Source Type


IF gs_project = "MAQUET" THEN

	idw_main.SetItem(1,"ord_type",'N') /* 02/09 mea - default to NO SAP*/

ELSE

	idw_main.SetItem(1,"ord_type",'S') /* 08/00 pconkl - default to sales*/
	
	
END IF

// pvh 09/08/05 - modified to remove references to Gemini Tab

idw_main.SetItem(1,"inventory_type",'N') /* 10/00 pconkl - default to Normal*/

If isOTMEnabled = 'Y' Then
	String lsNull
	SetNull(lsNull)	
	//TimA 04/03/13 Bug found.
	//If the previous order was NON OTM then the user clicks New order that NON OTM Status stayed the same
	// 08/13 - PCONKL - Default manual orders to 'N' except for Pandora
	IF gs_project = "PANDORA" Then
		idw_main.SetItem(1, "OTM_STATUS", lsNull)
	Else
		idw_main.SetItem(1, "OTM_STATUS", "N")
	End If
	
	ll_SkipOTMFlag = 0
End if

IF gs_project = "PANDORA" THEN
	idw_other.SetItem(1, "user_field7", "MATERIAL TRANSFER")
END IF

IF gs_project = "HILLMAN" THEN
	idw_other.SetItem(1, "user_field8", "01")
END IF

// 04/16 - PCONKL - Default Pick Sort order to Project default
idw_Main.SetItem(1,'pick_sort_order','PROJECT')
tab_main.Tabpage_pick.rb_pick_default.checked = true

//11/04 - PCONKL - Add any project level order defaults
lu_val = Create u_nvo_custom_Validations
lu_val.uf_new_do_defaults(idw_main)


wf_check_status()

isle_order.DisplayOnly = True
isle_order2.DisplayOnly = False

isle_order.visible=False
isle_order2.visible=True
isle_order2.TabOrder = 1
isle_order.TabOrder = 0

//TAM - W&S 2010/12  -   Order Number is Formatted.  We will not allow entry into this field.  
	If Left(gs_project,3) = 'WS-'  Then
		isle_order2.TabOrder = 0
		isle_order2.DisplayOnly = True
	End If

idw_main.Show()
tab_main.tabpage_main.st_order_nbr.bringtotop = True
isle_order2.bringtotop = true

tab_main.tabpage_main.cb_do_select_customer.visible=True
tab_main.tabpage_Main.tab_address.visible=True
tab_main.tabpage_Main.tab_address.bringtotop = true
tab_main.tabpage_Main.tab_address.SelectTab(1)

tab_main.tabpage_serial.Enabled = False /* 01/01 pconkl*/
tab_main.tabpage_Serial.st_message.Text = ''
tab_main.tabpage_Carrier.Enabled = False /* 03/02 pconkl*/
tab_main.tabpage_serial.sle_barcodes.Text = "" // pvh - 10/28/05

tab_main.tabpage_pick.cbx_partial_bom.Visible = False

idw_main.SetFocus()
isle_order2.setfocus( )

//gap 02-03 delete previous addresses in datawindow-dropdown (leave one item)
li_Index = idwc_address.rowcount()
do until li_Index = 1
	idwc_address.DeleteRow(li_Index)
	li_Index = li_Index - 1
loop
idwc_address.SetItem ( 1, "address_code"," ")
idwc_address.SetItem ( 1, "address_1"," ")

IF gs_project = "FLEX-SIN" THEN
	idw_other.SetItem(1, "wh_code", "FLEX-SIN")
	
	Open(w_flex_select_vendor_do)
END IF


Return





end event

event ue_save;// pvh 09/08/05 - modified to remove references to Gemini Tab
//MEA - 5/13 - Not all Pandora code moved to OTM NVO. Will move gradually as per conversation with Tim as to not break anything.

Long   ll_result, ll_rowcount, ll_numpicks, ll_picknum, ll_numexistingci, ll_numpackrows,ll_rownum,ll_row_pick,ll_count1,ll_spidR,ll_spid
LONG     ll_packrownum, ll_numexistingup,ll_rownum1
LONG llFindRow, ll_stockTransf, llPickCount,ll_item_no,ll_flag=1
Boolean   lb_match=true,lb_readonly=False
string ls_costcenter, ls_location , ls_cartontype, ls_country, ls_ups,lsTemp,lsfind_container_id,ls_container_order,lsTemp1,ls_Load_Lock,ls_invoice_no,ls_userspid
String ls_order, lsMsg, lsDONO, lsOrdStat, lsErrText, &
lsModify, lsRC, lsSKU, ls_wh_code,ls_trac_id, lsContentErrorText, &
ls_INActiveCustomerName,  lsOwnerName, lsComponentInd, &
ls_COO, ls_COO_db, ls_error, lsOldCustCode, lsNewCustCode, lsCustText, ls_ErrText, ls_Temp, &
ls_container_id_scanned_ind,ls_detail_container_id,ls_pick_container_id,ls_po_no2_ind, ls_container_no_ind
string lsInvoiceNo,ls_spid //TAM W&S
long   ll_no, i,j, llRowCount, llRowPos, llSerialCount, llSerialPos,ll_row, llOwnerID, ll_COO_len, llOwnerID_Prev
Integer liRC
Boolean lbContentFailed,lb_trailer_no , lb_seal_no,lb_lock = True // Dinesh - 03/16/2023- SIMS-53-Google - SIMS - Load Lock and New Loading Status
DateTime ldttoday, ldtlastDBUpdate, ldtPickComplete//, ldtm_temptime
String ls_user_field1, ls_sku, ls_Cust_code,lsuf2,ls_Edit_modeW
Long llcount, llTransID, llNoteSeqNo,ll_detaillineno,ll_res
dwItemStatus l_status, l_pro_status
integer li_line_item_no,i_indx
string   ls_do, ls_freightterms, ls_transmode, ls_carrier, ls_ShipVIA, ls_userf1
boolean lb_failed
Decimal ld_NxtSeq // 01/03/2011 ujh: S/N_Pa  
datetime ldt_RequestDate,ld_entry_dateR,ld_entry_dateW
String ab_error_message_title, ab_error_message //TimA 04/15/2011 capture the error message in of_error_on_serial_no_exists to help with possible locking in SIMS
Boolean lbSave //TimA 04/26/11 Pandora Issue #211 The Pick complete date is not being written to the CI 3B18.  Confirming the CI transaction before the order is save may be the problem
Boolean lbGenerateCI, lbGenerateUP, lb_stockTransf_created
Boolean lbTempBoolean1, lbTempBoolean2, lbTempBoolean3
string ls_trailer_num,ls_seal_num // Dinesh - 05/27/2021-S57453-Google - SIMS - Bill of Lading Changes
string ls_DONO,ls_whcode
long ll_count
//TimA 08/11/11 Pandora issue #261
String ls_ShipType,ls_WarehouseCode,ls_Sku2,ls_serial_No, lsSuppCode, ls_L_Code, ls_Inventory_Type, ls_Country_of_Origin, ls_Lot_No, ls_PO_No, ls_PO_No2, ls_Container_ID
Datetime ld_Expiration_Date
Boolean lb_send_nike_dst,lb_read
Long ll_method_trace_id, lldeletedPackcount,k
Datetime ldt_Original_RDD
string ls_User_Id,ls_Order_No,ls_screen_name,ls_Edit_Mode,ls_display_name,ls_display_name1
Datetime ldt_Entry_Date,ldt_Out_Date
datastore lds_screen_lock
lb_read=False // Dinesh - 06/16/2023- SIMS-198- Read only orders
//TimA 12/30/11 OTM Project
n_otm ln_otm
If Not isvalid(ln_otm) Then
ln_otm = CREATE n_otm
End if
String ls_action, ls_return_cd, ls_error_message,lsProcessOTM, ls_color
String lsOTMStatus, lsSetOTM
Boolean lbOTMFlag, lb_rd_change, lb_sd_change, lb_dd_change,lb_skip
Integer li_OTM_Return
String lsOTMFromCountry,lsShipNo, ls_Code_Descript
DateTime ldtOTMCallDate
string ls_invoice,ls_order_type,ls_User_IdW
//u_nvo_sims_ccc lu_ccc
//Datastore ldsSerial

lbContentFailed = False
lb_rd_change = False
lb_sd_change = False

is_sku = '' //Jxlim 12/20/2012 BRD #464

//if lb_lock = False then
//	isLoad_Status = 'UNLOCK_ON_SAVE' // Dinesh -04/04/2023- SIMS-53- Google- Load lock and new loading status
//end if

//08-Feb-2013  :Madhu code -START
string lsinvoice_no
select  Invoice_No INTO :lsinvoice_no
FROM Delivery_Master
WHERE DO_NO =:is_dono
using sqlca;

isinvoice_no =lsinvoice_no
//08-Feb-2013  :Madhu code -END

//Begin -04062022-  Dinesh - S69824- Google -  SIMS - Saudi Arabia Shipments
If Upper(gs_project) = 'PANDORA' then
	ls_DONO = idw_Main.GetITemString(1,'do_no')
	ls_whcode = idw_Main.GetITemString(1,'wh_code')
	select Country into :ls_country from Delivery_Master where Project_ID = :gs_project and do_no=:ls_DONO and Country='SA' USING SQLCA;
	if ls_country='SA' then
			Select count(*) INTO :ll_count FROM lookup_table with (NoLock)
			Where Project_ID = :gs_project AND Code_Type = 'SAUDI_ARABIA_SHIPMENT' AND code_id=:ls_whcode USING SQLCA;
		if ll_count <= 0 then
			ls_error = "This is a Saudi Arabia Shipment and this warehouse is not allowed to ship to this country. Please contact Google to cancel this order."
			lb_failed = true
		end if
	end if

	// Begin  - Dinesh - 06/15/2023- SIMS-198- Google - SIMS - Read Only Access
				ls_invoice_no= idw_main.GetItemString(1,'invoice_no')
				lds_screen_lock = Create datastore
				lds_screen_lock.Dataobject = 'd_screen_lock_order_r'
				lds_screen_lock.settrans(sqlca)
				lds_screen_lock.retrieve(gs_System_No,'R')
				select count(*) into : il_find_matchW from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;
				select user_id,UserSPID,Edit_Mode,Entry_Date into :ls_User_IdW,:ll_spid,:ls_Edit_modeW,:ld_entry_dateW  from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;
				select count(*) into : il_find_matchR from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='R' and screen_name='Delivery Order' using sqlca;
				select user_id,UserSPID,Edit_Mode,Entry_Date,order_no into :ls_User_Id,:ll_spidR,:ls_Edit_Mode,:ld_entry_dateR,:ls_Order_No from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='R' and userspid = :gl_userspid and screen_name='Delivery Order' using sqlca;
				select display_name into :ls_display_name from usertable with (Nolock) where userid=:ls_User_IdW;
					if  (il_find_matchW > 0 and il_find_matchR > 0) and (ls_Order_No=gs_System_No and gs_userid <> ls_User_IdW  and ll_spidR = gl_userspid ) then
						//if  il_find_matchW > 0 and ls_Order_No=gs_System_No  and gs_userid <> ls_User_IdW and ll_spidR <> gl_userspid and gs_System_No <> '' and ls_Edit_Mode='R' then						
						 lb_failed= True
						 if  lb_failed= True then
							messagebox(is_title,'User Name: ' + ls_display_name + '/Session: ' + string(ll_spid) + ' is already accessing the Order Number ' + ls_invoice_no + '.~r~n~r~nThe screen is locked and can be accessible to read mode only.Please contact your Site Manager/Supervisor to unlock the screen or wait for sweeper to run for clearing the locked order.', Stopsign! )
							ls_error= 'Please try accessing this order after some time'
							lb_readonly= True
							lb_failed= true
							wf_delivery_order_readonly(lb_readonly)
						
						end if
					
					elseif (il_find_matchW > 0 and  il_find_matchR > 0) and (ls_Order_No=gs_System_No and gs_userid = ls_User_IdW and ls_Edit_mode='R' and  ll_spidR = gl_userspid) then
						 lb_failed= True
						 if lb_failed= True then
						 	messagebox(is_title,'Hey!! You have already opened another session: ' +string(ll_spid)+ ' for the same Order Number ' + ls_invoice_no + '.~r~nPlease close all your current/previous session first and then re-open the order.', Stopsign! )
							ls_error= 'Please close all your previouos session and re- open the order again'
							lb_readonly= True
							lb_failed= True
							wf_delivery_order_readonly(lb_readonly)
						end if
					elseif ib_access= True and (il_find_matchW = 0 and  il_find_matchR > 0) and (ls_Order_No=gs_System_No and gs_userid = ls_User_Id and ls_Edit_mode='R' and  ll_spidR = gl_userspid) then
						
						messagebox(is_title,'Hey!! You have changed this order to READ ONLY ACCESS, session: ' +string(ll_spidR)+ '.', Stopsign! )
							ls_error= 'Please close all your current session and re- open the order again to make any change for this order'
							lb_readonly= True
							lb_failed= True
							wf_delivery_order_readonly(lb_readonly)
					else
						
					end if
				
	
		
		// End Dinesh S51817 - 01/22/21 - Google - SIMS - SAP Conversion - GUI

// End - Dinesh-  06/15/2023- SIMS-198- Google - SIMS - Read Only Access

// Quit processing
If lb_failed then
// Set microhelp.
SetMicroHelp("Save Failed!")
messagebox (is_Title, ls_error, StopSign!)
lbSave = False
return -1
End If //end if
End if
//End -04062022-  Dinesh - S69824- Google -  SIMS - Saudi Arabia Shipments

//Begin -05112022-  Dinesh - S71358- Google - SIMS - RMA/Harvest Pick Exceptions
If Upper(gs_project) = 'PANDORA' then
ls_detail_container_id =''
ls_DONO = idw_Main.GetITemString(1,'do_no')

for ll_rownum=1 to idw_pick.rowcount()
lsTemp = idw_pick.GetitemString(ll_rownum,'Container_ID')  
 lsTemp1 = idw_pick.GetitemString(ll_rownum,'po_no2')
 ls_po_no2_ind = idw_pick.GetitemString(ll_rownum,'PO_NO2_Controlled_Ind')  
 ls_container_no_ind = idw_pick.GetitemString(ll_rownum,'container_tracking_Ind')
	
ll_item_no= idw_pick.Getitemnumber(ll_rownum,'line_item_no')  
    lsfind_container_id = "Upper(user_field7) = '" + upper(lsTEmp) + "' or Upper(user_field7) ='"+ upper(lsTEmp1) + "' and line_item_no=  "+string(ll_item_no) +""
//lsTemp=lsTemp
 ls_container_order = idw_detail.GetitemString(ll_rownum,'user_field7')
 
 if ls_container_order='' then
setnull(ls_container_order)
end if
If  idw_detail.Find(lsfind_container_id,1,idw_detail.RowCount()) < 1 Then
//Begin - 053022-  Dinesh - S71358- Google - SIMS - RMA/Harvest Pick Exceptions
if ls_container_no_ind='Y'  and ls_po_no2_ind='N' then
lsTemp=lsTemp
elseif ls_po_no2_ind='Y' and ls_container_no_ind='N' then
lsTEmp=lsTEmp1
elseif ls_container_no_ind='Y'  and ls_po_no2_ind='Y' then
lsTemp=lsTemp
elseif ls_container_no_ind='N'  and ls_po_no2_ind='N' then
lsTemp=''
end if
if  ls_container_order <> " " or not isnull(ls_container_order) then
ll_flag=0
 
if ll_flag = 0 then
ls_detail_container_id= ls_detail_container_id + lsTemp +" ,"
else
ll_flag=1
end if
 lb_match=false
 
else

end if
//End - 053022-  Dinesh - S71358- Google - SIMS - RMA/Harvest Pick Exceptions
end if
next
if lb_match= false then
Messagebox(is_title,"This is an RMA/Harvest order. RMA/Harvest orders need to have specific container order ID's in the order. You will need to either fix the inventory by stock adjustments or have the order cancelled in SAP. Below are the mismatched id(s) : "+ ls_detail_container_id +".",Stopsign!)
return 1
end if
End If
//End -05112022-  Dinesh - S71358- Google - SIMS - RMA/Harvest Pick Exceptions
SetNull( ll_method_trace_id )
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Start ue_Save: ' + is_dono ) //08-Feb-2013  :Madhu commented
If IsNULL(lsinvoice_no) or lsinvoice_no='' THEN isinvoice_no =idw_main.GetItemString(1,'invoice_no')
f_method_trace_special( gs_project, this.ClassName() + ' - ue_Save', 'Start ue_Save:' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

// pvh - 08/24/05 - GMT
if idw_main.rowcount() > 0 then
ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') )
else
ldtToday = f_getLocalWorldTime( gs_default_wh )
end if
//ldtToday = DateTime(today(), Now())
// eom
// Acess Rights
If f_check_access(is_process,"S") = 0 Then return -1

idw_Main.Accepttext()
//DHIRENDRA DE23785-SIMS PHILIPSCLS SHORT PICK OVERPICK ISSUE- START
idw_pick.Accepttext()
//DHIRENDRA DE23785-SIMS PHILIPSCLS SHORT PICK OVERPICK ISSUE- END
idw_pack.Accepttext()
idw_other.AcceptText()
idw_detail.AcceptText()
idw_mobile.AcceptText() /*09/14 - PCONKL */
idw_serial.AcceptText() /* 01/02-GailM*/

/* PANDORA - Regenerate the pack list for serial tab only - 01/18 - GailM - S14978 */
If Upper(gs_project) = 'PANDORA' and ibSerialCartonNoChanged Then
lbTempBoolean1 = ibMixedSerialPickRows
lbTempBoolean2 = ib_changed
lbTempBoolean3 = ibGenerateFromSerial
ibMixedSerialPickRows = FALSE
ib_changed = FALSE
ibGenerateFromSerial = TRUE
lldeletedPackcount = 0
// Remove serial pack line and regenerate without touching non-serial pack rows
for j = idw_pack.rowcount() to 1 step -1
If idw_pack.GetItemString( j, 'serialized_ind' ) <> 'N' Then
idw_pack.DeleteRow( j )
lldeletedPackcount++
End If
next
//16-MAR-2018 :Madhu DE3343 - Avoid to prompt error message while deleting SN record, If No Pack records were present originally!
If lldeletedPackcount > 0 Then iw_window.TriggerEvent( "ue_generate_pack" )
ibMixedSerialPickRows = lbTempBoolean1
//ib_changed = lbTempBoolean2
ibGenerateFromSerial = lbTempBoolean3
ibSerialCartonNoChanged = FALSE
End If
/* END - Regenerate the pack list for serial tab only */

tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.AcceptText()

If idw_main.RowCount() > 0 Then
//BCR 13-JAN-2012: For PhxBrands. Need to get this way early, for later use at the bottom of script...
lsOldCustCode = idw_main.GetItemString(1, "cust_code", Primary!, TRUE)

// LTK 20110721  SIMS Over/Under picking issue.  Refresh here to synch up the picking and detail quantities before any validations are performed.
This.Trigger event ue_refresh()

//27-Jul-2016 :Madhu- Added code to don't allow to save, if an Order Status='Z' - START
If idw_main.getitemstring(1,'ord_status')='Z' Then
SetMicroHelp("Save Failed!")
messagebox (is_Title, "Since, an Order was in confirming status, user shouldn't allow to save. Would you please re-retrieve an Order!", StopSign!)
return -1
End If
//27-Jul-2016 :Madhu- Added code to don't allow to save, if an Order Status='Z' - END
//
// IF gs_project = "PANDORA" THEN
//		
//	If (w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLSTD' or w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLTMD') and ((isnull(w_do.idw_main.getitemstring(1,'user_field3'))) or (w_do.idw_main.getitemstring(1,'user_field3') = '')) then
//			messagebox (w_do.is_title, "Trailer Number can not be left blank, To load the order please enter the Trailer number!", StopSign!)
//			w_do.tab_main.SelectTab(2)
//			w_do.idw_other.SetColumn('user_field3')
//			w_do.idw_Other.SetFocus()
//			ls_trailer_num=w_do.idw_main.getitemstring(1,'user_field3')
//			w_do.idw_main.SetItem( 1, "user_field3", ls_trailer_num)
//		
//	end if 
//	If (w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLSTD' or w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLTMD' or w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL') and ((isnull(w_do.idw_main.getitemstring(1,'user_field6'))) or (w_do.idw_main.getitemstring(1,'user_field6') = '')) then
//			messagebox (w_do.is_title, "Seal Number can not be left blank, To load the order please enter Seal number!", StopSign!)
//			w_do.tab_main.SelectTab(2)
//			w_do.idw_other.SetColumn('user_field6')
//			w_do.idw_Other.SetFocus()
//			ls_seal_num=w_do.idw_main.getitemstring(1,'user_field6')
//			w_do.idw_main.SetItem( 1, "user_field6", ls_seal_num)
//		
//	End If
//		
//End if
//



//Make sure the cost center is populated
// KZUV.COM - If this is the Pandora Project,
IF gs_project = "PANDORA" THEN
// Get the cost center.
ls_costcenter = trim(idw_main.GetItemString( 1, "user_field10" ))
// If the cost center is NULL or blank,
If isnull(ls_costcenter) or ls_costcenter = "" then
// Get the inventory location.
ls_location = idw_main.GetItemString( 1, "user_field2" )
// Now retrieve the cost center for this location from the customer table.
Select user_field7
into :ls_costcenter
from customer WITH (NOLOCK)
where project_id = 'pandora'
and cust_code = :ls_location
using sqlca;
// Set the cost center.
idw_main.SetItem( 1, "user_field10", ls_costcenter)
End If  // End If the cost center is NULL or blank.

//TimA 08/18/2011 Pandora issue #280 - added custom validation for 'Reqd Deliver Date ANYTIME ue_save is called
ldt_RequestDate = idw_main.GetItemDateTime(1, 'request_date')
ldt_Original_RDD = idw_main.GetItemDateTime(1, 'edm_generate_datetime')
if isnull(ldt_RequestDate) or ldt_RequestDate < datetime('2011-01-01')  then
ls_error = "You must enter the Reqd. Delivery Date." //get the label from datawindow?
lb_failed = true
tab_main.SelectTab(1)
idw_main.SetColumn('request_date')
Else
//TimA 07/31/12 Pandora issue #460 If the original RDD is null then set it to the Required Delivery date
if isnull(ldt_Original_RDD) then
idw_main.SetItem( 1, "edm_generate_datetime", ldt_RequestDate)
End if
End IF
// Quit processing
If lb_failed then
// Set microhelp.
SetMicroHelp("Save Failed!")
messagebox (is_Title, ls_error, StopSign!)
return -1
End If //end if required delivery date
End If  // End If this is the Pandora Project.
//14-Mar-2017 :Madhu DE3347- Validate given RDD -START
ldt_RequestDate = idw_main.GetItemDateTime(1, 'request_date')
If not isnull(ldt_RequestDate) and not IsDate( String( ldt_RequestDate, 'YYYY-MM-DD')) Then
MessageBox(is_Title, "Required Delivery Date is Invalid. Please provide valid RDD.")
Return -1
End If
//14-Mar-2017 :Madhu DE3347- Validate given RDD -END

//11-Mar-2014 :Madhu- Added to remove filter on Packlist. -START
//If we're on TRAX tab, remove filter on pack for a while. Getting an error message while saving TRAX records due to pack rowcount > Trax row count
IF tab_main.SelectedTab =9 Then
wf_set_pack_filter('Remove')
End if
//11-Mar-2014 :Madhu- Added to remove filter on Packlist. -END
// pvh - gmt 11/22/05
datetime ldtGMT
If idw_main.RowCount() > 0 Then
// pvh - gmt 11/22/05
ldtGMT = f_getLocalWorldTime( idw_main.object.wh_code[1] )
idw_main.SetItem(1,'last_update', ldtGMT  ) // pvh - gmt 11/22/05
//idw_main.SetItem(1,'last_update',Today())
idw_main.SetItem(1,'last_user',gs_userid)
If wf_validation() = -1 Then
SetMicroHelp("Save failed!")
Return -1
End If
// Jxlim 07/17/2013 SkuSerialHold validation; If Sku/Model is on Hold do not allow packing generation, initiated by Arien
If  Upper(gs_project) = 'ARIENS' Then
If wf_validate_skuserialhold() < 0 Then
SetMicroHelp("Save failed!")
Return -1
End If
End If
End If
//dts - 8/25/05 - Using warehouses as customer for warehouse transfers
// and FROM/TO warehouses must be different...
If idw_main.GetItemString(1,'ord_type') = 'Z' then
//TAM - 9/29/2010 - Allow Same warehouse for NYCSP -They are using this to rotate stock in kits without having to rebuild the whole kit.
if gs_project <> 'NYCSP' then
if idw_main.GetItemString(1, "wh_code") = idw_main.GetItemString(1, "cust_code") then
messagebox (is_Title, "'FROM' warehouse must be different than 'TO' warehouse.", StopSign!)
return -1
end if
end if
end if
lsDONO = idw_main.GetItemString(1,'Do_no')  
ls_wh_code = idw_main.object.wh_code[1]

//TimA 03/05/12 OTM Project.  Lookup to see it the From contry is included in the OTM Call
If isOTMEnabled = 'Y' Then
SELECT Code_Descript INTO :ls_Code_Descript FROM Lookup_Table WITH (NOLOCK)  
Where project_id = :gs_project and Code_type = 'OTM' and Code_ID = 'global_warhouse';
End if
Select Country
into :lsOTMFromCountry
From Warehouse WITH (NOLOCK)
where Wh_Code = :ls_Wh_code;
If ls_Code_Descript = 'Y' Then
lsProcessOTM = 'Y'
Else
//We still want to do US warehouses
If lsOTMFromCountry = 'US' then
lsProcessOTM = 'Y'
else
lsProcessOTM = 'N'
end if
End if
// 02/05 - PCONKL - Need to recheck status from DB before saving - if a nother user has confirmed,
// - We can't save here if current status is different. 08/06 - PCONKL - Also checking last update against current retrieved last update
Select ord_status, Last_update Into :lsOrdStat, :ldtlastDBUpdate
From Delivery_Master WITH (NOLOCK)
Where Project_ID = :gs_Project and Do_no = :lsDONo;

/* 9/02/2010
//ldtm_temptime = idw_main.GetITEmDateTime(1,'last_update')
If ldtlastDBUpdate > idw_main.GetITEmDateTime(1,'last_update') and gs_userid <> idw_main.GetITEmString(1,'last_user') Then
Messagebox(is_title, 'This order has been updated by another user!~r~rYou will neeed to re-retrieve the order before making any changes',StopSign!)
Return -1
End If
*/
// TAM 2005/03/23 Save original Database status in instant variable to be used in WF_Check_Status.
is_Status_Db = lsOrdStat

// TAM 2005/03/08  Allow Save from 'R'eady to Ship to 'C'onfirm.  Confirm is being set earlier in ue_confirm prior to this function
If (lsOrdStat = 'C' or lsOrdStat = 'D' or lsOrdStat = 'V' or (lsOrdStat = 'R' and idw_main.GetITemString(1,'ord_status') <> 'C')) Then

// 02/08 - PCONKL - Allowing a Super Duper USer to un-confirm - must bypass this validation
If Not ibUnconfirmRequested Then
If lsOrdStat <> idw_main.GetItemString(1,'ord_status') Then
Messagebox(is_title, 'This order has already been confirmed or voided by another user!~r~rYou will neeed to re-retrieve the order before making any changes',StopSign!)
Return -1
End If
End If
End If
End IF  // idw_main.RowCount()

//MA = 06/08  - Make sure staging location is saved/updated in the other required places.
string ls_staging_location
boolean lb_check_picking = true

IF Upper(gs_project) = "PHXBRANDS" OR  Upper(gs_project) = "SIKA" THEN
l_status = w_do.idw_other.GetItemStatus(1, "user_field13", Primary!)
IF l_Status = NewModified! OR l_Status = DataModified! THEN
ls_staging_location = idw_other.GetItemString( 1, "user_field13")
integer li_idx
for li_idx =  1 to idw_pick.RowCount()
idw_pick.SetItem( li_idx, "staging_location", ls_staging_location)
next
for li_idx =  1 to idw_pick_detail.RowCount()
idw_pick_detail.SetItem( li_idx, "staging_location", ls_staging_location)
next
lb_check_picking = false
END IF

idw_pick.AcceptText()
IF lb_check_picking AND idw_pick.RowCount() > 0 then
l_status = w_do.idw_pick.GetItemStatus(1, "staging_location", Primary!)
IF l_Status = NewModified! OR l_Status = DataModified! THEN
w_do.idw_other.SetItem(1, "user_field13", w_do.idw_pick.GetItemString(1, "staging_location"))
END IF
END IF
END IF

//MEA - 12/11 for NIKE
//When the users save the Pick List for the first time (DM.Pick_start not populated),
//we need to send the DSTxxxx (DST + warehouse code + seq nbr) file.

IF  upper(left(gs_Project,4)) = 'NIKE' THEN
IF IsNull(idw_main.GetItemDateTime( 1, "pick_start", Primary!, true)) AND &
Not IsNull(idw_main.GetItemDateTime( 1, "pick_start")) THEN
lb_send_nike_dst = true
END IF
END IF

//14-FEB-2019 :Madhu S29511 -PhilipsCLS BlueHeart OutboundDeliveryStatusUpdate -START
//GailM 8/20/2019 DE11937 Skip if deleting order
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
IF (upper(gs_project) ='PHILIPSCLS' OR  upper(gs_project) ='PHILIPS-DA') and idw_main.RowCount() = 1 THEN
//Request Date change
If IsNull(idw_main.getItemDateTime( 1, "request_date" ,Primary!, true)) and Not IsNull(idw_main.getItemDateTime(1,"request_date")) Then
lb_rd_change =TRUE
idw_other.setItem( 1, "user_field6", string(idw_main.getItemDateTime(1,"request_date",Primary!, true)))
elseIf idw_main.getItemDateTime( 1, "request_date" ,Primary!, true) <> idw_main.getItemDateTime(1,"request_date") Then
lb_rd_change =TRUE
idw_other.setItem( 1, "user_field6", string(idw_main.getItemDateTime(1,"request_date",Primary!, true)))
End If
//S38996: F18560 - Philips Blueheart NDD updates - Update Planned Dispatch (Other Info User Field18) Planned Delivery (Other Info User_Field20)
//We need SIMS to update the plannedDespatch (other info user field 18) as (NDD – datediff). In this case, datediff is 2 so 9/18/2019 – 2 = 9/16/2019 for the plannedDespatch.
If lb_rd_change Then
string lsplannedDelivery, lsplannedDispatch
date ldplannedDelivery, ldplannedDispatch, ldRequestDate
integer ll_date_diff, liHolidayCount
//Date("2004/07/04")
lsplannedDelivery = idw_other.getItemString(1,"user_field20")
lsplannedDispatch = idw_other.getItemString(1,"user_field18")
ldRequestDate = DATE(idw_main.getItemDateTime( 1, "request_date"))
ldplannedDelivery = date(left(lsplannedDelivery,4) + "/" + mid(lsplannedDelivery,5,2) + "/" + mid(lsplannedDelivery,7,2))
ldplannedDispatch = date(left(lsplannedDispatch,4) + "/" + mid(lsplannedDispatch,5,2) + "/" + mid(lsplannedDispatch,7,2))
ll_date_diff = DaysAfter ( ldplannedDelivery, ldplannedDispatch  )
ldplannedDispatch = RelativeDate(ldRequestDate, ll_date_diff)
//Check Holiday table to see if there are holidays that fall inbetween to two dates.
select count(*) INTO :liHolidayCount from holiday with (nolock) WHERE Project_ID in ('PHILIPSCLS', 'PHILIPS-DA')  
AND Holiday_Country = 'MY' AND Holiday_Date >= :ldplannedDispatch and Holiday_Date <= :ldRequestDate
AND (DATEPART(WEEKDAY, Holiday_Date) <> 1 AND DATEPART(WEEKDAY, Holiday_Date) <> 7);
IF liHolidayCount > 0 Then
ldplannedDispatch =  RelativeDate(ldplannedDispatch, -liHolidayCount)
End IF

//Sunday - Take off two days.
IF f_get_DayNumber(ldplannedDispatch) = 1 THEN ldplannedDispatch = RelativeDate(ldplannedDispatch, -2)
//Saturday - Take off one day.
IF f_get_DayNumber(ldplannedDispatch) = 7 THEN ldplannedDispatch = RelativeDate(ldplannedDispatch, -1)

lsplannedDispatch = string(year(ldplannedDispatch)) + string(month(ldplannedDispatch),"00") + string(day(ldplannedDispatch),"00")
idw_other.setItem(1,"user_field18",  lsplannedDispatch)

End If
//Schedule Date change
If IsNull(idw_main.getItemDateTime( 1, "schedule_date" ,Primary!, true)) and Not IsNull(idw_main.getItemDateTime(1,"schedule_date")) Then
lb_sd_change =TRUE
idw_other.setItem( 1, "user_field7", string(idw_main.getItemDateTime(1,"schedule_date",Primary!, true)))
elseIf idw_main.getItemDateTime( 1, "schedule_date" ,Primary!, true) <> idw_main.getItemDateTime(1,"schedule_date") Then
lb_sd_change =TRUE
idw_other.setItem( 1, "user_field7", string(idw_main.getItemDateTime(1,"schedule_date",Primary!, true)))
End If
//Delivery Date change
If IsNull(idw_main.getItemDateTime( 1, "delivery_date" ,Primary!, true)) and Not IsNull(idw_main.getItemDateTime(1,"delivery_date")) Then
lb_dd_change =TRUE
elseIf idw_main.getItemDateTime( 1, "delivery_date" ,Primary!, true) <> idw_main.getItemDateTime(1,"delivery_date") Then
lb_dd_change =TRUE
End If
END IF
//14-FEB-2019 :Madhu S29511 -PhilipsCLS BlueHeart OutboundDeliveryStatusUpdate -END

//Validate required Detail Fields
llRowCOunt = w_do.idw_Detail.RowCount()
FOR llRowPos = 1 to llRowCount
IF gs_project = "SATURN" THEN
//MA - 02/08 - Added Check
//the KNA BAN number delivery_detail.User_Field1 has only been used once for that SKU
//search all completed orders  (delivery_Master.ord_status = C or D) for each SKU in the
//order being confirmed, check to see that the KAN BAN/SKU combination does not exist in any of them
l_status = w_do.idw_detail.GetItemStatus(llRowPos, "user_field1", Primary!)
IF l_Status = NewModified! OR l_Status = DataModified! THEN

ls_user_field1 = trim(w_do.idw_detail.GetITemString(llRowPos,'user_field1'))
ls_SKU = w_do.idw_detail.GetItemString(llRowPos,'SKU')
li_line_item_no = w_do.idw_detail.GetItemNumber(llRowPos,'line_item_no')
ls_do = w_do.idw_main.GetItemString(1,'do_no')
If NOT isnull(ls_user_field1) AND ls_user_field1 <> '' Then
SELECT Count(Delivery_Detail.User_Field1) INTO :llcount
FROM Delivery_Detail WITH (NOLOCK)
 JOIN Delivery_Master WITH (NOLOCK) ON Delivery_Master.Do_No = Delivery_Detail.Do_No
WHERE Delivery_Detail.User_Field1 = :ls_user_field1
AND Delivery_Detail.SKU = :ls_SKU
//AND Delivery_Master.Do_No = Delivery_Detail.Do_No
and Delivery_Master.ord_status <> 'V'
AND NOT ( Delivery_Detail.Do_No = :ls_do AND Delivery_Detail.Line_Item_No = :li_line_item_no );
IF SQLCA.SQLCode <> 0 THEN
//Jxlim 09/10/2010 Added Rollback to prevent block/lock
                Execute Immediate "ROLLBACK" using SQLCA;
MessageBox ("Error", SQLCA.SQLErrText )
END IF
// search all completed orders (delivery_Master.ord_status = C or D) for each SKU in the order being confirmed,
// check to see that the KAN BAN/SKU combination does not exist in any of them
If lLCount >= 1 Then
MessageBox(w_do.is_title,'The KNA BAN number can only been used once for this SKU.')
w_do.tab_main.SelectTab(3)
f_setfocus(w_do.idw_detail,llRowPos,"user_field1")
SetMicroHelp("Save failed!")
Return - 1
End IF
END IF
END IF
END IF /*saturn*/
//3/10 JAyres Check to see if Customer is Active
If gs_project = 'PANDORA'  then
llOwnerID = tab_main.tabpage_detail.dw_detail.GetItemNumber( llRowPos,"owner_id")
lsOwnername = tab_main.tabpage_detail.dw_detail.GetItemString( llRowPos,"cf_owner_name")
//Jxlim 12/20/2012 get all sku for this order Pandora BRD # 464
ls_sku = tab_main.tabpage_detail.dw_detail.GetItemString(llRowPos,'SKU')
is_sku =is_sku + ",'" + ls_sku + "'"
is_sku = Mid(is_sku, 2)
//Jxlim 12/20/2012 End all sku for this order Pandora BRD # 464
If Right(Trim(lsOwnername), 3) = '(C)' Then
if llOwnerID <> llOwnerID_Prev then //dts 4/9/15 - now only checking customer if the owner changes (and it never should).
Select Distinct dbo.Customer.Cust_Name
Into :ls_INActiveCustomerName
FROM dbo.Owner WITH (NOLOCK)
 JOIN dbo.Customer WITH (NOLOCK)
ON dbo.Owner.Project_ID = dbo.Customer.Project_ID
 AND dbo.Owner.owner_cd = dbo.Customer.Cust_Code
Where dbo.Owner.Owner_ID = :llOwnerID
and dbo.Customer.Customer_Type = 'IN'
and dbo.Owner.Project_ID = :gs_project
USING SQLCA;
If NOT ( ls_INActiveCustomerName = '' or IsNULL(ls_INActiveCustomerName) ) Then
If IsNULL(lsOwnername) Then lsOwnername = ''
MessageBox(is_title, "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(llRowPos) +" of Order Detail.~r~rPlease Enter an Active Owner then Save." )
Return -1
End If
llOwnerID_Prev = llOwnerID
end if
End If
//GailM 07/13/2017 SIMSPEVS-737 PAN SIMS Soft warning for two separate owner codes on one location
//If a pick item is deleted for Pandora, check location to ensure another owner hasn't already taken it.
//Reinitialize llOwnerID   CANNOT PUT THIS INTO PRODUCTION FOR 737 - THERE ARE LOCATIONS THAT ARE ALLOWED MULTIPLE OWNERS THAT DO NOT HAVE A LOC_TYPE 9 OR 6.  SEE BULK64!
// If idw_pick.Deletedcount( ) > 0 Then
// For i_indx = 1 to idw_pick.DeletedCount()
// ls_L_Code = idw_pick.GetItemString( i_indx, 'l_code', Delete!, FALSE )
// llOwnerID_Prev = idw_pick.GetItemNumber( i_indx, 'owner_id', Delete!, FALSE )
// SetNull( llOwnerID )
//
// Select owner_id into :llOwnerID From Content_Summary
// Where Project_id = 'PANDORA' and wh_code = :ls_wh_code
// And l_code = :ls_L_Code And Owner_Id <> :llOwnerID_Prev using SQLCA;
//
// If Not IsNull( llOwnerID ) or llOwnerID <> 0 Then
// MessageBox(is_title, "Location " + ls_L_Code + " has been reused by another owner~r~r Pick row cannot be un-allocated.", Stopsign!)
// Return -1
// End If
// Next
// End If
// /*** End Deleted Pick Row Pandora  *****/

End If /* PANDORA */
//26-Sep-2014 :Madhu- DD.UF2 shouldn't be null for ANKI -START
IF Upper(gs_project) ='ANKI'  Then
lsuf2 = idw_detail.Getitemstring(llRowPos,"user_field2")
ll_detaillineno =idw_detail.GetItemNumber(llRowPos,"line_item_no")
ls_sku =idw_detail.GetItemString(llRowPos,"sku")
If isNull(lsuf2) or lsuf2='' then
MessageBox(is_title, 'User Field2 value should not be NULL for SKU = ' +ls_sku + ' and Line Item No= '+string(ll_detaillineno))    
return -1
END IF
END IF
//26-Sep-2014 :Madhu- DD.UF2 shouldn't be null for ANKI -END
Next /*Next detail Row*/

//DGM 07/2005 Only For '3COM'
//IF Upper(gs_project) = '3COM_NASH' THEN
//
// IF idw_pack.Rowcount() > 0 THEN
//
// string ls_User_Field15, ls_supp_code
//
// For ll_row = 1 to idw_pack.Rowcount()
//
// ls_sku = idw_pack.object.sku[ll_row]
// ls_supp_code = idw_pack.object.supp_code[ll_row]
//
// Select User_Field15 INTO :ls_User_Field15
// From Item_Master
// Where Project_ID = :gs_Project and Sku = : ls_sku and Supp_Code = :ls_supp_code USING SQLCA;
//
//
// If Upper(ls_User_Field15) = "Y" Then
// IF idw_pack.object.quantity[ll_row] <> 1 THEN
// messagebox(is_title,"Sku:" + ls_Sku + " is a bundle master with the SN bundle label flag set to 'Y'. The quantity can only be set to 1.")
// Return -1
// END IF
// End IF
//
// Next
//
// //For Netherlands assign delivery note to tracking Id & AWB BOL.
// // 11/07 - PCONKL - Add NAshville (Revenue and GLS)
//
// IF ls_wh_code = '3COM-NL' or ls_wh_code = '3CGLSEMEA' or ls_wh_code = '3CGLSAMI' or ls_wh_code = 'NASHVILLE' THEN
// For ll_row = 1 to idw_pack.Rowcount() /* Set Delivery NOte to Tacking ID on packing Rows*/
// ls_trac_id=idw_pack.object.shipper_tracking_id[ll_row]
// IF isnull(ls_trac_id) or ls_trac_id = '' THEN
// idw_pack.object.shipper_tracking_id[ll_row] = idw_other.object.user_field6[1]
// END IF
// Next
//
// idw_pack.accepttext( )
//
// IF IsNull(idw_other.object.awb_bol_no[1]) OR idw_other.object.awb_bol_no[1] = '' THEN
// idw_other.object.awb_bol_no[1] =idw_pack.object.shipper_tracking_id[1]
// END IF
//   END IF /*3COM-NL warehouse */
// // dts 03/04/08 - moved following 3 lines outside of warehouse condition test (like it was previously, I believe)
// idw_other.object.weight[1] =idw_pack.object.c_weight[1]
// idw_other.object.ctn_cnt[1] =idw_pack.object.c_carton_count[1]
// idw_other.AcceptText()
//
// END IF  /*Packing exists */
//
// IF ls_wh_code = '3COM-SIN' THEN
// //Shipper_Tracking_ID
// IF idw_other.GetItemStatus(1, "awb_bol_no", Primary!) = DataModified! OR &
// idw_other.GetItemStatus(1, "awb_bol_no", Primary!) = NewModified! THEN
//
// For ll_row = 1 to idw_pack.Rowcount()
// idw_pack.object.shipper_tracking_id[ll_row] = idw_other.object.awb_bol_no[1]
// NEXT
// END IF
// END IF
//END IF /* 3COM */

//3/10 JAyres Check to see if Customer is Active
// dts 4/09/15 - skipping this check.  The Picking Owner is the same as the Detail owner (which was checked above.
//If gs_project = 'PANDORA'  and tab_main.tabpage_pick.dw_pick.RowCount() > 0 then
// FOR i_indx = 1 to tab_main.tabpage_pick.dw_pick.RowCount()
// llPickCount = tab_main.tabpage_pick.dw_pick.RowCount()
// SetMicroHelp("Checking for Active Customers " + String(i_indx) + " of " + String(llPickCount))
// llOwnerID =  tab_main.tabpage_pick.dw_pick.GetItemNumber(i_indx,"owner_id")
// lsOwnername =  tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"cf_owner_name")
//
// If Right(Trim(lsOwnername), 3) = '(C)' Then
// Select Distinct dbo.Customer.Cust_Name
// Into  :ls_INActiveCustomerName
// FROM dbo.Owner WITH (NOLOCK)
// JOIN dbo.Customer  WITH (NOLOCK)
// ON dbo.Owner.Project_ID = dbo.Customer.Project_ID
//  AND dbo.Owner.owner_cd = dbo.Customer.Cust_Code
// Where dbo.Owner.Owner_ID = :llOwnerID
//     and dbo.Customer.Customer_Type = 'IN'
// and dbo.Owner.Project_ID = :gs_project
// USING SQLCA;
//
// If NOT ( ls_INActiveCustomerName = '' or IsNULL(ls_INActiveCustomerName) ) Then
// If IsNULL(lsOwnername) Then lsOwnername = ''
//
// MessageBox(is_title, "Owner Name: "+  lsOwnername + " is INACTIVE at Row "+string(i_indx) +" of Picking List.~r~rPlease Enter an Active Owner then Save." )
// return -1
//
// End If
//
// End If
//TimA 08/11/11 Pandora issue #261
//****************************
// If ibpickmodified Then
// ls_Sku2 = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Sku")
// lsSuppCode= tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Supp_Code")//
// ls_Country_of_Origin= tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Country_of_Origin")//
// ls_WarehouseCode = idw_main.GetItemString(1, "wh_code")
// ls_L_Code = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"L_Code") //
// ls_Inventory_Type= tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Inventory_Type") //
// ls_Serial_No = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Serial_No")
// ls_Lot_No = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Lot_No")//
// ls_PO_No = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"PO_No")//
// ls_PO_No2 = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"PO_No2")//
// ls_Container_ID = tab_main.tabpage_pick.dw_pick.GetItemString(i_indx,"Container_ID")//
// ld_Expiration_Date = tab_main.tabpage_pick.dw_pick.GetItemDateTime(i_indx,"Expiration_Date")//
//
//
// select
// Inventory_Type.Inventory_Shippable_Ind
// INTO :ls_ShipType
// from Content,Inventory_Type
// where Content.Inventory_Type = Inventory_Type.Inv_Type
// and Content.project_id = Inventory_type.project_id
// and content.Project_ID = :gs_project
// and Inventory_Type.Project_ID = :gs_project
// and Content.SKU = :ls_Sku2
// and Content.Supp_Code = :lsSuppCode
// and Content.Owner_ID  = :llOwnerID
// and Content.Country_of_Origin  = :ls_Country_of_Origin
// and Content.WH_Code = :ls_WarehouseCode
// and Content.L_Code = :ls_L_Code
// and Content.Inventory_Type = :ls_Inventory_Type
// and Serial_No = :ls_Serial_No
// and Lot_No = :ls_Lot_No
// and PO_No = :ls_PO_No
// and PO_No2 = :ls_PO_No2
// and Container_ID = :ls_Container_ID
// and Expiration_Date = :ld_Expiration_Date
// Using SQLCA;
//
// If ls_ShipType ="" then
// Messagebox(is_title,"'" + ls_Serial_No + "' INVALID SERIAL NUMBER:",StopSign!)
// Return -1
// End if
//
// If ls_ShipType <> 'Y' then
// Messagebox(is_title,"THIS SERIAL NUMBER '" + ls_Serial_No +"' HAS A NON-SHIPPABLE INVENTORY TYPE",StopSign!)
// Return -1
// end if
// End if
//***************************
// Next
//End If  /* PANDORA */
/* 10/06/2010 ujh: Picking Tab COO Validation:  Coo must be in Country table and not = to 'XX'
Vlidation occurs only if the order is international
*/
// 12/15/2010 ujh: Change so COO Validation comes only after there are packing rows.
//If gs_project = 'PANDORA'  and tab_main.tabpage_pick.dw_pick.RowCount() > 0 then
If gs_project = 'PANDORA' and idw_pack.RowCount() > 0 then
// ET3 Pandora 496 - force all packing rows to have valid dims
DECIMAL llen, lw, lh, lgw
BOOLEAN bFailDimTest = FALSE
BOOLEAN bFailScheduleCdTest = FALSE
BOOLEAN bFailCarrierTest = FALSE
BOOLEAN dFailCoo = FALSE
String lsCoo
FOR i_indx = 1 to idw_pack.RowCount()
llen = idw_pack.getitemnumber( i_indx , "length" )
lw   = idw_pack.getitemnumber( i_indx , "width" )
lh   = idw_pack.getitemnumber( i_indx , "height" )
lgw  = idw_pack.getitemnumber( i_indx , "weight_gross" )
//TimA 04/09/13 Pandora issue #560 Must be valid COO
lsCoo = idw_pack.GetItemString(i_indx, "country_of_origin")
// ET3 2012-10-30 Pandora 496 - Exception for multiple row cartons - skip the DIM/Weight test
llFindRow = idw_pack.Find("Upper(Carton_no) = '" + Upper(idw_pack.GetItemString(i_indx,'carton_no')) + "'",1, (i_indx - 1))

IF llFindRow > 0 THEN
bFailDimTest = FALSE
ELSEIF (llen <= 0 OR lw <= 0 OR lh <= 0 OR lgw <= 0) THEN
bFailDimTest = TRUE
ELSE
bFailDimTest = FALSE
END IF
//TimA 05/06/13 added XXX and IsNull to the if condition
If (lsCoo = "XX" or lsCoo = 'XXX' or lsCoo = '' or IsNull(lsCoo) ) Then
//If lsCoo = "XX"  Then
dFailCoo = True
End if
// ET3 Pandora 532 - Dims don't need to be verified for orders with Schedule Code of DOS/NOS
// and/or Carrier Field of MLOGSHLSHL/VIRTGROSHL
ls_user_field1 = UPPER(TRIM(idw_other.getitemstring( 1, 'user_field1' )))
IF ls_user_field1 = 'DOS' OR ls_user_field1 = 'NOS' THEN
bFailScheduleCdTest = FALSE
ELSE
bFailScheduleCdTest = TRUE
END IF
ls_carrier = UPPER(TRIM(idw_other.getitemstring( 1, 'carrier' )))
IF ls_carrier = 'MLOGSHLSHL' OR ls_carrier = 'VIRTGROSHL' THEN
// Begin -02082022- Dinesh - S66897- Google - SIMS - CBOL Changes
if inewindex=5 then
idw_other.SetItem(1,'shipment_id',lsinvoice_no )
end if
// End - 02082022- Dinesh - S66897- Google - SIMS - CBOL Changes
bFailCarrierTest = FALSE
ELSE
bFailCarrierTest = TRUE
END IF
IF bFailDimTest AND bFailScheduleCdTest AND bFailCarrierTest THEN
ls_error = 'Error in row ' + string(i_indx) + '~r~n' &
+ 'All values for length, width, height and ' + '~r~n' &
+ 'gross weight must be greater than zero.'
SetMicroHelp("Save Interrupted - invalid Dimensions!")
messagebox (is_Title, ls_error, StopSign!)
return -1
END IF
If dFailCoo then
//TimA 05/06/13 Updated the messagebox
messagebox (is_Title, "COO cannot be XX or XXX or Null.  Please update the COO in the Picking tab. ", StopSign!)
Return - 1
End if
NEXT
String ls_Country_FROM, ls_country_TO //ls_Wh_Cd,
//already have ls_wh_code.... ls_Wh_cd = idw_main.GetItemString(1, "wh_code")
ls_Country_TO = tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country")
Select Country
into :ls_Country_FROM
From Warehouse WITH (NOLOCK)
where Wh_Code = :ls_Wh_code;
if ls_Country_FROM <> ls_Country_TO then  // this is an international order so validate
// Validate COO for all parent (not child) items. -  KZUV.COM
// ET3 2012-10-22 Pandora 470 - International orders must be SOM METRIC
IF tab_main.tabpage_pack.rb_eng.checked = TRUE THEN
ls_error = "This order is an International Order. ~r~n" &
+ "Please change the Standard of Measure to Metric. ~r~n" &
+ "   Click 'OK' to make the change or ~r~n " &
+ "'Cancel' to cancel the save operation "
SetMicroHelp("Save interrupted - Intl Orders must be Metric")
CHOOSE CASE messageBox( is_Title, ls_error, StopSign!, OKCancel!)
CASE 1

DECIMAL ld_result
BOOLEAN b_temp
b_temp = ib_changed
ib_changed = FALSE
ls_Temp = 'M'
// ll_result = wf_convert( ls_Temp, 0, 1)   // ET3 This isn't working - going to brute force it

IF idw_pack.AcceptText() = -1 THEN
SetMicroHelp("Conversion failed; Save cancelled; Please manually convert and retry the save")
ll_result = -1
tab_main.tabpage_pack.rb_eng.checked = TRUE
tab_main.tabpage_pack.rb_metric.checked = FALSE
ib_changed = b_temp
return -1
ELSE
SetMicroHelp("Save interrupted - Making conversions")
FOR i_indx = 1 to idw_pack.RowCount()
idw_pack.object.standard_of_measure[i_indx] = ls_Temp  // 'M'
ld_result = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"height"),"IN","CM"),2)
idw_pack.object.height[i_indx] = ld_result
idw_pack.object.width[i_indx] = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"width"),"IN","CM"),2)
idw_pack.object.length[i_indx] = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"length"),"IN","CM"),2)
//idw_pack.object.weight_net[i_indx] = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"weight_net"),"PO","KG"),2)
idw_pack.object.weight_net[i_indx] = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"weight_net"),"PO","KG"),4)  // Dinesh - 01/28/2025 - SIMS-648-Development for Google - SIMS Packing list tab and SIMS Printed Packing list missing weights 
//idw_pack.object.weight_gross[i_indx] = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"weight_gross"),"PO","KG"),2)
idw_pack.object.weight_gross[i_indx] = round(i_nwarehouse.of_convert(idw_pack.getItemDecimal(i_indx,"weight_gross"),"PO","KG"),4)  // Dinesh - 01/24/2025 - SIMS-648-Development for Google - SIMS Packing list tab and SIMS Printed Packing list missing weights 
idw_pack.object.cbm[i_indx] = round(idw_pack.object.length[i_indx] * idw_pack.object.width[i_indx] * idw_pack.object.height[i_indx],2)
tab_main.tabpage_pack.rb_eng.checked = FALSE
tab_main.tabpage_pack.rb_metric.checked = TRUE
ib_changed = b_temp
NEXT
idw_pack.Accepttext( )
END IF
CASE 2
// user selected cancel - bail out
SetMicroHelp("Save cancelled")
return -1
CASE ELSE
// unknown result - bail out
SetMicroHelp("Save cancelled")
return -1
END CHOOSE
END IF
// Get the number of picking rows.
ll_numpicks = tab_main.tabpage_pick.dw_pick.RowCount()
// Loop through the picking rows.
FOR i_indx = 1 to ll_numpicks
SetMicroHelp("Checking COO's: " + String(i_indx) + " of " + String(ll_numpicks))
// If the component indicator is not '*' (child component),
IF trim(idw_pick.GetItemString(i_indx, 'component_ind')) <> "*" then
// Get the COO
ls_COO =  trim(upper(tab_main.tabpage_pick.dw_pick.GetItemString(i_indx, 'User_Field1')))
ll_COO_len = len(ls_COO)
If isNull(ls_COO) then ls_COO = 'NULL'
if trim(ls_COO) = '' then ls_COO = 'Empty or Blank'
Select Designating_Code
Into :ls_COO_db
From Country WITH (NOLOCK)
where Designating_Code = :ls_COO;
if not (ls_COO = ls_COO_db and ls_COO <> 'XX' and ls_COO <> 'XXX'  &
and ls_COO <> '' and ls_COO <> 'NULL')  then
messagebox(is_title, "COO: "+ls_COO + " is incorrect at Row " +string(i_indx) +" of Picking List." )
return -1
End If
End If
NEXT

end if // international order
End If  /* PANDORA */

//BCR 24-JAN-2012: Set Total No of Cartons on Packing into User_Field6 on Other Tab.
IF gs_project = 'PUMA' THEN
w_do.idw_other.SetItem(1, "user_field6", string(w_do.idw_pack.GetItemNumber(1, "c_carton_count")))
END IF
SetPointer(HourGlass!)

idw_pick.SetRedraw(FALSE)
// 02/01 PCONKL - pick list may be filtered to not show components, unfilter to process all rows
wf_set_pick_filter('Remove')
wf_set_pack_filter('Remove')

If idw_main.RowCount() > 0 Then
This.Trigger event ue_refresh()
ls_order = idw_main.GetItemString(1,"do_no")
// pvh - 08/24/05 - GMT
idw_main.SetItem(1,'last_update', ldtToday )
idw_main.SetItem(1,'last_user',gs_userid)
// 11/14 - PCONKL - Duplicate call to WF_VALIDATE - commented out
// If wf_validation() = -1 Then
// idw_pick.SetRedraw(True)
// SetMicroHelp("Save failed!")
// Return -1
// End If
End If

idw_pick.SetRedraw(True)

// 02/03 - PCONKL - We should be able to Pick a '-' if it is stored in Content. This will allow us to pick existing
// inventory if we set a trackable field afer we have recieved goods and not convert the DB
if ib_edit = false then /*New ORder*/

// Assign order no. for new order
ll_no = g.of_next_db_seq(gs_project,'Delivery_Master','DO_No')
If ll_no <= 0 Then
messagebox(is_title,"Unable to retrieve the next available order Number!")
Return -1
End If
// 3/01 - PCONKL - Can only take first 9 char of Project ID
ls_order = Trim(Left(gs_project,9)) + String(ll_no,"0000000")
//09/03 - PCONKL - 3COM Nashville needs to have the 'Delivery Note' (User Field 6) set based on order number
//04/04 - PCONKL - supporting multiple warehouses
// If Upper(gs_Project) = '3COM_NASH' Then
// Choose Case Upper(idw_main.GetITemString(1,'wh_Code'))
// Case 'NASHVILLE'
// idw_main.SetItem(1,'user_field6','MN' + String(ll_no,'0000000'))
// Case '3COM-SIN'
// idw_main.SetItem(1,'user_field6','MS' + String(ll_no,'0000000'))
// Case '3COM-HKG'
// idw_main.SetItem(1,'user_field6','MH' + String(ll_no,'0000000'))
// Case '3COM-NL'
// idw_main.SetItem(1,'user_field6','ME' + String(ll_no,'0000000'))
// End Choose
// End If

idw_main.setitem(1,"do_no",ls_order)
idw_main.setitem(1,"project_id",gs_project)
isle_order.Text = idw_main.GetItemString(1,'invoice_no')
is_dono = ls_order

For i = 1 to idw_detail.RowCount()
idw_detail.SetItem(i, "do_no", ls_order)
Next
//Set the Invoice number
//02/02 - Invoice number may have been set by creating a back order - don't assign here if it is already present
If idw_main.GetItemString(1,'invoice_no') > '' Then
SetMicroHelp( 'Using invoice_no: ' + isle_order.Text )
Else
idw_main.SetItem(1, "invoice_no", Right(ls_order, 7))
isle_order.text = Right(ls_order, 7)
isle_order2.text = Right(ls_order, 7)
// KRZ If this is Pandora,
If gs_project = "PANDORA" then
// Append the 'invoice number' with 'M'.  Make order no fields readonly.
idw_main.setitem(1, 'invoice_no', Right(ls_order, 7) + "M")
tab_main.tabpage_main.sle_order.enabled = false
tab_main.tabpage_main.sle_order2.enabled = false
isle_order.text = Right(ls_order, 7) + "M"
isle_order2.text = Right(ls_order, 7) + "M"
// End if this is Pandora.
End If

//TAM - W&S 2011/01  -   Order Number is Formatted.  We will not allow entry into this field.  
//Format is (WH_CODE(4th and 5TH Char)) + "S" + (Year(2 digit)) + (Month(2 Digit)) + (4 Digit Running number from Lookup table)
//Left 2 characters = WS for Wine and Spirt.
If Left(gs_project,3) = 'WS-'  Then
lsInvoiceNo =  Mid(gs_project,4,2) + '-S' + String(Today,'YYMM') + Right(ls_order, 4)
idw_main.SetItem(1, "invoice_no", lsInvoiceNo)
tab_main.tabpage_main.sle_order.enabled = false
tab_main.tabpage_main.sle_order2.enabled = false
isle_order.text = lsInvoiceNo
isle_order2.text = lsInvoiceNo
End If

End If
// If idw_pack.RowCount() > 0 Then     //If there are packing rows
// ls_carrier = UPPER(TRIM(idw_other.getitemstring( 1, 'carrier' )))
// IF ls_carrier = 'MLOGSHLSHL' OR ls_carrier = 'VIRTGROSHL' THEN
// idw_other.SetItem(1,'shipment_id',lsinvoice_no ) //  - 02082022- S66897- Google - SIMS - CBOL Changes
// End if
// end if
// 09/04 - PCONKL - For GM DAT, If manually entered Packaging order, make sure it is prefixed with a 'P'
If upper(gs_project) = 'GM_MI_DAT' and idw_main.GetITemString(1,'ord_Type') = 'P' Then
If left(idw_main.GetITemString(1,'invoice_no'),1) <> 'P' Then
idw_Main.SetITem(1,'Invoice_no', 'P' + idw_main.GetITemString(1,'invoice_no'))
isle_order.text = idw_main.GetITemString(1,'invoice_no')
isle_order2.text = idw_main.GetITemString(1,'invoice_no')
end IF
End iF /* GM */
is_bolno = Right(idw_main.GetItemString(1,'invoice_no'), 7)
isle_order.Visible = FALSE
isle_order2.Visible = TRUE
else /*existing Order*/
// Update order status

If idw_main.RowCount() > 0 Then
If idw_main.GetItemString(1,"ord_status") <> "C" and &
idw_main.GetItemString(1,"ord_status") <> "D" and &
idw_main.GetItemString(1,"ord_status") <> "V" and &
idw_main.GetItemString(1,"ord_status") <> "H" and  /* 11/11 - PCONKL */ &
idw_main.GetItemString(1,"ord_status") <> "Q" and  /* 11/11 - PCONKL  (exported to scanner but not yet re-imported "QA Check"*/ &
idw_main.GetItemString(1,"ord_status") <> "R" Then   //6/21/04 - new 'R' -Ready To Ship status for 3COM
If idw_pick.RowCount() > 0 Then //For existing order if status not listed above if there are picking rows
If idw_pack.RowCount() > 0 Then     //If there are packing rows
// Begin - 03/16/2023- Dinesh - SIMS-53- Google - SIMS - Load Lock and New Loading Status
 if gs_project='PANDORA' then 
	
	// if gs_project='PANDORA' then // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
	tab_main.tabpage_other.cb_lock_load_google.visible = True// DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
	//end if
	If (w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLSTD' or w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLTMD') and ((isnull(w_do.idw_main.getitemstring(1,'user_field6'))) or (w_do.idw_main.getitemstring(1,'user_field6') = '')) then // DINESH - 05/18/2023- sims-53- Google - SIMS - Load Lock and New Loading Status - Issue on BOL trailer num and Seal number interchange
			messagebox (w_do.is_title, "Trailer Number can not be left blank, To load the order please enter the Trailer number!", StopSign!)   // DINESH- 05/18/2023 Just switched the fields from user_field3 to user_field6
			w_do.tab_main.SelectTab(2)
			w_do.idw_other.SetColumn('user_field6')
			w_do.idw_Other.SetFocus()
			ls_trailer_num=w_do.idw_main.getitemstring(1,'user_field6')
			w_do.idw_main.SetItem( 1, "user_field6", ls_trailer_num)
			lb_trailer_no = False
		else
			lb_trailer_no = True
		
	end if 
//	If (w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLSTD' or w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLTMD' or w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL') and ((isnull(w_do.idw_main.getitemstring(1,'user_field3'))) or (w_do.idw_main.getitemstring(1,'user_field3') = '')) then
//			messagebox (w_do.is_title, "Seal Number can not be left blank, To load the order please enter Seal number!", StopSign!) // DINESH - 05/18/2023- sims-53- Google - SIMS - Load Lock and New Loading Status - Issue on BOL trailer num and Seal number interchange
	//Akash Baghel......10/13/2023...... SIMS-338.....SIMS PIP/SIP - Re-enable WMS CUTOVER functionality
         ls_Cust_code = w_do.idw_main.GetItemString(1, 'cust_code')
	//If (w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLSTD' or w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLTMD' or w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL') and ((isnull(w_do.idw_main.getitemstring(1,'user_field3'))) or (w_do.idw_main.getitemstring(1,'user_field3') = '')) then
	 If ls_cust_code <> 'WMSCUTOVER' and (w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLSTD' or w_do.idw_main.getitemstring(1,'Carrier')='LSLGFTLTMD' or w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL') and ((isnull(w_do.idw_main.getitemstring(1,'user_field3'))) or (w_do.idw_main.getitemstring(1,'user_field3') = '')) then      ////Akash Baghel....10/13/2023...... WMSCUTOVER Condition SIMS-338.....SIMS PIP/SIP - Re-enable WMS CUTOVER functionality
	          messagebox (w_do.is_title, "Seal Number can not be left blank, To load the order please enter Seal number!", StopSign!) // DINESH - 05/18/2023- sims-53- Google - SIMS - Load Lock and New Loading Status - Issue on BOL trailer num and Seal number interchange
			w_do.tab_main.SelectTab(2)   // DINESH- 05/18/2023 -Just switched the fields from user_field6 to user_field3
			w_do.idw_other.SetColumn('user_field3')
			w_do.idw_Other.SetFocus()
			ls_seal_num=w_do.idw_main.getitemstring(1,'user_field3')
			w_do.idw_main.SetItem( 1, "user_field3", ls_seal_num)
			lb_seal_no = False
		else
			lb_seal_no = True
	End If
	 if ((lb_trailer_no= False and lb_seal_no = False)  or (lb_trailer_no= True and lb_seal_no = False) or  (lb_trailer_no= False and lb_seal_no = True)) and idw_pack.rowcount() > 0 then
			 isLoad_Status = 'UNLOCK_ON_SAVE' 
			idw_main.SetItem(1,"ord_status","A") //then set status to Packing(A)
				if w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL' then
					tab_main.tabpage_other.cb_lock_load_google.visible = False
				end if
			
			
	elseif w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL' and  (lb_trailer_no= False and lb_seal_no = True) and idw_pack.rowcount() > 0 then	
			// isLoad_Status = 'UNLOCK_ON_SAVE' 
			idw_main.SetItem(1,"ord_status","L") //then set status to Loading(L)
			tab_main.tabpage_other.cb_lock_load_google.visible = False
			
			
	elseif (lb_trailer_no= True and lb_seal_no = True) and idw_pack.rowcount() > 0 then
			
		if w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL' then	
			//isLoad_Status = 'LOCK_ON_SAVE'
			idw_main.SetItem(1,"ord_status","L") //then set status to Loading(L)
			tab_main.tabpage_other.cb_lock_load_google.visible = False
			
			else
				
				If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"  tHEN // Dinesh - 05/08/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
				//If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"  and ls_Load_Lock <>  'N' tHEN // Dinesh - 05/08/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
				//if 
					 if ib_lock= True then
//						lsMsg = 'LOAD ID ' + isloadId + ' will locked when order is placed in to LOADING Status.  Do you want to proceed?' // Dinesh - 03/31/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
//						MessageBox( is_title, lsMsg)
						
						lsMsg = 'LOAD ID ' + isloadId + ' will locked when order is placed in to LOADING Status.  Do you want to proceed?' // Dinesh - 03/24/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
							If MessageBox( is_title, lsMsg, Exclamation!, YesNo!,2 ) <> 1 Then
								return 0
							Else 
								isLoad_Status = 'LOCK_ON_SAVE'
								idw_main.SetItem(1,"ord_status","L") //then set status to Loading(L)
							End If 
						
						
//						isLoad_Status = 'LOCK_ON_SAVE'
//						idw_main.SetItem(1,"ord_status","L") //then set status to Loading(L)
						//ib_lock = False
					end if
				
					if  ib_lock = False then
						 isLoad_Status = 'UNLOCK_ON_SAVE' 
						idw_main.SetItem(1,"ord_status","A") //then set status to Loading(L)
					End if
				end if
			End if
	end if

	
else
		idw_main.SetItem(1,"ord_status","A") //then set status to Packing(A) // other than Pandora
end if
// End - 03/16/2023- Dinesh - SIMS-53- Google - SIMS - Load Lock and New Loading Status
// 09/16 - PCONKL - Set Pack Start Date if not already populated
If IsNull(idw_main.GetItemDateTime(1, 'pack_start_time')) Then
idw_main.SetItem(1,'pack_start_time',ldtGMT  )
End If
// 01/27/2010 ujh; Set Pick_Complete 1 of 3:  Due to change to Packing status,
//                             electronically set Pick_complete to current date if and only if it is not now set.
IF Upper(gs_project) = 'PANDORA' THEN
ldtPickComplete = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') )
If IsNull(idw_main.GetItemDateTime(1, 'pick_complete')) Then
idw_main.setitem(1,'pick_complete', ldtPickComplete )
End If
//dts 11/12/10 - moved these checks inside IF 'PANDORA' condition, and added Ship_VIA check...
// Make sure Carrier, Transport Mode, Freight Terms  are populated.
//dts 2011-02-14 - added request_date to this validation...
ls_freightterms = tab_main.tabpage_other.dw_other.getitemstring(1, "freight_terms")
ls_transmode = tab_main.tabpage_other.dw_other.getitemstring(1, "transport_mode")
ls_carrier = tab_main.tabpage_other.dw_other.getitemstring(1, "carrier")
//dts 2/15/11 - ls_ShipVIA = tab_main.tabpage_other.dw_other.getitemstring(1, "Ship_VIA")
ldt_RequestDate = idw_main.GetItemDateTime(1, 'request_date')

// Make sure the 'carton type' is populated for all packing rows. - KZUV.COM
// Get the number of packing rows.
ll_numpackrows = idw_pack.Rowcount()
// Loop through the packing rows.
For ll_packrownum = 1 to ll_numpackrows
// Get the carton type.
ls_cartontype = trim(idw_pack.getitemstring(ll_packrownum, "carton_type"))
// If the carton type is null or blank,
if isnull(ls_cartontype) or ls_cartontype = "" then
// Modify the error message
ls_error += "~r~nThe carton type cannot be blank for row #" + string(ll_packrownum) + "."
lb_failed = true
End If
Next // Next packing row.

// If any are null or blank,
if len(trim(ls_freightterms)) = 0 or isnull(ls_freightterms) then
//ls_error = "You must provide the Freight Terms on the 'Other Info' Tab."
ls_error = "You must provide the Incoterm on the 'Other Info' Tab."
lb_failed = true
Else
//TimA 10/08/12 Pandora issue #500
String lsDM_Country, lsCustCountry, lsEUCountryInd
//Get the From and To countries anlog with the EUCountry Ind
//TimA 11/02/12 Per Dave change we chould be using DM.Country not C2.Country
Select  DM.Country as DM_Country, C.Country C_Country ,U.EU_country_Ind
INTO :lsDM_Country, :lsCustCountry, :lsEUCountryInd
From delivery_master DM WITH (NOLOCK)
JOIN Customer C WITH (NOLOCK) ON DM.project_id = C.Project_ID
And DM.User_Field2 = C.Cust_Code
JOIN Customer C2 WITH (NOLOCK) ON DM.project_id = C2.Project_ID
And DM.Cust_Code = C2.Cust_Code
JOIN Country U  WITH (NOLOCK) ON U.designating_code in (DM.country, C.Country)
Where DM.project_id = 'PANDORA'
And Do_no = :lsDONO
Group by DM.Country , C.Country ,U.EU_country_Ind;
//TimA Don't use EU for now
//If lsEUCountryInd = 'N' then
//Only give an error if the freight terms is NA and international
If lsDM_Country <> lsCustCountry and ls_freightterms = 'NA' then
ls_error = "Incoterm can not be ''NA'' on international orders on the 'Other Info' Tab."
lb_failed = true
// End if
End if
End IF
if len(trim(ls_transmode)) = 0 or isnull(ls_transmode) then
ls_error = "You must provide the Transportation Mode on the 'Other Info' Tab."
lb_failed = true
End IF
if len(trim(ls_carrier)) = 0 or isnull(ls_carrier) then
ls_error = "You must provide the Carrier on the 'Other Info' Tab."
lb_failed = true
End IF
//dts - 2011-02-14 - added custom validation for 'Reqd Deliver Date' (at packing)
if isnull(ldt_RequestDate) or ldt_RequestDate < datetime('2011-01-01')  then
ls_error = "You must enter the Reqd. Delivery Date." //get the label from datawindow?
lb_failed = true
tab_main.SelectTab(1)
idw_main.SetColumn('request_date')
End IF
//dts - 2/15/11 - no longer requiring Ship_Via as we are using customer name on the CI 3B18
//if ls_Country_FROM <> ls_Country_TO then   // this is an international order so validate Ship_Via
// if len(trim(ls_ShipVIA)) = 0 or isnull(ls_ShipVIA) then
// ls_error = "You must provide a value for Ship_VIA on the 'Other Info' Tab."
// lb_failed = true
// End IF
//end if
// Quit processing
If lb_failed then
// Set microhelp.
SetMicroHelp("Save Failed!")
messagebox (is_Title, ls_error, StopSign!)
return -1
End If
// 01/27/2010 ujh: End Pick_complete Reset.
End if
/* dts - 9/16/2010 - Turning the CI batch_transaction back on... */
// If we haven't already sent the 3B18 for this order,
// 10/06/2010 ujh And it is true that awb_bol_no and Cost center are populated then we send
//If (idw_main.getitemstring(1,'vor_shipment_ind')  = 'N' &
//or IsNull(idw_main.getitemstring(1,'vor_shipment_ind'))) &
//and ( len(idw_main.GetItemString(1,"awb_bol_no")) > 0 &
//and  len(idw_main.GetItemString(1,"user_field10"))  > 0) then
//If ( len(idw_main.GetItemString(1,"awb_bol_no")) > 0 &
//and  len(idw_main.GetItemString(1,"user_field10"))  > 0) then

// LTK 20120523  Pandora #370 Moved the CI code from below to CI/LT button on packing tab.
//
// // Begin a new transaction.
// //Execute Immediate "Begin Transaction" using SQLCA;
// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// //TimA 04/26/11 Pandora issue #211
// //Moved the below code to the end of us_save
// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// // See if there's an existing CI record. (11/24 dts: added trans_status = 'N' condition)
// Select count(*)
// into :ll_numexistingci
// from batch_Transaction
// where project_id = 'PANDORA'
// AND trans_type = 'CI'
// and trans_status = 'N'
// and trans_order_id = :ls_order;
//
// // If there isn't an existing CI transaction (in New status) for this order number,
// If ll_numexistingci = 0 then
// lbGenerateCI = True
// else
// lbGenerateCI = False
//// // Begin a new transaction.
//// Execute Immediate "Begin Transaction" using SQLCA;
//// // Insert a new record into batch_transaction to create the 3B18.
//// Insert Into batch_Transaction
//// (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
//// Values(:gs_Project, 'CI', :ls_order, 'N', :ldtToday, '');
////
//// // Commit the transaction.
//// Execute Immediate "COMMIT" using SQLCA;
// End If
// Set the vor_shipment_ind to indicate we've already sent the 3B1B for this order.
idw_main.setitem(1,'vor_shipment_ind', 'Y')
// //End IF // End If we haven't already sent the 3B1B for this order.
//
// //Jxlim 03/31/2011UPS Load Tender requirement. #149
// //Each time a delivery order is saved  in Packing status in which Ord_status = ‘A’,
// //and wh_code country is US and Carrier is UPS check if the record exists in Batch_tansaction table.
// Select Country
// into :ls_Country
// From Warehouse
// where Wh_Code = :ls_Wh_code;
//Jxlim 06/28/2011 Commented code for country since this is now not limited to US warehouse per Ian
// //Jxlim 04/27/2011Ship from location per BRD changed use user_field2 from other infor tab.
// ls_Cust_code = idw_other.GetItemString(1, 'User_field2')
// Select Country Into :ls_Country
// From Customer
// Where Cust_Code = :ls_Cust_code
// And Customer_type = 'WH'
// Using SQLCA;


// LTK 20120523  Pandora #370 Moved the Load Tender code from below to CI/LT button on packing tab.
//
// ls_ups = Mid(ls_carrier,1,3)
//
// //Jxlim 06/28/2011 Commented code for country since this is now not limited to US warehouse per Ian
// //If not exist create one.
// //If idw_main.GetItemString(1,"ord_status") = "A" And ls_Country = 'US'  And ls_ups = 'UPS' Then
// If idw_main.GetItemString(1,"ord_status") = "A"  And ls_ups = 'UPS' Then
// Select count(*)
// into :ll_numexistingup
// from batch_Transaction
// where project_id = 'PANDORA'
// AND trans_type = 'UP'
// and trans_status = 'N'
// Using SQLCA;
// //and trans_order_id = :ls_order;
//
// // If there isn't an existing UP transaction then create a trans record.
// If ll_numexistingup = 0 Then
// lbGenerateUP = True
// Else
// lbGenerateUP = False
//// // Begin a new transaction.
//// Execute Immediate "Begin Transaction" using SQLCA;
//// // Insert a new record into batch_transaction to create the UP
//// Insert Into batch_Transaction
//// (project_ID, Trans_Type, Trans_order_id, Trans_Status, Trans_Create_Date, Trans_Parm)
//// Values(:gs_Project, 'UP', :ls_order, 'N', :ldtToday, '');
////
//// // Commit the transaction.
//// Execute Immediate "COMMIT" using SQLCA;
// End If
// End If
// //Jxlim 03/31/2011 end of code for UPS Load tender
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//TimA 04/26/11 Pandora issue #211
//Moved the above code to the end of us_save
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Else //for existing order if there are picking row but not packing row
If idw_main.GetItemString(1,"ord_status") <> "I" Then //and order status is not Picking(I)
idw_main.SetItem(1,"ord_status","P") //then set status to Process(P)
// 01/27/2010 ujh; Set Pick_Complete 2 of3:
IF Upper(gs_project) = 'PANDORA' THEN
idw_main.setitem(1,'pick_complete',datetime( '00:00:00') )
//JXLIM 11/19/2012 Pandora FWD Pick BRD #464 Prompted message for auto stcok transfer order when the order is pick and save from new status.  Should the message go to after saving .....
//If lb_stockTransf_created = True Then
If wf_Fwd_TransferOrder() = True Then
MessageBox('Auto Stock Transfer', 'SIMS has auto created the FWD Pick stock transfer orders')
End If
End if
End if
End If
Else
idw_main.SetItem(1,"ord_status","N") //JXLIM 11/19/2012 Pandora; Process or Picking order status being put back to New.
// 01/27/2010 ujh; Set Pick_Complete 3 of 3:
IF Upper(gs_project) = 'PANDORA'  THEN
//idw_main.setitem(1,'pick_complete',datetime( '00:00:00') )
idw_main.setitem(1,'pick_complete',datetime( 'null') )
//JXLIM 11/19/2012 Pandora FWD Pick BRD #464 //Provide error message to void stock transfer order when Process(P) or Picking (I) is put back to New and save.
//Should the message go to after saving .....
//If   lb_stockTransf_created = True Then
If wf_Fwd_TransferOrder() = True Then
MessageBox('Auto Stock Transfer', +&
'Please Void/Delete any Transfer orders' +&
'~rthat were generated as a a result of Outbound Order',  StopSign!)
Return -1
End If
End if
End If
// 03/02 - PCONKL - Set Status to Delivered if Complete and Delivery Date Entered
Elseif idw_main.GetItemString(1,"ord_status") = 'C' Then
If Not IsNull(idw_main.GetItemDateTime(1,"Delivery_Date")) Then
idw_main.SetItem(1,"ord_status","D")
End If
End If
// 5/3/00 PCONKL - we must set the true order # to new detail rows added to existing orders
//                 since the sle_edit has the invoice # and not the PK
// 02/07 Only set if not present, wasted updates to DB otherwise
For i = 1 to idw_detail.RowCount()
If isNull(idw_Detail.GetITemString(i,'do_no')) or idw_Detail.GetITemString(i,'do_no') = "" Then
idw_detail.SetItem(i, "do_no", ls_order)
End If
Next
End If
end if


////06/05 - PCONKL - Update Carton serials if Voided - must be done before picking detail rows are deleted
//If idw_main.RowCount() > 0 Then
// If idw_main.GetItemString(1,"ord_status") = 'V'  Then
// wf_save_carton_serial()
// End If
//End If

tab_main.tabpage_pack.dw_packlist_notes.AcceptText()

//save changes to database

//08/06 - PCONKL - Moved outside of transaction
If idw_main.RowCount() > 0 Then
If idw_main.GetItemString(1,"ord_status") <> "C" Then
f_getprice(idw_main, idw_detail)
// *** 12/06 - PCONKL - Hardcoded to ensure bypass for those that are not enabled (akkow for controleld rollout to prod) ****
If not ibServerAllocationEnabled Then
If wf_update_content() = -1 Then return -1 /* 12/06 - PCONKL - moved to server*/
End If
End If
End If

//Begin - Dinesh - 08/22/2023- SIMS-198- Google read only screen

//if gs_project='PANDORA' then
//		wf_delivery_order_readonly(lb_readonly)
//end if
//End - Dinesh - 08/22/2023- SIMS-198- Google read only screen

Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/

If idw_main.RowCount() > 0 Then
SQLCA.DBParm = "disablebind =0"
ll_result  = idw_main.Update(False, False)
SQLCA.DBParm = "disablebind =1"
Else
ll_result = 1
End If

//MEA - 12/11 - Send Nike DST File

IF ll_result = 1 then
IF  upper(left(gs_Project,4)) = 'NIKE' THEN
IF lb_send_nike_dst THEN
                                               
Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
Values(:gs_Project, 'PK', :lsDONO,'N', :ldtToday, '');
END IF
END IF
//14-FEB-2019 :Madhu S29511 -PhilipsCLS BlueHeart OutboundDeliveryStatusUpdate -START
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
IF upper(gs_project) ='PHILIPSCLS' or upper(gs_project) ='PHILIPS-DA' THEN
IF lb_rd_change THEN
Insert Into Batch_Transaction (Project_Id, Trans_Type, Trans_Order_Id, Trans_Status, Trans_Create_Date, Trans_Parm)
Values(:gs_project, 'RD', :lsDONO,'N', :ldtToday, 'REQUESTEDDATE');
END IF

IF lb_sd_change THEN
Insert Into Batch_Transaction (Project_Id, Trans_Type, Trans_Order_Id, Trans_Status, Trans_Create_Date, Trans_Parm)
Values(:gs_project, 'SD', :lsDONO,'N', :ldtToday, 'SCHEDULEDDATE');
END IF
IF lb_dd_change THEN
Insert Into Batch_Transaction (Project_Id, Trans_Type, Trans_Order_Id, Trans_Status, Trans_Create_Date, Trans_Parm)
Values(:gs_project, 'ES', :lsDONO,'N', :ldtToday, 'DELIVEREDDATE');
END IF
END IF
//14-FEB-2019 :Madhu S29511 -PhilipsCLS BlueHeart OutboundDeliveryStatusUpdate -END
END IF


//dts - 9/2/2010 SQLCA.DBParm = "disablebind =0"
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS'  OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =0"
End If

If ll_result = 1 Then ll_result = idw_detail.Update(False, False)
If ll_result = 1 Then ll_result = idw_pack.Update(False, False)

//dts - 9/2/2010 SQLCA.DBParm = "disablebind =1"
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS'  OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =1"
End If


//12/06 - PCONKL - Pick and Pick Detail records being updated on the server...

// *** 12/06 - PCONKL - Hardcoded to ensure controlled rollout ****
If not ibServerAllocationEnabled Then
//dts - 9/2/2010 SQLCA.DBParm = "disablebind =0"
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =0"
End If
If ll_result = 1 Then ll_result = idw_pick_detail.Update(False, False)
If ll_result = 1 Then ll_result = idw_pick.Update(False, False)
//dts - 9/2/2010 SQLCA.DBParm = "disablebind =1"
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =1"
End If

End If

If ll_result = 1 Then
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =0"
End If
ll_result = tab_main.tabpage_serial.dw_serial.Update(False, False)

//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =1"
End If

END IF

// 02/05 - PCONKL - Content will fail if avail qty has been changed since the bucket was filled on the update - notify user to resave (below)
// IF you change the content datastore (d_do_content), MAKE SURE AVVAIL QTY IS ONE OF THE UNIQUE UPDATE COLUMNS
//12/06 - PCONKL - Content being updated on the server

// *** 12/06 - PCONKL - Hardcoded to ensure controlled rollout ****
If not ibServerAllocationEnabled Then
If ll_result = 1 Then
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =0"
End If

ll_result = ids_content.Update(False, False)
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =1"
End If
If ll_Result <> 1 Then
lbContentFailed = True
lsContentErrorText = ids_Content.wf_get_db_error_Text() /* 05/06/ PCONKL - get DB error Event information*/
End If
End If

End If

If ll_result = 1 Then ll_result = tab_main.tabpage_main.tab_address.Trigger Event ue_save()

// 10/03 - PCONKL - If we created a backorder, we might have copied alt addresses over to the new order, we need to save those new rows
If ll_Result = 1 Then
If isvalid(ids_Alt_addresses) Then
//Set the DONO on the new records
llRowCount = ids_Alt_addresses.RowCount()
For llRowPos = 1 to llRowCOunt
If ids_Alt_addresses.GetITemString(llRowPos,'do_no') = '' or isnull(ids_Alt_addresses.GetITemString(llRowPos,'do_no')) Then
ids_Alt_addresses.SetItem(llRowPos,'do_no',idw_main.GetITemString(1,'do_no'))
End If
Next
//dts - 9/2/2010 SQLCA.DBParm = "disablebind =0"
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS'  OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =0"
End If

ll_result = ids_Alt_addresses.Update(False, False)
//dts - 9/2/2010 SQLCA.DBParm = "disablebind =1"
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =1"
End If

End If
End If

//MEA No. of Carton in Other Info tab should be populated by getting the Total Cartons in Packing List tab after the packing list
//is being generated

IF Upper(gs_project) = "NIKE-MY" OR Upper(gs_project) = "NIKE-SG" THEN

IF idw_pack.RowCount() >= 1 THEN
idw_main.SetItem(1, "ctn_cnt", idw_pack.GetItemNumber(1,"c_carton_count"))
END IF
END IF


If idw_main.RowCount() = 0 and ll_result = 1 Then
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =0"
End If
ll_result  = idw_main.Update(False, False)
//mea -10/4/2010 - CHINASIMS currently only in test
If Upper(gs_project) = 'CHINASIMS' OR g.ibSupportUnicode = TRUE THEN
SQLCA.DBParm = "disablebind =1"
End If
End If

//// 05/10 - PCONKL - If unconfirming an order for Comcast, we want to flag any carton serial records so we can reconcile back to EIS if we change any pallet ID's
//If gs_project = 'COMCAST' and  ll_result = 1 and ibUnconfirmRequested Then
//
// SetMicroHelp("Updating Carton Serial Records for COMCAST....")
//
// Update Carton_Serial
// Set do_no = :lsDONO, status_cd = 'X'
// Where project_id = 'COMCAST' and Pallet_id in
// (Select serial_no from delivery_Serial_Detail where id_no in (select id_no from delivery_Picking_detail where do_no = :lsDONO));
//
// Update Carton_Serial
// Set do_no = :lsDONO, status_cd = 'X'
// Where project_id = 'COMCAST' and Carton_id in
// (Select serial_no from delivery_Serial_Detail where id_no in (select id_no from delivery_Picking_detail where do_no = :lsDONO));
//
// Update Carton_Serial
// Set do_no = :lsDONO, status_cd = 'X'
// Where project_id = 'COMCAST' and serial_no in
// (Select serial_no from delivery_Serial_Detail where id_no in (select id_no from delivery_Picking_detail where do_no = :lsDONO));
//
// SetMicroHelp("Ready.")
//
//End If /*Comcast unconfirm*/


If ll_result = 1 Then
Execute Immediate "COMMIT" using SQLCA;
If SQLCA.SQLCode = 0 Then
idw_main.ResetUpdate()
    idw_detail.ResetUpdate()
idw_pack.ResetUpdate()
tab_main.tabpage_serial.dw_serial.resetupdate()
//TimA 04/26/11
lbSave = True
If isvalid(ids_Alt_addresses) Then /* 10/03 - PCONKL */
ids_Alt_addresses.Reset()
End If
//12/06 - PCONKL - Content being udpated on Server, don't allocate untill everything else saved (Pick and Pick Detail updated on server as well)
//Jxlim 03/17/2011 Do not need to rollback serial record if user_field1 in pick list has changed.  Since  it user_field1 ibpickmodified will never set to True at the first place.
//Therefore include the ibpickmodified in the condition so it won't delete the serial record per Dave
//12/06 - PCONKL - Content being udpated on Server, don't allocate untill everything else saved (Pick and Pick Detail updated on server as well)
If idw_main.RowCount() > 0 and  ibpickmodified  Then
//If idw_main.RowCount() > 0 Then
If idw_main.GetItemString(1,"ord_status") <> "C" Then
// *** 12/06 - PCONKL - Hardcoded to ensure controlled rollout ****
If ibServerAllocationEnabled Then
If wf_update_content_Server() = -1 Then
//reset the order status that was also already saved and confirmed
If idw_Main.RowCount() > 0 Then
idw_Main.SetITem(1,'ord_status',lsOrdStat)
lsDoNO = idw_Main.GetITemString(1,'do_no')
Execute Immediate "Begin Transaction" using SQLCA;
UPdate Delivery_master
Set Ord_status = :lsOrdStat
Where do_no = :lsDONO;
Execute Immediate "COMMIT" using SQLCA;
Return -1
End If
End If
ibpickmodified = False
End If
End If
//Jxlim 04/11/2011 if user_field1 has been changed then save it.
Else  // ibPickModified is false, check UF1
If idw_main.RowCount() > 0 and gs_project = 'PANDORA' Then
llRowCOunt = idw_pick.RowCount()
For llRowPos = 1 to llRowCount
l_status = idw_pick.GetItemStatus(llRowPos, "user_field1", Primary!)
IF l_Status = NewModified! OR l_Status = DataModified! Then
idw_pick.Update()
llRowPos = llRowCount
End If
Next
//GailM 06/20/2017 - SIMSPEVS-605 - If any containers scanned, save it.
For llRowPos = 1 to llRowCount
l_status = idw_pick.GetItemStatus(llRowPos, "container_id_scanned_ind", Primary!)
IF l_Status = NewModified! OR l_Status = DataModified! Then
idw_pick.Update()
llRowPos = llRowCount
End If
Next
End if
//Jxlim 04/20/2011 End of code
End If
idw_pick.ResetUpdate()
idw_pick_detail.resetupdate()
ids_content.resetupdate()
If idw_main.RowCount() > 0 Then
This.Title = is_title + " - Edit"
ib_changed = False
ibUnconfirmRequested = False /* 02/08 - PCONKL */
ib_gemini = False //GAP1103
ib_edit = True
wf_check_status()
lsDONO = idw_main.GetItemString(1,'Do_no')  
//TimA 02/17/2012 OTM Project.  Get the status becasue if might have changed in the wf_enable_otm_Status function
lsOTMStatus= idw_main.getitemstring( 1,'OTM_Status')
If isOTMEnabled = 'Y' Then
//Get the ord status again for any changes that may have occured for OTM
Select ord_status, Last_update Into :lsOrdStat, :ldtlastDBUpdate
From Delivery_Master WITH (NOLOCK)
Where Project_ID = :gs_Project and Do_no = :lsDONo;
End if
// tab_main.SelectTab(1)
idw_main.SetFocus()
End If
SetMicroHelp("Record Saved!")
// Return 0
   Else
lsErrText = SQLCA.SQLErrText
Execute Immediate "ROLLBACK" using SQLCA;
lsMsg = "Unable to save Delivery Order Record!~r~r"
If lbContentFailed Then
lsMsg += "This inventory may have been allocated to another order.~rSee below for more information.~rPlease try saving it again."
End If
If Not isnull(lsContentErrorText) Then
lsMsg += "~r~r" + lsContentErrorText
End If
      MessageBox(is_title, lsMsg)
SetMicroHelp("Save failed!")
//TimA 04/26/11
lbSave = False
return -1
End If
Else
lsErrText = SQLCA.SQLErrText
   Execute Immediate "ROLLBACK" using SQLCA;
  lsMsg = "Unable to save Delivery Order Record!~r~r"
If lbContentFailed Then
lsMsg += "This inventory may have been allocated to another order.~rSee below for more information.~rPlease try saving it again."
End If
If Not isnull(lsContentErrorText) Then
lsMsg += "~r~r" + lsContentErrorText
End If
   MessageBox(is_title, lsMsg)
SetMicroHelp("Save Failed!")
//TimA 04/26/11
lbSave = False
return -1
End If

//06-Nov-2014 :Madhu- update Serial_Flag value from P to Y on SNI table -START
IF upper(gs_project) = 'ARIENS'  and tab_main.tabpage_serial.dw_serial.rowcount( ) > 0 THEN

ls_wh_code= idw_main.getitemstring(1,'wh_code')
//set Serial Flag =Y on SNI table
update Serial_Number_Inventory set Serial_Flag='Y' where Project_Id=:gs_project and WH_Code=:ls_wh_code
and Do_No=:is_dono and Serial_No in (
select A.Serial_No from Delivery_Serial_Detail A with(nolock), Delivery_Picking_Detail B with (nolock)
where A.SKU_Substitute=B.SKU
and A.Id_No=B.Id_No
and B.DO_No=:is_dono);
tab_main.tabpage_serial.dw_serial.Update(False, False)  //Do one more time save, if any SN# is overriden.

END IF
//06-Nov-2014 :Madhu- update Serial_Flag value from P to Y on SNI table -END

// pvh - 11/21/06 - set allocated quantity check to false, pick itemchanged ( qty ) and generate pick set the flag to true
setCalcAllocated( false )
// eom

////06/05 - PCONKL - Update Carton serials if scanned
//If idw_main.RowCount() > 0 Then
// If ibSerialModified and idw_main.GetItemString(1,"ord_status") <> 'C' and idw_main.GetItemString(1,"ord_status") <> 'D' and idw_main.GetItemString(1,"ord_status") <> 'V' Then
// wf_save_carton_serial()
// End If
//End If

// 05/04 - PCONKL - If we we changed Pick Qty and we have outbound serial numbers, we need to re-map the ID numbers
// Since we have new Pick Detail records (and new ID_NO's)
If ibserialsupdated Then
This.TriggerEVent('ue_update_serial_id')
End If

// 02/01 PCONKL - Filter Pick list to not show components if box is not checked
wf_set_pick_filter('Set')
wf_set_pack_filter('Set')

idw_pick.SetRedraw(TRUE)

ibCCCFirstSave = False /* 12/03 - PCONKL - for first time saving of an order - for CCC*/

If Pos(this.Title,"[") = 0 and idw_main.RowCount() > 0 Then
This.Title = This.Title + " [" + idw_main.GetITemString(1,'invoice_no') + "]"
End If

llRowCOunt = w_do.idw_Detail.RowCount()

//TimA 01/05/12 OTM Project
dwitemstatus lsact
String lsWeb

//isShipmentChangedFlag = 'Y'

If lbSave = True then
If isOTMEnabled = 'Y' Then

// LTK 20120515  Moved this code up from below because we need the ship_no even if the shipment has not changed.  This is for Pandora #417
Select max(ship_no)
INTO :lsShipNo
From shipment_line_item WITH (NOLOCK)
Where shipment_line_item.rodo_no = :lsDONO;

//These are records that are in a 'R' status and someone has changed the order.
//We need to set the OTM_Changed flag to 'Y'
If isShipmentChangedFlag = 'Y' Then
// LTK 20120515  Moved this SQL up above
// Select max(ship_no)
// INTO :lsShipNo
// From shipment_line_item
// Where shipment_line_item.rodo_no = :lsDONO;

// Update Shipment_Line_Item
// Set OTM_Changed = 'Y'
// where Ship_No = :lsShipNo;
// LTK 20120510  Pandora #395 Added last_user and last_update columns to the SLI update statement.
//TimA 11/15/12 Check to see if there is ShipNo is null first
//This was causing blocking when the value is Null
If lsShipNo <> '' or Not IsNull(lsShipNo) Then
Execute Immediate "Begin Transaction" using SQLCA;
Update Shipment_Line_Item
Set OTM_Changed = 'Y', Last_User = :gs_userid, Last_Update = :ldtGMT
where Ship_No = :lsShipNo;
Execute Immediate "COMMIT" using SQLCA;
isShipmentChangedFlag = 'N' //Reset the Flag
wf_set_otm_message('O')  //Set the OTM message off
End if
End if

// LTK 20120515  Pandora #395 Update the shipment table last user and last update
//TimA 11/15/12 Check to see if there is ShipNo is null first
//This was causing blocking when the value is Null
If lsShipNo <> '' or Not IsNull(lsShipNo) Then
Execute Immediate "Begin Transaction" using SQLCA;
Update Shipment
Set Last_User = :gs_userid, Last_Update = :ldtGMT
where Ship_No = :lsShipNo;
Execute Immediate "COMMIT" using SQLCA;
End if
If isFlagDeleteOTM = 'Y' Then
If isDoNoDelete <> '' or Not IsNull(isDoNoDelete) Then
lsDONO  = isDoNoDelete
ls_action = 'D'
//Call the OTM if there is an action
li_OTM_Return = ln_otm.uf_otm_send_order(ls_action, gs_project, lsDONO, isDeleteSkus, ls_return_cd, ls_error_message)
If li_OTM_Return = -1 then
//Error OTM
Messagebox('OTM Error Call','Unable to delete order from OTM')
Else
isFlagDeleteOTM = 'N'
if idw_main.RowCount() > 0 then
If lsOrdStat = 'V' then
//If we still have rows and the ord status Voided
lsSetOTM = 'V'
lbOTMFlag = True
End if
End if
//TimA 11/15/12 Removed because of possible conversion to Appeon
//goto OTM_Update
End if
End if
End if
//If lsOTMFromCountry = 'US' then  //We are only sending order to OTM if they originate in the US.  (For Now)
//TimA 11/15/12 because we had to remove the GO TO command above we needed to change the following If condition
If lsProcessOTM = 'Y' and (isDoNoDelete = '' or IsNull(isDoNoDelete)) then
//If lsProcessOTM = 'Y' then  //Lookup in the lookup table to see it the country is using OTM calls.  See comment further up code
If lsDONO = '' or IsNull(lsDONO) Then
lsDONO  = ls_order
End if
If lsOTMStatus = '' or IsNull(lsOTMStatus) Then
If llRowCOunt > 0 Then  //Detail Rowcount
If Messagebox("Send to OTM" ,"Do you want to send this order to OTM?  If so, this will lock the oder and you will not be able to add more detail records.",Question!,YesNo!,1) = 1 then
if idw_main.RowCount() > 0 then
If lsOTMStatus = '' or IsNull(lsOTMStatus) Then
ls_action = 'I' //New order
End if
//lsWeb =  ls_action + "," +  gs_project + "," +  lsDONO +"," + "Str of Sku's"  + "," +  ls_return_cd + "," + ls_error_message
If ls_action <> '' then
//Call the OTM if there is an action
li_OTM_Return = ln_otm.uf_otm_send_order(ls_action, gs_project, ls_order, isDeleteSkus, ls_return_cd, ls_error_message)
If li_OTM_Return = -1 then
//Error OTM
Messagebox('Error','OTM Insert Websphear Error ' + ls_error_message)
Else
lsOrdStat = 'N' //Set the ord_status back to New per Dave and Roy so that the order can be edited id needed 02/29/12
//lsOrdStat = 'H' //Set the ord_status to Hold just like eletronic records Per Roy 02/17/12
lsSetOTM = 'H'
lbOTMFlag = True
End if
End if  //No Action Code
Else //Detail Rowcount
idw_main.SetItem(1,"otm_status",'')
End If //End DetailRowcount
End if //End message box question
End if
Else
//Only allow updates if in New Status and OTM is either a P or and R
// If (lsOTMStatus = 'P'  or  lsOTMStatus = 'R') and idw_main.GetItemString(1,"ord_status") = "N" Then
//Remove OTM status 'R' per Ian 02/07/12
If (lsOTMStatus = 'P'  or  lsOTMStatus = 'H') and idw_main.GetItemString(1,"ord_status") = "N" Then
If ilUpdateOTM = 1 then
lsDONO  = ls_order
ls_action = 'U'  //Update OTM
//Call the OTM if there is an action
li_OTM_Return = ln_otm.uf_otm_send_order(ls_action, gs_project, ls_order, isDeleteSkus, ls_return_cd, ls_error_message)
If li_OTM_Return = -1 then
//Error OTM
Messagebox('Error','OTM Websphear Update Error ' + ls_error_message)
else
lsSetOTM = lsOTMStatus
//Set the update flage back to 0
ilUpdateOTM = 0
wf_set_otm_message('O')  //Set the OTM message off
lbOTMFlag = True
End if
End if //End Update Y/N
End if //End P status
End if  //No Status set
Else //Not US
lsSetOTM = 'N'
lbOTMFlag = True
End if  //Is US
End if  //Is OTM
End if //Save

//TimA 11/15/12 Removed because of possible conversion to Appeon
//OTM_Update:
//TimA 01/21/13 Moved this commit down because I think it was causing a problem when checking for serial numbers.
//If they failed this would still save the record.
//If lbOTMFlag = True then
// Execute Immediate "Begin Transaction" using SQLCA;
// UPdate Delivery_master
// Set Ord_Status = :lsOrdStat, OTM_Status = :lsSetOTM, OTM_Call_Date = :ldtGMT
// // Set OTM_Status = :lsSetOTM, OTM_Call_Date = :ldtGMT
// Where do_no = :lsDONO;
// Execute Immediate "COMMIT" using SQLCA;
//
//End if
//
// 08/11/2010 ujhall: 02 of ?? Full Circle Fix: Manage Serial nos in Serial_number_Inventory table
boolean lb_Error
string lswhcode, ls_owner_cd, lsSerializedInd,  lsSerial, lsfind
String ls_component_ind  //01/03/2011 ujh: S/N_P:
long ll_component_no, ll_return  //01/03/2011 ujh: S/N_P:
long ll_owner_id
String ls_Pono2, ls_Carton_No // TAM - 2018/02 - S14838
// if Pandora and if order status has changed from complete to packing, insert serial numbers back into serial_number_inventory table
// if upper(gs_project) = 'PANDORA' and ibUnconfirmFullCircle then
//BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
// ET3 2012-06-14: Implement generic test
// if (upper(gs_project) = 'PANDORA' OR upper(gs_project) = 'BLUECOAT') and ibUnconfirmFullCircle then
// TAM - 2018/02 - S14838 - Need to add Po_No2, carton_No(Container_Id), l_code back into Serial_Inventory_Table
if g.ibsnchainofcustody and ibUnconfirmFullCircle then
lb_Error = false
lsWhCode =  Upper(idw_main.getitemstring(1,'wh_code'))
Execute Immediate "Begin Transaction" using SQLCA;
FOR i_indx = 1 to tab_main.tabpage_serial.dw_serial.RowCount()
lsSKU =  tab_main.tabpage_serial.dw_serial.GetItemString(i_indx,'SKU')
lsSerial = tab_main.tabpage_serial.dw_serial.GetItemString(i_indx, 'Serial_no')
lsSerializedInd = tab_main.tabpage_serial.dw_serial.GetItemString(i_indx, 'Serialized_ind')
ls_component_ind =  tab_main.tabpage_serial.dw_serial.GetItemString(i_indx, 'component_ind')  //01/03/2011 ujh: S/N_P:
ll_component_no =  tab_main.tabpage_serial.dw_serial.GetItemNumber(i_indx, 'component_no')   //01/03/2011 ujh: S/N_P:
/*TODO TAM - we need to rebuild the Serial_Number_Inventory but we don't have all the fields needed
 for example ls_pono2 =  tab_main.tabpage_serial.dw_serial.GetItemString(i_indx, 'po_no2')  // TAM - 2018/02 - S14838 */

lsFind = "Upper(SKU) = '" + Upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(tab_main.tabpage_serial.dw_serial.GetItemString(i_indx, 'Supp_Code')) + "'"
lsFind += " and Line_Item_no =  " + String(tab_main.tabpage_serial.dw_serial.GetITemNumber(i_indx,'Line_Item_no'))
llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
If llFindRow > 0 Then
ll_owner_id = idw_Pick.GetItemNumber(llfindrow,'owner_id')
End if
// Get owner_cd
Select Owner_cd
Into :ls_owner_cd
From Owner WITH (NOLOCK)
where Project_id = :gs_project
and owner_id = :ll_owner_id;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
/* 01/03/2011 ujh: S/N_Pa:  The following requires dw_srial be orderd so Parents precede
children.  This was accomplished by the call to dw_sort() when the serial list was generated */
/* If a non-type "B" serialized parent has type "B" serialized children, we will put it in Serialized_Number_Inventory
so children can find their parent.  That means we will not want to delete a parent as long as
there are children in the table*/
llFindRow = 0   // Make sure no carry over from previous iteration. Don't care where child is, just that it exists
IF idw_serial.getitemString(i_indx, 'component_ind') = 'Y' &  
and idw_serial.getitemString(i_indx, 'Serialized_ind') <> 'B' then    
lsFind = "Component_No = "  + String(idw_serial.getitemnumber(i_indx,'component_no'))
lsFind += " And Serialized_ind = 'B' "
lsFind +=  " And Component_ind = '*' "
// Find this part's serialized children if it has any
llFindRow = idw_serial.Find(lsFind,1,idw_serial.RowCount())
// if a serialized child is found, need to create a FAKE serial number for this non serialized parent
If llFindRow > 0 then
sqlca.sp_next_avail_seq_no(gs_project,"Serial_Number_Inventory","Serial_No" ,ld_NxtSeq)//get the next available RO_NO
lsSerial = 'NA' + String(Long(ld_NxtSeq),"000000")
End if

end if //01/03/2011 ujh: S/N_Pa  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////


/*Per Trey, if serialnumber is dash (the default) or blank or null, do not write to tabel, otherwise write*/
// 01'03/2011 ujh: S/N_Pa: We will write unserialized parents that have serialized children.  llFindrow > 0 means we found a serialized child*/


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//01/03/2011 ujh: S/N_Pa:  The following were reversed in order to check the code in 01/31/2011.  Must be reversed for S/N_P
// if  not(isnull(lsSerial) or lsSerial = '-' or lsSerial = '') and Upper(lsSerializedInd) = 'B' then // original code
if (not(isnull(lsSerial) or lsSerial = '-' or lsSerial = '') and Upper(lsSerializedInd) = 'B') or llFindRow > 0  then // new S/N_P
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*01/03/2011 ujh: S/N_P:  The serial number SkU Combo should not be in the table at this point,
as the status has changed from Complete to packing.  Error if it is */
//ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, lsSKU, lsSerial,ls_Owner_cd, ls_component_ind, ll_component_no,true)   // 01/03/2011 ujh: S/N_Pb:   change call to add component_ind and component_no
//dts - 2/19/11 - added parameter to skip component number as part of the serial look-up condition (for receipts)
//TimA - 04/15/2011 added parameter to capture error message in calling function
//ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, lsSKU, lsSerial, ls_Owner_cd, ls_component_ind, ll_component_no, true, false)
ab_error_message_title = ''
ab_error_message = ''
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Check if Serial Number exist: ' + is_dono ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_save', 'Check if Serial Number exist: ' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
//24-Jul-2014 : Madhu -Added "is_dono,isinvoice_no" to write onto Method Trace Log
ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, lsSKU, lsSerial, ls_Owner_cd, ls_component_ind, ll_component_no, true, false,ab_error_message_title, ab_error_message,is_dono,isinvoice_no)
if ll_return = 1 then
lb_Error = true
else
// 01/03/2011 ujh: S/N_P:  Add Compnent_ind and component_no to table insert
//13-Nov-2014 :Madhu- Added Serial_Flag and Do_No values
/*TODO TAM - we need to rebuild the Serial_Number_Inventory but we don't have all the fields needed
 for example   Insert Into Serial_Number_Inventory (project_ID,Wh_code, Owner_id, Owner_cd, SKU, Serial_NO, &
Component_ind, Component_no, Update_date,Update_user,Serial_Flag,Do_No,Po_No2,Carton_ID,l_code)
Values(:gs_Project, :lsWhCode, :ll_Owner_id &
, :ls_Owner_Cd, :lsSKU  &
, :lsSerial
, :ls_Component_ind, :ll_Component_no, :ldtToday, :gs_userid,'Y',:is_dono,:ls_pono2,:ls_carton_no,:ls_l_code); */

//GailM 6/7/2019 S33409 Add serial inventory history audit columns
Insert Into Serial_Number_Inventory (project_ID,Wh_code, Owner_id, Owner_cd, SKU, Serial_NO, &
Component_ind, Component_no, Update_date,Update_user,Serial_Flag,Do_No,Transaction_Type,Transaction_Id)
Values(:gs_Project, :lsWhCode, :ll_Owner_id &
, :ls_Owner_Cd, :lsSKU  &
, :lsSerial
, :ls_Component_ind, :ll_Component_no, :ldtToday, :gs_userid,'Y',:is_dono,"Rebuild SN from ueSave",:is_dono);

//Insert Into Serial_Number_Inventory (project_ID,Wh_code, Owner_id, Owner_cd, SKU, Serial_NO, Update_date,Update_user)
//Values(:gs_Project, :lsWhCode, :ll_Owner_id &
//, :ls_Owner_Cd, :lsSKU  &
//, :lsSerial, :ldtToday, :gs_userid);

if sqlca.SQlcode <> 0 then
//Jxlim 09/10/2010 Added Rollback to prevent block/lock
Execute Immediate "ROLLBACK" using SQLCA;
MessageBox(ab_error_message_title, ab_error_message)
lb_Error = true
end if
end if // // 01/03/2011 ujh: End checking return code that serial number is not in table
end if

next
if lb_Error then
Execute Immediate "ROLLBACK" using SQLCA;
MessageBox(ab_error_message_title, ab_error_message)
//TimA 04/26/11
lbSave = False
//MessageBox("DB Error Inserting Serial Nums", SQLCA.SQLErrText)
return -1
else
Execute Immediate "COMMIT" using SQLCA;
//TimA 04/26/11
lbSave = True
// 01/03/2011 ujh: S/N_Pfx2  populate na_component_no from serial_number_inventory
// if upper(gs_project) = 'PANDORA' then
// if upper(gs_project) = 'PANDORA' OR upper(gs_project) = 'BLUECOAT' then
// BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
// ET3 2012-06-14: Implement generic test
//TimA 01/21/13 Moved from above.  Save OTM Information
If lbOTMFlag = True then
Execute Immediate "Begin Transaction" using SQLCA;
UPdate Delivery_master
Set Ord_Status = :lsOrdStat, OTM_Status = :lsSetOTM, OTM_Call_Date = :ldtGMT
// Set OTM_Status = :lsSetOTM, OTM_Call_Date = :ldtGMT
Where do_no = :lsDONO;
Execute Immediate "COMMIT" using SQLCA;
End if
if g.ibSNchainofcustody then
// For now do nothing with return code.  either there will be data or there will not
ll_return = wf_restore_component_no(tab_main.tabpage_serial.dw_serial)
end if
ibUnconfirmFullCircle = false
end if
end if // ibsnchainofcustody formerly project 'PANDORA' and unconfirm

// LTK 20120523 Pandora #370  Moved the CI/Load Tender code from below to a new CI/Load Tender command button on the Packing Tab
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////TimA 04/26/11 Pandora issue #211
////Confirming the CI transaction before the order is save may be the problem to pick complete date being written to CI 3B18
////The below code has been move from above.  About line 602
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//if upper(gs_project) = 'PANDORA' then
// //Only create the batch transactions if the above have been saved with no errors
// If lbSave = True then
// // See if there's an existing CI record. (11/24 dts: added trans_status = 'N' condition)
//// Select count(*)
//// into :ll_numexistingci
//// from batch_Transaction
//// where project_id = 'PANDORA'
//// AND trans_type = 'CI'
//// and trans_status = 'N'
//// and trans_order_id = :ls_order;
//
////
//// // If there isn't an existing CI transaction (in New status) for this order number,
////// If ll_numexistingci = 0 then
//// iF lbGenerateCI = True Then
//// // Begin a new transaction.
//// Execute Immediate "Begin Transaction" using SQLCA;
//// // Insert a new record into batch_transaction to create the 3B18.
//// Insert Into batch_Transaction
//// (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
//// Values(:gs_Project, 'CI', :ls_order, 'N', :ldtToday, '');
//// // Commit the transaction.
//// Execute Immediate "COMMIT" using SQLCA;
//// End if
////// End If
////
//
// // Set the vor_shipment_ind to indicate we've already sent the 3B1B for this order.
//// idw_main.setitem(1,'vor_shipment_ind', 'Y')
// //End IF // End If we haven't already sent the 3B1B for this order.
//
// //Jxlim 03/31/2011UPS Load Tender requirement. #149
// //Each time a delivery order is saved  in Packing status in which Ord_status = ‘A’,
// //and wh_code country is US and Carrier is UPS check if the record exists in Batch_tansaction table.
//// Select Country
//// into :ls_Country
//// From Warehouse
//// where Wh_Code = :ls_Wh_code;
//
// //Jxlim 04/27/2011Ship from location per BRD changed use user_field2 from other infor tab.
//// ls_Cust_code = idw_other.GetItemString(1, 'User_field2')
//// Select Country Into :ls_Country
//// From Customer
//// Where Cust_Code = :ls_Cust_code
//// And Customer_type = 'WH'
//// Using SQLCA;
////
//// ls_ups = Mid(ls_carrier,1,3)
//// //For PANDORA order where status is inPacking status(A) and warehouse country = US for UPS carrier.
//// If idw_main.GetItemString(1,"ord_status") = "A" And ls_Country = 'US'  And ls_ups = 'UPS' Then
//// Select count(*)
//// into :ll_numexistingup
//// from batch_Transaction
//// where project_id = 'PANDORA'
//// AND trans_type = 'UP'
//// and trans_status = 'N'
//// Using SQLCA;
//// //and trans_order_id = :ls_order;
////
//// // If there isn't an existing UP transaction then create a trans record.
//// If ll_numexistingup = 0 Then
// If lbGenerateUP = True then
// // Begin a new transaction.
// Execute Immediate "Begin Transaction" using SQLCA;
// // Insert a new record into batch_transaction to create the UP
// Insert Into batch_Transaction
// (project_ID, Trans_Type, Trans_order_id, Trans_Status, Trans_Create_Date, Trans_Parm)
// Values(:gs_Project, 'UP', :ls_order, 'N', :ldtToday, '');
//
// // Commit the transaction.
// Execute Immediate "COMMIT" using SQLCA;
// End if
//// End If
//// End If
// //Jxlim 03/31/2011 end of code for UPS Load tender
// end if
//end if
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// End of Pandora #370 code move

IF lb_send_nike_dst THEN
MessageBox ("Create DST", "DSTbatch file request created.")
End if

//BCR 13-JAN-2012: For PHXBRANDS, after everything else is successfully saved, check to see if Cust_Code value has changed.
//       If Yes, write the User_Field4 value (if any) for new Customer into Delivery Notes table. This is the NO CHEP Pallet project.
IF upper(gs_Project) = 'PHXBRANDS' THEN
IF idw_main.RowCount() > 0 THEN
lsDoNo = idw_main.GetItemString(1, "do_no")
llNoteSeqNo = 100 //This is an arbitrary number, but it tallies with what I use in Sweeper for this same process.
lsNewCustCode = idw_main.GetItemString(1, "cust_code")
IF lsOldCustCode <> lsNewCustCode THEN
SELECT user_field4
INTO :lsCustText
FROM Customer WITH (NOLOCK)
WHERE project_id = :gs_Project
AND cust_code = :lsNewCustCode
USING SQLCA;
IF NOT IsNull(lsCustText) AND lsCustText <> '' THEN
Execute Immediate "Begin Transaction" using SQLCA; /*PCONKL - Auto Commit Turned on to eliminate DB locks*/
//Delete any Notes entries for the old customer...if such was pulled from User_Field4 of Customer table.
delete from Delivery_Notes
where Project_ID = :gs_project and DO_NO = :lsDoNo and Note_Seq_No = :llNoteSeqNo
Using SQLCA;
//Insert value from Customer table for new Cust_Code
insert into Delivery_Notes (Project_ID, DO_NO, Note_Type, Note_Text, note_seq_no)
values (:gs_project, :lsDoNo, 'OM', :lsCustText, :llNoteSeqNo)
Using SQLCA;
If sqlca.sqlcode <> 0 Then
ls_ErrText = sqlca.sqlerrtext /*text will be lost after rollback*/
Execute Immediate "Rollback" using SQLCA;
Messagebox(is_Title, "Unable to create Delivery Note for newly selected Customer!~r~r" + ls_ErrText)
Return -1
End If
Execute Immediate "Commit" Using Sqlca;
If sqlca.sqlcode <> 0 Then
MessageBox(is_title,"Unable to Commit Delivery Notes for newly selected Customer!")
Return -1
End If
ELSE//Changed to a Customer who has no Notes data...
Execute Immediate "Begin Transaction" using SQLCA; /*PCONKL - Auto Commit Turned on to eliminate DB locks*/
//Delete any Notes entries for the old customer...if such was pulled from User_Field4 of Customer table.
delete from Delivery_Notes
where Project_ID = :gs_project and DO_NO = :lsDoNo and Note_Seq_No = :llNoteSeqNo
Using SQLCA;
If sqlca.sqlcode <> 0 Then
ls_ErrText = sqlca.sqlerrtext /*text will be lost after rollback*/
Execute Immediate "Rollback" using SQLCA;
Messagebox(is_Title, "Unable to delete Delivery Note for original Customer!~r~r" + ls_ErrText)
Return -1
End If
Execute Immediate "Commit" Using Sqlca;
If sqlca.sqlcode <> 0 Then
MessageBox(is_title,"Unable to Commit delete of Delivery Notes for original Customer!")
Return -1
End If
END IF //Cust notes
END IF //Cust Code changed
END IF //Rowcount > 0
END IF
//End PhxBrands change.

//TimA 02/04/12 OTM Project
If lbOTMFlag = True then
//TimA 01/21/13 Moved from above.  Save OTM Information
Execute Immediate "Begin Transaction" using SQLCA;
UPdate Delivery_master
Set Ord_Status = :lsOrdStat, OTM_Status = :lsSetOTM, OTM_Call_Date = :ldtGMT
// Set OTM_Status = :lsSetOTM, OTM_Call_Date = :ldtGMT
Where do_no = :lsDONO;
Execute Immediate "COMMIT" using SQLCA;
isle_order.Trigger Event modified()
End if
//TAM 2018/08 =S22531 Set Lock Status for the Load ID
//GailM 10/15/2018 Temporarily use flag to disable this function until other testing is done
//05-FEB-2019 :Madhu DE8493 - Pass Do_No to Trans Param
// Begin - Dinesh - 05/11/2023- SIMS-53- Loading status and Load lock
if lsordstat = 'P' and gs_project='PANDORA' Then 
	UPdate Delivery_master Set Load_Lock = 'N' Where load_id = :isLoadId;
end if
// End - Dinesh - 05/11/2023- SIMS-53- Loading status and Load lock
	
If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"tHEN

If isLoad_Status = 'LOCK_ON_SAVE' then
Execute Immediate "Begin Transaction" using SQLCA;
UPdate Delivery_master
Set Load_Lock = 'Y'
Where load_id = :isLoadId;
Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
Values(:gs_Project, 'LWON', :isLoadId,'N', :ldtToday, :is_dono);
Execute Immediate "COMMIT" using SQLCA;
isLoad_Status = 'NOLOCK'
icb_lock_load.Text = 'Unlock Load' 
icb_lock_load_google.Text = 'Unlock Load'    // Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
tab_main.tabpage_other.cb_lock_load_google.visible = true 
if w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL' then
	tab_main.tabpage_other.cb_lock_load_google.visible = False
end if
//tab_main.tabpage_pack.cb_lock_load.visible = true 
//if gs_project='PANDORA' then // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
//	tab_main.tabpage_pack.cb_lock_load.visible = False
//end if

icb_lock_load.Enabled = True
icb_lock_load_google.Enabled = True // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status

f_method_trace_special( gs_project, this.ClassName() + ' - ue_Save', 'load locked:' ,is_dono, ' ',' ',isLoadId)
End if
If isLoad_Status = 'UNLOCK_ON_SAVE' then
Execute Immediate "Begin Transaction" using SQLCA;
UPdate Delivery_master
Set Load_Lock = 'N'
Where load_id = :isLoadId;
Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
Values(:gs_Project, 'LLOCK', :isLoadId,'C', :ldtToday, :is_dono);
Execute Immediate "COMMIT" using SQLCA;
isLoad_Status = 'LOCK'
icb_lock_load.Text = 'Lock Load'
icb_lock_load_google.Text = 'Lock Load'
//tab_main.tabpage_pack.cb_lock_load.visible = true
// Begin -  DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
tab_main.tabpage_other.cb_lock_load_google.visible = true  
if w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL' then
	tab_main.tabpage_other.cb_lock_load_google.visible = False
end if
// End -  DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status
icb_lock_load.Enabled = True
icb_lock_load_google.Enabled = True
f_method_trace_special( gs_project, this.ClassName() + ' - ue_Save', 'load unlocked:' ,is_dono, ' ',' ',isLoadId)
End if
End If

//GailM 06/20/2017 - Determine if pick rows have container tracked records - Pandora SIMSPEVS-605
if lsordstat = 'P' Then
wf_check_container_scanned()
End If

//GailM 08/16/2018 - S20849 - Google Footprint Container Split
If Upper(gs_project) = 'PANDORA' and f_retrieve_parm("PANDORA","FLAG","CONTAINER MOVEMENT") = "Y" Then
If idw_main.GetItemString(1,"ord_status") <> 'C' and idw_main.GetItemString(1,"ord_status") <> 'D' and idw_main.GetItemString(1,"ord_status") <> 'V' Then
liRC = wf_check_footprint_containers()
End If
End If


//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_Save: ' + is_dono ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_Save', 'End ue_Save:' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added
Return 0

end event

event ue_delete;call super::ue_delete;Long i, ll_cnt
String	lsDONO, lsOrdStat

//TimA 01/05/12 OTM Project
Integer 	llRowPos , llRowCount

If f_check_access(is_process,"D") = 0 Then Return

If left(gs_project, 4) = 'NIKE' Then

	If gs_role = '0' or gs_role = '1' Then
		
		MessageBox("Security Check", "You have no access to this function!",StopSign!)
		return 
		
	End If
	
End If

// 02/05 - PCONKL - Need to recheck status from DB before saving - if a nother user has confirmed,
//						- We can't save here if current status is different.

If idw_main.RowCount() > 0 Then
	
	lsDONO = idw_main.GetITemString(1,'Do_no')  
	//TimA 01/19/12 OTM Project.  We need to capture the deleted Do_no for the OTM call in ue_save
//	isDoNoDelete = lsDONO
	
	Select ord_status Into :lsOrdStat
	From Delivery_Master
	Where Project_ID = :gs_Project and Do_no = :lsDONo;

	If (lsOrdStat = 'C' or lsOrdStat = 'D' or lsOrdStat = 'V' or lsOrdStat = 'R') Then
		If lsORdStat <> idw_main.GetITemString(1,'ord_status') Then
			Messagebox(is_title, 'This order has already been confirmed or voided by aother user!~r~rIt can not be deleted.',StopSign!)
			Return 
		End If
	End If
	
End IF

If Messagebox(is_title, "Are you sure you want to delete this record?", Question!,yesno!,2) = 2 Then
	Return
End If

//TimA 01/05/12 OTM Project
//Capture the deleted Sku's
//TAM 2013/09 - Skip OTM call on deletes for PHILIPS.
//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
If Not (gs_project = 'PHILIPS-SG' or gs_project ='PHILIPSCLS' or gs_project ='PHILIPS-DA') Then
	isFlagDeleteOTM = 'Y'
end if

getdeletedskus()
//llRowCount =  idw_detail.Rowcount()
//For llRowPos = 1 to llRowCount
//	isDeleteSkus[llRowPos] = idw_detail.GEtItemString(llRowPOs,'sku')
//Next

SetPointer(HourGlass!)

ll_cnt = idw_pack.Rowcount()
For i = ll_cnt to 1 Step -1
	idw_pack.DeleteRow(i)
Next

ll_cnt = idw_pick.Rowcount()
For i = ll_cnt to 1 Step -1
	idw_pick.DeleteRow(i)
Next

ll_cnt = idw_detail.Rowcount()
For i = ll_cnt to 1 Step -1
	idw_detail.DeleteRow(i)
Next

//01/07 - PCONKL - Updating content on the server now...
If lsOrdStat <>'N' Then //13-May-2014 :Madhu- Added to don't throw error msg on deleting new orders- START
	If ibserverallocationenabled Then
		If wf_update_content_server() = -1 Then return
	Else
		If wf_update_content() = -1 Then return
	End If
END If //13-May-2014 :Madhu- Added to don't throw error msg on deleting new orders-END

// 09/03 - PCONKL - Delete any Notes or Alt Address records (as of now, they are not retrieved into a DW)
lsDONO = idw_Main.GetITEmString(1,'do_no')

Delete from delivery_Notes where project_id = :gs_project and do_no = :lsDONO;
Delete from delivery_alt_address where project_id = :gs_project and do_no = :lsDONO;

idw_main.DeleteRow(1)

ib_changed = False

If This.Trigger Event ue_save() = 0 Then
	SetMicroHelp("Record deleted!")
Else

	SetMicroHelp("Record	deleted failed!")
End If

This.Trigger Event ue_edit()


end event

event ue_refresh;Integer i, ll_rowcnt1, j, ll_rowcnt2, ll_balance
String ls_sku, ls_prev_sku, lsSupplier, lsFind
long	llLineItemNo

if left(gs_project,4) = "NIKE" then
	uf_nike_verify_pack(false)
end if

//dts - 12/21/05
//disable detail tab based on project-level indicator (for Electronically-received orders) 
if g.is_dd_change_enabled = "N" and	idw_main.object.edi_batch_seq_no[1] > 0 THEN
	idw_detail.object.datawindow.ReadOnly = "Yes"
	tab_main.tabpage_detail.cb_do_det_delete.enabled = false
	tab_main.tabpage_detail.cb_do_det_insert.enabled = false
end if

// This event is to refresh the Alloc Qty in idw_detail from idw_pick

//05/04 - PCONKL - No need to do if Complete or Void, etc
If idw_Main.GetITEmString(1,'ord_status') = 'C' or &
	idw_Main.GetITEmString(1,'ord_status') = 'D' or &
	idw_Main.GetITEmString(1,'ord_status') = 'V' or &
	idw_Main.GetITEmString(1,'ord_status') = 'H' Then
	Return
End If

// pvh - 11/21/06 - added calc allocated qty check
if NOT getCalcAllocated(  ) then return
// eom

If idw_detail.AcceptText() = -1 Then 
	tab_main.SelectTab(2) 
	idw_detail.SetFocus()
	Return 
End If
If idw_pick.AcceptText() = -1 Then
	tab_main.SelectTab(3) 
	idw_pick.SetFocus()
	Return 
End If

idw_detail.Sort()
idw_pick.Sort()
ll_rowcnt1 = idw_detail.RowCount()
ll_rowcnt2 = idw_pick.RowCount()

For i = 1 to ll_rowcnt1
	idw_detail.SetItem(i, "alloc_qty", 0)
Next

j = 1
For i = 1 to ll_rowcnt2 /*For each Pick Row*/
	
	SetMicroHelp("Calculating allocated quantity for item " + String(i)) 
	ls_sku = idw_pick.GetItemString(i,"sku")
	lsSupplier = idw_pick.GetItemString(i,"supp_code")
	llLineItemNo = idw_pick.GetItemNumber(i,"Line_Item_No") /* 09/01 - PCONKL - include line item when allocating detail to picking*/
	
	lsFind = " Upper(sku) = '" + Upper(ls_sku)  + "' and line_item_no = " + String(llLineItemNo)
	lsFind += " and Upper(supp_code) = '" + Upper(lsSupplier) + "'"

	j = idw_detail.Find(lsFind, 1, ll_rowcnt1)
	
	//If not found and allowing pick by Alt SUpplier, look for just SKU
	If J <= 0 and g.is_allow_alt_supplier_pick <> "N" Then
		lsFind = " Upper(sku) = '" + Upper(ls_sku)  + "' and line_item_no = " + String(llLineItemNo)
		j = idw_detail.Find(lsFind, 1, ll_rowcnt1)
	End If
	
	
	// 10/00 PCONKL - Dont update allocated if it's a component child
	If j > 0 and idw_pick.GetItemString(i,"component_ind") <> '*' Then	
			idw_detail.SetItem(j, "alloc_qty", idw_detail.GetItemNumber(j, "alloc_qty") + &
			idw_pick.GetItemNumber(i,"quantity"))
	End if
	
	// 07/05 - PCONKL - We may be allocating from an alternate SKU, include in allocated qty for primary SKU
	If g.is_allow_alt_sku_Pick = 'Y' Then
		lsFind = " Upper(alternate_sku) = '" + Upper(ls_sku)  + "' and line_item_no = " + String(llLineItemNo)
		lsFind += " and Upper(sku) <> upper(alternate_sku)"
		j = idw_detail.Find(lsFind, 1, ll_rowcnt1)
		If j > 0 and idw_pick.GetItemString(i,"component_ind") <> '*' Then	
			idw_detail.SetItem(j, "alloc_qty", idw_detail.GetItemNumber(j, "alloc_qty") + &
			idw_pick.GetItemNumber(i,"quantity"))
		end if
	End If
	
Next /*Pick Row */

//12/06 - PCONKL - Allocated Qty will be updated to the DB from the server - reset item status so they're not updated to DB here
// *** 12/06 - PCONKL - Hardcoded to ensure to controlled rollout ****		
If ibServerAllocationEnabled Then
	
	ll_rowcnt1 = idw_detail.RowCount()

	For i = 1 to ll_rowcnt1
		idw_detail.setITemStatus(i,'alloc_qty',Primary!,NotModified!)
	Next

End If



SetMicroHelp("Ready")

// pvh - 11/21/06 - set allocated quantity check to false, pick itemchanged ( qty ) and generate pick set the flag to true
setCalcAllocated( false )
// eom


Return 
end event

event ue_print;// This event prints the Picking List which is currently visible on the screen 
// and not from the database

// 11/09 - PCONKL - Removed logic for loading temp DW and copying to Print DW. This required all custom Pick Lists to be in sync and wasnt really buying us anything.

// *** 02/10 - PCONKL - Created NVO for custom Pick lists and removed non baseline code


// Moved to ue_print per standard report object
//Modification to ue_print event or d_do_picking_prt will have to test all datawindow object that call this ue_print function and all of these has to incorporate to ue_print function changed
//otherwise the report will encounter invalid row/column. Nxjain 2013-05-24 


u_nvo_custom_picklists	luo_Pick
luo_Pick= Create u_nvo_custom_picklists
 
Long ll_cnt, i, j, llFind, llline_item_no, llDetailFind, llCount, llNotesCount, llNotesPos, llResult, llPrintCount,k
String ls_address, lsSUpplier, lsSupplierHold, lsfind, ls_alt_sku, lsNotes, lsBrand, lsAllBrand
String ls_project_id , ls_sku , lsSKUHold, ls_description, lsCarrier, lsSchedCode, lsSchedDesc
String ls_inventory_type , ls_inventory_type_desc, lsClientName, lsIMUser9,  lsSuppName, lsDONO, lsIMUser13
String lsSaveInvoice, lsSaveCustOrdNo, ls_order_type, ls_order_type_desc
dec{3} ld_weight_1
string lsWH, lsCarPriority //for 3COM Carrier Prioritized Picking routing call
Str_parms       lstrParms
String CurFont, lsrtn, lsPrintAudit
DataStore  ldsInvType,  ldsBOMPrint, ldsContractPrint, ldsOrdType, ldsNotes, ldsPrintAudit
datawindowChild ldwc
datastore ldsDeliveryReport
integer li_idx ,li_qty, li_copies, liRet
decimal ld_costcenter
String  ls_wh_code,ls_sku1 ,ls_color,ls_style   ,ls_own_cd
long ls_owner_id
//DGM To disable the menu print option 08/16/00
IF not ib_print THEN Return 
ib_print = false
//GailM 4/13/2020 - S44744/F19843 -  Google - Print 2nd copy of Pick List without qty (audit sheet)
String lsAllowAuditSheet, lsAllowInboundAuditSheet, lsAllowOutboundAuditSheet
 
string ls_do_no, ls_pick_list_printed
boolean lb_printed_before
String ls_user_field14
decimal ld_Part_UPC_Code

// TAM - 2018/09/07 - S23455
string ls_im_uf7, ls_im_uf8
long   ll_block, ll_tier, ll_pallet, ll_layer, ll_cases, llqty3

// TAM - 2018/09/07 - S23962
integer li_pagebreak, li_uf9


ls_do_no = idw_main.GetItemString(1, "do_no")
 
SetPointer(HourGlass!)
If idw_pick.AcceptText() = -1 Then
	tab_main.SelectTab(3) 
	idw_pick.SetFocus()
	Return 
End If

ll_cnt = idw_pick.rowcount()
If ll_cnt = 0 Then
	MessageBox("Print Picking List"," No records to print!")
	Return
End If

//08-Apr-2014 :Madhu- check pick records against DB to avoid to loose pick rows -START
long llpickcount
SELECT COUNT(*) into :llpickcount FROM Delivery_Picking with(nolock) WHERE DO_NO =:ls_do_no
USING SQLCA;

f_method_trace_special( gs_project, this.ClassName() + ' - ue_print', 'Printing pick list ue_print ' + "Pick records count is : " + string(llpickcount) ,ls_do_no, ' ',' ',isinvoice_no) 

IF llpickcount = 0 THEN
	MessageBox(is_title, "Pick Records are not saved into DB!, please re-generate pick list or contact TSG/SIMS team ")
	SetMicroHelp("Save failed!")
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_print', 'Printing pick list ue_print ' + "Pick records are not saved in DB to generate Pack rows! " ,ls_do_no, ' ',' ',isinvoice_no) 
	return
END IF
//08-Apr-2014 :Madhu- check pick records against DB to avoid to loose pick rows -END

// 01/14 - PCONKL - Warn if already printed...
Select pick_list_print_Count Into :llPrintCount From delivery_master Where do_no = :ls_do_no;
If IsNull(llPrintCount) Then llPrintCount = 0

If llPrintCount > 0 Then
	If	MessageBox("Print PickList", "This Pick List has already been printed. Do you want to re-print?",Question!,yesNo!) = 2 Then
		Return 
	End If
End If

// 09/04 - PCONKL - If we're printing a BOM report, need to make sure records are saved to DB first
If idw_Pick.Find("Component_Ind = 'W'",1,idw_Pick.RowCount()) > 0 and ib_Changed Then
	MessageBox(is_title,"Please save your changes before printing the Pick List.")
	Return
End If

// 12/08/2010 ujh: Issue 121; Don't let user print pick list w/o saving
If upper(gs_project) = 'PANDORA' and ib_changed then
	MessageBox(is_title,"Please save your changes before printing the Pick List.")
	Return
End If

// Jxlim 07/17/2013 SkuSerialHold validation; If Sku/Model is on Hold do not allow packing generation, initiated by Arien	
If  Upper(gs_project) = 'ARIENS' Then
	If wf_validate_skuserialhold() < 0 Then	
		If MessageBox('Sku/Model', "SKU/Model is on hold. Do you want to print anyway?.", Question!, YesNo!) = 2 Then
			Return 
		End If
	End If
End If
 
//*** Override Baseline logic with any custom Picklist logic *****
/* 12/12 - PCONKL - added TPV - 6/13 - MEA - Added FUNAI */		//TAM 2015/01/26 Added Gibson
//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
Choose Case Upper(gs_Project)
	
	Case 'PHILIPS-SG', 'PHILIPSCLS', 'PHILIPS-DA', 'PHILIPS-TH', 'TPV', 'FUNAI', 'GIBSON' 
		luo_pick.uf_pickPrint_philips()
		return
	
	Case 'RUN-WORLD', 'GIGA'
		luo_pick.uf_pickPrint_runnersworld()
		return
	
	Case 'LAM-SG'
		luo_pick.uf_pickPrint_lam()
		return
	
	Case 'EUT'
		luo_pick.uf_pickPrint_eut()
		return
	
	Case 'WARNER'
		luo_pick.uf_pickPrint_warner()
		return
	
	Case 'BABYCARE'		//08/01/11 - Added processin of Babycare.	
		luo_pick.uf_pickPrint_babycare()
		return
	
	Case 'RIVERBED'		//2011/12/08 - Added Riverbed.	
		luo_pick.uf_pickPrint_riverbed()
		return
	
	Case 'PANDORA'
		/* Per Ian, Kitty Hawk is all or nothing so only need to check line 1
		ll_cnt = idw_Pick.RowCount()
		
		For i = 1 to ll_cnt /*each Pick Row*/
			If idw_Pick.getItemString(i, 'grp') = 'KHBOOKS' Then
				lb_KittyHawk = true
				i = ll_cnt
			end if
		next
		*/
		
		//24-01-2021 Dhirendra S52818: Google - SIMS - COO Specific warning message

datastore lds_coo

lds_coo = create datastore

string ls_sql_syntax,ERRORS,ls_coo,ls_Country_FROM,ls_Country_TO,as_wh_code

long ll_row,ll_foundrow, ll_msg_count

boolean lb_eu_to_eu

ls_Country_TO = tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country")

as_wh_code = idw_main.GeTItemString(1,'wh_code')

//get From Country

Select Country

into :ls_Country_FROM

From Warehouse WITH (NOLOCK)

where Wh_Code = :as_wh_code;

ls_sql_syntax = "Select Code_id,Code_Descript From Lookup_Table WITH (NOLOCK) where Code_type = 'COO_block'; "

lds_coo.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax,"", ERRORS))

lb_eu_to_eu = wf_is_country_eu_to_eu(ls_Country_FROM, ls_Country_TO)

IF Len(ERRORS) > 0 then

MessageBox("Errors", "Unable to create datastore to check COO , .~r~r" + Errors)

return

end if

if lds_coo.SetTransObject(SQLCA) <> 1 then

MessageBox("Error","Error setting datastore's transaction object to check COO")

return

end if

lds_coo.retrieve()

IF ls_Country_FROM <> ls_Country_TO and (lb_eu_to_eu = false) and idw_pick.rowcount() > 0 THEN

For ll_row =1 to idw_pick.rowcount( )

ls_coo = idw_pick.getItemString(ll_row, 'user_field1') //COO

ll_foundrow = lds_coo.Find( "code_id = '" + ls_coo + "' and Code_Descript = '"+ls_Country_TO+"'", 1, lds_coo.rowcount())

IF ll_foundrow > 0 and ll_msg_count = 0 Then

Messagebox( is_title,"COO "+ls_coo+" is not valid for the ship to country code.Please check your inventory and if possible pick from another COO")

ll_msg_count++

Return

end if

next

end if

		idw_print.dataobject = 'd_picking_prt_pandora'

		If idw_Pick.getItemString(1, 'grp') = 'KHBOOKS' Then
			luo_pick.uf_pickPrint_pandora()
			return
		end if
		
		// Get the cost center.
		nvo_order lnvo_order
		lnvo_order = Create nvo_order
		lnvo_order.f_getcostcenter(1, ld_costcenter)
		Destroy lnvo_order
		
		//GailM - 12/26/2017 - PAN Display Notes in Picking List
		lsNotes = f_get_delivery_note( gs_Project, ls_do_no )
	
	CASE 'PULSE'	
		luo_pick.uf_pickPrint_pulse()
		return	
	
	CASE 'FRANKE_TH'
		luo_pick.uf_pickPrint_franke()
		return
	
	//MS - W&S - 012710 - ws-muser change
	CASE 'WS-MUSER', "WS-AWI" , "WS-BM", "WS-BMS", "WS-MHD" , "WS-PR"
		luo_pick.uf_picklist_ws_muser()
		return
	
	CASE 'NIKE-SG', "NIKE-MY" /* 12/11 - PCONKL */
		luo_pick.uf_pickPrint_nike()
		return

/*	CASE 'PHXBRANDS' // 9/11 - HDC
		luo_pick.uf_pickPrint_phoenixbrands()
		return */
	
	// MEA - 8/12 - LMC
	//Changed only visual layout (Bolded and added Text)
	//Still uses baseline.
	//If making any additional changes, must create function in Custom Picking Nvo.
	
	CASE 'LMC'
	
		idw_print.dataobject = 'd_picking_prt_lmc'
//		return    
// Sarun11July2013 add comment to return so that logic go for baseline picklist.
		
		
// Moved to ue_print per standard report object
//Modification to ue_print event or d_do_picking_prt will have to test all datawindow object that call this ue_print function and all of these has to incorporate to ue_print function changed
//otherwise the report will encounter invalid row/column. Nxjain 2013-05-24 
//new change for ue_print 


CASE 'AMS-MUSER'
			idw_print.dataobject = 'd_picking_prt_ams_muser'
//	 tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt_ams_muser'
 //return 

CASE 'PUMA'
	// tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt_puma'
	idw_print.dataobject = 'd_picking_prt_puma'
	//return 
//11-Feb-2014 :Madhu- Added for KLONELAB -START
CASE 'KLONELAB'
	idw_print.dataobject ='d_picking_prt_klonelab'
//11-Feb-2014 :Madhu- Added for KLONELAB- END	
CASE 'PHXBRANDS'
	idw_print.dataobject ='d_picking_prt_phxbrands'
//	 tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt_phxbrands'
// return 

//end Nxjain 2013-05-24 		

//07/02/2014 :TAM - Added for FRIEDRICH
CASE 'FRIEDRICH'
	idw_print.dataobject ='d_picking_prt_friedrich'

// 05/15/13 - added KINDERDIJK Nxjain  
Case 'KINDERDIJK'  /* 05/15/13 - added KINDERDIJK Nxjain  */ 
	luo_pick.uf_pickprint_Kinderdijk()
return
//end nxjain	 2015-05-13 friedrich

//Jxlim 09/10/2014 added for Anki
CASE 'ANKI'
	idw_print.dataobject ='d_picking_prt_anki'
//SARUN2016JUNE06 : Stryker Request for changes in Picking list. : Start
CASE 'STRYKER'
	idw_print.dataobject ='d_picking_prt_stryker'
//SARUN2016JUNE06 : Stryker Request for changes in Picking list. :End

//11-JUNE-2018 :Madhu S20164 - Rema Picking List
CASE 'REMA'
	idw_print.dataobject ='d_picking_prt_rema'

//TAM 2018/09/20 : S23962 - NYCSP Picking List
CASE 'NYCSP'
	idw_print.dataobject ='d_picking_prt_nycsp'

//TAM 2019/06/26 : S35194 - KENDO Picking List
CASE 'KENDO'
	idw_print.dataobject ='d_picking_prt_kendo'
	// Begin......Akash Baghel.......10/05/2023 : SIMS-330 - HAGER-SG Picking List	
CASE 'HAGER-SG'
	idw_print.dataobject ='d_picking_prt_hager_sg'	
//End........Akash Baghel.......10/05/2023 : SIMS-330 - HAGER-SG Picking List
End Choose
 
//*** BASELINE PICK LOGIC ***//
 
 
// 01/03 - PCONKL - Retrieve Inventory Type descriptions for printed report - only need to do once
ldsInvType = Create Datastore
ldsInvType.DataObject = 'dddw_inventory_Type_by_Project'
ldsInvType.SetTransObject(SQLCA)
ldsInvType.Retrieve(gs_Project)
 
ldsOrdType = Create Datastore
ldsOrdType.DataObject = 'dddw_delivery_order_type'
ldsOrdType.SetTransObject(SQLCA)
ldsOrdType.Retrieve(gs_Project)

ldsPrintAudit = Create Datastore		//GailM 04/18
ldsPrintAudit.dataobject = 'd_picking_prt_pandora_audit'
ldsPrintAudit.SetTransObject(SQLCA)
 
idw_print.Reset()
 
ls_project_id = idw_main.getitemstring(1,"project_id")
 
// 08/00 PCONKL Show Client Name on Pick Ticket
Select Client_name into :lsClientName
From    Project
Where project_id = :ls_project_id
Using SQLCA;
 
//GailM 1/21/2018 - S14940 F5829 I469 - PAN SIMS to provide message on consolidation shipment at outbound
string lsShipNo
IF (upper(gs_Project) = 'PANDORA') Then
	lsDONO = idw_main.GetITemString(1,'do_no')
	select sli.Ship_No into :lsShipNo from Shipment_Line_Item SLI where RoDo_No = :lsDoNo using SQLCA;
	If Not isNull( lsShipNo ) and lsShipNo <> '' Then
		idw_print.object.shipment_no.visible = TRUE
		idw_print.object.t_shipno.visible = TRUE
	Else
		idw_print.object.shipment_no.visible = FALSE
		idw_print.object.t_shipno.visible = FALSE
	End If
End If

//For GM_MI_DAT, we want to concatonate Schedule Code (desc) to carrier
lsCarrier = idw_main.getitemstring(1,"Carrier")
If isnull(LsCarrier) Then lsCarrier = ''
        
//TAM 03/30/2006 Set saved invoice and Cust Order Number to Blank
lsSaveInvoice = ''
lsSaveCustOrdNo = ''

idw_print.Object.t_costcenter.Y= long(idw_print.Describe("costcenter.y"))


If gs_Project = 'PHXBRANDS' Then //hdc 09/12/2012 phoenix brands wants the printed SKU and Locaction columns to be 2 points bigger (= 12 pixels)
	w_do.idw_print.Modify("sku.Font.Height=72")  //was 60
	w_do.idw_print.Modify("l_code.Font.Height=72")
	w_do.idw_print.Modify("sku.y = 3")
end if
 
For i = 1 to ll_cnt /*each Pick Row */
 
	This.SetMicroHelp('Printing pick list for item ' + String(i) + ' of ' + String(ll_cnt))
	
	ls_sku = idw_pick.getitemstring(i,"sku")
	lsSupplier = idw_pick.getitemstring(i,"supp_code")
	llline_item_no = idw_pick.getitemnumber(i,"line_item_no")
	
	ls_inventory_type = idw_pick.getitemstring(i,"inventory_type")
	
	// 01/03 - PCONKL - Load from datastore instead of retriveing every time (move row function doesn't load DDDW)
	llFind = ldsInvType.Find("Inv_Type = '" + ls_inventory_type + "'",1,ldsInvType.RowCount())
	If llFind > 0 Then
		ls_inventory_type_desc = ldsInvType.GetITemString(llFind,'inv_type_desc')
	Else
		ls_inventory_type_desc = ls_inventory_type
	End If
	
	ls_order_type = idw_main.getitemstring(1,"ord_type")
	
	
	llFind = ldsOrdType.Find("ord_type = '" + ls_order_type + "'",1,ldsOrdType.RowCount())
	If llFind > 0 Then
		ls_order_type_desc = ldsOrdType.GetITemString(llFind,'ord_type_desc')
	Else
		ls_order_type_desc = ls_order_type
	End If  
	
	// 09/01 - PCONKL - Dont print non pickable SKUS (they are still displayed on the screen
	If idw_pick.getitemstring(i,"sku_pickable_ind") = 'N' Then Continue
	
	//08/04 - PCONKL - Don't print Components that are just placeholders for children being picked
	If idw_pick.getitemstring(i,"Component_ind") = 'Y'  and idw_pick.getitemstring(i,"component_type") = 'D' and idw_pick.getitemNumber(i,"Component_No") = 0 and idw_pick.getitemstring(i,"l_code") = 'N/A' Then Continue
	If idw_pick.getitemstring(i,"Component_ind") = '*' Then Continue
	//
	j = idw_print.InsertRow(0)
	idw_print.setitem(j,"costcenter", string(ld_costcenter))
	idw_print.setitem(j,"quantity",idw_pick.getitemnumber(i,"quantity"))
	idw_print.setitem(j,"project_id",gs_project) /* 07/02 - Pconkl - some fields may be visible or invisible based on project*/
	idw_print.setitem(j,"client_name",lsClientName) /* 08/00 PCONKL -show project name instead of code (customer sees the pick ticket)*/
	idw_print.setitem(j,"cust_name",idw_main.getitemstring(1,"cust_name"))
	idw_print.setitem(j,"cust_code",idw_main.getitemstring(1,"cust_code"))
	idw_print.setitem(j,"carrier",lscarrier) /* 09/03 - PCONKL*/
	idw_print.setitem(j,"Priority",String(idw_main.getitemNumber(1,"Priority"),'####')) /* 09/03 - PCONKL*/
	//idw_print.setitem(j,"dm_user_field1",idw_main.getitemstring(1,"user_field1")) /* 09/03 - PCONKL - 3COM Freight Terms Code *///28-Oct-2016 Madhu commented. No longer exist
	idw_print.setitem(j,"dm_user_field2",idw_main.getitemstring(1,"user_field2")) /* 09/03 - PCONKL - 3COM Cust Sold TO ID */
	idw_print.setitem(j,"dm_user_field6",idw_main.getitemstring(1,"user_field6")) /* 08/04 - PCONKL - 3COM Delivery Note */
	idw_print.setitem(j,"delivery_address1",idw_main.getitemstring(1,"address_1"))
	idw_print.setitem(j,"delivery_address2",idw_main.getitemstring(1,"address_2"))
	idw_print.setitem(j,"delivery_address3",idw_main.getitemstring(1,"address_3"))
	idw_print.setitem(j,"delivery_address4",idw_main.getitemstring(1,"address_4"))
	idw_print.setitem(j,"city",idw_main.getitemstring(1,"city"))
	idw_print.setitem(j,"state",idw_main.getitemstring(1,"state"))
	idw_print.setitem(j,"zip_code",idw_main.getitemstring(1,"zip"))
	idw_print.setitem(j,"country",idw_main.getitemstring(1,"country"))
	idw_print.setitem(j,"ord_date",idw_main.getitemdatetime(1,"ord_date"))
	idw_print.setitem(j,"request_date",idw_main.getitemdatetime(1,"request_date"))
	idw_print.setitem(j,"wh_code",idw_main.getitemstring(1,"wh_code"))
	

//TAM 2018/09/20 - S23962 - Added NYCSP
//	If idw_print.dataobject='d_picking_prt' or idw_print.dataobject='d_picking_prt_rema' then //Print values on Baseline pick list
//TAM 2019/06/26 : S35194 - KENDO Picking List
//	If idw_print.dataobject='d_picking_prt' or idw_print.dataobject='d_picking_prt_rema' or idw_print.dataobject ='d_picking_prt_nycsp' then //Print values on Baseline pick list
	//If idw_print.dataobject='d_picking_prt' or idw_print.dataobject='d_picking_prt_rema' or idw_print.dataobject ='d_picking_prt_nycsp' or idw_print.dataobject='d_picking_prt_kendo' then //Print values on Baseline pick list
	If idw_print.dataobject='d_picking_prt' or idw_print.dataobject ='d_picking_prt_hager_sg' or idw_print.dataobject='d_picking_prt_rema' or idw_print.dataobject ='d_picking_prt_nycsp' or idw_print.dataobject='d_picking_prt_kendo' then //Print values on Baseline pick list.....Hager_sg data window..... added by Akash baghel SIMS-330...10/05/2023
		idw_print.setitem(j,"dm_user_field3",idw_main.getitemstring(1,"user_field3")) //28-Oct-2016 Madhu Added for Kendo
		idw_print.setitem(j,"consolidation_no", idw_main.getitemstring(1,"Consolidation_No")) //28-Oct-2016 Madhu Added for Kendo
	Else
		idw_print.setitem(j,"dm_user_field1",idw_main.getitemstring(1,"user_field1")) /* 09/03 - PCONKL - 3COM Freight Terms Code */
	End If

	//MikeA 2020/04 - S44449 - F22126 - I2904 - KDO-Kendo: Add UPC to Each Line on Pick List
	//GailM 7/1/2020 S47390 F22981 I2941 Kendo Add Brand Field to PickList print header
	if Upper(gs_project) = 'KENDO' then
		lsBrand = ""
		Select Part_UPC_Code, Brand
		into :ld_Part_UPC_Code, :lsBrand
		from item_master 
		where sku =:ls_sku and project_id =:ls_project_id 
			 and supp_code = :lsSupplier
		USING SQLCA;
	
		idw_print.setitem(j, "Part_UPC_Code", ld_Part_UPC_Code)
		lsAllBrand =  addComma(lsBrand, lsAllBrand)
		//idw_print.SetItem(j, "Brand", lsAllBrand) Description:Kendo Commented By Dhirendra for defect DE19088 on 04-01-2021//
	end if 


	//idw_print.setitem(j,"sku",idw_pick.getitemstring(i,"sku"))
	//Adding Code for PUMA Printing picking list Nxjain
	ls_wh_code =idw_main.getitemstring(1,"wh_code")
	if Upper(gs_project) = 'PUMA'  and ls_wh_code ='PUMA-MY' then
		
		Select User_Field7 ,User_Field10 ,User_Field13
		into :ls_sku1 ,:ls_color, :ls_style
		from item_master 
		where sku =:ls_sku and project_id =:ls_project_id 
		USING SQLCA;
		
		ls_sku1= ls_sku1 + space(1) +ls_color+ space(1)+ ls_style 
	
		idw_print.setitem(j, "sku", ls_sku1)
	else
		idw_print.setitem(j,"sku",idw_pick.getitemstring(i,"sku"))
	end if 
	//end  Nxjain 02-24-2015
	
	idw_print.setitem(j,"sku_parent",idw_pick.getitemstring(i,"sku_Parent"))
	idw_print.setitem(j,"supp_code",idw_pick.getitemstring(i,"supp_code"))
	idw_print.setitem(j,"serial_no",idw_pick.getitemstring(i,"serial_no"))
	idw_print.setitem(j,"lot_no",idw_pick.getitemstring(i,"lot_no"))
	idw_print.setitem(j,"po_no",idw_pick.getitemstring(i,"po_no"))
	idw_print.setitem(j,"po_no2",idw_pick.getitemstring(i,"po_no2")) /* 01/02 PCONKL */
	idw_print.setitem(j,"container_ID",idw_pick.getitemstring(i,"container_ID")) /* 11/02 PCONKL */
	idw_print.setitem(j,"expiration_Date",idw_pick.getitemDateTime(i,"expiration_Date")) /* 11/02 PCONKL */
	idw_print.setitem(j,"hazard_text",idw_pick.getitemstring(i,"hazard_text_cd")) /* Jxlim 04/28/2013 Physio Hazard Text from ItemMaster*/

	//TimA 04/26/13 Pandora issue #560 add country of origin
	If gs_Project = 'PANDORA' then
		idw_print.setitem(j,"country_of_origin",idw_pick.getitemstring(i,"country_of_origin"))
		idw_print.setitem(j,"client_cust_po_nbr",idw_main.getitemstring(1,"client_cust_po_nbr")) // TAM 2016/09/13 Added Client Cust PO Nbr
		idw_print.setitem(j, "Load_Id", idw_main.getItemString(1, "Load_Id"))
		idw_print.setitem(j, "Load_Sequence", idw_main.getItemNumber(1, "Load_Sequence"))
		idw_print.setitem(j, "ready_by_date", idw_main.getItemDateTime(1, "Ready_By_Date")) //06-FEB-2019 :Madhu DE8522 Added Ready By Date
	End if
	//Nxjain 05-30-2016
	
	If gs_Project = 'PANDORA' then
		If( ls_wh_code ='PND_AMSTER' OR ls_wh_code= 'PND_WESTP' OR ls_wh_code= 'PND_SRIJK' ) then 
			idw_print.Modify("t_40.visible=1")
			idw_print.Modify("owner_cd.visible=1")
			
			ls_owner_id =idw_pick.getitemnumber(i,"owner_id")
			
			Select  Owner_cd  into :ls_own_cd
			From Owner
			where owner_id =:ls_owner_id ;
				
			idw_print.setitem(j,"owner_cd",ls_own_cd)
		Else
			idw_print.Modify("t_40.visible=0")
			idw_print.Modify("owner_cd.visible=0")
		End if
		
		//GailM - 12/26/2017 - PAN Display Notes in Picking List
		idw_print.setitem( j, "notes", lsNotes )
		
	End if
//End Nxjain 05302016
	
	///XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	// BCR 22-SEP-2011: Franke_TH/Baseline modification for Serial No Capture
	IF Upper(gs_project) = 'FRANKE_TH' THEN
		CHOOSE CASE idw_pick.getitemString(i,"serialized_ind") 
			CASE 'Y', 'B'
				idw_print.setitem(j,"sn_scan", 'Y')
			CASE ELSE
				idw_print.setitem(j,"sn_scan", 'N')
		END CHOOSE
	END IF
	///XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
	//Jxlim 09/10/2014 Anki user_field
	If gs_Project = 'ANKI' then
		idw_print.setitem(j,"ecommerce_id",idw_main.getitemstring(1,"user_field14")) /* Anki E-commerce ID) */		
		idw_print.setitem(j,"dm_user_field2",idw_main.getitemstring(1,"user_field2")) /* Anki Cust Sold TO Acct */
		//idw_print.setitem(j,"dm_user_field3",idw_main.getitemstring(1,"user_field3")) /* Anki ASN Destination */
		idw_print.setitem(j,"dm_user_field6",idw_main.getitemstring(1,"user_field6")) /* Anki-Client Order Type */
	End If
	
	
	//MA 02/08 - Added ord_type to picking list for 3com
	
	idw_print.setitem(j,"ord_type_desc", ls_order_type_desc)         
	
	// 11/06 - PCONKL - If Component parent placeholder, print "* NO PICK *" instead of "N/A"
	If idw_pick.getitemstring(i,"Component_Ind") = "Y" and idw_pick.getitemstring(i,"l_code") = "N/A" Then
		idw_print.setitem(j,"l_code","* NO PICK *")
	Else
		idw_print.setitem(j,"l_code",idw_pick.getitemstring(i,"l_code"))
	End If
	

		//Jxlim 10/08/2010 Changed from request_date to Schedule date on Ship Date field on Picking List report for Phoenix Brands	
		If gs_Project = 'PHXBRANDS' Then
			w_do.idw_print.setitem(j,"schedule_date",idw_main.getitemdatetime(1,"schedule_date"))		 
		End if
	//Jxlim 10/08/2010 End of Phxbrands changed.
	
	//11-Feb-2014 :Madhu- Added for KLONELAB -START
	If gs_Project ='KLONELAB' Then
		idw_print.setitem(j,"start_date", idw_main.getItemdatetime(1,"Freight_ETD"))
		idw_print.setitem(j,"cancel_date", idw_main.getItemdatetime(1,"Freight_ATA"))
	End If
	//11-Feb-2014 :Madhu- Added for KLONELAB- END
	//BCR 24-JAN-2012: PUMA wants ShipDate to be ScheduleDate on idw_main...
	If gs_Project = 'PUMA' Then
		idw_print.setitem(j,"request_date",idw_main.getitemdatetime(1,"schedule_date"))		 
	End if
	
	//ET3 2012/06/06 - set the ESD
	llResult = idw_print.SetItem(j,'est_ship_date', idw_main.getitemdatetime( 1,'schedule_date' ) )

   // 11/08 - For Diebold CO133 (Slob), we want to sort by Line ITem. Since it it is not already on the printed report, store in picking_seq field.
	If gs_Project = 'DB-CO133' Then
		idw_print.setitem(j,"picking_seq",idw_pick.getitemNumber(i,"Line_Item_No"))
	Else
		idw_print.setitem(j,"picking_seq",idw_pick.getitemdecimal(i,"picking_seq"))
	End If
	
	//12/05 - PCONKL - quantity now set above - we may be rolling up rows
	//idw_print.setitem(j,"quantity",idw_pick.getitemnumber(i,"quantity"))
	
	idw_print.setitem(j,"component_no",idw_pick.getitemnumber(i,"component_no"))
	idw_print.setitem(j,"component_ind",idw_pick.getitemstring(i,"Component_Ind")) /* 08/04 - PCONKL */
	idw_print.setitem(j,"pick_as",idw_pick.getitemstring(i,"user_field2")) /* 11/00 PCONKL - show pick iterations*/
	idw_print.setitem(j,"ship_ref_nbr",idw_other.getitemstring(1,"ship_ref"))
	idw_print.setitem(j,"remark",idw_main.getitemstring(1,"remark"))
	
	/* 07/02 - Pconkl - User Field 9 is commodity code for Saltillo - shown on printed Pick LIst (Visible property for fields on Print)*/
	// 01/03 - PCONKL - Only retrieve when SKU has changed
	// 04/04 - TAMCCLANAHAN - Add retrieve when Supplier has changed
	// 12/06 - PCONKL - Added join to supplier for Supplier Name - commented out seperate SQL below
	If ls_SKU <> lsSKUHold or lsSupplier <> lsSupplierHold Then
	
		select description, user_field9, weight_1, user_field13, supp_name, Item_Master.user_field14, 
			User_field7,user_field8,qty_3	// TAM - 2018/09/07 - S23455 -New Rema Picklist
		into   :ls_description , :lsIMUser9, :ld_weight_1, :lsIMUser13, :lsSuppname, :ls_user_field14,  //TAM 2006/06/26 added UF13 
				:ls_im_uf7, :ls_im_uf8, :llqty3 // TAM - 2018/09/07 - S23455 -New Rema Picklist
		from item_master, Supplier 
		where item_master.Project_id = Supplier.Project_id 
		  and Item_master.Supp_Code = Supplier.Supp_Code 
		  and Item_master.project_id = :ls_project_id 
		  and sku = :ls_sku 
		  and item_master.supp_code = :lsSupplier;
		
	End If
	
	ls_description = trim(ls_description)
	
	//nxjain 12-03-2015 Blouecoat 
	
	li_qty =idw_pick.getitemnumber(i,"quantity")
	If gs_project ='BLUECOAT' then
		idw_print.setitem(j,"weight_1",ld_weight_1 *li_qty)
	Else
		idw_print.setitem(j,"weight_1",ld_weight_1) /*09/02 - gap */
	End if 
	
	//End
	

//	idw_print.setitem(j,"weight_1",ld_weight_1) /*09/02 - gap */

//	idw_print.setitem(j,"description",ls_description)
//  LTK 20150625  Pandora #973  Add description spill over field
	if upper(gs_project) = 'PANDORA' then
		idw_print.setitem(j,"description", nz( ls_description, '') + nz( Trim( ls_user_field14 ), '' ) )
	else
		idw_print.setitem(j,"description",ls_description)
	end if
	
	//GailM 1/21/2018 - S14940 F5829 I469 - PAN SIMS to provide message on consolidation shipment at outbound	
	if upper(gs_project) = 'PANDORA' then
		idw_print.SetItem(j, "shipment_no", lsShipNo )
	end if

	idw_print.setitem(j,"im_user_field9",lsimUser9) /*07/02 - Pconkl */
	
	idw_print.setitem(j,"im_user_field13",lsimUser13)  // TAM - 2006/06/26 Added UF13 
	idw_print.setitem(j,"supplier_name",lsSuppName)
	idw_print.setitem(j,"inventory_type", ls_inventory_type_desc )
	
	//idw_print.setitem(j,"invoice_no",is_bolno)
	idw_print.setitem(j,"invoice_no",idw_main.GetItemString(1,"invoice_no"))
	//nxjain 20160212 :- Stryker  Want to display user_filed12 as cust order number in picking list 
	If gs_project= 'STRYKER' then
		idw_print.SetITem(j,"cust_ord_no",idw_main.GetItemString(1,"user_field12")) /*02/16 nxjain */
	else
		idw_print.SetITem(j,"cust_ord_no",idw_main.GetItemString(1,"cust_order_no")) /* 08/00 PCONKL */
	end if 
	
	
	//TAM 12/13/04 load alt sku from order detail
	
	lsFind = "Upper(sku) = '" + Upper(ls_sku) + "' and line_item_no = " + string(llLine_Item_No)
	llfind = idw_detail.Find(lsFind,1,idw_detail.RowCount())
	
	if llfind > 0 Then
		ls_alt_sku = idw_detail.getitemString(llFind,"alternate_sku")
	else
		ls_alt_sku = ''
	end if
	
	//GailM 6/6/2019 S34362 F14667 Google Printed Pick List not displaying MPN/ALT SKU
	If Len(ls_alt_sku) > 20 Then
		ls_alt_sku = left(ls_alt_sku, 20) + " " + Right(ls_alt_sku, len(ls_alt_sku) - 20)
		If Len(ls_alt_sku) > 41 Then
			ls_alt_sku = left(ls_alt_sku,41) + " " + Right(ls_alt_sku, len(ls_alt_sku) - 41)
		End If
	End If
		
	if ls_alt_sku <> ls_sku Then
		idw_print.setitem(j,"alt_sku",ls_alt_sku)
	else
		idw_print.setitem(j,"alt_sku",'')
	end if
	
	// pvh - 01/12/2006 - amd 
	if gs_project = 'AMS-MUSER' Then
		idw_print.object.alt_sku[ j ] = idw_detail.getitemString(llFind,"user_field1")
	end if
	//
	
	idw_print.setitem(j,"Shipping_Instructions",idw_main.getitemstring(1,"Shipping_Instructions")) /* 11/03 - PCONKL */
	
	lsSKUHold = ls_SKU
	lsSupplierHold = lsSupplier
	
	//GailM 6/19/2018 S19742 F7864 I898 Google - Edge Packaging - SIMS Changes - GPN level mapping replaced with Commodity code level
	if gs_Project = 'PANDORA' then
		liRet = wf_set_special_packaging_comments()
		If liRet <> 0 Then
			messagebox("Setting Special Packaging Comments","Could not set Special Packaging Comments")
		Else
			liRet = 155
			If pos(isEdgeList, ls_SKU, 1) > 0 Then
				idw_print.setitem(j,"co_pkg_msg","This item belongs to special Commodity types that requires additional packaging requirements for owner PXs.  Please refer to SWI # DCPDS01-20-0403-W07 for details. Question: Contact Ops Management.")
				idw_print.Object.co_pkg_msg.visible = TRUE
				idw_print.Object.co_pkg_msg.y = liRet	// Move the message down in the detail band so it's displayed.
			ElseIf pos(isHriList, ls_SKU, 1) > 0 Then
				idw_print.setitem(j,"co_pkg_msg","Attention! This is a High Risk Part.  Please follow Instruction according SWI WORK43225")
				idw_print.Object.co_pkg_msg.visible = TRUE
				idw_print.Object.co_pkg_msg.y = liRet	// Move the message down in the detail band so it's displayed.
			ElseIf pos(isDangerList, ls_SKU, 1) > 0 Then
				idw_print.setitem(j,"co_pkg_msg","GPN is flagged to check for Dangerous Material.  Take appropriate measure.")
				idw_print.Object.co_pkg_msg.visible = TRUE
				idw_print.Object.co_pkg_msg.y = liRet	// Move the message down in the detail band so it's displayed.
			ElseIf pos(isDefectList, ls_SKU, 1) > 0 Then
				idw_print.setitem(j,"co_pkg_msg","GPN is flagged to check for Defective Packaging.  If packaging is defective please contact your Local CSR.")
				idw_print.Object.co_pkg_msg.visible = TRUE
				idw_print.Object.co_pkg_msg.y = liRet	// Move the message down in the detail band so it's displayed.
			ElseIf pos(isDriveList, ls_SKU, 1) > 0 Then
				idw_print.setitem(j,"co_pkg_msg","GPN is a SSD/Stegodon Drive and needs additional packaging requirement for owner PX.  Please contact Ops Management if you have any questions.")
				idw_print.Object.co_pkg_msg.visible = TRUE
				idw_print.Object.co_pkg_msg.y = liRet	// Move the message down in the detail band so it's displayed.
			End If
		End If
	End If
		
// TAM - 2018/09/07 - S23455 -New Rema Picklist
	If upper(gs_project)='REMA' then
		idw_print.setItem(j, "client_cust_po_nbr", idw_main.getItemString( 1, "client_cust_po_nbr"))	
		idw_print.setItem(j, "schedule_date", idw_main.getItemDateTime( 1, "schedule_date"))	
		idw_print.setitem(j,"alt_sku",ls_alt_sku)

		If isNumber(ls_im_uf7) then
			ll_block = dec(ls_im_uf7)
		else
			ll_block = dec(ls_im_uf7)
		end If
		If isNumber(ls_im_uf8) then
			ll_tier = dec(ls_im_uf8)
		else
			ll_tier =0
		end If
		idw_print.setitem(j,"block",ll_block)		
		idw_print.setitem(j,"tier",ll_tier)	
		idw_print.setitem(j,"pallet_total",llqty3)

		long llMod		
		if llqty3>0 and ll_tier > 0 then   //im.qty3 and im.uf8 must be filled in to do the calculations to prevent a divide by zero. if either is zero set pallet and layer to zeros and set cases to picked qty.  
			li_Qty = idw_pick.getitemnumber(i,"quantity")
			ll_pallet = li_Qty / llqty3
			llMod = Mod( li_Qty, llqty3)
			if llMod = 0 then //No remainer = full pallet
				ll_layer = 0
				ll_cases = 0
			else
				ll_layer = llMod / ll_tier
				ll_cases = Mod (llMod , ll_tier)
			end if
		else
			ll_pallet = 0
			ll_layer = 0
			ll_cases = li_Qty
		end if	

		idw_print.setitem(j,"pallet_qty",ll_pallet)		
		idw_print.setitem(j,"layer_qty",ll_layer)	
		idw_print.setitem(j,"case_qty",ll_cases)
		idw_print.setitem(j,"total_wgt", li_Qty * ld_weight_1)
	End if // End Rema

Next /*pick Rec*/

//Dhirendra 01/04/2021  DE19088-  Kendo Need all Brand to be print for PickList print header
IF Upper(gs_project) = 'KENDO' then
  IF idw_print.rowcount() > 0 then
		for k =  1 to idw_print.rowcount()
			idw_print.SetItem(k, "Brand", lsAllBrand)
		next
	end if 
end if

// 02/01 PCONKL - Filter Pick list to not show components if box is not checked
If tab_main.tabpage_pick.cbx_show_comp.Checked Then
	idw_print.SetFilter('')
Else
   idw_print.SetFilter('sku=sku_parent')   	
End If

// ET3 - 2012/06/06: issue 428 - OTM => show ESD (schedule_date) instead of RDD (request_date)
string ls_OTM_status = ''
ls_OTM_status = idw_main.getitemstring(1, "OTM_status")
IF (upper(gs_Project) = 'PANDORA') AND (ls_OTM_status <> 'N') THEN
	// make ESD columns visible - 
	idw_print.object.t_est_ship_date.Y = idw_print.object.t_4.Y
	idw_print.object.est_ship_date.Y = idw_print.object.request_date.Y
	idw_print.object.t_est_ship_date.visible = TRUE
	idw_print.object.est_ship_date.visible = TRUE
	idw_print.object.t_4.Visible = FALSE
	idw_print.object.request_date.Visible = FALSE

ELSE
	// make non-OTM columns visible - 
	idw_print.object.t_est_ship_date.visible = FALSE
	idw_print.object.est_ship_date.visible = FALSE
	idw_print.object.t_4.Visible = TRUE
	idw_print.object.request_date.Visible = TRUE

END IF

//MEA 12/11 - Added for New Era
string lsSort

IF gs_project = 'NEW ERA' Then
	
	//MEA - 10/12 Changed as per request from Jeff
	
	Open(w_nike_pick_sort_option)

	lsrtn =  message.StringParm 
	
	CHOOSE CASE lsrtn
		CASE "S"
			idw_print.setsort("alt_sku a, l_code a")  //div a, 
		CASE "L"
			idw_print.setsort("l_code  a, alt_sku a") //div a, 
		CASE ELSE
			Return 
	END CHOOSE
	
//	lsSort = idw_print.object.dataWindow.Table.Sort
//	//lsSort = "sku A, " + lsSort
//	lsSort = "alt_sku A, " + lsSort
//	idw_print.SetSort(lsSort)

//09-Feb-2017 : Madhu -SIMSPEVS-460 - Sort PickList By Sku -START
ELSEIF gs_project ='KENDO' THEN
	
	Open(w_nike_pick_sort_option)
	lsrtn =  message.StringParm 

	CHOOSE CASE lsrtn
		CASE "S"
			idw_print.setsort("sku_parent A, sku A, picking_seq A, l_code A, lot_no A")
		CASE "L"
			idw_print.setsort(idw_print.object.dataWindow.Table.Sort)
		CASE ELSE
			Return 
	END CHOOSE
//09-Feb-2017 : Madhu -SIMSPEVS-460 - Sort PickList By Sku -END
End IF
 
idw_pick.Filter()
 
idw_print.Sort()

//TAM 2018/09/20 NYCSP pagebreak on Full Truck (Remainder(PickRow/user_field9) = 0).  Do after sort but befor the Group calc
	If gs_Project = 'NYCSP' then
		If  integer(idw_main.getitemstring(1,"user_field9")) <> 0 then
			li_pagebreak = 0
			li_uf9 = integer(idw_main.getitemstring(1,"user_field9"))
			For i = 1 to idw_print.rowcount() /*Each Pront Row Row */
				If MOD(i , li_uf9) = 1 or li_uf9 = 1 then //Set pagebreak counter when remainder = 1.
					li_pagebreak ++
				End If
				idw_print.setitem(i,"c_pagebreak",li_pagebreak) 
			Next			
		End If
	End If

idw_print.GroupCalc()

idw_print.Object.t_costcenter.Y= long(idw_print.Describe("costcenter.y"))

// 01/08 - PCONKL - If reprint, make reprint text visible
if llPrintCount > 0 Then
	idw_print.modify("t_reprint.visible=true")
else
	idw_print.modify("t_reprint.visible=false")
End If
 
OpenWithParm(w_dw_print_options,idw_print) 

//GailM 3/29/2018 - S17580 F7364 I623 - Google - SIMS Putaway and Picking Blind Count Sheets
if  (gs_project) =  'PANDORA' then
	//lsPrintAudit = f_retrieve_parm( gs_project, 'AuditPrint', ls_wh_code, 'USER_UPDATEABLE_IND' )
	lstrParms = f_retrieve_parm_all( gs_project, 'AuditPrint', ls_wh_code)
	lsAllowAuditSheet = lstrParms.string_arg[1]				//CodeDescript
	lsAllowOutboundAuditSheet = lstrParms.string_arg[4]	//Outbound UF3
	
	If lsAllowAuditSheet = 'Y' Then		//If yes, then ask if you want to print audit sheet (default NO)
		If lsAllowOutboundAuditSheet = 'Y' Then
			If Messagebox(is_title, 'Do you want to print the "Pick list Audit Sheet"?',Question!,YesNo!,2) = 1 Then

				li_copies = integer(idw_print.describe('datawindow.print.Copies'))
				ll_cnt = idw_print.ShareData( ldsPrintAudit )
				ldsPrintAudit.Object.t_costcenter.Y= long(ldsPrintAudit.Describe("costcenter.y"))
				
				ldsPrintAudit.modify(" datawindow.print.copies = " + String( li_copies ) )
				
				
				If idw_print.describe( "owner_cd.visible" ) = "1" Then
					ldsPrintAudit.Modify( "owner_cd.visible=1" )
					ldsPrintAudit.Modify( "t_40.visible=1" )
				End If
						
				Print( ldsPrintAudit )
			End If
		End If
	End If
End If
 
// 08/04 - PCONKL - If any Components were blown out to children on Pick List, print BOM Report
IF idw_Pick.Find("Component_Ind = 'W'",1,idw_Pick.RowCount()) > 0 THEN
        
	If Messagebox(is_title, 'Do you want to print the "Pick list Bill of Materials Report"?',Question!,YesNo!,1) = 1 Then
		ldsBomPrint = Create DataStore
		ldsBomPrint.DataObject = 'd_do_bom_report'
		ldsBomPrint.SetTransObject(sqlca)
		lsDONO = idw_main.GetITemString(1,'do_no')
		If ldsBomPrint.Retrieve(lsDONO) > 0 Then
			ldsBomPrint.Print()
		End If
	End If
	
END IF
 
IF Upper(gs_project) = 'EUT' THEN

	ldsDeliveryReport = Create DataStore
	ldsDeliveryReport.DataObject = 'd_eut_performa_invoice'
	ldsDeliveryReport.SetTransObject(sqlca)
	lsDONO = idw_main.GetITemString(1,'do_no')
	If ldsDeliveryReport.Retrieve(lsDONO) > 0 Then
		ldsDeliveryReport.Print()
	End If
	
END IF
 
SetPointer(Arrow!)
SetMicroHelp("Ready")

If message.doubleparm = 1 then
	
	// 01/14 - PCONKL - update print count
	Execute Immediate "Begin Transaction" using SQLCA;
	
	Update Delivery_master
	Set pick_list_print_Count = ( :llPrintCount + 1 ) where Do_no = :ls_do_no;
	
	Execute Immediate "COMMIT" using SQLCA;
	
	
	If idw_main.GetItemString(1,"ord_status") = "N" or idw_main.GetItemString(1,"ord_status") = "P" Then 
		idw_main.SetItem(1,"ord_status","I")
		ib_changed = TRUE
		iw_window.trigger event ue_save()
	End If
	
End If



end event

event ue_retrieve;call super::ue_retrieve;isle_order.Trigger Event modified()

//08-Jan-2018 :Madhu DE2203 - Reset Serial Flag, if scanned Serial No's are Deleted.
If tab_main.selectedtab = 6 and tab_main.tabpage_serial.dw_serial.rowcount( ) = 0 Then	this.wf_reset_serial_flag( )

If isValid(  tab_main.tabpage_serial.dw_serial ) and tab_main.tabpage_main.dw_main.rowcount( ) > 0 Then
 	if gs_project = 'PANDORA' then // DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		If ( tab_main.tabpage_main.dw_main.GetItemString( 1, 'ord_status' ) =  'P' or tab_main.tabpage_main.dw_main.GetItemString( 1, 'ord_status' ) =  'L'   ) and tab_main.tabpage_serial.dw_serial.rowcount( ) > 0 Then	this.wf_refresh_serial_flag( )
	else
		If ( tab_main.tabpage_main.dw_main.GetItemString( 1, 'ord_status' ) =  'P' or tab_main.tabpage_main.dw_main.GetItemString( 1, 'ord_status' ) =  'A'   ) and tab_main.tabpage_serial.dw_serial.rowcount( ) > 0 Then	this.wf_refresh_serial_flag( )
	End if
End If
end event

event ue_postopen;// pvh 09/08/05 - modified to remove references to Gemini Tab

DataWindowChild ldwc_warehouse,ldwc_warehouse2, ldwc_order_type, ldwc_carrier,ldwc_customer,ldwc_customer2,ldwc, ldwc2
CommandButton lcb_export
Long ll_cnt,ll_rtn
String	lsFilter, lsPrintFormat,ls_where,ls_wh_code,lsConnection_Url_Ariens_On_hold_Validation, lsSerialValFlag
Long llBoxIDCountRowCount,llRowPos,ll_SelectCount
string ls_order_type,ls_invoice

// GailM 843
ib_ShortShipUnlocked = false
	
// pvh - 09/18/06 - created bol print dw column in project to turn on BOL tab
tab_main.tabpage_bol.visible = false

if g.getBOLPrintDo() > "" then tab_main.tabpage_bol.visible = true

// Initialize instant variables & datawindow object for all datastores 09/19/00 DGM
ids_content = Create n_ds_content
ids_compare = Create datastore
ids_content.Dataobject = 'd_do_content'
ids_compare.Dataobject = 'd_do_compare' 

//TimA Pandora #476
idsNotes = Create DataStore
idsNotes.dataobject = 'd_do_notes'
idsNotes.SetTransObject(SQLCA)

//Jxlim 07/17/2013 Create datastore for Sku_Serial_Hold table
ids_skuserialhold = Create datastore
ids_skuserialhold.Dataobject = 'd_skuserialhold' 
ids_skuserialhold.SetTransObject(sqlca)

//TimA 07/16/15
If Not isvalid(ids_Functionality_Manager) Then
	 ids_Functionality_Manager = Create u_ds_datastore
	 ids_Functionality_Manager.dataobject = 'd_functionality_manager'
	 ids_Functionality_Manager.SetTransObject(SQLCA)
End If

//31-May-2016 :Madhu- Create datastore for Hazardous_Materials table
ids_hazardoussku =Create Datastore
ids_hazardoussku.Dataobject ='d_dddw_hazardous_materials'
ids_hazardoussku.SetTransObject(sqlca)



llBoxIDCountRowCount = ids_Functionality_Manager.retrieve(gs_project,'CLIENT', 'BOX_ID' )
llRowPos = 0
For llRowPos = 1 to llBoxIDCountRowCount
		//Build a string of Box ID's that need to be checked.
		//ll_SelectCount ++
		//If ll_SelectCount > 1 then
			is_BoxIDLookup = is_BoxIDLookup + ',' + ids_Functionality_Manager.GetItemString(llRowPos,'Parm1')
		//Else
		//	is_BoxIDLookup = is_BoxIDLookup  + ids_Functionality_Manager.GetItemString(llRowPos,'Parm1')
		//End if
Next
If is_BoxIDLookup <> '' Then
	is_BoxIDLookup = is_BoxIDLookup + ','
End if

i_order = Create n_cst_order
iuo_check_digit_validations = Create u_nvo_check_digit_validations /* 01/09 - PCONKL */

// pvh - 09/18/06 - Added picking print do to project table.
string PickDo
PickDo = g.getPickPrintDo()
tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt'
if PickDo > '' then tab_main.tabpage_pick.dw_print.dataobject = PickDo
// eom

// TAM - 2014/04 - For Ariens -  If Websphere's AriensHoldStatusUrl is blank the set a variable to not do the web service call
SELECT dbo.Websphere_Settings.Connection_Url_Ariens_On_hold_Validation  
INTO :lsConnection_Url_Ariens_On_hold_Validation  
FROM dbo.Websphere_Settings  ;
If  isNull(lsConnection_Url_Ariens_On_hold_Validation) or (lsConnection_Url_Ariens_On_hold_Validation = '') then
	ib_ariens_on_hold_service_call = False
Else
	ib_ariens_on_hold_service_call = True
End If


/*Moved to ue_print per standard report object
//Modification to ue_print event or d_do_picking_prt will have to test all datawindow object that call this ue_print function and all of these has to incorporate to ue_print function changed
//otherwise the report will encounter invalid row/column. nxjain 2013-05-24 
// 02/10 - PCONKL - Created NVO for custom Picklists, Can assign Print DW there
if Upper( gs_project ) = 'AMS-MUSER' then
	 tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt_ams_muser'
elseif Upper( gs_project ) = 'PUMA' then
	 tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt_puma'
 //JXLIM 05/06/2010 for PHXBRANDS  w_do.ue_postOpen
elseif Upper( gs_project ) = 'PHXBRANDS' then
	 tab_main.tabpage_pick.dw_print.dataobject = 'd_picking_prt_phxbrands'
//JXLIM 05/06/2010 end of call for PHXBRANDS.	 
end if
end  Nxjain 2013-05-23*/  

 tab_main.tabpage_pick.dw_print.settransobject(sqlca)
dw_print_invoice.settransobject(sqlca)

 // pvh - 02/03/06
 idsparentskbychild = f_datastoreFactory('d_getparentskubychild')
//
// pvh - 08/23/05 - Needed a reference to this window to call wf_coo_validate
// from u_nvo_carton_serial_scanning
//
iw_window = This
setParentWindow( iw_window )
// eom

isle_order = tab_main.tabpage_main.sle_order
isle_order2 = tab_main.tabpage_main.sle_order2

idw_main = tab_main.tabpage_main.dw_main
idw_other = tab_main.tabpage_other.dw_other
idw_detail = tab_main.tabpage_detail.dw_detail
idw_pick = tab_main.tabpage_pick.dw_pick
idw_pick_detail = tab_main.tabpage_pick.dw_pickdetail
idw_print = tab_main.tabpage_pick.dw_print 
idw_packprint = tab_main.tabpage_pack.dw_packprint 
idw_bol = tab_main.tabpage_bol.dw_bol_prt
idw_pack = tab_main.tabpage_pack.dw_pack
idw_trax = tab_main.tabpage_trax.dw_trax
idw_search = tab_main.tabpage_search.dw_search
idw_result = tab_main.tabpage_search.dw_result
idw_carrier = tab_main.tabpage_carrier.dw_carrier /* 03/03 - PCONKL*/
idw_packlabels = tab_main.tabpage_carrier.dw_carrier_labels /*06/02 - Pconkl*/
idw_Serial = Tab_main.Tabpage_serial.dw_serial
idw_scanner = dw_scanner //GAP 11-02 
idw_carton_serial = tab_main.tabpage_serial.dw_carton_serial  //TimA 08/14/13
idw_Shipments = tab_Main.tabpage_shipments.dw_Shipments /* 04/14 - PCONKL */
idw_mobile = tab_main.tabpage_pick.dw_pick_mobile  /* 09/14 - PCONKL */
idw_load_plan = tab_main.tabpage_load_plan.dw_load_plan  //17-AUG-2018 :Madhu S22533 TMS Load Plan Process
itAddress = tab_main.tabpage_Main.tab_address

idw_main.GetChild("address_code", idwc_address)
idw_detail.GetChild("supp_code",idwc_supplier)
idw_search.GetChild("wh_code", ldwc_warehouse)
idw_pack.Getchild("carton_type",idwc_carton_type)

//TimA 01/03/12 OTM Project
idw_main.GetChild("OTM_Status", idwOTM_Status)
isOTMEnabled = g.is_OTM_Enable_Ind

//main DW is shared with a couple of other DW's
idw_main.ShareData(idw_other)
idw_main.ShareData(tab_main.tabpage_pack.dw_packlist_notes) /* 09/01 Pconkl */

// 07/04 - PCONKL - Ship To Address moved to new tab within Main - Share address
idw_Main.ShareData(tab_main.tabpage_Main.tab_address.tabpage_Shipto.dw_Shipto)

idw_main.ShareData(idw_mobile) /* 09/14 - Pconkl - sharing with mobile DW on Pick Tab*/
idw_main.sharedata( idw_load_plan) //17-AUG-2018 :Madhu S22533 TMS Load Plan Process

//icb_dn = tab_main.tabpage_main.cb_dn
icb_void = tab_main.tabpage_main.cb_do_void
icb_confirm = tab_main.tabpage_main.cb_do_confirm
icb_hold = tab_main.tabpage_main.cb_do_hold /* 11/11 - PCONKL */
icb_shipment = tab_main.tabpage_main.cb_do_shipment
icb_notes = tab_main.tabpage_main.cb_do_notes
icb_ship_docs = tab_main.tabpage_main.cb_do_print_docs
icb_ReadyToShip = tab_main.tabpage_main.cb_do_ReadyToShip
icb_det_insert = tab_main.tabpage_detail.cb_do_det_insert
icb_det_delete = tab_main.tabpage_detail.cb_do_det_delete
icb_pick_insert = tab_main.tabpage_pick.cb_pick_insert
icb_pick_copy = tab_main.tabpage_pick.cb_pick_copy /* 08/00 PCONKL */
icb_pick_delete = tab_main.tabpage_pick.cb_pick_delete
icb_pick_generate = tab_main.tabpage_pick.cb_pick_generate
icb_pick_print = tab_main.tabpage_pick.cb_pick_print
icb_pack_insert = tab_main.tabpage_pack.cb_pack_insert
icb_pack_delete = tab_main.tabpage_pack.cb_pack_delete
icb_pack_copy = tab_main.tabpage_pack.cb_pack_copy
icb_pack_print = tab_main.tabpage_pack.cb_pack_print
icb_ci_load_tender = tab_main.tabpage_pack.cb_ci_load_tender	// LTK 20120523  Pandora #370
icb_serial = tab_main.tabpage_pick.cb_serial	//Jxlim 08/12/2013 Ariens Serial_no validation
icb_import_ib = tab_main.tabpage_detail.cb_import_ib //GailM 8/26/2015 Allow button only on New order
icb_pick_unallocate = tab_main.tabpage_pick.cb_pick_unallocate 		//27-SEP-2017 :Madhu PEVS-848 KDO Return to Stock @174
icb_pick_unallocate.visible = (gs_project ='KENDO') //27-SEP-2017 :Madhu PEVS-848 KDO Return to Stock @175
icb_lock_load = tab_main.tabpage_pack.cb_lock_load //TAM 2018/08  - S22531
icb_lock_load_google = tab_main.tabpage_other.cb_lock_load_google // DINESH - 03/16/2023- sims-53- Google - SIMS - Load Lock and New Loading Status



icb_shipment.Visible= False /* 04/14 - Can't see where it is being set to visible*/

/* 1/30/04 dts */
icb_LMSRoute = tab_main.tabpage_pick.cb_LMSRoute
icb_LMSRate = tab_main.tabpage_pack.cb_LMSRate
ib_LMSSocket = (gs_Project = '3COM_NASH')
icb_LMSRoute.visible = ib_LMSSocket
icb_LMSRate.visible = ib_LMSSocket

icb_wt_dims = tab_main.tabpage_pick.cb_wt_dims	// LTK 20120302

// ET3 2012-11-30 Pandora 533 - hide the button
icb_wt_dims.visible = (gs_Project <> 'PANDORA')
icb_wt_dims.enabled = (gs_Project <> 'PANDORA')

// 09/09 - PCONKL - Delivery Note button only visible for Philips right now (and SG-MUSER) // BCR 10-NOV-2011: Added Riverbed... TAM 2013/04/26 Added Starbucks		//TAM 2015/01/26 Added Gibson
// 04/16 - Using DN button for Kendo Commercial Invoice as well
//20-May-2016 :Madhu- Added DANA-RAY to use DN button
//Gailm 11/27/2017 - Added Hager-SG to make PrintDN visible
//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
If gs_project = 'PHILIPS-SG' or gs_project ='PHILIPSCLS' or  gs_project = 'PHILIPS-TH' or  gs_project = 'SG-MUSER' or gs_project = 'LAM-SG' or gs_project = 'WARNER'  &
	 or gs_project = 'RIVERBED' or gs_Project = 'DANA-TH'  or gs_project = 'TPV' or gs_project = 'STBTH' or gs_project = 'FUNAI' or gs_project = 'GIBSON'  &
	 or gs_project = 'KENDO'  or gs_project ='DANA-RAY'  or gs_project='TH-MUSER' or gs_project = 'HAGER-MY'  or gs_project = 'HAGER-SG'  or gs_project = 'COTY' &
	 or gs_project = 'PHILIPS-DA' Then

	tab_main.tabpage_pack.cb_print_dn.visible =True
	
	if gs_project = "KENDO" Then
		tab_main.tabpage_pack.cb_print_dn.Text = "Print CI"
		//tab_main.tabpage_pack.cb_lock_load.visible = False
		tab_main.tabpage_pack.cb_pack_copypaste.visible = True	//GailM 7/29/2019 S35966 F16957 I2457
	End If
	
	if upper(gs_project) ='COTY' Then 	tab_main.tabpage_pack.cb_print_dn.Text = "LeafLet" //20-APR-2018 :Madhu F7945 COTY Printing of personalized Leaflet
	
	Else
	tab_main.tabpage_pack.cb_print_dn.visible = False
	End If

// 08/13 - PCONKL - Batch Print DN button on search results only visible for Philips for Now
//3-FEB-2019 :Madhu S28945 Added PHILIPSCLS
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
If gs_project = 'PHILIPS-SG' or gs_project ='PHILIPSCLS' or gs_project = 'PHILIPS-DA' or  gs_project = 'TPV' or  gs_project = 'FUNAI' &
	or gs_project = 'GIBSON' or gs_project = 'HAGER-SG' Then
	tab_main.tabpage_search.cb_batch_print_dn.visible = True
Else
	tab_main.tabpage_search.cb_batch_print_dn.visible = False
End If

ids_content.SetTransObJect(SQLCA)
ids_compare.SetTransObject(sqlca)
idw_print.SetTransObject(sqlca)
idw_bol.SetTransObject(sqlca)
idw_packprint.SetTransObject(sqlca)
idw_pick_Detail.SetTransObject(sqlca)
idw_scanner.SetTransObject(Sqlca) //GAP 12-02
idw_carton_serial.SetTransObject(Sqlca)  //TimA 08/14/13
idw_load_plan.SetTransObject( SQLCA) //17-AUG-2018 :Madhu S22533 TMS Load Plan Process

idwc_carton_type.SetTransObject(sqlca)
idw_result.SetTransObject(sqlca)
idwc_address.SetTransObject(sqlca)

ldwc_warehouse.SetTransObject(sqlca)
idwc_supplier.SetTransObject(sqlca)
idwc_address.InsertRow(0)
tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipTo.GetChild('address_code',ldwc)
ldwc.SetTransObject(SQLCA)
idwc_address.ShareDAta(ldwc)

// 03/02 - Pconkl - Order Tpe now project specific, retrieve for current project and share Header to Search Screen

idw_main.GetChild("ord_type", ldwc_order_type)
idw_search.GetChild("ord_type",ldwc)
ldwc_order_type.SetTransObject(sqlca)
If ldwc_order_type.Retrieve(gs_project) < 1 Then ldwc_order_type.InsertRow(0)
ldwc_order_type.ShareData(ldwc)
idw_result.GetChild("ord_type", ldwc)
ldwc_order_type.ShareData(ldwc)

// 04/04 - PCONKL - Loading from USer Warehouse Datastore 
g.of_set_warehouse_dropdown(ldwc_warehouse)

idw_main.GetChild("wh_code",ldwc_warehouse2)
ldwc_warehouse.ShareData(ldwc_warehouse2)

is_sql = idw_result.GetSQLSelect()
is_content_sql = ids_content.GetSQLSelect()
is_pd_sql = idw_pick_detail.GetSQLSelect()

idw_detail.GetChild("supp_code",ldwc)
isoriqsqldropdown = ldwc.GetSqlSelect() /*get sql for supplier dropdown so we can modify for sku/supplier*/

// 03/02 - PCONKL - Now retrieving by Project (changed in n_warehouse) . Share main to Picking instead of retrieving twice
i_nwarehouse.of_init_inv_ddw(idw_main,TRUE) 
idw_main.GetChild('inventory_type',ldwc)
idw_pick.GetChild('Inventory_type',ldwc2)
ldwc2.SetTransObject(SQLCA)
ldwc.ShareData(ldwc2)
idw_print.GetChild('Inventory_type',ldwc2) /*printed report*/
ldwc2.SetTransObject(SQLCA)
ldwc.ShareData(ldwc2)
	
// GAP-02/03 Carrier, retrieve for current project and share Header to Search Screen
idw_other.GetChild("carrier",ldwc_carrier)
idw_search.GetChild("carrier", ldwc)
ldwc_carrier.SetTransObject(sqlca)

// 04/04 - PCONKL - Share carrier dropdowns with DS Loaded in Project Open
g.ids_dddw_carrier.ShareData(ldwc)
g.ids_dddw_carrier.ShareData(ldwc_Carrier)

idw_search.InsertRow(0)
If gs_default_WH > '' Then
	idw_search.SetITem(1,'wh_code',gs_default_WH) /* 04/04 - PCONKL - Warehouse now reauired field on search to keep users within their domain*/
End IF

//BY DGM adjust the rows automatically
IF idw_bol.rowcount() > 0 THEN wf_bol_adjust()

tab_main.tabpage_pick.cb_picklocs.Enabled = FAlse

//Initialise screen for eto m values
is_text[1]=String(idw_packprint.Describe("unit_w_t.Text"))
is_text[2]=String(idw_packprint.Describe("ext_w_t.Text"))	
ll_rtn=idwc_carton_type.Retrieve()

This.TriggerEvent("ue_edit")

// 09/02 - PCONKL - We may open this window from another function and pass an order number in to be processed
If UpperBound(Istrparms.String_arg) > 1 Then /*order number present*/
	//04/03 - PCONKL - If prefixed by '*DONO*', DO NO has been passed instead of Order Number (usually when we have multiple orders of the same order number */
	If Left(Istrparms.String_arg[2],6) = '*DONO*' Then /*DO_NO passed*/
		is_Dono = Mid(Istrparms.String_arg[2],7)
	Else /*Order number passed */
		isle_order.Text = Istrparms.String_arg[2]
	
		// KRZ If this is Pandora,
		If gs_project = "PANDORA" then
			
			// Make order no fields readonly.
			tab_main.tabpage_main.sle_order.enabled = false
			tab_main.tabpage_main.sle_order2.enabled = false
			
		// End if this is Pandora.
		End If
		
	End If
	isle_order.TriggerEvent('modified')
End If


//Share Packing DW with Trax Packing DW
idw_pack.ShareData(idw_trax)

//MEA 03/08 - Dropdown for GM_Montry and SLI-POOL for Order Detail UserField 1

IF Upper(gs_Project) = "GM_MONTRY" OR Upper(gs_Project) = "SLI-POOL" THEN

	idw_detail.Object.user_field1.dddw.Name = "dddw_customer_gm_userfield1"
	idw_detail.Object.user_field1.dddw.DataColumn = "cust_code_name_20len"
	idw_detail.Object.user_field1.dddw.DisplayColumn = "cust_code_name_20len"
	
//	idw_detail.Object.user_field1.dddw.UseAsBorder = "Yes"
	idw_detail.Object.user_field1.dddw.VScrollBar = "Yes"
	
	
	idw_detail.Object.user_field1.dddw.PercentWidth = "400"
	
		
	//Retrive the data
	
	datawindowchild	ldw_child
	
	idw_detail.GetChild("user_field1", ldw_child)
	
	string ls_sql
	
	ls_sql = ldw_child.GetSQLSelect()
	
	integer li_Pos
	
	li_Pos =  Pos(ls_sql, "ORDER", 1)
	
	ls_where = "  WHERE PROJECT_ID = '"+Upper(gs_Project)+"' "
	
	IF Upper(gs_Project) = "GM_MONTRY" THEN
		
		ls_where = ls_where + " AND CUSTOMER_TYPE = 'PDC'  "
		
	END IF
	
	ls_sql = Left(ls_sql, li_Pos - 1) + ls_where + Mid(ls_sql, li_Pos )
	
	ldw_child.SetTransObject(SQLCA)
	
	ldw_child.SetSqlSelect(ls_sql)
	
	ldw_child.Retrieve()
	

END IF

IF Upper(gs_Project) = "PHXBRANDS" OR Upper(gs_Project) = "SIKA" THEN
	idw_pick.Modify("staging_location.Visible=1")
END IF

//TimA 01/27/15 Pandora issue #859.  Picking Box ID's
tab_main.tabpage_pick.cb_replace_boxid.visible = False

//TimA 02/14/2012 OTM Project
//If gs_project = 'PANDORA'  Then
//GailM 03/29/2013 Pandora Issue 605
//If gs_project = 'PANDORA'  Then
If isOTMEnabled = 'Y' Then
	idw_search.Modify("contract_order.Visible='1'")
	idw_search.Modify("contract_order_t.Visible='1'")	

	idw_search.Modify("contract_order_t.Text='OTM Status:'")
	idw_search.setItem(1,"contract_order", "<Select Multiple>")
	idw_search.Modify("contract_order.dddw.Case='Any'")
	idw_search.Modify("contract_order.dddw.useasborder=Yes")
	idw_search.Modify("contract_order.dddw.DataColumn='None'")
	idw_search.Modify("contract_order.dddw.DisplayColumn='None'")
	idw_search.Modify("contract_order.dddw.Limit=0")
	idw_search.Modify("contract_order.dddw.Name='None'")
	idw_search.Modify("contract_order.dddw.PercentWidth=0")
	//TimA 05/07/12 Added VScrollBar
	//idw_search.Modify("contract_order.dddw.VScrollBar=Yes")	
	
	// GailM Pandora Issue 605 - MultiSelectStatus - Set variables without running uf_init
	if ib_SearchCalledFromDashboard then
		//tab_main.tabpage_search.uo_otm_ord_status.dw_search.dataobject = "d_do_otm_status_list"
		tab_main.tabpage_search.uo_otm_ord_status.is_search_column_name = "delivery_master.otm_status"
		tab_main.tabpage_search.uo_otm_ord_status.is_dw_column_name = "otm_status"
	else
		tab_main.tabpage_search.uo_otm_ord_status.uf_init("d_do_otm_status_list","delivery_master.otm_status","otm_status")
	end if
	tab_main.tabpage_search.uo_otm_ord_status.visible =true
	tab_main.tabpage_search.uo_otm_ord_status.width = 725
	tab_main.tabpage_search.uo_otm_ord_status.dw_search.width = 720
	tab_main.tabpage_search.uo_otm_ord_status.height = 470
	tab_main.tabpage_search.uo_otm_ord_status.dw_search.height = 465
	tab_main.tabpage_search.uo_otm_ord_status.bringtotop = false

	idw_other.Modify("carrier.dddw.AllowEdit=No")
	
	//TimA 04/04/12 Pandora Issue #388
	If gs_project = 'PANDORA'  Then
		//Search Window
		idw_search.Modify("schedulle_delivery_date_t.Text='Est ~rShip Date'")
		//Because the text has fewer letters we need to resize and move it.
		idw_search.Modify("schedulle_delivery_date_t.Alignment='2'")
		idw_search.Modify("schedulle_delivery_date_t.x='2478'")
		idw_search.Modify("schedulle_delivery_date_t.width='224'")
		//Result Window
		idw_result.Modify("schedule_date_t.Text='EST SHIP DATE'")
		idw_result.Modify("otm_status.Visible='1'")
		idw_result.Modify("otm_status_t.Visible='1'")
		
//TAM 2017/09/12 - SIMSPEVS-804 - for PANDORA, Remove "NEW" Toolbar option
//GWM 2017/09/28 - Removed since this is part of SIMS Release 17-9.1 which will be deployed after 17-10
		im_menu.m_record.m_new.Enabled = False
		im_menu.m_record.m_new.ToolBarItemVisible = False
		im_menu.m_record.m_new.Disable()
		
		//TimA 05/01/12 Added setsort - GailM 05/24/2013 Issue #605 + ship_id, carrier
		idw_result.setSort("schedule_date, ship_id, carrier")
		
			//TimA Pandora Issue #560
		//Pick		
		idw_pick_Detail.Modify("country_of_origin.dddw.Name='dddw_get_item_master_coo'")
		idw_pick_Detail.Modify("country_of_origin.dddw.DataColumn='Country_Of_Origin'")
		idw_pick_Detail.Modify("country_of_origin.dddw.DisplayColumn='Country_Of_Origin'")
		idw_pick_Detail.Modify("country_of_origin.dddw.UseAsBorder='yes'")
		idw_pick_Detail.Modify("country_of_origin.dddw.VScrollBar='yes'")
		
		idw_pick_Detail.Modify("country_of_origin.dddw.Case='Upper'")
		
		idw_pick_Detail.Modify("country_of_origin.dddw.PercentWidth=100")
		idw_pick_Detail.Modify("country_of_origin.dddw.Lines=15")
		idw_pick_Detail.Modify("country_of_origin.dddw.AllowEdit=no")
		idw_pick_Detail.Modify("country_of_origin.dddw.AutoRetrieve=no")
		
		idw_pick_Detail.GetChild ( "country_of_origin", idwc_IM_Coo_Pick )
		idwc_IM_Coo_Pick.SetTransObject(Sqlca)
		
		//TimA 11/07/13
		tab_main.tabpage_pick.sle_palletno.visible = True
		tab_main.tabpage_pick.st_pallet.visible = True

		//TimA 01/27/15 Pandora issue #859.  Picking Box ID's

		SELECT User_Updateable_Ind INTO :is_ShowBoxChange FROM Lookup_Table With (NoLock)
			WHERE Project_ID = :gs_project AND
						Code_Type = 'CBID' AND
						Code_Id = 'CHANGE_BOX_ID'
				USING SQLCA;
		If is_ShowBoxChange = 'Y' Then
			tab_main.tabpage_pick.cb_replace_boxid.visible = True
		Else
			tab_main.tabpage_pick.cb_replace_boxid.visible = False
		End if
		
		//Pack
//		idw_pack.Modify("country_of_origin.dddw.Name='dddw_get_item_master_coo'")
//		idw_pack.Modify("country_of_origin.dddw.DataColumn='Country_Of_Origin'")
//		idw_pack.Modify("country_of_origin.dddw.DisplayColumn='Country_Of_Origin'")
//		idw_pack.Modify("country_of_origin.dddw.UseAsBorder='yes'")
//		idw_pack.Modify("country_of_origin.dddw.VScrollBar='yes'")
//		
//		idw_pack.Modify("country_of_origin.dddw.Case='Upper'")
//		
//		idw_pack.Modify("country_of_origin.dddw.PercentWidth=100")
//		idw_pack.Modify("country_of_origin.dddw.Lines=15")
//		idw_pack.Modify("country_of_origin.dddw.AllowEdit=no")
//		idw_pack.Modify("country_of_origin.dddw.AutoRetrieve=no")
//		
//		idw_pack.GetChild ( "country_of_origin", idwc_IM_Coo_Pack )
//		idwc_IM_Coo_Pack.SetTransObject(Sqlca)		
	End if
	
	//Something TimA was working on
	//*********
	//string invis

	/*Concatenate into a string, all the Modifies to make all columns invisible */
	//invis = "wh_code.Visible='0' invoice_no.Visible='0' ship_ref.Visible='0' " &
	//+ "delivery_master_awb_bol_no.Visible='0' cust_order_no.Visible='0'"
	
	//idw_result.Modify(invis)
	
	//This turns on row highlighting to determine if the order in manualy entered or now
	//idw_result.Modify("datawindow.detail.color=If( edi_batch_seq_no > 0,12237498,536870912) )")
	//idw_result.Modify("datawindow.detail.color='536870912~tIf( edi_batch_seq_no > 0,12237498,536870912) )'")	
	//idw_result.Modify("datawindow.detail(height=64 color=536870912~tIf( edi_batch_seq_no > 0,12237498,536870912) )")
	//*********
else
		//TimA 04/04/12 Pandora Issue #388
		//Hide the OTM Status column for NON OTM Projects
		idw_result.Modify("otm_status.Visible='0'")
		idw_result.Modify("otm_status_t.Visible='0'")	
	//	tab_Main.tabpage_Shipments.visible = False /* o4/14 - PCONKL - Shipments tab only visible if project OTM enabled*/
		
	//TAM 02/26/15 - If OTM flag is not on then allow entry into the consolidation number field on "Other Info" tab
	idw_other.object.consolidation_no.Protect = FALSE
	idw_other.SetTabOrder("consolidation_no",191) 
	idw_other.Modify("consolidation_no.Background.Color = '" +  string(RGB(255,255,255)) + "'")
	
		
END IF

//If Upper(gs_Project) = "3COM_NASH" THEN
//	idw_search.Modify("contract_order.Visible='1'")
//	idw_search.Modify("t_contract_order.Visible='1'")	
//END IF

//01/10 - PCONKL - POD button only visible for WARNER at this time
//09/11 - MEA - Added for BABYCARE
If gs_project = 'WARNER' OR gs_project = 'BABYCARE' Then
	tab_main.tabpage_main.cb_do_pod.visible=true
Else
	tab_main.tabpage_main.cb_do_pod.visible=False
End If

// 2/3/2011; David C; Change Freight Terms to a DDDW for Pandora only
if Upper ( gs_project ) = "PANDORA" then
	idw_other.Object.freight_terms.dddw.Name             = "d_dddw_pandora_freight_terms"
	idw_other.Object.freight_terms.dddw.DataColumn    = "code_id"
	idw_other.Object.freight_terms.dddw.DisplayColumn = "code_id"
	idw_other.Object.freight_terms.dddw.UseAsBorder    = "Yes"
	idw_other.Object.freight_terms.dddw.VScrollBar       = "Yes"
	
	idw_other.GetChild ( "freight_terms", idwc_FreightTerms )
	idwc_FreightTerms.SetTransObject ( SQLCA )
	idwc_FreightTerms.Retrieve ( )
	
	//TimA 03/26/13 Somthing Tim is working on
//	idw_other.Modify("USER_FIELD2.dddw.Case='Any'")
//	idw_other.Modify("USER_FIELD2.dddw.useasborder=Yes")
//	idw_other.Modify("USER_FIELD2.dddw.DataColumn='cust_code'")
//	idw_other.Modify("USER_FIELD2.dddw.DisplayColumn='cust_code'")
//	idw_other.Modify("USER_FIELD2.dddw.Limit=30")
//	idw_other.Modify("USER_FIELD2.dddw.Name='dddw_customer'")
//	idw_other.Modify("USER_FIELD2.dddw.PercentWidth=150")
//	idw_other.Modify("USER_FIELD2.dddw.VScrollBar=Yes")
//	idw_other.Modify("USER_FIELD2.dddw.HScrollBar=Yes")
//	
//	idw_other.GetChild("USER_FIELD2", idw_From_Loc)	
//	wf_update_from_loc(idw_From_Loc)

	//TimA 07/28/14 Show the Late Orders only check box
	//Pandora issue #887.  Right now Pandora is the only project using this.  It can be baseline.
	idw_search.Modify("late_orders.Visible='1'")
	idw_search.Modify("late_orders_t.Visible='1'")	
Else
	//TimA 07/28/14 Hid the Late Orders only check box
	idw_search.Modify("late_orders.Visible='0'")
	idw_search.Modify("late_orders_t.Visible='0'")	
end if

//Jxlim 11/14/2013 Added Friedrich
//Jxlim 05/23/2012 SLI . Enabled radio button on BOL for Pandora Project
//dts 8/22/13 - adding Ariens...
// TAM 2014/09 added Bosch and Anki	
//04-MAY-2018 :Madhu S18653 - Rema Back/Duplicate Order Process
// TAM 2018/06 - S20314 - added CREE
If Upper ( gs_project ) = "PANDORA" or Upper ( gs_project ) = "ARIENS"  or Upper ( gs_project ) = "FRIEDRICH"  or Upper ( gs_project ) = "KLONELAB" or Upper ( gs_project ) = "BOSCH" or Upper ( gs_project ) = "ANKI" or Upper ( gs_project ) = "H2O"  or Upper(gs_project) ="REMA" or Upper( gs_project) = 'CREE' Then	
//If Upper ( gs_project ) = "PANDORA" or Upper ( gs_project ) = "ARIENS"  or Upper ( gs_project ) = "FRIEDRICH"  or Upper ( gs_project ) = "KLONELAB" Then	
	tab_main.tabpage_bol.gb_letter.visible = True
	If Upper ( gs_project ) = "PANDORA" Then	
		tab_main.tabpage_bol.Text='BOL/SLI'
		tab_main.tabpage_bol.Enabled=False
		tab_main.tabpage_bol.rb_bol_combined.visible = TRUE	// LTK 20151008
	end if
	//tab_main.tabpage_bol.gb_letter.visible = True
	tab_main.tabpage_bol.rb_bol.visible = True
	tab_main.tabpage_bol.rb_sli.visible = True
// TAM 2014/09 added Bosch and Anki
// TAM 2018/06 - S20314 - added CREE
	If Upper ( gs_project ) = "ARIENS"  or Upper ( gs_project ) = "FRIEDRICH"  or Upper ( gs_project ) = "KLONELAB" or Upper ( gs_project ) = "BOSCH" or Upper ( gs_project ) = "ANKI" or Upper ( gs_project ) = "H2O"  or Upper(gs_project) ="REMA" or Upper(gs_project) = 'CREE' Then	//Jxlim
//	If Upper ( gs_project ) = "ARIENS"  or Upper ( gs_project ) = "FRIEDRICH"  or Upper ( gs_project ) = "KLONELAB" Then	//Jxlim
		//For Ariens, using this for Combined BOL, not SLI
		tab_main.tabpage_bol.gb_letter.x = 1280
		tab_main.tabpage_bol.gb_letter.width = 555
		tab_main.tabpage_bol.rb_bol.x = 1315
		tab_main.tabpage_bol.rb_sli.x = 1315
		tab_main.tabpage_bol.rb_sli.width = 475
		tab_main.tabpage_bol.rb_sli.text = 'Combined BOL'
		tab_main.tabpage_bol.rb_bol.checked = true
	end if
Else
	tab_main.tabpage_bol.Text='BOL'
	tab_main.tabpage_bol.gb_letter.visible = False
	tab_main.tabpage_bol.rb_bol.visible =  False
	tab_main.tabpage_bol.rb_sli.visible = False
End If	

//	
//	// Make aw bol number required on the 'other' tabpage.
//	tab_main.tabpage_other.dw_other.object.awb_bol_no_t.font.weight = 700
//	tab_main.tabpage_other.dw_other.modify("awb_bol_no.Edit.Required=true")
//	
//End If

//MStuart - BabyCare - 83011
//Other validation done in wf_check_status_emc()
If gs_project = 'BABYCARE' then
//	tab_main.tabpage_main.cb_emc.y = 1804
	tab_main.tabpage_main.cb_emc.enabled = False
Else
	tab_main.tabpage_main.cb_emc.visible = False
End If

// LTK 20111129	Pandora #334
is_sku_bg_color_init_expression = idw_detail.Object.sku.background.color
// 11//11 - PCONKL - added 2 custrom buttons on Main tab. - Make visible/invisible and label...
uf_config_custom_buttons()

// 11/11 - PCONKL - Hold button and DN  only visible for NIke right now
If left(gs_project,4) = 'NIKE' Then
	icb_Hold.visible = True
	tab_main.tabpage_detail.cb_show_dn.visible = True
	tab_main.tabpage_detail.cb_show_so.visible = True
ELSE
	//MEA 05/12 - Show only for Nike

	tab_main.tabpage_pack.cb_import_pack.visible = false

End If

// LTK 20150115  Allow quantity decimals based on project flag.
if g.iballowquantitydecimals then
	idw_Detail.Modify("req_qty.EditMask.Mask='#######.#####'")
	idw_Detail.Modify("alloc_qty.EditMask.Mask='#######.#####'")
	idw_Pick.Modify("quantity.EditMask.Mask='#######.#####'")
	idw_Pack.Modify("quantity.EditMask.Mask='######0.#####'")
else
	idw_Detail.Modify("req_qty.EditMask.Mask='#######'")
	idw_Detail.Modify("alloc_qty.EditMask.Mask='#######'")
	idw_Pick.Modify("quantity.EditMask.Mask='#######'")
	idw_Pack.Modify("quantity.EditMask.Mask='#######'")
end if

tab_main.tabpage_search.cb_wmscutover.visible = false //dts Pandora #964
// LTK 20120302	Pandora #351
if gs_project = 'PANDORA' then
	icb_wt_dims.Visible = TRUE
	//dts 04/09/15 - Pandora #964 - Added WMS Cutover functionality (where we create an order for each Owner Code in inventory for a selected warehouse).
	// - only enabled for select list of Pandora users, as governed by Lookup table
	select count(Code_Type) into :ll_cnt from Lookup_Table WITH (NOLOCK)
	where project_id = 'pandora' and code_type = 'WMS_CUTOVER' and code_id = :gs_userid;
	if ll_cnt > 0 then
		tab_main.tabpage_search.cb_wmscutover.visible = true
	end if	
end if

if left(gs_project,4) = 'NIKE' then
	
	idw_Detail.Modify( "alloc_qty.Background.Color='16777215~tIf(alloc_qty > 0 ,if (req_qty <> alloc_qty,rgb(255,255,0),rgb(255,255,255)),rgb(255,255,0))'")
	
	idw_Pack.Modify( "carton_no.Background.Color='16777215~tIf(long(carton_no) > c_carton_count, rgb(255,255,0), rgb(255,255,255))'")
	idw_Pack.Modify( "carton_no.background.mode='0'")

	idw_Pack.Modify( "sku.background.Mode='0'")
	idw_Pack.Modify( "sku.Background.Color='16777215~tIf( Trax_status_desc= ~~~'SKUERROR~~~',  rgb(255,255,0), rgb(255,255,255))'")
	
	
	idw_Pack.Modify( "quantity.background.Mode='0'")
	idw_Pack.Modify( "quantity.Background.Color='16777215~tIf( Trax_ship_ref_Nbr= ~~~'QTYERROR~~~',  rgb(255,255,0), rgb(255,255,255))'")


	
	
// LTK 20150115  Commented out lines below as quantity decimals are now controlled as a project setting.
//
//	idw_Pick.Modify("quantity.EditMask.Mask='#######'")
//	idw_Pack.Modify("quantity.EditMask.Mask='#######'")	
//
//	idw_Detail.Modify("req_qty.EditMask.Mask='#######'")
//	idw_Detail.Modify("alloc_qty.EditMask.Mask='#######'")	
	

	//Was sorting the carton number as a string.
	
	idw_Pack.SetSort("long(carton_no) A, component_ind D, sku A, line_item_no A, c_first_carton_row D")



	idw_result.Modify("cust_name.x=2195")
	idw_result.Modify("schedule_date.x=3060")
	
	tab_main.tabpage_main.cb_do_void.x = 2912
	
	
	
end if

//MEA - 02/13 - Show/Hide columns based on isCopy_Lot_No_to_Packlist

IF g.isCopy_Lot_No_to_Packlist = 'Y' then
	idw_pack.Object.pack_lot_no.visible='yes'
	idw_pack.Object.pack_po_no.visible='yes'
	idw_pack.Object.pack_po_no2.visible='yes'
	idw_pack.Object.pack_expiration_date.visible='yes'
	idw_pack.Object.pack_container_id.visible ='yes' //08-FEB-2018 :Madhu S15632 - Added container Id
end if


//04/12 - MEA - Do not allow Void or Confirm to be tabbed to.

icb_void.taborder = 0
icb_confirm.taborder = 0

if  gs_project = 'KLONELAB' then
	idw_Main.Modify("cust_code.Edit.Required=no")
end if


//Jxlim 08/12/2013 Ariens Serial validation button
If Upper(gs_project) = 'ARIENS' then
	icb_serial.Visible = TRUE
	icb_serial.Enabled = TRUE
End if

// 2019/08 - MikeA - S36602 - I2406 - Riverbed - SKU scanning validation
// 2019/11/11 - MikeA DE13515 Added Flag around SKU scanning validation

If Upper(gs_project) = 'RIVERBED' then

	lsSerialValFlag = f_retrieve_parm("RIVERBED","SERIAL_VAL","SERIAL_OUT_VAL","CODE_DESCRIPT")

	//Check if enabled
	IF Upper(lsSerialValFlag) = 'Y' THEN 
		idw_Detail.Modify("user_field5.background.color='16777215~tif ((long(user_field5) >=  alloc_qty) and (alloc_qty > 0), rgb(0,255,0), rgb(255,255,255))'")
		idw_Detail.Modify("user_field5.alignment='2''")
		idw_Detail.Object.user_field5.Edit.DisplayOnly = TRUE
	End If
End If


// MEA - 10/15/2012
//In d_do_search, replace the current User Field columns and titles with generic fields (e.g. search_fieldx, search_fieldx_t). The 8 fields can be grouped together on the right side. 
//The existing ancestor code will set the headers properly when new records are added to column_label with the new field names. We should not display a default heading if 
//nothing is set for the column label. 

integer liIdx, liFindRow

liFindRow = 0

for liIdx = 1 to 8

//	liFindRow = liFindRow + 1

//and ((Not IsNull(Column_Name_Value)) AND trim(Column_Name_Value) <> '')"
//and  datawindow = 'd_do_search' 

	//_t

	liFindRow = g.ids_columnlabel.Find(" datawindows = 'd_do_search' and column_name= 'search_field"+string(liIdx)+"' and ((Not IsNull(Column_Name_Value)) AND trim(Column_Name_Value) <> '')", liFindRow, g.ids_columnlabel.RowCount())

	if liFindRow > 0 then
		
		idw_search.Modify( "search_field"+string(liIdx)+"_t.text='"+g.ids_columnlabel.GetItemString(liFindRow,"Column_Label" )+":'" )
		idw_search.Modify( "search_field"+string(liIdx)+"_t.Color=0)")
		isGenericSearchColumnNameValue[liIdx] = g.ids_columnlabel.GetItemString(liFindRow,"Column_Name_Value" )
		
//SARUN2013DEC11 : Adding opertor as dropdown		http://team/sites/simsteam/wiki/Documents/Customers/KloneLab/Klone%20Changes%20-%20start%20and%20cancel%20date%20mapping.docx
		idw_search.Modify("search_field"+string(liIdx) + ".Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	  //white background color	
		idw_search.Modify("search_field"+string(liIdx) + "_oper.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	  //white background color	
		idw_search.Modify("search_field"+string(liIdx) + ".protect=0")
		idw_search.Modify("search_field"+string(liIdx) + "_oper.protect=0")		
		
	else

		isGenericSearchColumnNameValue[liIdx] = "" 

	end if

next

//GailM 05/28/2013 Pandora Issue 605 - Baseline change to allow mulitple select for ord status and OTM ord status.
	  tab_main.tabpage_search.uo_ord_status.visible = true
	  tab_main.tabpage_search.uo_ord_status.width = 725
	  tab_main.tabpage_search.uo_ord_status.dw_search.width = 720
	  tab_main.tabpage_search.uo_ord_status.height = 570
	  tab_main.tabpage_search.uo_ord_status.dw_search.height = 565
	  tab_main.tabpage_search.uo_ord_status.bringtotop = false
	  if isValid(tab_main.tabpage_search.uo_ord_status) then
		//Set init variables without running uf_init
		tab_main.tabpage_search.uo_ord_status.is_search_column_name = "delivery_master.ord_status"
		tab_main.tabpage_search.uo_ord_status.is_dw_column_name = "ord_status"
	  else
	  	tab_main.tabpage_search.uo_ord_status.uf_init("d_ord_status_search_list","delivery_master.ord_status","ord_status")
	  end if
	  idw_search.setItem(1,"ord_status", "<Select Multiple>")
	  idw_search.Modify("ord_status.dddw.Limit=0")
	  idw_search.Modify("ord_status.dddw.Name='None'")
	  idw_search.Modify("ord_status.dddw.PercentWidth=0")
	  
	  
	// 11/14 - PCONKL - MAke Mobile Status multi-select
	 tab_main.tabpage_search.uo_mobile_status.visible = true
	  tab_main.tabpage_search.uo_mobile_status.width = 725
	  tab_main.tabpage_search.uo_mobile_status.dw_search.width = 720
	  tab_main.tabpage_search.uo_mobile_status.height = 570
	  tab_main.tabpage_search.uo_mobile_status.dw_search.height = 565
	  tab_main.tabpage_search.uo_mobile_status.bringtotop = false
//	  if isValid(tab_main.tabpage_search.uo_mobile_status) then
		//Set init variables without running uf_init
//		tab_main.tabpage_search.uo_mobile_status.is_search_column_name = "delivery_master.mobile_status"
//		tab_main.tabpage_search.uo_mobile_status.is_dw_column_name = "mobile_status"
//	  else
	  	tab_main.tabpage_search.uo_mobile_status.uf_init("d_do_mobile_status_list","delivery_master.mobile_status_ind","mobile_status")
//	  end if
	  idw_search.setItem(1,"mobile_status", "<Select Multiple>")
	  idw_search.Modify("mobile_status.dddw.Limit=0")
	  idw_search.Modify("mobile_status.dddw.Name='None'")
	  idw_search.Modify("mobile_status.dddw.PercentWidth=0")

//OCT 2019 - MikeA F18464 S38759 Philips Blueheart - SIMS changes for Outbound Order  
//Chage the Ship Date to use User Field20 (planned delivery)
//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order	  
IF Upper(gs_Project) ='PHILIPS-SG' OR Upper(gs_Project) ='PHILIPSCLS' OR Upper(gs_Project) = 'PHILIPS-DA' Then
	idw_result.Modify("user_field18.x=890")
	idw_result.Modify("user_field18.width=460")	
End If



// 09/13 - PCONKL
iuo_labels = Create n_labels

//03/14 - PCONKL - Some projects require a value to be entered each time for the scan qty on the serial tab - should be an indicator but no time, will do for customer 2
If gs_project = 'NYX' Then
	ibProjectRequiresScanQty = True
End If

idw_main = f_whitespace(idw_main, 1436, 2316)		// Only named fields on info page

/* If there is height changes for removing white space, use  
If gl_ScreenHeightChange > 0 then
	//tab_main.tabpage_main.height = tab_main.tabpage_main.height - gl_ScreenHeightChange 
	idw_main.height = idw_main.height - gl_ScreenHeightChange
	icb_confirm.move( icb_confirm.x, icb_confirm.y - gl_ScreenHeightChange )
	icb_void.move( icb_void.x, icb_void.y - gl_ScreenHeightChange )
	icb_hold.move( icb_hold.x, icb_hold.y - gl_ScreenHeightChange )
	icb_shipment.move( icb_shipment.x, icb_shipment.y - gl_ScreenHeightChange )
	icb_notes.move( icb_notes.x, icb_notes.y - gl_ScreenHeightChange )
	icb_ship_docs.move( icb_ship_docs.x, icb_ship_docs.y - gl_ScreenHeightChange )
	icb_ReadyToShip.move( icb_ReadyToShip.x, icb_ReadyToShip.y - gl_ScreenHeightChange )
End If
*/

//This.WindowState = normal!
Long mainHeight, mainWidth
mainHeight = w_main.height - 376
mainWidth = w_main.width - 55
if (w_do.height > mainHeight) then
	w_do.height = mainHeight
End If
if (w_do.width > mainWidth) Then
	w_do.width = mainWidth
End If

//Begin - Dinesh - S64720 -Google - SIMS - Buy Sell Project
If Upper(gs_project) = 'PANDORA' then
	
	if gs_role <> '-1' then
		idw_main.Object.buysell.Protect = TRUE
		else 
		idw_main.Object.buysell.Protect = FALSE
	end if
End if
//End - Dinesh - S64720 -Google - SIMS - Buy Sell Project

//Begin - Dinesh - 03/21/2022- S69016-SIMS KENDO  TO Protect consolidation_no
If Upper(gs_project) = 'KENDO' then
	
	if gs_role >= '2' then
		idw_other.Object.consolidation_no.Protect = TRUE
	else 
		idw_other.Object.consolidation_no.Protect = FALSE
	end if
End if
//End - Dinesh - 03/21/2022- S69016-SIMS KENDO  TO Protect consolidation_no








end event

event ue_accept_text;call super::ue_accept_text;// 05/00 PCONKL - Accept text on all dw's to capture data if not tabbed out of field!
//                Triggered from wf_save in ancestor

idw_main.AcceptText() 
//idw_detail.AcceptText() 
idw_other.AcceptText() 

tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.accepttext( ) //10-June-2015 :Madhu- Accept the last text value
end event

event open;call super::open;// pvh 09/08/05 - modified to remove references to Gemini Tab

i_nwarehouse = Create n_warehouse
tab_main.MoveTab(2, 13)
tab_main.tabpage_main.cb_do_select_customer.visible=false
tab_main.tabpage_load_plan.visible =false
//Begin -Dinesh -08/01/2024- SIMS-576-Flextronics ( SHW ) Unable to amend the Carton # at the Packing List Tab in SIMS
If gs_project <> 'PANDORA' Then
	tab_main.tabpage_pack.dw_pack.dataobject = 'd_do_packing_grid_non_pandora'
	tab_main.tabpage_pack.dw_pack.SetTransObject(SQLCA)
End If
//End -Dinesh -08/01/2024- SIMS-576-Flextronics ( SHW ) Unable to amend the Carton # at the Packing List Tab in SIMS
// 09/05 - PCONKL - Hide TRAX tab if project not enabled
If not g.ibTraxEnabled Then
	tab_main.tabpage_trax.visible = False
End If

//GAP1103 setup Gemini TAB & MENU
im_menu = this.menuid

ilHelpTopicID = 503 /*default help topic*/

	
If g.ibappserverenabled Then
	ibServerAllocationEnabled = True	
End If
end event

event resize;call super::resize;//GailM - 6/29/2015 - As part of named field changes - do not resize tab_main - the tab will remain one size and all objects inside will resize within
Long liSearchHeight, liSearchWidth, liMainWidth, liMainHeight 	

liMainWidth =  tab_main.tabpage_search.cb_do_search.x + 360 	//Tab must be at least this wide
liMainHeight = tab_main.tabpage_main.dw_main.y + tab_main.tabpage_main.dw_main.height + 100		//Tab must be at least this high
If WorkSpaceWidth() > liMainWidth Then
	liMainWidth = WorkSpaceWidth() -20
End If
If WorkSpaceHeight() > liMainHeight Then
	liMainHeight = WorkSpaceHeight() -20
End If
tab_main.Resize( liMainWidth, liMainHeight  )

liSearchHeight = tab_main.tabpage_search.cb_selectall.y + 200
liSearchWidth = tab_main.tabpage_search.cb_do_search.x + 300
If  WorkSpaceHeight() <= liSearchHeight Then
	liSearchHeight = 400
Else
	liSearchHeight = WorkSpaceHeight() - liSearchHeight
End If
If WorkSpaceWidth() > liSearchWidth Then
	liSearchWidth = WorkSpaceWidth() - 100
End If
tab_main.tabpage_search.dw_result.Resize(liSearchWidth, liSearchHeight)

tab_main.tabpage_detail.dw_detail.Resize(workspacewidth() - 80,workspaceHeight()-260)
tab_main.tabpage_pack.dw_pack.Resize(workspacewidth() - 80,workspaceHeight()-800)
tab_main.tabpage_pack.dw_packlist_notes.Resize(workspacewidth() - 80,486) /* 09/16 - PCONKL - added and just want to resize width. Leave height the same. If it cahnges, modify here*/
tab_main.tabpage_serial.dw_serial.Resize(workspacewidth() - 80,workspaceHeight()-550)
tab_main.tabpage_trax.dw_trax.Resize(workspacewidth() - 80,workspaceHeight()-270)
tab_main.tabpage_bol.dw_bol_prt.Resize(workspacewidth() - 80,workspaceHeight()-440)
tab_main.tabpage_shipments.dw_shipments.Resize(workspacewidth() - 80,workspaceHeight()-340) 
tab_main.tabpage_load_plan.dw_load_plan.Resize(workspacewidth() - 80,workspaceHeight()-450)  //17-AUG-2018 :Madhu S22533 TMS Load Plan Process

// 09/14-PCONKL - Pick DW moved if mobile enabled
If g.ibMobileenabled Then
	tab_main.tabpage_pick.dw_pick.Resize(workspacewidth() - 80,workspaceHeight()-600 ) //TimA 01/31/14 change the resize from -280 to -400 to fit the tab better, pconkl - 09/14 - tweaked for mobile DW at top
Else
	tab_main.tabpage_pick.dw_pick.Resize(workspacewidth() - 80,workspaceHeight()-450)
End If

//tab_main.tabpage_pack.dw_pack.Resize(workspacewidth() - 80,workspaceHeight()-650)
//tab_main.tabpage_bol.dw_bol_prt.Resize(workspacewidth() - 50,workspaceHeight()-350)
//tab_main.tabpage_serial.dw_serial.Resize(workspacewidth() - 80,workspaceHeight()-500)
//Jxlim 09/17/2010 increase the height on search tab
//tab_main.tabpage_search.dw_result.Resize(workspacewidth() - 80,workspaceHeight()-710)
//tab_main.tabpage_search.dw_result.Resize(workspacewidth() - 80,workspaceHeight()-950) //12-Nov-2014 :Madhu commented
//tab_main.tabpage_search.dw_result.Resize(workspacewidth() - 80,workspaceHeight()-1150) //12-Nov-2014 :Madhu Added
//tab_main.tabpage_trax.dw_trax.Resize(workspacewidth() - 80,workspaceHeight()-280)
//tab_main.tabpage_shipments.dw_shipments.Resize(workspacewidth() - 80,workspaceHeight()-280) /* 04/14 - PCONKL */
//tab_main.tabpage_alt_serial_capture.dw_alt_serial_parent.Resize(workspacewidth() - 80,workspaceHeight()-750)

//tab_main.tabpage_main.dw_main.resize(tab_main.tabpage_main.width -10, tab_main.tabpage_main.height -450)
//tab_main.tabpage_main.tab_address.move( tab_main.tabpage_main.dw_main.x, tab_main.tabpage_main.dw_main.y + 500)
end event

event close;call super::close;//GailM 10/17/2018 DE6145 Check whether delivery serial rows have not been applied to database.  If not, serial number inventory records could be left with serial flag in "P" condition
If tab_main.selectedtab = 6 and idw_serial.modifiedcount() > 0 and idw_main.getitemstring(1, 'ord_status') = 'P' then	
	//If messagebox("Serial numbers were allocated","Serial numbers were allocated but window is closing.~rThis will leave the serial numbers flagged to Order " + gs_system_no + ".~r~nDo you want to reset the serial flags?",Question!,YesNo!,2) = 1 Then
		wf_reset_serial_flag()
	//End If
End If

//Begin - dinesh - 06/15/2023- SIMS-198- Google Read only access 
if gs_project = 'PANDORA' then
//delete from Screen_Lock where user_id=:gs_userid  and screen_name='Delivery Order'  using sqlca; // Dinesh - 06092023 - SIMS-198- Screen Lock 
delete from Screen_Lock where user_id=:gs_userid  and screen_name='Delivery Order' and  userspid=:gl_userspid using sqlca; // Dinesh - 06092023 - SIMS-198- Screen Lock 
commit;
end if
//End - dinesh - 06/15/2023 - SIMS-198- Google Read only access

Destroy i_nwarehouse 

Destroy ids_content
Destroy ids_compare
//TimA 03/11/13 Added a close for Outbound order and method trace event
f_method_trace_special( gs_project, this.ClassName() , 'Close Outbound order ' ,is_dono, '','',isinvoice_no) 
//gl_methodlogid = 0
IF ISVALID(i_order) THEN Destroy i_order

IF ISVALID(g.i_gemini) THEN g.i_gemini.of_gemini_menu(false) //GAP1003 

//TimA 06/18/13 part of the Pandora License Plate project #608
If gs_ActiveWindow = 'OUT' then
	gs_ActiveWindow = ''
End if
end event

event ue_sort;call super::ue_sort;
If isvalid(idw_Current) Then idw_current.GroupCalc()

Return 0
end event

event ue_unlock;call super::ue_unlock;String ls_otm_status, ls_status, ls_dono, lsSerialValFlag
boolean lb_auth



ls_status = idw_main.GetItemString(idw_main.rowcount(), 'ord_status')
//GailM  06/27/2014  - PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship - F10 unlock for short ship authorization
			// PANDORA ISSUE 843 - Under Picking by Warehouse/Short Ship		--    Baseline
	If idw_main.GetItemString(idw_main.rowcount(), 'ord_status') = 'H' Then
		If wf_authorize(idw_main.GetItemString(idw_main.rowcount(), 'do_no'), "SS") Then
			idw_main.SetItem(idw_main.rowcount(), 'ord_status', 'P')
			wf_lock(false)
			ib_ShortShipUnlocked = true
			TriggerEvent("ue_save")
		End If
	End If
	
//GailM  08/05/2014 - Pandora Issue 888 - Code the order as Confirming (ord_status = 'Z') to disallow confirmation by another user
	if ls_status = 'Z' Then
		ls_dono = idw_main.GetItemString(idw_main.RowCount(), 'do_no')
		wf_lock(false)
		if idw_pack.RowCount() > 0 Then
			// Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
			if gs_project = 'PANDORA' then
				ls_status = 'L'
			// End-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
			else
				ls_status = 'A'
			end if
				
		Elseif idw_pick.RowCount() > 0 Then
			ls_status = 'P'
		Else
			ls_status = 'N'
		End If
		idw_main.SetItem(1, "ord_status",ls_Status)
		
		UPDATE delivery_master
		SET ord_status = :ls_Status
		WHERE do_no = :ls_dono;
		
		If sqlca.sqlcode <> 0 Then 
			messagebox('Errpr confirming order','Could not update order status to confirming.  No Action has Been Taken')
		End If

End If

IF gs_project = 'PANDORA' THEN
	
	//TimA 06/10/13 Added this method trace to see who is pressing F10
	f_method_trace_special( gs_project, this.ClassName() , 'F10 Unlock pressed for Outbound order: ' ,is_dono, '','',isinvoice_no) 		
	
	wf_lock(false)

	// LTK 20110527	user_field22 - Unlock only upon an F10.  wf_lock() is used for other purposes (ex: edi seq no > 0)
	idw_other.Object.user_field22.Protect = FALSE
	idw_other.Modify("user_field22.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")

	// LTK 20150109	user_field20 - Unlock only upon an F10.  wf_lock() is used for other purposes (ex: edi seq no > 0)
	idw_other.Object.user_field20.Protect = FALSE
	idw_other.Modify("user_field20.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")

	//TimA 09/19/11 Pandora issue #226 unlock if pressing F10
	idw_pack.Object.country_of_origin.Protect = FALSE
	idw_pack.Modify("country_of_origin.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	// Jxlim 03/21/2012	otm_status- Unlock only upon an F10.  BRD #387
	idw_main.Object.otm_status.Protect = FALSE
	idw_Main.SetTabOrder("OTM_status",20) 
	idw_main.Modify("otm_status.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	
	
	//TimA 02/26/15 Unlock the vics_bol_no
	idw_other.Object.vics_bol_no.Protect = FALSE
	idw_other.SetTabOrder("vics_bol_no",20) 
	idw_other.Modify("vics_bol_no.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	

	
	//Jxlim 04/02/2012 BRD #386 Lock Carrier field when OTM status is OTM Hold (H), Sweeper Hold (S) or Planning (P)	
	ls_status = idw_main.GetItemString(1, "Ord_status")
	ls_otm_status = idw_main.GetItemString(1, "Otm_Status")
	// Don’t allow changes to carrier if the ord_status is ‘C’ or ‘D’			
	If  ls_status <> 'C' And ls_status <> 'D' Then
//TAM 2019/01 - DE8052 - Allow Unlock if 'T' 
//			If ls_otm_status ='H' Or  ls_otm_status ='S' Or ls_otm_status = 'P' Then
			If ls_otm_status ='H' Or  ls_otm_status ='S' Or ls_otm_status = 'P'  Or ls_otm_status = 'T' Then
				idw_other.Object.Carrier.Protect = FALSE			
				idw_other.Modify("Carrier.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	  //white background color			
			End If
	End If	
	
	// ET3 2012-06-20  issue 430: lock user_field16
	idw_other.Object.user_field16.Protect = FALSE
	idw_other.Modify("user_field16.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	// ET3 2012-09-27  Pandora #503 - disable changing shipping information
	idw_other.object.consolidation_no.Protect = FALSE
	
	//TimA 07/03/12 Pandora issue #433
	//F10 to unlock these fields.
	idw_main.Object.request_date.Protect = FALSE
	idw_main.Modify("request_date.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	idw_main.Object.schedule_date.Protect = FALSE
	idw_main.Modify("schedule_date.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	//TimA 06/29/15 Pandora issue 983 remove the F10 unlock for the Original RDD field.
	//idw_main.Object.edm_generate_datetime.Protect = FALSE
	//idw_main.Modify("edm_generate_datetime.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	//Begin - Dinesh - 12/14/2021- S65679- Google SIMS TMS change: Ready by date to be read only
	idw_main.Object.ready_by_date.Protect = FALSE
	idw_main.Modify("ready_by_date.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	//End - Dinesh - 12/14/2021- S65679- Google SIMS TMS change: Ready by date to be read only
	
	//Begin - Dinesh - 02/03/2022- S66897- Google SIMS - part of CBOL changes
//	idw_other.Object.shipment_id.Protect = FALSE
//	idw_other.Modify("shipment_id.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	//End - Dinesh - 02/03/2022-  S66897- Google SIMS - part of CBOL changes
	
	//TimA 06/07/13 Unlock cust_order_no if F10
	idw_main.Object.cust_order_no.Protect = FALSE
	idw_main.Modify("cust_order_no.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	// ET3 2013-01-04 Pandora #555 - F10 to unlock owner code change dialog
	bChange_cf_owner_name_Allowed = TRUE
	
	// LTK 20150423	carrier_pro_no - Unlock only upon an F10.  wf_lock() is used for other purposes (ex: edi seq no > 0)
	idw_other.Object.carrier_pro_no.Protect = FALSE
	idw_other.Object.carrier_pro_no.Edit.DisplayOnly = False
	idw_other.Modify("carrier_pro_no.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")

	// TAM 08/21/2018 - S22531 load Id- Unlock only upon an F10.  
	idw_main.Object.load_id.Protect = FALSE 
	idw_main.Modify("load_id.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")	

	ibPressF10Unlock =TRUE 	//31-Aug-2015 :Madhu- Disable Prevent Manul Scanning
	
END IF

// 09/14 - PCONKL - add ability to override mobile status fields if necessary
//If idw_main.GetItemString(idw_main.rowcount(), 'mobile_enabled_ind') = 'Y' Then
	
	idw_mobile.Object.mobile_Enabled_Ind.Protect = 0
	
	idw_mobile.Object.mobile_status_Ind.Protect = 0
	idw_mobile.Modify("mobile_status_Ind.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	idw_Pick.Object.Datawindow.ReadOnly = False
	idw_Pick.Modify("mobile_status_ind.Protect = 0")
	idw_Pick.SetTabOrder("mobile_status_ind", 20)
	idw_Pick.Modify("mobile_status_ind.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	idw_Pack.Object.Datawindow.ReadOnly = False
	idw_Pack.Modify("mobile_status_ind.Protect = 0")
	idw_Pack.SetTabOrder("mobile_status_ind", 20)
	idw_Pack.Modify("mobile_status_ind.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")
	
	icb_pack_delete.Enabled = True
	
	
	
	
//End If /*Mobile enabled*/

//TAM 2015-02-06 - For Consolidation No set protect to false we need to set the tab order as well
	idw_other.object.consolidation_no.Protect = FALSE
	idw_other.SetTabOrder("consolidation_no",191) 
	idw_other.Modify("consolidation_no.Background.Color = '" +  string(RGB(255, 255, 255)) + "'")

// 2019/08 - MikeA - S36602 - I2406 - Riverbed - SKU scanning validation
// 2019/11/11 - MikeA DE13515 Added Flag around SKU scanning validation

IF gs_project = 'RIVERBED' THEN
	lsSerialValFlag = f_retrieve_parm("RIVERBED","SERIAL_VAL","SERIAL_OUT_VAL","CODE_DESCRIPT")

	//Check if enabled
	IF Upper(lsSerialValFlag) = 'Y' THEN &	
		idw_detail.Object.user_field5.Edit.DisplayOnly = FALSE
End If

// 04/16 - PCONKL - Enable Pick Sort Order radio buttons
tab_main.tabpage_pick.rb_pick_default.Enabled = True
tab_main.tabpage_pick.rb_pick_fifo.Enabled = True
tab_main.tabpage_pick.rb_pick_lifo.Enabled = True
tab_main.tabpage_pick.rb_pick_fefo.Enabled = True

end event

event timer;call super::timer;
Timer(0)
tab_main.tabpage_detail.sle_verify.backcolor = rgb(255,255,255)
tab_main.tabpage_detail.sle_verify.Text = ''

//// MikeA - S36602 -  Riverbed - SKU scanning validation
//// Removed Manual Scanning

//17-Aug-2015 :Madhu- Added code to prevent Manual Scanning - START
String lsNull

////17-Aug-2015 :Madhu- Added code to prevent Manual Scanning - START
//String lsNull
//
//setNull(lsNull)
//ibkeytype=FALSE
//ibmouseclick =FALSE
//MessageBox("Manual Entry","Doesn't Accept manual Entry")
//tab_main.tabpage_pick.dw_pick.setitem( idw_pick.getrow( ),'serial_no','-')
//tab_main.tabpage_serial.dw_serial.setitem(idw_serial.getrow( ),'serial_no',lsNull)
//tab_main.tabpage_serial.sle_barcodes.text=''
////17-Aug-2015 :Madhu- Added code to prevent Manual Scanning - END
end event

event activate;call super::activate;//TimA 06/18/13 part of the Pandora License Plate project #608
gs_ActiveWindow = 'OUT'
//TimA 08/13/15 Global gs_System_No for logging database errors if they happen
gs_System_No = is_dono


end event

event deactivate;call super::deactivate;//TimA 08/13/15 Global system number for capturing database errors messages
gs_System_No = ''
end event

type tab_main from w_std_master_detail`tab_main within w_do
integer x = 9
integer y = 12
integer width = 4581
integer height = 2688
integer textsize = -9
integer weight = 700
boolean fixedwidth = false
boolean boldselectedtext = true
integer selectedtab = 19
tabpage_other tabpage_other
tabpage_detail tabpage_detail
tabpage_pick tabpage_pick
tabpage_pack tabpage_pack
tabpage_serial tabpage_serial
tabpage_bol tabpage_bol
tabpage_carrier tabpage_carrier
tabpage_trax tabpage_trax
tabpage_shipments tabpage_shipments
tabpage_load_plan tabpage_load_plan
end type

on tab_main.create
this.tabpage_other=create tabpage_other
this.tabpage_detail=create tabpage_detail
this.tabpage_pick=create tabpage_pick
this.tabpage_pack=create tabpage_pack
this.tabpage_serial=create tabpage_serial
this.tabpage_bol=create tabpage_bol
this.tabpage_carrier=create tabpage_carrier
this.tabpage_trax=create tabpage_trax
this.tabpage_shipments=create tabpage_shipments
this.tabpage_load_plan=create tabpage_load_plan
call super::create
this.Control[]={this.tabpage_main,&
this.tabpage_search,&
this.tabpage_other,&
this.tabpage_detail,&
this.tabpage_pick,&
this.tabpage_pack,&
this.tabpage_serial,&
this.tabpage_bol,&
this.tabpage_carrier,&
this.tabpage_trax,&
this.tabpage_shipments,&
this.tabpage_load_plan}
end on

on tab_main.destroy
call super::destroy
destroy(this.tabpage_other)
destroy(this.tabpage_detail)
destroy(this.tabpage_pick)
destroy(this.tabpage_pack)
destroy(this.tabpage_serial)
destroy(this.tabpage_bol)
destroy(this.tabpage_carrier)
destroy(this.tabpage_trax)
destroy(this.tabpage_shipments)
destroy(this.tabpage_load_plan)
end on

event tab_main::selectionchanged;// pvh 09/08/05 - modified to remove references to Gemini Tab

window lwindow
long ll_return,llrow,k //01/03/2011 ujh: S/N_Pfx2
string ls_Client_Cust_SO_Nbr,ls_invoice,ls_cust_sku,ls_invoice_no,ls_User_IdW,ls_Edit_ModeW
String ls_country, ls_carrier_pro, ls_status, ls_color, ls_otm_status,ls_LSLG,ls_ZIGL,ls_carrier,ls_carrier_str,ls_shipment_id,ls_load_id
String ls_Edit_ModeR,ls_User_IdR,ls_Order_NoR,ls_display_name1,ls_display_name,ls_Order,lsinvoice_no,ls_userspid // Dinesh - 06/19/2023- SIMS-198- Google- Read only 
boolean lb_read=False,lb_readonly
long ll_userspidr

ilHelpTopicID = 503 /*default help topic ID*/
datastore lds_screen_lock,lds_screen_lockw
wf_check_menu(False,'sort')
Choose Case newIndex
	Case 1 /*Order Info Tab*/
		ilHelpTopicID = 553
		idw_current = idw_main
		wf_check_menu(False,'find') 

		//MStuart - BabyCare EMC
		If upper(gs_project) = 'BABYCARE' Then
			If idw_main.RowCount() > 0 Then
				wf_check_status_emc()
			End IF
		End If
		wf_set_pack_filter('Remove') //11-Mar-2014 :Madhu- Added to remove filter on Packlist.
		
		// Begin Dinesh S52817- 01/22/21 - Google - SIMS - SAP Conversion - GUI 
//			If gs_project = 'PANDORA' then
//				//string ls_User_field16,ls_User_field18,ls_in_clause
//				//ls_in_clause= tabpage_main.sle_order.text
//				idw_other.object.User_Field16.Protect = TRUE
//				idw_other.object.User_Field18.Protect = TRUE
//				// Begin  - Dinesh - 06/15/2023- SIMS-198- Google - SIMS - Read Only Access
//				lsinvoice_no = idw_main.GetItemString(1,'invoice_no')
//				lds_screen_lock = Create datastore
//				lds_screen_lock.Dataobject = 'd_screen_lock_order_r'
//				lds_screen_lock.settrans(sqlca)
//				lds_screen_lock.retrieve(gs_System_No,'R')
//				
//				lds_screen_lockw = Create datastore
//				lds_screen_lockw.Dataobject = 'd_screen_lock_order_w'
//				lds_screen_lockw.settrans(sqlca)
//				lds_screen_lockw.retrieve(gs_System_No,'W')
//				
//				ls_Edit_ModeW = lds_screen_lockw.getitemstring(k,'edit_Mode')
//			
//				
//				select count(*) into : il_find_matchW from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;
//				select user_id,UserSPID into :ls_User_IdW,:ls_userspid from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;
//				for k= 1 to lds_screen_lock.rowcount()
//					 ls_Edit_ModeR = lds_screen_lock.getitemstring(k,'edit_Mode')
//					 ls_User_IdR = lds_screen_lock.getitemstring(k,'user_Id')
//					 ls_Order_NoR =lds_screen_lock.getitemstring(k,'order_No')
//					 ll_userspidr =lds_screen_lock.getitemnumber(k,'userspid')
//					 if gs_System_No = ls_Order_NoR and ls_userspid = string(gl_userspid) then 
//							select display_name into :ls_display_name1 from usertable with (Nolock) where userid=:ls_User_IdR;
//							 ls_display_name= ls_display_name + ls_display_name1+ '/Session: ' + string(ll_userspidr) + " ,"
//							 if string(gl_userspid) = ls_userspid then
//							 	lb_read= True
//							else
//								lb_read= False
//							end if
//					end if
//				next
//				if lb_read= True and  lds_screen_lock.rowcount() > 0 then
//			
//							if   il_find_matchW > 0 and ls_Order_NoR=gs_System_No and ll_userspidr <> gl_userspid  then
//								messagebox(is_title,'User Name: ' + ls_display_name + ' is/are also accessing the same Order Number ' + lsinvoice_no + '.~r~nThe screen is locked by you and others can only access this order in read mode.Please update, save and close this order once you complete.', Stopsign! )
//								//lb_readonly=True
//
//							end if	
//						end if
//				if lb_read= False and  lds_screen_lock.rowcount() > 0 then
//							if  il_find_matchW > 0 and ls_Order_NoR=gs_System_No  and gs_userid = ls_User_IdW and ls_userspid <> string(gl_userspid) and gs_System_No <> '' then
//								messagebox(is_title,'Hey!! You have already opened another session: ' +string(ls_userspid)+ ' for the same Order Number ' + lsinvoice_no + '.~r~nPlease close all your current/previous session first and then re-open the order.', Stopsign! )
//								//lb_readonly=True
//							end if
//							
//							if  il_find_matchW > 0 and ls_Order_NoR=gs_System_No  and gs_userid <> ls_User_IdW and ls_userspid <> string(gl_userspid) and gs_System_No <> '' then						
//								messagebox(is_title,'User Name: ' + is_display_name + ' /Session:' + ls_userspid + '  is already accessing the Order Number ' + lsinvoice_no + '.~r~nThe screen is locked and can be accessible to read mode only.Please contact your Site Manager/Supervisor to unlock the screen or wait for sweeper run to clear the lock automatically.', Stopsign! )
//								//lb_readonly=True
//							end if
//					end if
//				
//			End if
		// End  - Dinesh - 06/15/2023- SIMS-198- Google - SIMS - Read Only Access
		
		// End Dinesh S51817 - 01/22/21 - Google - SIMS - SAP Conversion - GUI

	Case 2 /*Order Other Tab*/
		ilHelpTopicID = 553
		idw_current = idw_main
		// Begin - Dinesh - 05/10/2023- SIMS-53- Loading status delivery order
		if Upper(gs_project) = 'PANDORA' then
			 if  ((idw_main.GetItemString(1,"ord_status") = "L" or  (idw_main.GetItemString(1,"ord_status") = "A")) and idw_pack.RowCount() >=0)  then	
				//idw_main.SetItem(1,"ord_status","L") //then set status to Loading(L)
				tab_main.tabpage_other.cb_lock_load_google.visible = True
			end if
			
			if (w_do.idw_main.getitemstring(1,'Carrier')='MLOGSHLSHL')  then
				tab_main.tabpage_other.cb_lock_load_google.visible = False
			end if
			
			if  (idw_main.GetItemString(1,"ord_status") = "I" and idw_pack.RowCount() >=0)  then	
				//idw_main.SetItem(1,"ord_status","L") //then set status to Loading(L)
				tab_main.tabpage_other.cb_lock_load_google.visible = False
				
			end if
			
				// Begin - Dinesh - SIMS-198- oogle - SIMS - Read Only Access
//				if il_find_matchR > 0 and gs_userid <> is_userid then
//					messagebox(is_title,'User Name ' + is_display_name + '  is also accessing~r~nthe same Order Number ' + is_dono + '.~r~n~r~nThis screen is locked for the other user untill you update, save and close the delivery order screen for this order.', Stopsign! )
//				else
//				if il_find_matchW > 0 and  gs_userid <> is_user_id   then 
//					messagebox(is_title,'User Name ' + is_display_name + '  is already accessing~r~nthe Order Number ' + is_dono + '.~r~n~r~nThe screen is locked and can be accessible to read mode only.Please contact your Site Manager/Supervisor to unlock the screen before the waiting time of 2 hours.', Stopsign! )
//				end if
				// End - Dinesh - SIMS-198- oogle - SIMS - Read Only Access
		End if
		// End - Dinesh - 05/10/2023- SIMS-53- Loading status delivery order
		
		wf_check_menu(False,'find') 
		/*Sarun2013MAR20 To Enable the EMG user,licence entry option when selection change*/ 
		ls_country = UPPER(TRIM( tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.GetItemString(1, "Country")))
		wf_embargoed_country_check(ls_country,TRUE)
		/*Sarun2013MAR20*/
		wf_set_pack_filter('Remove') //11-Mar-2014 :Madhu- Added to remove filter on Packlist.

		//Jxlim 02/25/2014 Don’t allow changes to carrier_pro_nbr generation when ord_status is ‘C’ or ‘D’	
		ls_color =String(67108864) //ButtonFace
		ls_status = idw_main.GetItemString(1, "Ord_status")	
		ls_otm_status = idw_main.GetItemString(1, "Otm_status")	
		ls_carrier_pro = Trim(idw_other.GetItemString(1, "Carrier_Pro_No"))	
		// BEGIN -  Dinesh - 10/07/2021 -S57453-Google - SIMS - Bill of Lading Changes
			//idw_other.setitem(1,'awb_bol_no',ls_carrier_pro)
			//idw_other.setitem(1,'Carrier_Pro_No','')
			ls_carrier= idw_other.getitemstring(1,'carrier')
			ls_shipment_id= idw_main.GetItemString(1,'shipment_id')
			ls_invoice_no= idw_main.GetItemString(1,'invoice_no')
			//ls_load_id= idw_main.GetItemString(1,'load_id')
			
//					select SCAC_Code into : ls_carrier from carrier_master  where project_id = :gs_project and   Carrier_Code =:ls_carrier;
//					//ls_carrier_str=Left(ls_carrier, 4)
//					select LU.Code_ID into : ls_LSLG from Lookup_table LU where LU.project_id = :gs_project and LU.Code_Type = 'SHIPMENT_ID'  and LU.Code_ID= 'LSLG';
//					select LU.Code_ID into : ls_ZIGL from Lookup_table LU where LU.project_id = :gs_project and LU.Code_Type = 'SHIPMENT_ID'  and LU.Code_ID= 'ZIGL';
					
			//Begin - Dinesh - S64720 -Google - SIMS - Buy Sell Project
				//ls_invoice=idw_main.GetItemString(1,'invoice_no')
				//select Client_Cust_SO_Nbr into :ls_client_cust_so_nbr from EDI_Outbound_Header where project_id = :gs_project and invoice_no = :ls_invoice;
				//idw_other.setitem(1,'client_cust_so_nbr',ls_client_cust_so_nbr)
				// Begin - S66897 08022022-  Dinesh -Google - SIMS - CBOL Changes
				if gs_project = 'PANDORA' then
				idw_other.setitem(1,'shipment_id',ls_shipment_id)
			//	idw_other.Object.shipment_id.Protect = True // S66897 02022022-  Dinesh -Google - SIMS - CBOL Changes
				// End - S66897 08022022-  Dinesh -Google - SIMS - CBOL Changes
					if gs_role <> '-1' then
						idw_other.Object.client_cust_so_nbr.Protect = TRUE
						else 
						idw_other.Object.client_cust_so_nbr.Protect = FALSE
					end if
				//End - Dinesh - S64720 -Google - SIMS - Buy Sell Project
				end if
				// END -  Dinesh- 10/07/2021- S57453-Google - SIMS - Bill of Lading Changes
		//Jxlim 05/01/2014 Lock Carrier_ Pro_No field based on ord_status is ‘C’ , ‘D’, or 'V'			
		If   ls_status = 'C' or ls_status = 'D'  or ls_status = 'V' Then
			tab_main.tabpage_other.cb_assign_pro.Enabled=False
			//TimA 10/27/2015  allow entry into the field for copying
			idw_other.Object.Carrier_pro_no.Protect =False
			idw_other.Object.carrier_pro_no.Edit.DisplayOnly = True
			//idw_other.SetTabOrder("carrier_pro_no", 0)	
			idw_other.Modify("Carrier_pro_no.Background.Color = '" + ls_color + "'")	  //ButtonFace background color	
		Else
			//TimA 05/21/15 moved this down because Pandora has a new requirement
			//tab_main.tabpage_other.cb_assign_pro.Enabled=True
			// LTK 20150416  Commented out following 3 lines and moved them below.  Now Pandora always protects Carrier Pro No field (it is set via the command button).
//			idw_other.Object.Carrier_pro_no.Protect =False	
//			idw_other.SetTabOrder("carrier_pro_no", 220)		
//			idw_other.Modify("Carrier_pro_no.Background.Color = '" + String(RGB(255,255,255)) + "'")	  //White background color	
			if gs_project = 'PANDORA' then
				//TimA 05/21/15 allow the cb_assign_pro button only with OTM status of Ready or Non OTM
				//06-FEB-2019 :Madhu DE8524 Enable Assign PRO button for TMS Orders too
				If   ls_otm_status = 'R' or ls_otm_status = 'N' or ls_otm_status = 'T' then
					tab_main.tabpage_other.cb_assign_pro.Enabled=True
				Else
					tab_main.tabpage_other.cb_assign_pro.Enabled=False
				End if
				//TimA 10/27/2015 allow entry into the field for copying
				idw_other.Object.Carrier_pro_no.Protect =False
				idw_other.Object.carrier_pro_no.Edit.DisplayOnly = True
				idw_other.Modify("Carrier_pro_no.Background.Color = '" + ls_color + "'")	  //ButtonFace background color
			else
				tab_main.tabpage_other.cb_assign_pro.Enabled=True
				idw_other.Object.Carrier_pro_no.Protect =False	
				idw_other.SetTabOrder("carrier_pro_no", 220)
				idw_other.Object.carrier_pro_no.Edit.DisplayOnly = False //TimA 10/27/2015 Because of the DisplayOnly = True being set above on completed orders this needs to be turned off
				idw_other.Modify("Carrier_pro_no.Background.Color = '" + String(RGB(255,255,255)) + "'")	  //White background color	
			end if
			// LTK 20150416  End of Pro No protection change
			
		End If
	Case 3 /*Order Detail Tab*/
		ilHelpTopicID = 554
		idw_current = idw_Detail
	   // ls_Client_Cust_SO_Nbr = idw_other.GetItemString(1, "client_cust_so_nbr")	// Dinesh 12/01/2021- S64720- Google - SIMS - Buy Sell Project
		// Dinesh - Begin-10/06/2020- S50129 -SIMS - Google - Lock To Project Code field in OB Order Detail
		string ls_stat
		ls_stat=idw_main.GetItemString(1, "Ord_status")	
		//ls_invoice=idw_main.GetItemString(1,'invoice_no')
		//select customer_sku into :ls_cust_sku from EDI_Outbound_Detail where project_id = :gs_project and invoice_no = :ls_invoice;
		If gs_project = 'PANDORA' Then
			
//			for llrow =1 to idw_Detail.rowcount()	
//				idw_Detail.setitem(llrow,'customer_sku',ls_cust_sku) // Dinesh 12/01/2021- S64720- Google - SIMS - Buy Sell Project	
//			next
			idw_detail.Object.customer_sku.Protect = TRUE
			
			If ls_stat <> 'C' Or ls_stat <> 'D' then
			//select access_level into: ll_acess from UserTable where UserID=:gs_userid;
				if gs_role <> '-1' then
					idw_detail.Object.User_field5.Protect = TRUE
				else 
					idw_detail.Object.User_field5.Protect = FALSE
				end if
			end if
			
		end if
	
		// Dinesh - End- 10/06/2020- S50129 -SIMS - Google - Lock To Project Code field in OB Order Detail
		// pvh - 11.10.06
		//wf_check_menu(TRUE,'sort') 
		
		//* Begin .....Akash Baghel - 08/07/2023...- SIMS 243- Match the project code in order detail tab to project code table */
        String ls_projectcode, lsFind
		Long  i, llrowcount1, llFindRow1 
		  
           If  gs_project='PANDORA' Then
			  llrowcount1 = idw_detail.rowcount()	
			  
			  datastore	ldsProjectCode
				 ldsProjectCode = Create datastore
                   ldsProjectCode.dataobject= 'd_project_code'
                   ldsProjectCode.SetTransobject(SQLCA)
                   ldsProjectCode.Retrieve()		 
       
		 for i = 1 to llrowcount1
		      ls_projectcode = idw_detail.GetItemString(i,'User_field5')
		      lsFind = "project_code = '" +ls_projectcode + "'"
               llFindRow1 = ldsProjectCode.Find(lsFind, 1, ldsProjectCode.rowcount())
	          
              If llFindRow1 > 0 Then 
		        idw_detail.SetItem(1,'User_field5', ls_projectcode)
			Continue  
	          Elseif	 llFindRow1 <= 0 Then 
			          messagebox("Project Code Not Match","This order of PO No "+ls_projectcode+" has an invalid Project Code. Processing of this order is not allowed.")
                       lb_readonly=True
					wf_delivery_order_readonly(lb_readonly) // Dinesh - 08/22/2023- SIMS-243 - Match the project code in order detail tab to project code table */
					 return -1
			 End if 
            Next
       End if	

 //// End............Akash Baghel - 08/07/2023...- SIMS 243 - Match the project code in order detail tab to project code table */

		wf_check_menu(True,'find') 
		wf_set_pack_filter('Remove') //11-Mar-2014 :Madhu- Added to remove filter on Packlist.
	Case 4 /*Pick Tab*/
		ilHelpTopicID = 555
		idw_Current = idw_Pick
		
		// 02/05 - PCONKL - Show BOM Partial Pick checkbox if we have components built on a DO and Req Qty = 1
		If idw_detail.Find("Component_Ind <> 'Y' or component_type <> 'D' or Req_Qty > 1",1,idw_detail.RowCount()) > 0 or idw_detail.RowCount() = 0 Then
			tab_main.tabpage_pick.cbx_partial_bom.Visible = False
			tab_main.tabpage_pick.cbx_partial_bom.Checked = FALSe
		Else
			tab_main.tabpage_pick.cbx_partial_bom.Visible = True
		End If
		
		// pvh - 11.10.06
		// tam - 04/2013 turn on sort
		wf_check_menu(TRUE,'sort') 
		wf_check_menu(True,'find') 
		wf_set_pack_filter('Remove') //11-Mar-2014 :Madhu- Added to remove filter on Packlist.
		
		//GailM 06/20/2017 - SIMSPEVS-605 - Check if all container ids have been verified for Pandora BoxID validation
		if gs_project = 'PANDORA' then
			
			wf_check_container_scanned()
		End If

	Case 5 /*Pack Tab*/
		ilHelpTopicID = 557
		idw_Current = idw_Pack
		ib_pack = False // Dinesh - 02082022- S66897- Google CBOL Changes
		//DW is shared with TRAX DW which may have reset the filter to remove dup carton rows
		wf_set_Pack_Filter('SET')
		// pvh - 11.10.06
		// tam - 04/2013 turn on sort
		wf_check_menu(TRUE,'sort') 
		
		wf_check_menu(True,'find') 
		
		// Begin - Dinesh -SIMS-53 - Google - SIMS - Load Lock and New Loading Status 
			if gs_project= 'PANDORA' then
				tab_main.tabpage_pack.cb_lock_load.visible = False
			end if
		// End - Dinesh -SIMS-53 - Google - SIMS - Load Lock and New Loading Status 		
		if upper(gs_project) = 'PANDORA' then
			//TimA Pandora issue #192
			//If order is a MORK order then don't protect the fileds
			If idw_other.GetItemString(1,'user_field21')='Y' then
				ibMorkKitOrder = True
				String lsColor
				lsColor = idw_Pack.object.sku.background.color
				String lsModify
				lsModify = "Length.Protect=0 width.Protect=0 height.Protect=0 cbm.Protect=0 weight_net.Protect=0 weight_gross.Protect=0 shipper_tracking_id.Protect=0"
				lsModify +=" length.background.color=" +lsColor + "width.background.color=" +lsColor + " height.background.color=" +lsColor + " cbm.background.color=" +lsColor + " weight_net.background.color=" +lsColor + " weight_gross.background.color=" +lsColor + " shipper_tracking_id.background.color=" +lsColor
				idw_Pack.modify( lsModify)
			else
				ibMorkKitOrder = False
			end if
			
		End if		
		
		// LTK 20140228 Added call
		if upper(gs_project) = 'PANDORA' or upper(gs_project) = 'PHYSIO-MAA' or upper(gs_project) = 'PHYSIO-XD' then
			wf_set_state_ci_lt_button()
		end if
		
	
	Case 6 /*serial Number Tab*/
		
		// 01/03/2011 ujh: S/N_Pfx2  This placed before populating idw_Current just in case.
		// 10/19 - PCONKL - F19408 - no need to retrieve component numbers. It is slow to select serial tab
//		if upper(gs_project) = 'PANDORA' then
//			// For now do nothing with return code.  either there will be data or there will not
//			ll_return = wf_restore_component_no(idw_Serial)
//		end if
		
		ilHelpTopicID = 603
		idw_Current = idw_Serial
		wf_check_menu(TRUE,'sort')
		
		// pvh - 08/23/05 - Needed a reference to the parent window
		// to call wf_coo_validate in u_nvo_carton_serial_scanning
		lwindow = getParentWindow()
		If Not isvalid(iuo_carton_serial_scanning) Then
			iuo_carton_serial_scanning = Create u_nvo_carton_serial_scanning
			iuo_carton_serial_scanning.setParentWindow( lwindow )
		End If
		// eom
		
		wf_check_menu(False,'find') 
		wf_set_pack_filter('Remove') //11-Mar-2014 :Madhu- Added to remove filter on Packlist.
		
		//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -START
		int li_indx,li_pickqty,li_scannedqty
		li_pickqty =0
		li_scannedqty =0
		If gs_Project='KLONELAB' and tab_main.tabpage_pick.dw_pick.RowCount() > 0 Then
		 For li_indx =1 to tab_main.tabpage_pick.dw_pick.RowCount()
			li_pickqty += tab_main.tabpage_pick.dw_pick.GetItemNumber(li_indx, 'quantity')
		 NEXT
		tab_main.tabpage_serial.sle_total_req_qty.Text = string(li_pickqty) //set Total Req Qty on Serial tab
		END IF
		
		If gs_Project='KLONELAB' and tab_main.tabpage_serial.dw_serial.RowCount() > 0 Then
			 For li_indx =1 to tab_main.tabpage_serial.dw_serial.RowCount()
				li_scannedqty += tab_main.tabpage_serial.dw_serial.GetItemNumber(li_indx, 'quantity')
			 NEXT
			tab_main.tabpage_serial.sle_total_alloc_qty.Text = string(li_scannedqty) //set Total Alloc Qty on Serial tab
		ELSE
			tab_main.tabpage_serial.sle_total_alloc_qty.Text ='0'
		END IF
		//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -END
		
		// Dhirendra DE23249-PANDORA   Disable the mannual entry on serial tab -Start
		If gs_Project='PANDORA' THEN
			tab_main.tabpage_serial.rb_manual.enabled =false
		END IF 
		// Dhirendra DE23249-PANDORA   Disable the mannual entry on serial tab -END 
		
	Case 7 /*BOL Tab*/
		ilHelpTopicID = 558
		
		wf_check_menu(False,'find') 
		
	Case 8 /*Carrier Tab*/
		idw_current = idw_Carrier
		if Upper(gs_project) <> 'GM_MONTRY'  then w_do.tab_main.tabpage_carrier.em_carrier_ship_date.text = string(Today ( )) 
		ibCarrierSelected = True /*we will load the carrier nfo only when the tab is selected*/
		iw_window.PostEvent('ue_load_CArrier')
		
		wf_check_menu(False,'find') 
	
	Case 9 /*Trax Tab */
				
		// DW is shared with Packing DW bu we only want to show 1 record per 
		idw_trax.SetFilter("c_dup_filter <> 'Y'")
		idw_trax.Filter()
		
		wf_check_menu(False,'find') 
		
	Case 10 /* 04/14 - PCONKL - Shipments Tab*/
		
		String	lsOrder, lsShipment
		
		If idw_Main.RowCount() > 0 Then
			
			//re-retrieve to pick up changed order status
			lsShipment = idw_Main.GetITEmString(1,'consolidation_no')
			lsOrder = idw_Main.GetITEmString(1,'invoice_no')
		
			If lsShipment > '' Then
				idw_Shipments.Retrieve(gs_project,lsShipment, lsOrder)
			else
				idw_Shipments.Reset()
			End If
			
			If idw_Shipments.Find("ord_status <> 'R'",1, idw_Shipments.RowCount()) > 0 Then
				tab_main.tabpage_shipments.cb_confirm_shipment.enabled = False
			Else
				tab_main.tabpage_shipments.cb_confirm_shipment.enabled = True
			End If
			
		End If
	
	//TAM 2018/11/7 -  Last row is always the search window.  Set sort on
	//Case 12    /*Search Tab*/
	Case Else    /*Search Tab*/ 
		ilHelpTopicID = 523
		idw_current = idw_result
		wf_check_menu(TRUE,'sort')
		
		wf_check_menu(False,'find') 
End Choose

inewindex=newIndex // Dinesh


		
		
end event

type tabpage_main from w_std_master_detail`tabpage_main within tab_main
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 67108864
string text = " Order Info "
cb_readonly cb_readonly
st_shipment st_shipment
st_shipment_nbr st_shipment_nbr
st_validation_msg st_validation_msg
cb_custom1 cb_custom1
cb_emc cb_emc
cb_do_print_docs cb_do_print_docs
cb_do_readytoship cb_do_readytoship
cb_do_shipment cb_do_shipment
cb_do_void cb_do_void
cb_do_select_customer cb_do_select_customer
sle_order sle_order
sle_order2 sle_order2
tab_address tab_address
cb_do_notes cb_do_notes
cb_do_pod cb_do_pod
cb_do_hold cb_do_hold
cb_do_confirm cb_do_confirm
st_order_nbr st_order_nbr
dw_main dw_main
cb_open_ro cb_open_ro
end type

on tabpage_main.create
this.cb_readonly=create cb_readonly
this.st_shipment=create st_shipment
this.st_shipment_nbr=create st_shipment_nbr
this.st_validation_msg=create st_validation_msg
this.cb_custom1=create cb_custom1
this.cb_emc=create cb_emc
this.cb_do_print_docs=create cb_do_print_docs
this.cb_do_readytoship=create cb_do_readytoship
this.cb_do_shipment=create cb_do_shipment
this.cb_do_void=create cb_do_void
this.cb_do_select_customer=create cb_do_select_customer
this.sle_order=create sle_order
this.sle_order2=create sle_order2
this.tab_address=create tab_address
this.cb_do_notes=create cb_do_notes
this.cb_do_pod=create cb_do_pod
this.cb_do_hold=create cb_do_hold
this.cb_do_confirm=create cb_do_confirm
this.st_order_nbr=create st_order_nbr
this.dw_main=create dw_main
this.cb_open_ro=create cb_open_ro
int iCurrent
call super::create
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.cb_readonly
this.Control[iCurrent+2]=this.st_shipment
this.Control[iCurrent+3]=this.st_shipment_nbr
this.Control[iCurrent+4]=this.st_validation_msg
this.Control[iCurrent+5]=this.cb_custom1
this.Control[iCurrent+6]=this.cb_emc
this.Control[iCurrent+7]=this.cb_do_print_docs
this.Control[iCurrent+8]=this.cb_do_readytoship
this.Control[iCurrent+9]=this.cb_do_shipment
this.Control[iCurrent+10]=this.cb_do_void
this.Control[iCurrent+11]=this.cb_do_select_customer
this.Control[iCurrent+12]=this.sle_order
this.Control[iCurrent+13]=this.sle_order2
this.Control[iCurrent+14]=this.tab_address
this.Control[iCurrent+15]=this.cb_do_notes
this.Control[iCurrent+16]=this.cb_do_pod
this.Control[iCurrent+17]=this.cb_do_hold
this.Control[iCurrent+18]=this.cb_do_confirm
this.Control[iCurrent+19]=this.st_order_nbr
this.Control[iCurrent+20]=this.dw_main
this.Control[iCurrent+21]=this.cb_open_ro
end on

on tabpage_main.destroy
call super::destroy
destroy(this.cb_readonly)
destroy(this.st_shipment)
destroy(this.st_shipment_nbr)
destroy(this.st_validation_msg)
destroy(this.cb_custom1)
destroy(this.cb_emc)
destroy(this.cb_do_print_docs)
destroy(this.cb_do_readytoship)
destroy(this.cb_do_shipment)
destroy(this.cb_do_void)
destroy(this.cb_do_select_customer)
destroy(this.sle_order)
destroy(this.sle_order2)
destroy(this.tab_address)
destroy(this.cb_do_notes)
destroy(this.cb_do_pod)
destroy(this.cb_do_hold)
destroy(this.cb_do_confirm)
destroy(this.st_order_nbr)
destroy(this.dw_main)
destroy(this.cb_open_ro)
end on

event tabpage_main::constructor;call super::constructor;// Begin- Dinesh - 11/06/2023 - SIMS-328- Screen Lock  read only part 2 
if gs_project= 'PANDORA' then
	
	tab_main.tabpage_main.cb_readonly.visible = True
	
	if gs_system_no <> '' or not isnull(gs_system_no) then
		tab_main.tabpage_main.cb_readonly.enabled = False
	else
		tab_main.tabpage_main.cb_readonly.enabled = True
end if

else
	tab_main.tabpage_main.cb_readonly.visible = False
end if


// End- Dinesh - 11/06/2023 - SIMS-328- Screen Lock  read only part 2 
end event

type tabpage_search from w_std_master_detail`tabpage_search within tab_main
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 67108864
cb_print_passout_note cb_print_passout_note
cb_combine_gsin cb_combine_gsin
cb_multi_ready_to_ship cb_multi_ready_to_ship
cb_wmscutover cb_wmscutover
cb_clearall cb_clearall
cb_selectall cb_selectall
cb_batch_print_dn cb_batch_print_dn
cb_confirm_batch cb_confirm_batch
dw_result dw_result
cb_do_search cb_do_search
cb_do_clear cb_do_clear
uo_mobile_status uo_mobile_status
uo_ord_status uo_ord_status
uo_otm_ord_status uo_otm_ord_status
dw_search dw_search
end type

on tabpage_search.create
this.cb_print_passout_note=create cb_print_passout_note
this.cb_combine_gsin=create cb_combine_gsin
this.cb_multi_ready_to_ship=create cb_multi_ready_to_ship
this.cb_wmscutover=create cb_wmscutover
this.cb_clearall=create cb_clearall
this.cb_selectall=create cb_selectall
this.cb_batch_print_dn=create cb_batch_print_dn
this.cb_confirm_batch=create cb_confirm_batch
this.dw_result=create dw_result
this.cb_do_search=create cb_do_search
this.cb_do_clear=create cb_do_clear
this.uo_mobile_status=create uo_mobile_status
this.uo_ord_status=create uo_ord_status
this.uo_otm_ord_status=create uo_otm_ord_status
this.dw_search=create dw_search
int iCurrent
call super::create
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.cb_print_passout_note
this.Control[iCurrent+2]=this.cb_combine_gsin
this.Control[iCurrent+3]=this.cb_multi_ready_to_ship
this.Control[iCurrent+4]=this.cb_wmscutover
this.Control[iCurrent+5]=this.cb_clearall
this.Control[iCurrent+6]=this.cb_selectall
this.Control[iCurrent+7]=this.cb_batch_print_dn
this.Control[iCurrent+8]=this.cb_confirm_batch
this.Control[iCurrent+9]=this.dw_result
this.Control[iCurrent+10]=this.cb_do_search
this.Control[iCurrent+11]=this.cb_do_clear
this.Control[iCurrent+12]=this.uo_mobile_status
this.Control[iCurrent+13]=this.uo_ord_status
this.Control[iCurrent+14]=this.uo_otm_ord_status
this.Control[iCurrent+15]=this.dw_search
end on

on tabpage_search.destroy
call super::destroy
destroy(this.cb_print_passout_note)
destroy(this.cb_combine_gsin)
destroy(this.cb_multi_ready_to_ship)
destroy(this.cb_wmscutover)
destroy(this.cb_clearall)
destroy(this.cb_selectall)
destroy(this.cb_batch_print_dn)
destroy(this.cb_confirm_batch)
destroy(this.dw_result)
destroy(this.cb_do_search)
destroy(this.cb_do_clear)
destroy(this.uo_mobile_status)
destroy(this.uo_ord_status)
destroy(this.uo_otm_ord_status)
destroy(this.dw_search)
end on

type cb_readonly from commandbutton within tabpage_main
integer x = 1422
integer y = 28
integer width = 503
integer height = 96
integer taborder = 20
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Read Only Access"
end type

event clicked;// Begin - Dinesh - 11/06/2023 - SIMS-328- Screen Lock  read only part 2 
boolean lb_readonly
lb_readonly= True
If MessageBox( is_title, "Are you sure you want to change this order to read only?", Question!, YesNo!, 1 ) = 1 Then
	update Screen_Lock set edit_mode='R' where  user_id=:gs_userid  and screen_name='Delivery Order' and  userspid=:gl_userspid using sqlca;
	tab_main.tabpage_main.cb_readonly.enabled = False
	wf_delivery_order_readonly(lb_readonly)
	ib_access= true
	
End If
// End - Dinesh - 11/06/2023 - SIMS-328- Screen Lock  read only part 2 
end event

type st_shipment from statictext within tabpage_main
boolean visible = false
integer x = 2533
integer y = 44
integer width = 229
integer height = 92
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
alignment alignment = center!
boolean border = true
borderstyle borderstyle = stylelowered!
boolean focusrectangle = false
end type

type st_shipment_nbr from statictext within tabpage_main
boolean visible = false
integer x = 2130
integer y = 48
integer width = 370
integer height = 60
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "Shipment Nbr:"
alignment alignment = right!
boolean focusrectangle = false
end type

type st_validation_msg from statictext within tabpage_main
boolean visible = false
integer x = 2738
integer y = 172
integer width = 1349
integer height = 60
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
alignment alignment = right!
boolean focusrectangle = false
end type

event constructor;

//MEA - 1/25/13 -  Added to show Stryker Validation
//Can be added to show any validation message.

IF Upper(gs_project) = "STRYKER" THEN

	st_validation_msg.visible = true

END IF 
end event

type cb_custom1 from commandbutton within tabpage_main
boolean visible = false
integer x = 1417
integer y = 28
integer width = 475
integer height = 96
integer taborder = 100
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Custom 1"
end type

event clicked;
//TAM 12/12/12 Added call to function for W&S		
Choose Case Upper(gs_project)
//SARUN2014JAN31 Start: Including invoice print function for NYX				
	Case 'NYX'
		dw_print_invoice.retrieve(idw_main.GetItemString(1,'invoice_no'))
		OpenWithParm(w_dw_print_options,dw_print_invoice) 			
//SARUN2014JAN31 End: Including invoice print function for NYX				
			
	Case 'STRYKER'
		
		uf_stryker_validate_against_file()
		
	
				
	Case 'TPV', 'FUNAI', 'SG-MUSER'  ,'MY-MUSER', 'TH-MUSER', 'IND-MUSER', 'GIBSON'  //Jxlim 06/12/2014
		uf_print_a4_label()
	
	Case 'PUMA'  //30-Dec-2014 Madhu Added
		uf_print_a4_label_puma()
		
	Case ' '
		
	Case 'H2O'
		
		uf_print_h2o_invoice()
		
	Case 'REMA' //26-MAR-2018 :Madhu Rema -Update process for printing pallet labels
		OpenWithParm (w_print_generic_carton_label , idw_main)
		
	Case Else
	
		If left(Upper(gs_project),3) = 'WS-' then
			If idw_main.GetItemString(1,'user_field3' ) = 'IPT' then
				wf_export_ws_tradenet_ipt()
			else
				If idw_main.GetItemString(1,'user_field3' ) = 'OUT' then
					wf_export_ws_tradenet_out()
				End If
			End If
		End If
	

End Choose
end event

type cb_emc from commandbutton within tabpage_main
integer x = 4082
integer y = 172
integer width = 306
integer height = 96
integer taborder = 80
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&EMC"
end type

event clicked;//MStuart babycare - emc functionality

str_parms	lstrparms
string ls_name

ls_name = iw_window.classname()

lstrparms.String_arg[1] = ls_name
lstrparms.String_arg[2] = isle_order.text
lstrparms.String_arg[3] = is_dono

OpenWithParm(w_emc_capture, lStrparms)


end event

type cb_do_print_docs from commandbutton within tabpage_main
integer x = 2789
integer y = 44
integer width = 453
integer height = 96
integer taborder = 140
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print Ship Docs..."
end type

event clicked;//GailM 12/19/2019 PB 11.5 remove to help build SIMS
//OpenSheet(w_print_ship_docs, w_main, gi_menu_pos, Original!)
end event

event constructor;
If gs_project = '3COM_NASH' Then
	This.visible = True
Else
	This.Visible = False
End If

g.of_check_label_button(this)
end event

type cb_do_readytoship from commandbutton within tabpage_main
integer x = 983
integer y = 28
integer width = 411
integer height = 96
integer taborder = 20
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Ready To Ship"
end type

event clicked;is_Ready_Or_Confirm = 'READY'
iw_window.TriggerEvent("ue_confirm")
end event

event constructor;
// 11/09 - Using Project level indicator now
//If gs_project = '3COM_NASH' or gs_project = 'LMC' or gs_project = 'POWERWAVE' or gs_project = 'MAQUET' or gs_project = 'HILLMAN' or gs_project = 'BLUECOAT' Then  
If g.ibreadyToShipEnabled Then
	This.Visible = True
Else
	This.Visible = False
End If


g.of_check_label_button(this)
end event

type cb_do_shipment from commandbutton within tabpage_main
boolean visible = false
integer x = 3269
integer y = 44
integer width = 453
integer height = 96
integer taborder = 130
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Shipments..."
end type

event clicked;
iw_window.TriggerEvent("ue_process_Shipments")
end event

event constructor;
//Outbound Track & Trace (Shipments)
If g.ibTNTEnabled Then
	This.Visible = True
Else
	This.Visible = False
End If

g.of_check_label_button(this)
end event

type cb_do_void from commandbutton within tabpage_main
integer x = 384
integer y = 28
integer width = 238
integer height = 96
integer taborder = 30
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Void"
end type

event clicked;String lsMsg

//MEA - 04/12 Added to check credentials
if f_check_access( is_process , "C") = 0 then Return -1

//u_nvo_sims_CCC		lu_ccc
String	lsDONO, lsOrdStat
u_nvo_trax	luTrax
Integer	liRC
Long	llRowCount, llRowPos
DateTime	ldtToday 

// 02/05 - PCONKL - Need to recheck status from DB before saving - if a nother user has confirmed,
//						- We can't save here if current status is different.

ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 

If idw_main.RowCount() > 0 Then
	
	lsDONO = idw_main.GetITemString(1,'Do_no')  
	
	Select ord_status Into :lsOrdStat
	From Delivery_Master
	Where Project_ID = :gs_Project and Do_no = :lsDONo;

	If (lsOrdStat = 'C' or lsOrdStat = 'D' or lsOrdStat = 'R') Then
		Messagebox(is_title, 'This order has already been confirmed by aother user!~r~rIt can not be Voided.',StopSign!)
		Return 
	End If
	
	//MEA - 4/12 -  Yati requested only New orders to be voided.
	//TimA 01/30/14 Basline change
	//Only orders in New Status can be voided.
	//IF (upper(left(gs_Project,4)) = 'NIKE'   )OR( upper(left(gs_Project,7)) = 'PHILIPS' )  THEN
		
		If lsOrdStat <> 'N' Then
			Messagebox(is_title, 'You can only VOID orders that are in New status.~r~rPlease delete any Picking and/or Packing rows if they are present.',StopSign!)
			//Messagebox(is_title, 'Only New Orders can be VOIDED!~r~rIt can not be Voided.',StopSign!)
			
			Return 		
		End IF
		
	//END IF
	
End IF

//GailM 2/18/2019 S29552 F13773 I1745 Philips BlueHeart  - SIMS - Product Picked - Full Cancellation  done in VD sweeper code
//If Upper(gs_project) = 'PHILIPSCLS' Then
//	if messagebox(is_title,'Is this a Full Cancellation?',Question!,YesNo!) = 1 then
//		llRowCount = idw_detail.rowcount()
//		If llRowCount > 0 Then
//			For llRowPos = 1 to llRowCount
//				idw_detail.SetItem(llRowPos, 'req_qty', 0)
//			Next
//			idw_detail.update()
//			
//			Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
//			Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
//			Values(:gs_Project, 'RS', :lsDONO,'N', :ldtToday, '');
//			Execute Immediate "COMMIT" using SQLCA;
//			
//			messagebox(is_title,"Product Picked file created")
//			
//		End If
//	End If
//End if


if messagebox(is_title,'Are you sure you want to void this order?',Question!,YesNo!,2) = 2 then
	return
End if

SetPointer(Hourglass!)

// 09/05 - PCONKL - If shipped by TRAX, we need to void the order in TRAX as well
If idw_trax.Find("tracking_Id_Type='T'",1,idw_trax.RowCount()) > 0 Then
	
	luTrax = Create u_nvo_Trax
	liRC = luTrax.uf_void_shipment(idw_Main,idw_trax)

	If liRC < 0 Then
		//messagebox(is_title, 'Unable to void shipment in TRAX system!') //Dinesh - 02/06/2025- SIMS-641-Development for Delivery Order screen change for ConnectShip 
		messagebox(is_title, 'Unable to void shipment in ConnectShip system!') //Dinesh - 02/06/2025- SIMS-641-Development for Delivery Order screen change for ConnectShip 
	End If
	
End If

//04/04 - PCONKL - We need to re-retreive the order before voiding. It is possible that someone else has created
//						picking rows that need to be retrieved so that inventory can be un-allocated.
iw_Window.TriggerEvent('ue_retrieve')

idw_main.setitem(1,'ord_status','V')
ibSerialModified = True /* 05/05 - PCONKL - force any carton serail records to be reset */

//12/06 - PCONKL - Now allocating stock on the server - Delete picking rows here so erver function is called with deleted pick rows

// 12/06 - PCONKL - Hardcoded to controll rollout
If ibServerAllocationEnabled Then
	
	//Pack rows need to be deleted first
	llRowCount = idw_pack.RowCount() 
	For llRowPos = lLRowCount to 1 step -1
		idw_Pack.DeleteRow(llRowPos)
	Next
	
	llRowCount = idw_pick.RowCount() 
	For llRowPos = lLRowCount to 1 step -1
		idw_Pick.DeleteRow(llRowPos)
	Next
	
	//23-Apr-2014 :Madhu- Added condition to stop to websphere call -START
	IF idw_pick.RowCount() > 0 Then
		ibPickModified = True
	ELSE
		ibPickModified = False
	END IF
	//23-Apr-2014 :Madhu- Added condition to stop to websphere call -END
	
	
End If

If isOTMEnabled = 'Y' Then
	//Don't check NOT OTM orders
	If (idw_main.getitemstring(1, 'OTM_Status') <> 'N') OR Upper(gs_project) <> "PANDORA"  then      //MEA - 5/13 - Allow for all other project other than Pandora.
		//TimA 01/19/12 OTM Project.  We need to capture the deleted Do_no for the OTM call in ue_save
//		isDoNoDelete = lsDONO
		
		//Call Function to get a list of Sku's
		getdeletedskus()
//		//TimA 02/23/12 OTM Project
//		//Capture the deleted Sku's
//		llRowCount =  idw_detail.Rowcount()
//		For llRowPos = 1 to llRowCount
//			isDeleteSkus[llRowPos] = idw_detail.GEtItemString(llRowPOs,'sku')
//		Next
		isFlagDeleteOTM = 'Y'
	Else
		isFlagDeleteOTM = 'N'
	End if
End if

If iw_window.Trigger Event ue_save() = 0 Then

	// 11/11 - PCONKL - Write out a Void transaction to the Sweeper
	
	Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
	
	Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
	Values(:gs_Project, 'VD', :lsDONO,'N', :ldtToday, '');
	
	Execute Immediate "COMMIT" using SQLCA;
			
	MessageBox(is_title, "Record voided!")
	
Else
	
	MessageBox(is_title, "Record void failed!")
	SetPointer(Arrow!)
	Return
	
End If

SetPointer(Arrow!)



end event

event constructor;
g.of_check_label_button(this)
end event

type cb_do_select_customer from commandbutton within tabpage_main
integer x = 37
integer y = 524
integer width = 475
integer height = 76
integer taborder = 90
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean underline = true
string text = "C&ustomer Code:"
end type

event clicked;//dts - 8/25/05
If dw_main.GetItemString(1,'ord_type') = 'Z' then
	if gs_Project = 'PANDORA' then
		iw_window.TriggerEvent("ue_select_customer") //TEMP! - limit the window to WH-type Customers
		//messagebox(is_title, "Must specify Destination Sub-Inventory Location.")
	else
		iw_window.TriggerEvent("ue_select_warehouse")
	end if
else
	iw_window.TriggerEvent("ue_select_customer")
end if
end event

event constructor;
g.of_check_label_button(this)
end event

type sle_order from singlelineedit within tabpage_main
integer x = 521
integer y = 156
integer width = 1637
integer height = 92
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
string text = " "
textcase textcase = upper!
integer limit = 60
borderstyle borderstyle = stylelowered!
end type

event getfocus;If This.text <> '' then
	This.SelectText(1, Len(Trim(This.Text)))
end If
end event

event modified;// pvh 09/08/05 - modified to remove references to Gemini Tab
String ls_order, ls_customer, lssku, lsSupplier, lsFind,ls_wh_code, ls_OrderNbr, lsShipment, ls_load_Id
String lsSQL1, lsSQL2,ls_User_Field16,ls_User_Field18
integer i,k,j
Long	llRowPos, llRowCount, llFindRow, llCount,llreturnmessage,ll_userspid,ll_spid
Long ll_return, ll_load_detail // 01/03/2011 ujh: S/N_Pfx2
Boolean	lbCompExists, lbSerialExists,lb_multiple_ord_search,lb_readonly,lb_selfuser
dwitemstatus ldis_status
string ls_User_Id,ls_Order_No,ls_Edit_Mode,ls_display_name, ls_User_Id1,ls_Order_No1,ls_Edit_Mode1,ls_display_name1,ls_edit_moderead
datetime ldt_Entry_Date, ldt_Out_Date, ldt_Entry_Date1, ldt_Out_Date1,ldt_user_login_Date
string ls_in_clause,ls_search_string,ls_where,ls_screen_name,ls_order_read,ls_invoice_no,ls_screen_name1
string  ls_Edit_ModeR,ls_User_IdR, ls_Order_NoR,ls_Edit_ModeW,ls_User_IdW, ls_Order_NoW,ls_spid,ls_userspid
//02/02 - PCONKL - we may now have multiple orders with same invoice_no (backorder). If so, they must select from Search screen
long ll_find,flag,ll_find_match
datastore lds_screen_lockR,lds_screen_lockW
//GailM 1/2/2018 I357 F5734 S14571 PAN - HRI Alert for High Risk Inventory
ib_HRI_Ind = False
lb_readonly=False
lb_selfuser=False
//ib_search= False // Dinesh - 11/02/2023- SIMS-328 - Google  - Read only part 2
//ib_search=True



//TimA 02/11/2012 OTM Project
//Reset the OTM Update flag
ilUpdateOTM = 0
isFlagDeleteOTM = 'N'
isShipmentChangedFlag = 'N'
//TimA 06/22/12 Pandora issue #429
ll_SkipOTMFlag = 0

// LTK 20150707  Reset this flag to fix a delete bug
isDoNoDelete = ""

//Jxlim 03/17/2011 set ibPickModified to false everytime searching for record per Dave
ibPickModified = False
//Jxlim 03/18/2011 end of changed

//nxjain Improve the search criteria to trim the invoice value and update the where cluase with like   -20160211
ls_order = trim(This.Text)

//TimA Reset the log trace id
//Working on this comment out for checkin
//If gl_methodlogid > 0 then
//	gl_methodlogid = 0
//End if

//TimA 12/12/13 Set the ib_Authorize to False.  Used in ue_confirm to call the Authorize window.
ib_Authorize = False
is_AuthorizeType = ''
ibPressF10Unlock =FALSE //17-Sep-2015 :Madhu- Added for PressKeyVsSNScan
//If the Order # is null then select it from the db and continue
SetMicroHelp("Retrieve Order")
f_method_trace_special( gs_project, this.ClassName() + ' - Modified', 'Modified - Start event  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added

IF IsNull(is_dono) or is_dono = "" THEN

//nxjain Improve the search criteria to trim the invoice value and update the where cluase with like   -20160211
IF  len(ls_order)  =0  Then
	MessageBox(is_title, "Order not found, please enter again!", Exclamation!)
	This.SetFocus()		
	This.SelectText(1,Len(ls_order))
	RETURN
end IF 
//Dinesh Begin - 02/12/2021 - S52817 - Google - SIMS - SAP Conversion - GUI - Multileg Search 
IF  len(ls_order)  > 50  Then
	MessageBox('Order Out of limit', "Multi order or Multi-Leg Order is out of limit please enter not more than 5 Orders!", Exclamation!)
	This.SetFocus()		
	This.SelectText(1,Len(ls_order))
	RETURN
end IF
//Dinesh End - 02/12/2021 - S52817 - Google - SIMS - SAP Conversion - GUI - Multileg Search 
//Dinesh - 02/11/2021 - S52817 - Google - SIMS - SAP Conversion - GUI - Multileg Search 
select count(*) into :ll_find from delivery_master where invoice_no= :ls_order and project_id=:gs_project;
//Dhirendra-11 Jan 2021 PANDORA -S52706 - Added if condition for multiple search
IF   Pos(ls_order, ",") > 0 and Upper(gs_project) ="PANDORA" THEN
	lb_multiple_ord_search =true
	// Begin-  Dinesh -01/22/2021 - S52817 - Google - SIMS - SAP Conversion - GUI
  Elseif not isnull(ls_order) and ll_find =1 and Upper(gs_project) ="PANDORA" THEN 
	Select User_Field16,User_Field18 into :ls_User_Field16,:ls_User_Field18 from Delivery_Master  with(nolock)
	where Invoice_No=:ls_order and project_id = :gs_project;
	
		if (not ISNULL(ls_User_Field16) or ls_User_Field16<> '') or (not ISNULL(ls_User_Field18) or ls_User_Field18<>'') then
			lb_multiple_ord_search =True
		else
			Select Count(*) Into :llCount
			From DElivery_MAster
			WHERE Invoice_No like '%'+:ls_order+'%' and project_id = :gs_project;
			
	     end if
	// End-  Dinesh -01/22/2021 - S52817 - Google - SIMS - SAP Conversion - GUI
else
	Select Count(*) Into :llCount
	From DElivery_MAster
	WHERE Invoice_No like '%'+:ls_order+'%' and project_id = :gs_project;
	
end if 

	IF (llCount=0)  then  //Nxjain 2014-01-02 inculde search to system number.
		Select Count(*) , do_no  Into :llCount , :is_dono
		From DElivery_MAster
		WHERE do_no =:ls_order  and project_id = :gs_project
		Group by do_no;
	end if 
	//end Nxjain 2014-01-02 inculde search to system number.
		
	If llCount > 1  and lb_multiple_ord_search =false Then
		MessageBox(is_title, "Multiple Orders exist for this Order Number. Please select from the Search Screen!", Exclamation!)
		
		// 1/28/2011; David C; Commented out
		//This.SetFocus()
		//This.SelectText(1,Len(ls_order))
		
		// 1/28/2011; David C; Switch to the Search Tab and retrieve the list of duplicate orders that were found
		ls_OrderNbr = this.Text
		//tab_main.SelectTab ( 10 ) //18-Jun-2014 :Madhu- commented code to display appropriate
		tab_main.SelectTab ( 12 ) //18-Jun-2014 :Madhu- Added code to display appropriate
		tab_main.tabpage_search.dw_search.Object.invoice_no[1] = trim(ls_OrderNbr)
	     tab_main.tabpage_search.cb_do_search.Event clicked ( )
		RETURN
		//Dhirendra-11 Jan 2021 S52706-PANDORA - Added elseif condition for redirecting to serarch screen in case of multiple search 
	elseif  llCount  = 0 and lb_multiple_ord_search =true then
			ls_OrderNbr = this.Text
		//tab_main.SelectTab ( 10 ) //18-Jun-2014 :Madhu- commented code to display appropriate
		tab_main.SelectTab ( 12 ) //18-Jun-2014 :Madhu- Added code to display appropriate
		tab_main.tabpage_search.dw_search.Object.invoice_no[1] = trim(ls_OrderNbr)
		tab_main.tabpage_search.cb_do_search.Event clicked ( )
		RETURN
	ElseIf llCount  =0 Then
		MessageBox(is_title, "Order not found, please enter again!", Exclamation!)
		This.SetFocus()
		This.SelectText(1,Len(ls_order))
		RETURN
	Elseif IsNull(is_dono) or is_dono = "" THEN  // Nxjain 2014-01-02 inculde system number in search 
		SELECT DO_no
		INTO :is_dono
		FROM Delivery_Master
		WHERE Invoice_No = :ls_order   and project_id = :gs_project;
	End If
END IF

IF is_dono = "" THEN RETURN

gs_System_No = is_dono

//Begin - Dinesh - 06/08/2023 - SIMS-198 - Google - SIMS - Google - SIMS - Read Only Access 
if gs_project='PANDORA' then
	
		ls_order_read=ls_order
		
		//Begin - Dinesh - 11/06/2023 - SIMS-328 - Google - SIMS - Google - SIMS - Read Only Access part 2
		if gs_System_No <> '' or not isnull(gs_System_No) then
			tab_main.tabpage_main.cb_readonly.enabled = True
		else
			tab_main.tabpage_main.cb_readonly.enabled = False
		end if
		//End - Dinesh - 11/06/2023 - SIMS-328 - Google - SIMS - Google - SIMS - Read Only Access part 2
		SELECT invoice_no INTO :ls_invoice_no FROM Delivery_Master WHERE do_no = :ls_order_read   and project_id = :gs_project;
		if ls_invoice_no <> "" and not isnull(ls_invoice_no) then
			ls_order=ls_invoice_no
			is_order_new= ls_order
		end if

			lds_screen_lockW = Create datastore
			lds_screen_lockW.Dataobject = 'd_screen_lock_order_w'
			lds_screen_lockW.settrans(sqlca)
			lds_screen_lockW.retrieve(gs_System_No,'W')
			
			//gl_userspid
			
			//select top 1 Login_Time into :ldt_user_login_Date  from User_Login_History where UserId=:gs_userid order by Login_Time desc;
			//select UserSPID into :gl_userspid  from User_Login_History where UserId=:gs_userid and Login_Time=:ldt_user_login_Date;
			select count(*) into : il_find_matchW from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;
			lds_screen_lockR = Create datastore
			lds_screen_lockR.Dataobject = 'd_screen_lock_order_r'
			lds_screen_lockR.settrans(sqlca)
			lds_screen_lockR.retrieve(gs_System_No,'R')
		
			for j= 1 to lds_screen_lockR.rowcount()
					ls_Edit_ModeR = lds_screen_lockR.getitemstring(j,'edit_Mode')
				 	ls_User_IdR = lds_screen_lockR.getitemstring(j,'user_Id')
					ls_Order_NoR =lds_screen_lockR.getitemstring(j,'order_No')
			NEXT
			
			select count(*) into : il_find_matchR from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='R' and screen_name='Delivery Order' using sqlca;
			
			if (il_find_matchR > 0 and il_find_matchW=0) then
				select User_Id,Order_No,screen_name,Entry_Date,Out_Date,Edit_Mode,UserSPID into :ls_User_Id,:gs_System_No,:ls_screen_name,:ldt_Entry_Date,:ldt_Out_Date,:ls_Edit_Mode,:ll_spid from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='R' and screen_name='Delivery Order' using sqlca;
			end if
			if (il_find_matchW > 0 and il_find_matchR= 0) then
				select User_Id,Order_No,screen_name,Entry_Date,Out_Date,Edit_Mode,UserSPID into :ls_User_Id,:gs_System_No,:ls_screen_name,:ldt_Entry_Date,:ldt_Out_Date,:ls_Edit_Mode,:ll_spid from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;	
			end if
			if (il_find_matchR > 0 and  il_find_matchW > 0) then
				select User_Id,Order_No,screen_name,Entry_Date,Out_Date,Edit_Mode,UserSPID into :ls_User_Id,:gs_System_No,:ls_screen_name,:ldt_Entry_Date,:ldt_Out_Date,:ls_Edit_Mode,:ll_spid from Screen_Lock with(nolock) where Order_No= :gs_System_No and Edit_Mode='W' and screen_name='Delivery Order' using sqlca;
			end if
			
			lds_screen_lockW.retrieve(gs_System_No,'W')
				for k= 1 to lds_screen_lockW.rowcount()
					 ls_Edit_ModeW = lds_screen_lockW.getitemstring(k,'edit_Mode')
					 ls_User_IdW = lds_screen_lockW.getitemstring(k,'user_Id')
					 ls_Order_NoW =lds_screen_lockW.getitemstring(k,'order_No')
					 ll_userspid =lds_screen_lockW.getitemnumber(k,'userspid')
				next
				
					select Display_Name into :is_display_name from UserTable with(nolock) where UserId=:ls_User_IdW;
				
			//if  ib_search= True then
				if  gs_System_No = ls_Order_NoW and gs_userid <> ls_User_IdW and gs_System_No <> ''  then
						messagebox(is_title,'User Name: ' + is_display_name + '/Session: ' + string(ll_userspid) +  ' is already accessing the Order Number ' + ls_order + '.~r~nThe screen is locked and can be accessible to read mode only.Please contact your Site Manager/Supervisor to unlock the screen or wait for sweeper run to clear the lock automatically.', Stopsign! )
						lb_readonly=True
						lb_selfuser= False
				
				elseif gs_System_No=ls_Order_NoW and gs_userid = ls_User_IdW and ll_spid <>gl_userspid and gs_System_No <> '' then
						
						messagebox(is_title,'Hey!! You have already opened another session: ' +string(ll_userspid)+ ' for~r~nthe same Order Number ' + ls_order + '.~r~n~r~nPlease close all your current/previous session first and then re-open the order.', Stopsign! )
						lb_readonly=True
						lb_selfuser= False
				
				elseif gs_System_No=ls_Order_NoW and gs_userid = ls_User_IdW and  ll_spid = gl_userspid and gs_System_No <> '' then
						//messagebox(is_title,'Hey!! You have already opened the same order in the same session with SPID ID: ' +string(ll_userspid)+ ' for~r for the Order number ' + ls_order + '.~r~n~r~n', Stopsign! )
						lb_readonly=False
						lb_selfuser= True	
			
				end if
			//end if
			if lb_selfuser= False  then
			
				if (il_find_matchW =  0 and il_find_matchR = 0 )  then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; // Dinesh - 09/20/2023- Read only
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
					
				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid= ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid <> gl_userspid) then
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
						commit;
						lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid= ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid <> gl_userspid) then
						delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid and Edit_Mode='R' using sqlca; //09/21/2023- Dinesh - Read only
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
						commit;
						lb_readonly=true
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid= ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid <> gl_userspid) then
						delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - Read only
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
						commit;
						lb_readonly=True
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid= ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid <> gl_userspid ) then
						delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - Read only
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
						commit;
						lb_readonly=false
				//Begin - Dinesh - 09/20/2023- SIMS-328-  Google  - Read Only Access Part 2
				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid= ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid <> gl_userspid) then
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
						commit;
						lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid= ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid <> gl_userspid) then
						delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and Edit_Mode='R' and UserSPID=:gl_userspid using sqlca; // Dinesh - 09/20/2023- SIMS-328-  Google  - Read Only Access Part 2
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
						commit;
						lb_readonly=true
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid= ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid <> gl_userspid) then
						//delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' using sqlca;
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
						commit;
						lb_readonly=True
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid= ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid <> gl_userspid ) then
						delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and Edit_Mode='R' and UserSPID=:gl_userspid using sqlca; // Dinesh - 09/20/2023- SIMS-328-  Google  - Read Only Access Part 2
						insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
						commit;
						lb_readonly=false
				//End - Dinesh - 09/20/2023- SIMS-328-  Google  - Read Only Access Part 2
						
				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid = ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid = ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid = ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and Edit_Mode='R' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid = ls_User_IdW and gs_System_No = ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
					
				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid = ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid = gl_userspid) then
					//delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' using sqlca;
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid = ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid = ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order'  and UserSPID=:gl_userspid using sqlca;//09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid = ls_User_IdW and gs_System_No <> ls_Order_NoW and ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false

				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid <> ls_User_IdW and gs_System_No <> ls_Order_NoW and  ll_spid = gl_userspid) then
					//delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' using sqlca;
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid <> ls_User_IdW and gs_System_No <> ls_Order_NoW and  ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid <> ls_User_IdW and gs_System_No <> ls_Order_NoW and  ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid <> ls_User_IdW and gs_System_No <> ls_Order_NoW and  ll_spid = gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;		
					lb_readonly=false
				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid <> ls_User_IdW and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
					//delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' using sqlca;
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid <> ls_User_IdW and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=true
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid <> ls_User_IdW and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and Edit_Mode in('R','W') and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=True
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and ((gs_userid <> ls_User_IdW) or (ls_User_IdW='')  and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid<> ls_User_IdR and gs_System_No = ls_Order_NoR and ll_spid <> gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca;//09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;
					lb_readonly=false
					
				elseif (il_find_matchW = 0 and il_find_matchR = 0) and (gs_userid <> ls_User_IdW and gs_System_No <> ls_Order_NoW and  ll_spid <> gl_userspid) then
					//delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' using sqlca;
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW > 0 and il_find_matchR = 0) and (gs_userid <> ls_User_IdW and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and Edit_Mode='R' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=True
					
				elseif (il_find_matchW > 0 and il_find_matchR > 0) and (gs_userid <> ls_User_IdW and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
						lds_screen_lockW.retrieve(gs_System_No,'W')
					 for k= 1 to lds_screen_lockW.rowcount()
						 ls_Edit_ModeW = lds_screen_lockW.getitemstring(k,'edit_Mode')
						 ls_User_IdW = lds_screen_lockW.getitemstring(k,'user_Id')
						 ls_Order_NoW =lds_screen_lockW.getitemstring(k,'order_No')
						 ll_userspid =lds_screen_lockW.getitemnumber(k,'userspid')
					next
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca;//09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
				elseif (il_find_matchW = 0 and il_find_matchR > 0) and (gs_userid <> ls_User_IdW and gs_System_No = ls_Order_NoW and  ll_spid <> gl_userspid) then
					delete from screen_lock where User_Id=:gs_userid and screen_name='Delivery Order' and UserSPID=:gl_userspid using sqlca; //09/21/2023- Dinesh - SIMS-328-  Google  - Read Only Access Part 2
					insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'W',:gl_userspid) using sqlca;
					commit;	
					lb_readonly=false
					
				
				else
					lb_readonly=false
					//insert into Screen_Lock (User_Id,Order_No,Screen_Name,Entry_Date,Out_Date,Edit_Mode,UserSPID) values(:gs_userid,:gs_System_No,:is_title,getdate(),NULL,'R',:gl_userspid) using sqlca;
				end if	
			else
				
			end if
			
			//Begin - Dinesh - 11/06/2023 - SIMS-328 - Google - SIMS - Google - SIMS - Read Only Access part 2
			select edit_mode into :ls_edit_moderead from Screen_Lock with(nolock) where Order_No= :gs_System_No and user_id = :gs_userid and screen_name='Delivery Order' and userspid=:gl_userspid using sqlca;
			
			if ls_edit_moderead= 'W' then
				
				tab_main.tabpage_main.cb_readonly.enabled = True
			else
				tab_main.tabpage_main.cb_readonly.enabled = False
			end if
			//End - Dinesh - 11/06/2023 - SIMS-328 - Google - SIMS - Google - SIMS - Read Only Access part 2
	 End if
//End - Dinesh - 07/25/2023 - SIMS-198 - Google - SIMS - Google - SIMS - Read Only Access 

			
idw_main.Retrieve(is_dono)
//if  Upper(gs_project) ="PANDORA" THEN 
//	f_crossdock() // Dinesh - 02/01/2021 - S52817- Google -SAP Conversion - GUI - Multileg set in other info
//end if

If idw_main.RowCount() > 0 Then
	
	ibPackNotified = False

	//10-Dec-2015 :Madhu - Editable carrier field for NON-OTM Orders -START
	String lsOTMStatus,lsOrdStatus,lsCarrier
	lsOTMStatus = idw_main.getitemstring(1,'OTM_Status')
	lsOrdStatus= idw_main.getitemstring(1,'Ord_Status')
	lsCarrier =idw_main.getitemstring(1,'Carrier')
	
	If upper(gs_project)='PANDORA' and lsOTMStatus='N' and lsCarrier='MLOGUNKUNK' and lsOrdStatus <>'C' and lsOrdStatus <>'V' and lsOrdStatus <>'D' THEN
		idw_other.object.carrier.protect=False
	END IF
	//10-Dec-2015 :Madhu - Editable carrier field for NON-OTM Orders -END
	
	isle_order.Text = idw_main.GetItemString(1,'invoice_no') /* 04/03 - PCONKL - if retrieving by DO NO from another window, this field won't be primed */
	//TimA 03/11/13 added instance varable to method trace stuff
	isinvoice_no = idw_main.GetItemString(1,'invoice_no')
	//TimA 08/13/15 Global gs_System_No for logging database errors if they happen
	gs_System_No = is_dono
	f_method_trace_special( gs_project, this.ClassName() , 'Opened Outbound order ' ,is_dono, '','',isinvoice_no) 		
	ls_wh_code= idw_main.object.wh_code[1]
	
	If Pos(iw_window.Title, '[') = 0 Then
		iw_window.Title = iw_window.Title + " [" + idw_main.GetItemString(1,'invoice_no') + "]"
	End IF
	
	// 11/00 PCONKL - If order type is 'X' (return to Supplier), chg customer literals to supplier
	If idw_main.GetItemString(1,'ord_type') = 'X' or &
			(gs_project = 'LOGITECH' and (idw_main.GetItemString(1,'ord_type') = 'I' or idw_main.GetItemString(1,'ord_type') = 'E')) Then /*Return to supplier*/
				idw_main.Modify('cust_code_t.Text = "Supplier Code:" cust_name_t.Text="Supplier Name:" ')
				tab_main.tabpage_main.cb_do_select_customer.visible=False
	Else
		idw_main.Modify('cust_code_t.Text = "Customer Code:" cust_name_t.Text="Customer Name:" ')
	End If
	
	idw_pack.reset( )
   	idwc_supplier.InsertRow(0)
	idw_detail.Retrieve(is_dono)	
	wf_set_filter_carton_type()
	
//	if  Upper(gs_project) ="PANDORA" THEN 
//		f_crossdock() // Dinesh - 02/01/2021 - S52817- Google -SAP Conversion - GUI - set crossdock flag
//	end if
	
	IF idw_pack.Retrieve(is_dono) > 0 THEN POST wf_assignetom(1)
	
	//ET3 2012-11-29 Pandora 533 update the pack_list_last_user fields ...
	// 04/14 - PCONKL - Moved from SLE to DW
//	If IsValid(tab_main.tabpage_pack.sle_pack_list_last_user) Then
//		tab_main.tabpage_pack.sle_pack_list_last_user.text = idw_main.getitemstring( 1, 'pack_list_last_user')
//		tab_main.tabpage_pack.sle_pack_list_last_upate.text = STRING(idw_main.getitemdatetime( 1, 'pack_list_last_update'),"m/d/yyyy hh:mm:ss am/pm")
//	End If
	
	idw_pick.Retrieve(is_dono)
	
	// 04/14 - PCONKL - If OTM Enabled, retrieve Shipments tab (other orders on Shipment)
	// 01/16 - We want to retrieve shipments tab if Shipment ID filled in, may not be coming through OTM
	lsShipment = idw_Main.GetITEmString(1,'consolidation_no')
	//If isOTMEnabled = 'Y' and lsShipment > '' Then
	If lsShipment > '' Then
		idw_Shipments.Retrieve(gs_project,lsShipment, ls_Order)
	else
		idw_Shipments.Reset()
	End If
	
	f_method_trace_special( gs_project, this.ClassName() + ' - Modified', 'Modified - Start wf_check_status1  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added
	wf_check_status()
	f_method_trace_special( gs_project, this.ClassName() + ' - Modified', 'Modified - End wf_check_status1  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added
	
	//Begin -08/22/2023- SIMS-198- Google- Read only for the multiple users
	if gs_project='PANDORA' then
			wf_delivery_order_readonly(lb_readonly)
	end if
	//End -08/22/2023- SIMS-198- Google- Read only for the multiple users
	
	tab_main.tabpage_Serial.dw_serial.Reset() /* 1/01 Pconkl - Retrieve any outbound serial info - only when tab selected*/
	tab_main.tabpage_serial.sle_barcodes.Text = "" // pvh - 10/28/05
	tab_main.tabpage_Serial.st_message.Text = ''

	tab_main.tabpage_main.tab_address.TriggerEvent('ue_reset') /* 07/04 - PCONKL - reset alt addresses, will retrieve as needed*/
	ls_customer = idw_main.GetItemString(1, "cust_code")
	If not IsNull(ls_customer) Then

		//gap 02-03 need to get the default address and add the default address to ddw  
		If Not isvalid(ids_default_address) Then
			ids_default_address = Create datastore		
		End If
		If idw_main.GetItemString(1,'ord_type') = 'X' or &
			(gs_project = 'LOGITECH' and (idw_main.GetItemString(1,'ord_type') = 'I' or idw_main.GetItemString(1,'ord_type') = 'E'))  Then /*return to Sender*/
				ids_default_address.DataObject = 'd_maintenance_supplier'
		Else
			ids_default_address.DataObject = 'd_customer_maintenance'
		End If
		ids_default_address.SetTransObject(sqlca)
		//gap 02-03  add the default address from previous step to ddw 
		idwc_address.Retrieve(gs_project, ls_customer) 
		idwc_address.InsertRow(1)
		idwc_address.setitem(1,"address_code", "DEFAULT")
		if ids_default_address.Retrieve(gs_project, ls_customer) > 0 then idwc_address.setitem(1,"address_1", ids_default_address.GetItemString(1, "address_1")) 

		// 04/16 - PCONKL - Default Pick Sort radio buttons
		Choose Case upper(idw_Main.GetITemString(1,'pick_sort_order'))
				
			Case "", "PROJECT"
				tab_main.tabpage_pick.rb_pick_default.checked = true
			Case "COMPLETE_DATE A"
				tab_main.tabpage_pick.rb_pick_fifo.checked = true
			Case "COMPLETE_DATE D"
				tab_main.tabpage_pick.rb_pick_lifo.checked = true
			Case "EXPIRATION_DATE A, COMPLETE_DATE A"
				tab_main.tabpage_pick.rb_pick_fefo.checked = true
			Case Else
				tab_main.tabpage_pick.rb_pick_default.checked = true
		End Choose
				
	End If /* DM exists*/

	// 05/00 PCONKL - Initialize BOL processing
	tab_main.tabpage_bol.dw_bol_entry.Reset()
	tab_main.tabpage_bol.dw_bol_prt.Reset()
	tab_main.tabpage_bol.cb_bol_print.Enabled = False /*Disable printing of BOL*/
	
	idw_packlabels.REset()
	
	// 01/01 PCONKL - Serial # screen should only be enabled if there are any rows with outbound serial numbers to enter
	wf_set_pick_Filter('Remove')
	
	// GailM 8/20/2014 Pandora 883 DejaVu - container scan
	if ibDejaVu Then
		tab_main.tabpage_serial.Enabled = True
		lbSerialexists = True
	Else
		tab_main.tabpage_serial.Enabled = False
	End If
	tab_main.tabpage_pick.cbx_show_comp.Enabled = False
	tab_main.tabpage_pack.cbx_show_comp_pack.Enabled = False
	
//	// 02/05 - PCONKL - Show BOM Partial Pick checkbox if we have components built on a DO and Req Qty = 1
//	If idw_detail.Find("Component_Ind <> 'Y' or component_type <> 'D' or Req_Qty > 1",1,idw_detail.RowCount()) > 0 or idw_detail.RowCount() = 0 Then
//		tab_main.tabpage_pick.cbx_partial_bom.Visible = False
//	Else
//		tab_main.tabpage_pick.cbx_partial_bom.Visible = True
//	End If
	
	llRowCount = idw_pick.RowCount()
	If llRowCount > 0 Then
		For llRowPos = 1 to llRowCount
			if idw_pick.GetItemString(llRowPos,'serialized_ind') = 'O' or idw_pick.GetItemString(llRowPos,'serialized_ind') = 'B' or g.ibscanallordersrequired Then /* 02/09 - PCONKL - Added Type B, 11/09 - Enable tab if scan all orders (pack Validation) Required */
				tab_main.tabpage_serial.Enabled = True
				lbSerialexists = True
			End If
			// 02/01 PCONKL - Enable show Component checkbox if components exist
			//If idw_pick.GetItemNumber(llRowPos,'component_no') > 0 Then
			If idw_pick.GetItemNumber(llRowPos,'component_no') > 0 or idw_Pick.GetITemString(llRowPos,'Component_ind') = 'Y' Then
				tab_main.tabpage_pick.cbx_show_comp.Enabled = True
				lbCompExists = True
			End If
			
			If lbSerialExists and lbCompExists Then Exit /*get out if both are set*/
			
			//GailM 1/2/2018 I357 F5734 S14571 PAN - HRI Alert for High Risk Inventory - Set instance variable
			If idw_pick.GetItemString( llRowPos, 'QA_Check_Ind' ) = 'H' Then
				ib_HRI_Ind = True
			End If
			
		Next /*Pick Row*/
		
	End If
	
	// 10/03 - PCONKL - If outbound serialized and we already have created previously, retrieve here
	If lbSerialexists Then
		tab_main.tabpage_serial.dw_serial.Retrieve(is_dono,gs_project)
		isCurrentSKU = ''
		// 01/03/2011 ujh: S/N_Pfx2  populate na_component_no from serial_number_inventory
//		if upper(gs_project) = 'PANDORA' then
		//BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
//		if upper(gs_project) = 'PANDORA' OR upper(gs_project) = 'BLUECOAT' then
		// ET3 2012-06-14: Implement generic test
		if g.ibSNchainofcustody then
			// For now do nothing with return code.  either there will be data or there will not
			ll_return = wf_restore_component_no(tab_main.tabpage_serial.dw_serial)
		end if
	End If /*OB Serialized */
	
	// 02/01 PCONKL - If Components exist then set component ind on Pack List (not stored in DB)
	If lbCompexists Then
		
		idw_pack.SetRedraw(false)
		llRowCount = idw_Pack.RowCount()
		For llRowPos = 1 to llRowCount
			lsFind = "sku = '" + idw_pack.GetITemString(llRowPos,'sku') + "' and supp_code = '" + idw_pack.GetItemString(llRowPos,'supp_code') + "'"
			llFindRow = idw_pick.Find(lsFind,1,idw_pick.RowCount())
			If llFindRow > 0 Then
				idw_pack.SetItem(llRowPos,'component_ind', idw_pick.GetITemString(llFindRow,'component_ind'))
			Else
				idw_pack.SetItem(llRowPos,'component_ind', 'N')
			End If
		Next /*Pack Row*/
		idw_pack.Sort()
		tab_main.tabpage_pack.cbx_show_comp_Pack.Enabled = True
		tab_main.tabpage_pack.cbx_show_comp_Pack.Checked=True
		tab_main.tabpage_pick.cbx_show_comp.Checked = True
		
		idw_Pack.Setredraw(True)
		
	End If /*components exist*/
	
	
	// 02/01 PCONKL - Filter Pick list to not show components if box is not checked
	wf_set_pick_Filter('Set')
	wf_set_pack_Filter('Set')
	
	
	
			
	//wf_check_status()
	iw_window.PostEvent("ue_refresh")
	ib_changed = False
	idw_main.Show()
	
	// 07/04 - PCONKL - Address tab
	tab_main.tabpage_Main.tab_address.Show()
	tab_main.tabpage_Main.tab_address.bringtotop = true
	tab_main.tabpage_Main.tab_address.SelectTab(1)
	
	tab_main.tabpage_main.cb_do_select_customer.bringtoTop=True
	idw_main.SetFocus()
	This.Visible = FALSE
	sle_order2.Visible = TRUE
	sle_order2.text = This.text
	is_bolno = This.Text
	
	//03/07 - PONKL - Enable/Disable DIMS on Packing List - Only want to enable first row for a carton
	uf_enable_first_carton_row(0,"")
	
	// 03/03 - Pconkl - See if there is any default Carrier Information to load
	iw_window.PostEvent('ue_load_carrier')

	//05/05 - Pconkl - If order being batch Picked, show text on Picking Tab
	If idw_main.GetITemNumber(1,'batch_pick_id') > 0 Then
		If idw_main.GetITemString(1,'Ord_Status') = 'C' or idw_main.GetITemString(1,'Ord_Status') = 'D' Then
			tab_main.tabpage_pick.batch_pick_t.Text = 'This order was Batch Picked (ID# ' + String(idw_main.GetITemNumber(1,'batch_pick_id')) + ').'
		Else
			tab_main.tabpage_pick.batch_pick_t.Text = 'This order is being Batch Picked (ID# ' + String(idw_main.GetITemNumber(1,'batch_pick_id')) + '). Any changes made here will be reflected in the Batch'
		End If
	Else
		tab_main.tabpage_pick.batch_pick_t.Text = ''
	End If
	
	//17-AUG-2018 :Madhu S22533 TMS Load Plan Process - START
	ll_load_detail =	idw_load_plan.retrieve( is_dono)
	
	IF upper(gs_project) ='PANDORA' and ll_load_detail > 0 THEN
		ls_load_Id = idw_load_plan.getItemString( 1, 'Load_Id')
		
		If IsNull(ls_load_Id) or ls_load_Id ='' or ls_load_Id =' ' or ls_load_Id = 'NA' Then  // TAM 2018/12/10 S25773 - Dont Show tab if Load Plan is Exempt 'NA'
			tab_main.tabpage_load_plan.visible =False
		else
			tab_main.tabpage_load_plan.visible =True			
		end If
	ELSE
		tab_main.tabpage_load_plan.visible =False
	END IF
	//17-AUG-2018 :Madhu S22533 TMS Load Plan Process - END
	

Else /*ORDER NOT FOUND */
	
	MessageBox(is_title, "Order not found, please enter again!", Exclamation!)
	This.SetFocus()
	This.SelectText(1,Len(ls_order))
	tab_main.tabpage_pick.batch_pick_t.Text = '' /* 05/05 - Pconkl*/
	
End If /* Order Found? */


//TimA 11/13/13 Pandora issue #637
ib_LPN_PickByPallet = False //Needed for special LPN picking by pallet for Pandora
ibCCCFirstSave = True /* 12/03 - PCONKL - for first time saving of an order - for CCC processing*/
ibserialsupdated = False
isPandoraToProject = "" /*used to default 'To Project' based on PAndora Ship To Customer*/

//ibConfirmShipment = False	// LTK 20140618 This was causing issues because ue_confirm calls ue_save which calls sle_order.modified

cb_do_confirm.Default = False /*button is getting triggered when order number entered  */

//06-Nov-2014 :Madhu- Reset Serial Flag to N on SNI table -START
//If upper(gs_project) = 'ARIENS' THEN
//	wf_reset_serial_flag()
//END IF
//06-Nov-2014 :Madhu- Reset Serial Flag to N on SNI table -END

// GailM - 07/15/2015 - Moved command buttons to top.  Moved DW over order number entry.  This is needed to all static text to show.
tab_main.tabpage_main.st_order_nbr.bringtotop = true
if tab_main.tabpage_main.cb_open_ro.visible then tab_main.tabpage_main.cb_open_ro.bringtotop = true //SARUN2016FEB10:RO_Open

SetMicroHelp("Ready -")
f_method_trace_special( gs_project, this.ClassName() + ' - Modified', 'Modified - End event  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added




end event

type sle_order2 from singlelineedit within tabpage_main
integer x = 521
integer y = 156
integer width = 1637
integer height = 92
integer taborder = 110
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 12639424
string text = "0"
boolean autohscroll = false
integer limit = 20
boolean displayonly = true
borderstyle borderstyle = stylelowered!
end type

event modified;String	lsOrder
Int	liCount

//04/02 - PCONKL - we will allow the user to change the Order Number in a new Status

If idw_main.RowCount() > 0 Then
	If Trim(This.TExt) > '' THen
		
		//05/06 - pconkl - if not allowing duplicate order numbers, validate here
		If NOt g.ibAllowDupDeliveryOrderNumbers Then
			
			lsOrder = This.Text
			
			Select Count(*) into :liCount
			From Delivery_MAster
			Where project_id = :gs_Project and invoice_No = :lsOrder and Ord_status <> 'V';
			
			If liCount > 0 Then
				MessageBox(is_Title,"Delivery Order " + lsOrder + " already exists~r(This project does not allow duplicate order numbers)")
				This.SetFocus()
				This.Text = idw_Main.GetITemString(1,'invoice_no')
			End If
							
		End IF
		
		
		idw_main.SetITem(1,'Invoice_no',This.Text)
		ib_changed = True
		
	Else
		Messagebox(is_title,'Order Number is required!')
		This.Text = idw_Main.GetITemString(1,'invoice_no')
	End If
End If
end event

type tab_address from tab within tabpage_main
event ue_reset ( )
event type integer ue_save ( )
event ue_enable ( boolean abenable )
boolean visible = false
integer x = 73
integer y = 668
integer width = 3557
integer height = 860
integer taborder = 40
boolean bringtotop = true
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long backcolor = 79741120
boolean raggedright = true
boolean focusonbuttondown = true
boolean createondemand = true
integer selectedtab = 1
tabpage_shipto tabpage_shipto
tabpage_bt tabpage_bt
tabpage_it tabpage_it
tabpage_st tabpage_st
tabpage_trax_3rd_party tabpage_trax_3rd_party
tabpage_rt tabpage_rt
end type

event ue_reset();
//reset datawindows
tabpage_bt.dw_bt.Reset()
tabpage_it.dw_it.Reset()
tabpage_st.dw_st.Reset()
tabpage_trax_3rd_party.dw_trax_3rd_party.Reset()
tabpage_rt.dw_rt.Reset() //dts 12/15/2013, Pandora #658
end event

event type integer ue_save();Integer	liRC
String	lsDONO


If tabpage_bt.dw_bt.AcceptText() < 0 Then Return -1
If tabpage_it.dw_it.AcceptText() < 0 Then Return -1
If tabpage_st.dw_st.AcceptText() < 0 Then Return -1
If tabpage_shipto.dw_shipto.AcceptText() < 0 Then Return -1
If tabpage_rt.dw_rt.AcceptText() < 0 Then Return -1 //dts 12/15/2013, Pandora #658

If idw_main.RowCOunt() = 0 Then Return 1

lsDONO = idw_Main.GetITemString(1,'do_no')

//if all fields empty, elete row (we created it when the selected the tab)
If tabpage_bt.dw_bt.RowCOunt() > 0 Then
	If isnull(tabpage_bt.dw_bt.GetITemString(1,'name')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'address_1')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'address_2')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'address_3')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'address_4')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'District')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'City')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'State')) and &
		isnull(tabpage_bt.dw_bt.GetITemString(1,'Zip')) Then
			tabpage_bt.dw_bt.DeleteRow(1)
		Else
			tabpage_bt.dw_bt.SetItem(1,'do_no',lsdono)
	End IF
End If

If tabpage_it.dw_it.RowCOunt() > 0 Then
	If isnull(tabpage_it.dw_it.GetITemString(1,'name')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'address_1')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'address_2')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'address_3')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'address_4')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'District')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'City')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'State')) and &
		isnull(tabpage_it.dw_it.GetITemString(1,'Zip')) Then
			tabpage_it.dw_it.DeleteRow(1)
		Else
			tabpage_it.dw_it.SetItem(1,'do_no',lsdono)
	End If
End IF

IF tabpage_st.dw_st.RowCOunt() > 0 Then
	If isnull(tabpage_st.dw_st.GetITemString(1,'name')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'address_1')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'address_2')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'address_3')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'address_4')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'District')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'City')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'State')) and &
		isnull(tabpage_st.dw_st.GetITemString(1,'Zip')) Then
			tabpage_st.dw_st.DeleteRow(1)
		Else
			tabpage_st.dw_st.SetItem(1,'do_no',lsdono)
	End IF	
End IF
	
	
If tabpage_trax_3rd_party.dw_trax_3rd_party.RowCOunt() > 0 Then
	If isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'name')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'address_1')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'address_2')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'address_3')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'address_4')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'District')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'City')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'State')) and &
		isnull(tabpage_trax_3rd_party.dw_trax_3rd_party.GetITemString(1,'Zip')) Then
			tabpage_trax_3rd_party.dw_trax_3rd_party.DeleteRow(1)
		Else
			tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1,'do_no',lsdono)
	End IF
End If	
	
 //dts 12/15/2013, Pandora #658
If tabpage_rt.dw_rt.RowCount() > 0 Then
	If isnull(tabpage_rt.dw_rt.GetItemString(1,'name')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'address_1')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'address_2')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'address_3')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'address_4')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'District')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'City')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'State')) and &
		isnull(tabpage_rt.dw_rt.GetItemString(1,'Zip')) Then
			tabpage_rt.dw_rt.DeleteRow(1)
	Else
		tabpage_rt.dw_rt.SetItem(1,'do_no',lsdono)
	End IF	
End IF

liRC = tabpage_bt.dw_bt.Update()

If liRC = 1 Then
	liRC = tabpage_it.dw_it.Update()
End If

If liRC = 1 Then
	liRC = tabpage_st.dw_st.Update()
End If

If liRC = 1 Then
	liRC = tabpage_trax_3rd_party.dw_trax_3rd_party.Update()
End If

 //dts 12/15/2013, Pandora #658
If liRC = 1 Then
	liRC = tabpage_rt.dw_rt.Update()
End If

Return liRC
end event

event ue_enable(boolean abenable);
If AbEnable THen
	tabpage_bt.dw_bt.Enabled = True
	tabpage_it.dw_it.Enabled = True
	tabpage_st.dw_st.Enabled = True
	tabpage_trax_3rd_party.dw_trax_3rd_party.Enabled = True
	tabpage_rt.dw_rt.Enabled = True //dts 12/15/2013, Pandora #658
Else
	tabpage_bt.dw_bt.Enabled = False
	tabpage_it.dw_it.Enabled = False
	tabpage_st.dw_st.Enabled = False
	tabpage_trax_3rd_party.dw_trax_3rd_party.Enabled = False	
	tabpage_rt.dw_rt.Enabled = False //dts 12/15/2013, Pandora #658
End If
end event

on tab_address.create
this.tabpage_shipto=create tabpage_shipto
this.tabpage_bt=create tabpage_bt
this.tabpage_it=create tabpage_it
this.tabpage_st=create tabpage_st
this.tabpage_trax_3rd_party=create tabpage_trax_3rd_party
this.tabpage_rt=create tabpage_rt
this.Control[]={this.tabpage_shipto,&
this.tabpage_bt,&
this.tabpage_it,&
this.tabpage_st,&
this.tabpage_trax_3rd_party,&
this.tabpage_rt}
end on

on tab_address.destroy
destroy(this.tabpage_shipto)
destroy(this.tabpage_bt)
destroy(this.tabpage_it)
destroy(this.tabpage_st)
destroy(this.tabpage_trax_3rd_party)
destroy(this.tabpage_rt)
end on

event selectionchanged;String	lsDONO

If not isvalid(idw_Main) Then Return

If idw_main.RowCount() = 0 Then Return

lsDONO = idw_main.GetITemString(1,'do_no')

Choose Case NewIndex
		
	Case 2 /* Bill To*/
		
		If tabpage_bt.dw_bt.rowCOunt() = 0 and lsdoNO > ''  Then
			tabpage_bt.dw_bt.Retrieve(lsdono, 'BT')
		End If
		
		If tabpage_bt.dw_bt.RowCOunt() = 0 Then
			tabpage_bt.dw_bt.insertRow(0)
			tabpage_bt.dw_bt.SetItem(1,'do_no', lsDONO)
			tabpage_bt.dw_bt.SetItem(1,'address_type', 'BT')
			tabpage_bt.dw_bt.SetItem(1,'Project_ID', gs_project)
		End If
					
	Case 3 /* Intermediary*/
		
		If tabpage_it.dw_it.rowCOunt() = 0 and lsdoNO > '' Then
			tabpage_it.dw_it.Retrieve(lsdono, 'IT')
		End If
		
		If tabpage_it.dw_it.RowCOunt() = 0 Then
			tabpage_it.dw_it.insertRow(0)
			tabpage_it.dw_it.SetItem(1,'do_no', lsDONO)
			tabpage_it.dw_it.SetItem(1,'address_type', 'IT')
			tabpage_it.dw_it.SetItem(1,'Project_ID', gs_project)
		End If
		
	Case 4 /*Sold To*/
		
		If tabpage_st.dw_st.rowCOunt() = 0  and lsdoNO > '' Then
			tabpage_st.dw_st.Retrieve(lsdono, 'ST')
		End If
		
		If tabpage_st.dw_st.RowCOunt() = 0 Then
			tabpage_st.dw_st.insertRow(0)
			tabpage_st.dw_st.SetItem(1,'do_no', lsDONO)
			tabpage_st.dw_st.SetItem(1,'address_type', 'ST')
			tabpage_st.dw_st.SetItem(1,'Project_ID', gs_project)
		End If
		
	Case 5 /*Trax 3rd Party*/
				
		If tabpage_trax_3rd_party.dw_trax_3rd_party.RowCount() = 0 and lsdoNO > ''  Then
			tabpage_trax_3rd_party.dw_trax_3rd_party.Retrieve(lsdono, '3P')
		End If
		
		If tabpage_trax_3rd_party.dw_trax_3rd_party.RowCOunt() = 0 Then
			tabpage_trax_3rd_party.dw_trax_3rd_party.insertRow(0)
			tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1,'do_no', lsDONO)
			tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1,'address_type', '3P')
			tabpage_trax_3rd_party.dw_trax_3rd_party.SetItem(1,'Project_ID', gs_project)
		End If		

	Case 6 /*Return To*/
		//dts 12/15/2013, Pandora #658
		If tabpage_rt.dw_rt.rowCOunt() = 0  and lsdoNO > '' Then
			tabpage_rt.dw_rt.Retrieve(lsdono, 'RT')
		End If
		
		If tabpage_rt.dw_rt.RowCount() = 0 Then
			tabpage_rt.dw_rt.insertRow(0)
			tabpage_rt.dw_rt.SetItem(1,'do_no', lsDONO)
			tabpage_rt.dw_rt.SetItem(1,'address_type', 'RT')
			tabpage_rt.dw_rt.SetItem(1,'Project_ID', gs_project)
		End If
		
End Choose
end event

type tabpage_shipto from userobject within tab_address
integer x = 18
integer y = 108
integer width = 3520
integer height = 736
long backcolor = 79741120
string text = "Ship To"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
dw_shipto dw_shipto
end type

on tabpage_shipto.create
this.dw_shipto=create dw_shipto
this.Control[]={this.dw_shipto}
end on

on tabpage_shipto.destroy
destroy(this.dw_shipto)
end on

type dw_shipto from u_dw_ancestor within tabpage_shipto
event ue_nozoom pbm_other
integer y = 12
integer width = 3465
integer height = 748
integer taborder = 20
boolean bringtotop = true
string dataobject = "d_do_address_shipto"
boolean border = false
end type

event ue_nozoom;CONSTANT INT WM_MOUSEWHEEL = 522
IF message.number = WM_MOUSEWHEEL THEN
  message.processed = TRUE
  RETURN 1
END IF
end event

event losefocus;call super::losefocus;//10-June-2015 :Madhu- If ib_changed is true, set Focus back to main window else ignore it.
If ib_changed Then
	idw_main.SetFocus()
	idw_main.SetRow(1)
	idw_main.SetColumn('request_date')
Else
	Return 0
End If


end event

event process_enter;call super::process_enter;Send(Handle(This),256,9,Long(0,0))
	Return 1
end event

event itemchanged;call super::itemchanged;Datastore	lds_Temp
boolean lbAlreadyChanged
string  ls_country
INTEGER nRtn = 0		// 0-accept data; 1-reject data but allow focus change; 2-reject change
BOOLEAN bEmbargoed = FALSE
STRING  sMsg = ''

lbAlreadyChanged = ib_changed
ib_changed = True

//TimA 02/02/2012 OTM Project
//Look for the columns in the lookup table that if changed we call OTM and update it.
If isOTMEnabled = 'Y' then
	//Only call this is the flag has not already been thrown by another update.
	//After the save the flag is set back to 0
	If ilUpdateOTM = 0 then
		ilUpdateOTM = wf_check_for_OTM_Updates(this.dataobject, dwo.name)
	End if
End if

Choose Case Upper(dwo.Name)

	Case "ADDRESS_CODE"
		
		if data = "DEFAULT" then //GAP 02-03 Set back to Original Address
			If ids_default_address.RowCOunt() > 0 Then
				
				//perform embargoed country check
				ls_country = UPPER(TRIM(ids_default_address.GetItemString(1, "country"))) 
				bEmbargoed = wf_embargoed_country_check( ls_country, TRUE ) 
				
				If This.GetItemString(1,'ord_type') = 'X' Then 
					This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "supp_name")) 
				else 
					This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "cust_name")) 
				end if
				
				This.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
				This.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
				This.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
				This.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
				This.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
				This.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
				This.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
				This.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
				This.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
				This.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))
				This.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))
				
			End IF
			
		else
			lds_temp = Create datastore
			If This.GetItemString(1,'ord_type') = 'X' Then /*return to Sender*/
				lds_temp.DataObject = 'd_maintenance_supplier'
			Else
				lds_temp.DataObject = 'd_customer_address'
			End If

			lds_temp.SetTransObject(sqlca)

			If lds_temp.Retrieve(gs_project, this.getitemstring(1,'cust_code'),data) > 0 Then
				
				//perform embargoed country check
				ls_country = UPPER(TRIM(lds_temp.GetItemString(1, "country")))
				bEmbargoed = wf_embargoed_country_check( ls_country, TRUE ) 
			
				This.SetItem(1, "cust_name", lds_temp.GetItemString(1, "address_name")) /* 02/01 PCONKL */
				This.SetItem(1, "address_1", lds_temp.GetItemString(1, "address_1"))
				This.SetItem(1, "address_2", lds_temp.GetItemString(1, "address_2"))
				This.SetItem(1, "address_3", lds_temp.GetItemString(1, "address_3"))
				This.SetItem(1, "address_4", lds_temp.GetItemString(1, "address_4"))
				This.SetItem(1, "city", lds_temp.GetItemString(1, "city"))
				This.SetItem(1, "state", lds_temp.GetItemString(1, "state"))
				This.SetItem(1, "zip", lds_temp.GetItemString(1, "zip"))
				This.SetItem(1, "country", lds_temp.GetItemString(1, "country"))
				This.SetItem(1, "contact_person", lds_temp.GetItemString(1, "contact_person"))
				This.SetItem(1, "tel", lds_temp.GetItemString(1, "tel"))
				This.SetItem(1, "fax", lds_temp.GetItemString(1, "fax"))
			End If
			Destroy lds_temp
		end if
		
	case "ZIP"
		/* 04/11/07 - if Order is on a shipment, a change in Zip must be reflected on Shipment
			(and any other orders on said shipment) 
			Change must occur on the Shipment , not the order */
		if g.ibTNTEnabled and icb_shipment.Text = 'Open &Shipment' then
			messagebox(is_title, "Order is already on a shipment so Zip can not be changed here. It must be changed on the Shipment.", StopSign!)
			ib_changed = lbAlreadyChanged //Don't want to set ib_changed back to false if it was already true (before changing zip)
			//return 1
			nRtn = 1
		end if
		
	case "COUNTRY"
		// ET3 2012-12-06 Pandora emergency implementation for embargoed countries
		// ET3 2012-12-12 Converted to baseline
		ls_country = UPPER(TRIM(data))
		bEmbargoed = wf_embargoed_country_check( ls_country, TRUE ) 
//		nRtn = 2
			
End Choose

// ET3 2012-12-26 Not yet ready to implement override procedure - for now comment out
IF bEmbargoed THEN
	// ask the user if they want to accept the change or reject it
	sMsg = '  The selected country is currently not authorized ~r~n' &
		  + 'as a shipping destination. Please confirm or reject ~r~n' &
		  + 'the selected country for this order.'
	
	If MessageBox( 'Warning - Embargoed Country', sMsg, StopSign!, OkCancel!, 2 ) = 1 Then
		// user does want the change
		nRtn = 0
	Else 
		// user changes mind
		nRtn = 2
	End If

END IF


return nRtn

end event

type tabpage_bt from userobject within tab_address
integer x = 18
integer y = 108
integer width = 3520
integer height = 736
long backcolor = 79741120
string text = "Bill To"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
dw_bt dw_bt
end type

on tabpage_bt.create
this.dw_bt=create dw_bt
this.Control[]={this.dw_bt}
end on

on tabpage_bt.destroy
destroy(this.dw_bt)
end on

type dw_bt from u_dw_ancestor within tabpage_bt
integer width = 3387
integer height = 748
integer taborder = 20
string dataobject = "d_do_address_alt"
boolean border = false
boolean livescroll = false
end type

event itemchanged;call super::itemchanged;ib_changed = True
end event

event process_enter;call super::process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

type tabpage_it from userobject within tab_address
integer x = 18
integer y = 108
integer width = 3520
integer height = 736
long backcolor = 79741120
string text = "Intermed"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
dw_it dw_it
end type

on tabpage_it.create
this.dw_it=create dw_it
this.Control[]={this.dw_it}
end on

on tabpage_it.destroy
destroy(this.dw_it)
end on

type dw_it from u_dw_ancestor within tabpage_it
integer width = 3355
integer height = 748
integer taborder = 20
string dataobject = "d_do_address_alt"
boolean border = false
end type

event itemchanged;call super::itemchanged;ib_changed = True
end event

event process_enter;call super::process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

type tabpage_st from userobject within tab_address
integer x = 18
integer y = 108
integer width = 3520
integer height = 736
long backcolor = 79741120
string text = "Sold To"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
dw_st dw_st
end type

on tabpage_st.create
this.dw_st=create dw_st
this.Control[]={this.dw_st}
end on

on tabpage_st.destroy
destroy(this.dw_st)
end on

type dw_st from u_dw_ancestor within tabpage_st
integer width = 3410
integer height = 748
integer taborder = 20
string dataobject = "d_do_address_alt"
boolean border = false
end type

event itemchanged;call super::itemchanged;ib_changed = True
end event

event process_enter;call super::process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

type tabpage_trax_3rd_party from userobject within tab_address
boolean visible = false
integer x = 18
integer y = 108
integer width = 3520
integer height = 736
long backcolor = 79741120
string text = "ConnectShip 3rd Party"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_3p_customer cb_3p_customer
dw_trax_3rd_party dw_trax_3rd_party
end type

on tabpage_trax_3rd_party.create
this.cb_3p_customer=create cb_3p_customer
this.dw_trax_3rd_party=create dw_trax_3rd_party
this.Control[]={this.cb_3p_customer,&
this.dw_trax_3rd_party}
end on

on tabpage_trax_3rd_party.destroy
destroy(this.cb_3p_customer)
destroy(this.dw_trax_3rd_party)
end on

type cb_3p_customer from commandbutton within tabpage_trax_3rd_party
integer x = 2185
integer y = 236
integer width = 709
integer height = 108
integer taborder = 50
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean underline = true
string text = "3rd Party Customer Code"
end type

event clicked;iw_window.TriggerEvent("ue_select_customer_3rdparty")
end event

type dw_trax_3rd_party from u_dw_ancestor within tabpage_trax_3rd_party
integer width = 3410
integer height = 748
integer taborder = 30
string dataobject = "d_do_address_alt"
boolean border = false
end type

event itemchanged;call super::itemchanged;ib_changed = True
end event

event process_enter;call super::process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

type tabpage_rt from userobject within tab_address
integer x = 18
integer y = 108
integer width = 3520
integer height = 736
long backcolor = 79741120
string text = "Return To"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_selectreturncustomer cb_selectreturncustomer
dw_rt dw_rt
end type

on tabpage_rt.create
this.cb_selectreturncustomer=create cb_selectreturncustomer
this.dw_rt=create dw_rt
this.Control[]={this.cb_selectreturncustomer,&
this.dw_rt}
end on

on tabpage_rt.destroy
destroy(this.cb_selectreturncustomer)
destroy(this.dw_rt)
end on

type cb_selectreturncustomer from commandbutton within tabpage_rt
integer x = 2167
integer y = 108
integer width = 466
integer height = 108
integer taborder = 60
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Select Customer"
end type

event clicked;iw_window.TriggerEvent("ue_select_customer_rt")

end event

type dw_rt from u_dw_ancestor within tabpage_rt
integer width = 3410
integer height = 748
integer taborder = 30
string dataobject = "d_do_address_alt"
boolean border = false
end type

event itemchanged;call super::itemchanged;ib_changed = True
end event

event process_enter;call super::process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

type cb_do_notes from commandbutton within tabpage_main
integer x = 649
integer y = 28
integer width = 306
integer height = 96
integer taborder = 120
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Notes"
end type

event clicked;
iw_window.TriggerEvent("ue_notes")
end event

event constructor;
	This.Visible = True
	
	g.of_check_label_button(this)

end event

type cb_do_pod from commandbutton within tabpage_main
integer x = 4082
integer y = 44
integer width = 306
integer height = 96
integer taborder = 60
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "POD..."
end type

event clicked;Str_Parms	lstrparms


lstrparms.String_arg[1] = idw_main.GetITemString(1,'do_no')
OpenWithParm(w_delivery_pod,lstrparms)

lstrparms = Message.PowerobjectParm

If not lstrparms.cancelled Then
	isle_order.TriggerEvent("modified")
End If
end event

event constructor;
g.of_check_label_button(this)
end event

type cb_do_hold from commandbutton within tabpage_main
boolean visible = false
integer x = 3749
integer y = 44
integer width = 306
integer height = 96
integer taborder = 70
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "&Hold"
end type

event clicked;
String		lsStatus
//If not currently on hold, place it on hold, otherwise restore the original status

If idw_main.RowCount() = 0 Then return

lsStatus = idw_Main.GetItemString(1,'ord_status')

Choose Case Upper(lsStatus)
	// DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status added 'L' in the case
	Case 'N', 'P', 'I', 'A', 'L' /* Not currently on hold and not voided/complete*/
		
		If Messagebox('HOLD','Are you sure you want to place this order on HOLD?',Question!,YesNo!,1) = 1 Then
			idw_main.SetITem(1,'ord_status','H')
			iw_window.TriggerEvent('ue_save')
		End If
		
	Case 'H' /*currently on hold, restore previous status based on which records exist*/
		
			If idw_Pack.RowCount() > 0 Then
				if gs_project = 'PANDORA' then
					idw_main.SetItem(1,'Ord_status','L') // Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
				else
					idw_main.SetItem(1,'Ord_status','A')
				end if
				ElseIf idw_Pick.RowCount() > 0 Then
					idw_main.SetItem(1,'Ord_status','P')
				Else
					idw_main.SetItem(1,'Ord_status','N')
				End If
			
		iw_window.TriggerEvent('ue_save')
		
End Choose
end event

type cb_do_confirm from commandbutton within tabpage_main
integer x = 18
integer y = 28
integer width = 338
integer height = 96
integer taborder = 50
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Confirm"
end type

event clicked;datetime ldComDate 
String lsStat
Integer liReturnCode,liRC
string ls_invoice,ls_order_type

//MEA - 04/12 Added to check credentials


if f_check_access(is_process , "C") = 0 then Return -1

/* 06/21/04 - dts - New 'Ready To Ship' functionality for 3COM; need to know if 
						  calling ue_confirm from Confirm button or 'Ready To Ship' button  */
// TAM 04/2006 Add K&N to Ready to Ship
// 11/09 - PCONKL - Using project level indicator instead
//if gs_project = '3COM_NASH' or gs_project = 'LMC' or gs_project = 'POWERWAVE' or gs_project = 'MAQUET' or gs_project = 'HILLMAN' or gs_project = 'BLUECOAT' Then
If g.ibReadyToShipEnabled Then
  is_Ready_Or_Confirm = 'CONFIRM'
else
  is_Ready_Or_Confirm = 'BOTH'
end if

//TimA 02/13/13
//Changed the return code on ue_confirm to an int so that we can evaluate if ue_confirm failed.
//Capture what the status and comple date are before we confirm.  Because on a Re-Confirm we have the date but not on a regular confirm
If IsNull(idw_main.GetItemDateTime(1, 'complete_date')) then
	SetNull(ldComDate )
else
	ldComDate = idw_main.GetItemDateTime(1, 'complete_date')
End if
lsStat = idw_main.GetItemString(1, 'ord_status')
liReturnCode = 0

/* GailM 08/06/2014 Pandora Issue 888 - Set order status to confirming when user presses confirm */
if wf_is_confirming(idw_main.GetItemString(1, 'do_no')) = 'Z' then Return -1

//TimA 03/13/13 change the call for this event so that we can have a return code
//This is the return value of the event either 1 or 0
//liReturnCode = iw_window.TriggerEvent("ue_confirm")

//This give me the return value
liReturnCode = iw_window.Event Trigger ue_confirm()

If liReturnCode < 0 then
	//-1 is a normal fail because of possible validation
	If Not IsNull(ldComDate) Then
		idw_main.setitem(1,'complete_date',ldComDate)
	End if
	// #888 Use function to update dw and db
	resetordstatus(idw_main.GetItemString(1, 'do_no'),lsStat)
	
	//idw_main.setitem(1,'ord_status',lsStat)
	f_method_trace_special( gs_project, this.ClassName() + ' - cb_do_confim', 'ue_confirm failed  return code ' + String(liReturnCode),idw_main.GetItemString(1, 'do_no'), ' ',' ',idw_main.GetItemstring(1, 'invoice_no')) 
	//-2 is a fail after the save as occured in ue_comfirm.  We want to change the values back and save again
	If liReturnCode = -2 then		
		Execute Immediate "Begin Transaction" using SQLCA;
		liRC = idw_main.update()
		If liRC = 1 Then
			Execute Immediate "COMMIT" using SQLCA;
		Else
			Execute Immediate "ROLLBACK" using SQLCA;
			f_method_trace_special( gs_project, this.ClassName() + ' - cb_do_confim', 'ue_confirm failed  return code ' + String(liReturnCode) + ' SQL Error ' + nz(SQLCA.SQLErrText,''),idw_main.GetItemString(1, 'do_no'), ' ',' ',idw_main.GetItemstring(1, 'invoice_no')) 
		End if
		//iw_window.Trigger Event ue_save() 
	end if
End if
end event

event constructor;
g.of_check_label_button(this)
end event

type st_order_nbr from statictext within tabpage_main
integer x = 242
integer y = 172
integer width = 270
integer height = 76
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Order Nbr:"
alignment alignment = right!
boolean focusrectangle = false
end type

event constructor;
g.of_check_label_button(this)
end event

type dw_main from u_dw_ancestor within tabpage_main
event ue_noscroll pbm_vscroll
event ue_nozoom pbm_other
integer x = 37
integer y = 144
integer width = 4361
integer height = 2396
string dataobject = "d_do_master"
boolean border = false
boolean livescroll = false
borderstyle borderstyle = stylebox!
end type

event ue_noscroll;// prevent vertical scrolling
return 1

end event

event ue_nozoom;CONSTANT INT WM_MOUSEWHEEL = 522
IF message.number = WM_MOUSEWHEEL THEN
  message.processed = TRUE
  RETURN 1
END IF
end event

event itemchanged;call super::itemchanged;String ls_data, lsNull, ls_frm_date, ls_to_date,  ls_date_found,ls_where, ls_wh_code, ls_Null
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 08/15/2010 ujhall: 01 of ?? Full Circle Fix: w_do Changes:
String ls_serial_no, ls_sku, ls_db_serial_no, ls_Owner_cd 
long ll_owner_id
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DataStore lds_temp
Long ll_cnt, llrowcount, ll_Count,i, llRowPos, ll_row
string ls_CustType, ls_wh_type //w&s
string ls_load //Dinesh - 01082020- S47403

//TimA 03/26/13 Pandora #595
String ls_Code_Descript,lsCarrierCode,lsSipVia,lsTransportMode
string ls_ord_Desc, ls_unavailable, ls_invoice_no 	//16-Jun-2016 :Madhu- Added for Order Types
long ll_order_count

datawindowchild ldwc

DateTime	ldtNull 
ls_data = data

DateTime dtOriginalRDD, dtRdd

ib_changed = True

////Begin- Dinesh - 1/7/2021 - S47403 - Google - SIMS - TMS Load ID Field
if gs_project = 'PANDORA' Then
		if dwo.Name='otm_status' then
			if ls_data ='Z' then 
				This.SetItem(1, "load_id",'NA')
				This.Modify("load_id.protect=1")
				else 
//				ls_load =This.GetItemString(1,'load_id')
//				This.SetItem(1, "load_id",ls_load)
				This.Modify("load_id.protect=1")
			end if 
		end if
	end if
////End- Dinesh - 1/7/2021 - S47403 - Google - SIMS - TMS Load ID Field

//TimA 02/02/2012 OTM Project
//Look for the columns in the lookup table that if changed we call OTM and update it.
If isOTMEnabled = 'Y' then
	//Only call this is the flag has not already been thrown by another update.
	//After the save the flag is set back to 0
	If ilUpdateOTM = 0 then
		ilUpdateOTM = wf_check_for_OTM_Updates(this.dataobject, dwo.name)
	End if
End if

Choose Case Upper(dwo.Name)
		
	// 11/00 PCONKL - If order type is Return to Sender, chg customer labels to supplier
	// 08/25/05 dts - If order type is Warehouse Transfer (Z), chg customer labels to Warehouse
	// 08/04 TAM - Logitech us I and E as Return to Sender Codes in addition to 'X'
	Case "ORD_TYPE"
		
		//07-Feb-2017 :Madhu- Added to know whether Order Type is Available/Unavailable -START
		select Ord_Type_Desc, Unavailable into :ls_ord_Desc, :ls_unavailable 
		from Delivery_Order_Type with(nolock)
		where Project_Id=:gs_project and Ord_Type= :data
		using sqlca;
		
		IF upper(ls_unavailable) ='Y' Then
			MessageBox(is_title, "'"+ ls_ord_Desc +"' is Unavailable when creating an Outbound Order!")
			Return 1
		End IF

		//07-Feb-2017 :Madhu- Added to know whether Order Type is Available/Unavailable -END

		
	// TAM 08/04 - Added Logitech Return to Supplier codes to logic
	If data = 'X' or &
		(Upper(gs_project) = 'LOGITECH' and data = 'E') or (Upper(gs_project) = 'LOGITECH' and data = 'I') Then /*Return to supplier*/
			This.Modify('cust_code_t.Text = "Supplier Code:" cust_name_t.Text="Supplier Name:" ')
			tab_main.tabpage_main.cb_do_select_customer.visible=False
	ElseIf data = 'Z' then //dts 08/25/05
		//This.Modify('cust_code_t.Text = "W/H Code:" cust_name_t.Text="WarehouseName:" ')
//		This.Modify('cust_code_t.Text = "TO Warehouse:" wh_code_t.Text="FROM Warehouse:" ')
		//cb_do_select_customer.text = 'TO Warehouse'
//		tab_main.tabpage_main.cb_do_select_customer.visible=False

//		tab_main.tabpage_main.cb_do_select_customer.visible=False
		if gs_project = 'PANDORA' then
			// pandora ships to sub-inventory location (within a warehouse)
			cb_do_select_customer.text = 'TO &Location:'
		else
			cb_do_select_customer.text = 'TO &Warehouse:'
		end if
	Else
		This.Modify('cust_code_t.Text = "Customer Code:" cust_name_t.Text="Customer Name:" ')
		cb_do_select_customer.text = 'C&ustomer Code:'
//		tab_main.tabpage_main.cb_do_select_customer.visible=True 
	End If
		
		//If changing to or from return to supplier, clear out existing customer/supplier info
		// TAM 08/04 - Added Logitech Return to Supplier codes to logic
		If data = 'X' or This.GetItemString(1,'ord_type',Primary!,True) = 'X' &
		or (Upper(gs_project) = 'LOGITECH' and (data = 'E' or data = 'I' or This.GetITemString(1,'ord_type',Primary!,True) = 'E' or This.GetITemString(1,'ord_type',Primary!,True) = 'I'))Then
			SetNull(lsNull)
			This.SetItem(1, "cust_code",lsNull) /*required Field*/
			This.SetItem(1, "cust_name", '')
			This.SetItem(1, "address_1", '')
			This.SetItem(1, "address_2", '')
			This.SetItem(1, "address_3", '')
			This.SetItem(1, "address_4", '')
			This.SetItem(1, "address_code",'')
			This.SetItem(1, "city", '')
			This.SetItem(1, "state", '')
			This.SetItem(1, "zip", '')
			This.SetItem(1, "country", '')
			This.SetItem(1, "contact_person", '')
			This.SetItem(1, "tel", '')
			This.SetItem(1, "fax", '')
		End If
	
	Case "CUST_CODE"	
		
		//MEA - 9/12 - Ignore for KloneLab	
		If Upper(gs_project) = 'KLONELAB' Then
			Return
		End If
		
		// 11/00 PCONKL - If order type is Return to sender, we will be validating and retrieving supplier values
		// 08/05 dts - If order type is Warehouse Transfer, we will be validating and retrieving warehouse values
		// otherwise, we will be validating and retrieving customer values
		If Not isvalid(ids_default_address) Then
			ids_default_address = Create datastore		
		End If
		// TAM 08/04 - Added Logitech Return to Supplier codes to logic
		If This.GetItemString(1,'ord_type') = 'X' or &
		(Upper(gs_project) = 'LOGITECH' and (This.GetITemString(1,'ord_type') = 'E' or This.GetITemString(1,'ord_type') = 'I')) Then /*return to Sender*/
			ids_default_address.DataObject = 'd_maintenance_supplier'
		ElseIf This.GetItemString(1,'ord_type') = 'Z' and gs_project <> 'PANDORA' then //dts - 8/25/05 - 10/07/09: added clause for Pandora
			ids_default_address.DataObject = 'd_maintanence_warehouse' //note typo in dw name for 'maintenance'
		Else
			ids_default_address.DataObject = 'd_customer_maintenance'
		End If
		ids_default_address.SetTransObject(sqlca)
		
		// dts 2011-01-20 - preventing the selection of an Inactive customer.
		ls_CustType= '' 
		Select Customer_Type
		Into    	:ls_CustType
		FROM 	Customer
		Where 	Project_ID = :gs_project
		and cust_code = :data;

		If ls_CustType = 'IN' Then
			MessageBox(is_title, "Customer '"+   data + "' is INACTIVE!~r~rPlease Enter an Active Customer.", StopSign!)	
			return 1
		End If

		//dts 8/25/05 - For W/H Xfers, dw has only one argument, so Retrieve depends...
		//If ids_default_address.Retrieve(gs_project, ls_data) > 0 Then
		If This.GetItemString(1, 'ord_type') = 'Z' and gs_project <> 'PANDORA' then //10/07/09: added clause for Pandora
			llRowCount = ids_default_address.Retrieve(ls_data)
		else
			llRowCount = ids_default_address.Retrieve(gs_project, ls_data)
		end if
		If llRowCount  > 0 Then
			
			// TAM 08/04 - Added Logitech Return to Supplier codes to logic
			If This.GetItemString(1,'ord_type') = 'X' or &
			(Upper(gs_project) = 'LOGITECH' and (This.GetItemString(1,'ord_type') = 'E' or This.GetITemString(1,'ord_type') = 'I')) Then /*return to Sender*/
				This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "supp_name"))
			ElseIf This.GetItemString(1,'ord_type') = 'Z' and gs_project <> 'PANDORA' then //10/07/09: added clause for Pandora
			//dts - 8/25/05 - Using warehouses as customer for warehouse transfers
				if This.GetItemString(1, "wh_code") = ls_data then
					//TAM - 9/29/2010 - Allow Same warehouse for NYCSP -They are using this to rotate stock in kits without having to rebuild the whole kit.
					//TAM - 11/2/2014 - Added 'BOSCH' -  They are using this to capture serial number during conversion from Non Serial Tracking to Serial Tracking
//					if gs_project <> 'NYCSP' then
					if gs_project <> 'NYCSP' and gs_project<> 'BOSCH'  then
						messagebox ("Warehouse", "'TO' warehouse must be different than 'FROM' warehouse.", StopSign!)
						this.SetFocus()
						this.SetColumn("cust_code")
						return 1
					end if
				end if
				This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "wh_name"))
			Else
				This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "cust_name"))
			End If

			This.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
			This.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
			This.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
			This.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
			This.SetItem(1, "address_code", "DEFAULT")  //gap 02-03 added code "default" to header record only! NOTE: Not used in Customer Maint Table
			This.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
			This.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
			This.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
			This.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
			This.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
			This.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))
			This.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))
									
			//gap02-03 add default location to the address code drop down
			llrowcount = idwc_address.Retrieve(gs_project, ls_data)
			idwc_address.InsertRow(1)
			idwc_address.setitem(1,"address_code", "DEFAULT")
			idwc_address.setitem(1,"address_1", ids_default_address.GetItemString(1, "address_1")) 
			
			// 09/09 - PCONKL - For Pandora, we want to retreive a default 'To Project" from Customer.UF10 if Present
			If upper(gs_project) = 'PANDORA' Then
			
				Select USer_Field10,User_Field6 into :isPandoraToProject,:isSchCode
				From Customer
				Where Project_id = :gs_project and cust_code = :data;
			
				If isSchCode = '' then
					SetNull(isSchCode)
				End if
			
				If idw_detail.RowCount() > 0 Then
					For llRowPos = 1 to idw_Detail.RowCount()
						idw_Detail.SetITem(llRowPos,'user_field5',isPandoraToProject)
					Next
				End If
				//TimA 03/26/13 Pandora #595
				If Not IsNull(isSchCode) or Len(isSchCode) > 0 then
					SELECT 	Code_Descript 	INTO :ls_Code_Descript FROM 	Lookup_Table WITH (NOLOCK)   
					Where 	project_id = :gs_project and Code_type = 'SL' and Code_ID = :isSchCode;
					
					select Address_1, Carrier_Code,Transport_Mode  INTO :lsSipVia, :lsCarrierCode, :lsTransportMode
					from Carrier_Master where Project_ID = :gs_project and User_Field1 = :isSchCode and (inactive is null or inactive = 0);
					
					If (Len(lsCarrierCode) > 0 and Not IsNull(lsCarrierCode))  and  (Len(lsSipVia) > 0 and Not IsNull(lsSipVia)) and  (Len(ls_Code_Descript) > 0 and Not IsNull(ls_Code_Descript)) then
						idw_other.object.carrier[1] = lsCarrierCode				
						idw_other.object.ship_via[1] = lsSipVia				
						idw_other.object.user_field1[1] = isSchCode				
						idw_other.object.agent_info[1] = ls_Code_Descript
						idw_other.object.transport_mode[1] = lsTransportMode
					End if
				else
					idw_other.object.carrier[1] = ''
					idw_other.object.ship_via[1] = ''
					idw_other.object.user_field1[1] = ''
					idw_other.object.agent_info[1] = ''
					idw_other.object.transport_mode[1] = ''
					If This.GetItemString(1,'OTM_STATUS') <> '' then
						String lsOtmStat
						SetNull(lsOtmStat)
						idw_main.SetItem(1, "OTM_STATUS", lsOtmStat)
					end if

				end if
				If Len(isSchCode) > 0 or Not IsNull(isSchCode) then
					ll_SkipOTMFlag = 1
				Else 
					ll_SkipOTMFlag = 0
				End if						

			End If			
		Else /*Not Found - clear out and display msg 05/00 PCONKL */
			
			This.SetItem(1, "cust_name", '')
			This.SetItem(1, "address_1", '')
			This.SetItem(1, "address_2", '')
			This.SetItem(1, "address_3", '')
			This.SetItem(1, "address_4", '')
			This.SetItem(1, "address_code",'')
			This.SetItem(1, "city", '')
			This.SetItem(1, "state", '')
			This.SetItem(1, "zip", '')
			This.SetItem(1, "country", '')
			This.SetItem(1, "contact_person", '')
			This.SetItem(1, "tel", '')
			This.SetItem(1, "fax", '')
			This.SetItem(1, "cust_order_no", '') 	
			This.SetItem(1, "user_field8", '')	
			
			// TAM 08/04 - Added Logitech Return to Supplier codes to logic
			If This.GetItemString(1,'ord_type') = 'X' or &
			(Upper(gs_project) = 'LOGITECH' and (This.GetITemString(1,'ord_type') = 'E' or This.GetITemString(1,'ord_type') = 'I')) Then /*return to Sender*/
				Messagebox(is_title,"Invalid Supplier Code!",StopSign!)
			ElseIf This.GetItemString(1,'ord_type') = 'Z' then //dts - 8/25/05
				if gs_project = 'PANDORA' then
					Messagebox(is_title, "Invalid Sub-Inventory Code!", StopSign!)
				else
					Messagebox(is_title, "Invalid Warehouse Code!", StopSign!)
				end if
			Else
				Messagebox(is_title,"Invalid Customer Code!",StopSign!)
			End If
						
			Return 1
			
		End If
		
		//gap 02-03 Check to see if a customer has multiple locations except for "return to sender"
		// TAM 08/04 - Added Logitech Return to Supplier codes to logic
		//dts 04/20/05 - added () around Ord_Type condition to separate it from the 'llrowcount > 0' condition
		if (This.GetItemString(1,'ord_type') <> 'X' or &
				(Upper(gs_project) = 'LOGITECH' and (This.GetItemString(1,'ord_type') <> 'E' and This.GetItemString(1,'ord_type') <> 'I'))) &
			and llrowcount > 0 then 
				MessageBox ( "Customer with multiple addresses", "This customer has multiple addresses!", Exclamation!)
				this.SetFocus()
				this.SetColumn("address_code")
				Destroy lds_temp
				Return 1
		end if		
		
		Destroy lds_temp
		//To change the filter setting of Gemini 091001 DGM
		
	Case "CUST_ORDER_NO"		
	//GAP-03/2003 - (GM_M) check to see if this an order for this customer has been created in the last week.
	If Upper(Left(gs_project,4)) = 'GM_M'  Then			
		if month(today()) = 1 and day(today()) > 8 then  
			ls_frm_date = String(year(today()) -1) + "-" + String(month(today()) -1) + "-15" 
		elseif day(today()) < 8 then 
			ls_frm_date = String(year(today())) + "-" + String(month(today()) -1) + "-15" 
		else
			ls_frm_date = String(year(today())) + "-" + String(month(today())) + "-"  + String(day(today()) - 7)
		end if
		ls_frm_date = String(date(ls_frm_date), "mm-dd-yyyy")  +  " 00:00:01"
		ls_to_date 	= String(today(), "mm-dd-yyyy")  +  " 23:59:59"
		
		Select ord_date, Count(*) Into :ls_date_found, :ll_Count
		From Delivery_Master
		WHERE project_id = :gs_project 
				and cust_order_no = :ls_data 
				and ord_date >= :ls_frm_date 
				and ord_date <= :ls_to_date
		Group by ord_date;
				
		If ll_Count > 0 Then
			MessageBox ( "Duplicate Order Warning!", "Customer order: " + ls_data + " was previously created on: " + ls_date_found, Exclamation! )
		end if
		
		/* GAP 04-03 - For Saltillo, copy Cust Order to 'Ship Ref' */
		if not isnull(ls_data) then idw_other.setITem(1,'ship_ref',ls_data)
	end if
	
//%%% Allow for phone number and fax number to display   lkm  10/23/00	
	Case "ADDRESS_CODE"
		
		if ls_data = "DEFAULT" then //GAP 02-03 Set back to Original Address
			If ids_default_address.RowCOunt() > 0 Then
			// TAM 08/04 - Added Logitech Return to Supplier codes to logic
				If This.GetItemString(1,'ord_type') = 'X' or & 
				(Upper(gs_project) = 'LOGITECH' and (This.GetITemString(1,'ord_type') = 'E' or This.GetITemString(1,'ord_type') = 'I'))Then 
					This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "supp_name")) 
				else 
					This.SetItem(1, "cust_name", ids_default_address.GetItemString(1, "cust_name")) 
				end if
					This.SetItem(1, "address_1", ids_default_address.GetItemString(1, "address_1"))
					This.SetItem(1, "address_2", ids_default_address.GetItemString(1, "address_2"))
					This.SetItem(1, "address_3", ids_default_address.GetItemString(1, "address_3"))
					This.SetItem(1, "address_4", ids_default_address.GetItemString(1, "address_4"))
					This.SetItem(1, "city", ids_default_address.GetItemString(1, "city"))
					This.SetItem(1, "state", ids_default_address.GetItemString(1, "state"))
					This.SetItem(1, "zip", ids_default_address.GetItemString(1, "zip"))
					This.SetItem(1, "country", ids_default_address.GetItemString(1, "country"))
					This.SetItem(1, "contact_person", ids_default_address.GetItemString(1, "contact_person"))
					This.SetItem(1, "tel", ids_default_address.GetItemString(1, "tel"))
					This.SetItem(1, "fax", ids_default_address.GetItemString(1, "fax"))
			End IF
		else
			lds_temp = Create datastore
			// TAM 08/04 - Added Logitech Return to Supplier codes to logic
			If This.GetItemString(1,'ord_type') = 'X' or & 
			(Upper(gs_project) = 'LOGITECH' and (This.GetITemString(1,'ord_type') = 'E' or This.GetITemString(1,'ord_type') = 'I')) Then /*return to Sender*/
				lds_temp.DataObject = 'd_maintenance_supplier'
			Else
				lds_temp.DataObject = 'd_customer_address'
			End If
			lds_temp.SetTransObject(sqlca)
			If lds_temp.Retrieve(gs_project, this.getitemstring(1,'cust_code'),ls_data) > 0 Then
				This.SetItem(1, "cust_name", lds_temp.GetItemString(1, "address_name")) /* 02/01 PCONKL */
				This.SetItem(1, "address_1", lds_temp.GetItemString(1, "address_1"))
				This.SetItem(1, "address_2", lds_temp.GetItemString(1, "address_2"))
				This.SetItem(1, "address_3", lds_temp.GetItemString(1, "address_3"))
				This.SetItem(1, "address_4", lds_temp.GetItemString(1, "address_4"))
				This.SetItem(1, "city", lds_temp.GetItemString(1, "city"))
				This.SetItem(1, "state", lds_temp.GetItemString(1, "state"))
				This.SetItem(1, "zip", lds_temp.GetItemString(1, "zip"))
				This.SetItem(1, "country", lds_temp.GetItemString(1, "country"))
				This.SetItem(1, "contact_person", lds_temp.GetItemString(1, "contact_person"))
				This.SetItem(1, "tel", lds_temp.GetItemString(1, "tel"))
				This.SetItem(1, "fax", lds_temp.GetItemString(1, "fax"))
			End If
			Destroy lds_temp
		end if
		
	
	CASE 'WH_CODE'	
		
		// 02/07 - Pconkl - Don't allow warehouse to be changed unless in new status 
		If idw_pick.RowCount() > 0 or  idw_main.GetITemString(1,'ord_status') <> 'N' Then
			Messagebox(is_title,' Warehouse can not be changed for orders not in NEW status!',StopSign!)
			Return 1
		End If
		
		//MEA - 09/2011 - For Trax change
		wf_enable_trax_data_entry()
		
		//DGM July 2005
		wf_set_filter_carton_type()
		IF idw_pack.Rowcount() > 0 THEN
		for i= 1 to idw_pack.Rowcount()
			idw_pack.object.carton_type[i] = ""
		next	
		END IF	

		If This.GetItemString(1,'ord_type') = 'Z' then
		//dts - 8/25/05 - Using warehouses as customer for warehouse transfers
		//						and From and To warehouses must be different.
			if This.GetItemString(1, "cust_code") = ls_data then
				//TAM - 9/29/2010 - Allow Same warehouse for NYCSP -They are using this to rotate stock in kits without having to rebuild the whole kit.
				//TAM - 11/2/2014 - Added 'BOSCH' -  They are using this to capture serial number during conversion from Non Serial Tracking to Serial Tracking
//				if gs_project <> 'NYCSP' then
				if gs_project <> 'NYCSP' and gs_project<> 'BOSCH'  then
					messagebox ("Warehouse", "'FROM' warehouse must be different than 'TO' warehouse.", StopSign!)
					this.SetFocus()
					this.SetColumn("wh_code")
					return 1
				end if
			end if
		end if

		IF gs_Project = "PANDORA" then
			ls_wh_code = data
			if Not IsNull(ls_wh_code) AND trim(ls_wh_code) <> '' then
				tab_main.tabpage_other.dw_other.GetChild("user_field2", ldwc)
				ldwc.SetTransObject(SQLCA)
				ldwc.Retrieve(upper(gs_project), ls_wh_code)
				SetNull(ls_null)
				//Make sure the user field 2 is reset if the wh_code is changed.
				tab_main.tabpage_other.dw_other.SetItem( 1, "user_field2", ls_null)
			end if	
			idw_main.SetItem(1, "Ord_Date", f_GetLocalWorldTime(ls_wh_code))
		END If

			//TimA 03/26/13 Somthing Tim is working on
//			isWareHouse = Data
//			idw_other.setitem(1,'USER_FIELD2','')
//			wf_update_from_loc(idw_From_Loc)
			
// TAM W&S 2010/12  We are processing bonded warehouses(Wh_TYPE "B" differently then non_bonded Wh_Type "N".  	
		IF Left(gs_Project,3) = "WS-" then
			ls_wh_code = data
			Select wh_type into :ls_wh_type
			From Warehouse
			Where Wh_code = :ls_wh_code  ;
			If ls_wh_type = 'B'  Then
				is_bonded = 'Y'
			Else
				idw_detail.SetTabOrder("pick_lot_no", 0)
				is_bonded = 'N'
			End If
		End If
		
		//05-JUNE-2019 :Madhu S34273 F16399 - I2246 - PHILIPS-TH allow duplicate order numbers - START
		IF upper(gs_project) ='PHILIPS-TH' THEN
			ls_invoice_no = idw_main.getItemString(1, 'Invoice_No')
			
			select count(*) into :ll_order_count 
			from delivery_master with(nolock)
			where project_id=:gs_project and invoice_no=:ls_invoice_no
			and wh_code =:data
			using sqlca;
		
		
			IF ll_order_count > 0 THEN
				MessageBox(is_Title,"Delivery Order " + ls_invoice_no + " already exists.~r(This Warehouse should not allow duplicate order numbers.)", StopSign!)
				tab_main.tabpage_main.sle_order2.text=''
				SetNull(ls_null)
				tab_main.tabpage_main.dw_main.SetItem( 1, 'Invoice_No', ls_null)
				Return 1
			END IF
		END IF
		//05-JUNE-2019 :Madhu S34273 F16399 - I2246 - PHILIPS-TH allow duplicate order numbers - END

Case "ORD_STATUS" /* 02/08 - PCONKL - allowing a Super Duper user to un-confirm an order - field should only be unprotected for a SDU*/
		
		//Void can only be reset to New, Complet/Delivered to Packing (unless there is no packing list and then only picking)
		If THis.GetITemString(1,'ord_status') = 'V' Then
			
			If data <> 'N' Then
				MessageBox(is_title,"A VOIDED order can only be reset to 'NEW'")
				return 1
			End If
			
			im_menu.m_file.m_save.Enabled = True /*will have been disabled for a VOID*/
			
		ElseIf This.GetItemString(1, 'ord_status') = 'H' Then
			If data <> 'N' Then
				MessageBox(is_title,"An order on HOLD can only be reset to 'NEW'")
				return 1
			End If			
			im_menu.m_file.m_save.Enabled = True /*will have been disabled for a HOLD order*/
		ElseIf THis.GetITemString(1,'ord_status') = 'C' or THis.GetITemString(1,'ord_status') = 'D' or THis.GetITemString(1,'ord_status') = 'R' Then
			
// TAM 2018/02 S14838 -  Need to disable changing the status of a completed order if it is from OM 
			If is_OM_Enabled_Ind = 'Y' then
				MessageBox("Order Status", "A COMPLETED order cannot be Uncomfirmed for OM orders", StopSign!)
				this.SetFocus()
				this.SetColumn("ORD_STATUS")
				return 1
			End If
			
			// 08/15/2010 ujhall: 01 of ?? Full Circle Fix: w_do Changes:
			// If this is a completed order being unconfirmed, set the flag so in ue_confirm we can add serial numbers back if needed
//			if upper(gs_project) = 'PANDORA' and THis.GetITemString(1,'ord_status') = 'C' and data = 'A'  Then
			//BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
//			if (upper(gs_project) = 'PANDORA'  OR upper(gs_project) = 'BLUECOAT') and THis.GetITemString(1,'ord_status') = 'C' and data = 'A'  Then
			// ET3 2012-06-14: Implement generic test
			// if g.ibSNchainofcustody and THis.GetITemString(1,'ord_status') = 'C'  and data = 'A' then // DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
			if g.ibSNchainofcustody and THis.GetITemString(1,'ord_status') = 'C' and (data = 'A' or data = 'L')  then // DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
				FOR ll_row = 1 to tab_main.tabpage_serial.dw_serial.RowCount()
					ls_serial_no = tab_main.tabpage_serial.dw_serial.GetItemString(ll_row, 'serial_no')
					ls_sku =  tab_main.tabpage_serial.dw_serial.GetItemString(ll_row, 'SKU')
					
					Select serial_no 
					Into :ls_db_serial_no
					From Serial_number_inventory
					where Project_ID = :gs_project
					and sku = :ls_sku
					and serial_no = :ls_serial_no;
					
					// The serial numbers should not be in the database, as they should have been deleted on the confirm.
					If ls_db_serial_no = ls_serial_no then
						// bail on the first one where there is a record already there.
						messagebox('Serial Exists Error', 'Serial no = '+ls_serial_no+ ' already exists in Serial_Number_Inventory table. ' &
								+ 'Row = '+ string(ll_row,'0') +'; Sku = '+ls_sku+ '.')
						return 1
					end if
					
				next
				ibUnconfirmFullCircle = true
			end if
			// Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
			If gs_project = 'PANDORA' then
				If data = 'L' or data = 'I' Then
						If Data = 'I' and idw_PAck.RowCount() > 0 Then
							MessageBox(is_title,"A COMPLETED order can only be reset to PICKING if there is no Pack List)")
							return 1
						End If
				Else
						MessageBox(is_title,"A COMPLETED order can only be reset to 'LOADING' (or 'PICKING' if no Pack List)")
						return 1
				End If
				// End -DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
			else
					If data = 'A' or data = 'I' Then
							If Data = 'I' and idw_PAck.RowCount() > 0 Then
								MessageBox(is_title,"A COMPLETED order can only be reset to PICKING if there is no Pack List)")
								return 1
							End If
					Else
							MessageBox(is_title,"A COMPLETED order can only be reset to 'PACKING' (or 'PICKING' if no Pack List)")
							return 1
					End If
				End if
					
			End If
		
		ibUnconfirmRequested = True /*will bypass check for confirmation by another user */
		
		setNull(ldtNull)
		idw_main.SetItem(1,'complete_date',ldtNull) /*reset complete date*/
		

	Case "REQUEST_DATE"

		// LTK 20120220	For Pandora, if Request Date is entered it must NOT be in the past.
		if gs_project = 'PANDORA' and (isnull(data) or DaysAfter(Today(), Date(DateTime(data))) < 0) then
			MessageBox(is_Title,'Required Delivery Date cannot be in the past.')
			Return 1
		End If
		//TimA 03/07/12 OTM Project
		//Update the Original RDD date with the RDD is this date is null
		If isOTMEnabled = 'Y' then
		//This filed is know as the Original RDD field
			dtOriginalRDD = This.GetITemDatetime(1,'edm_generate_datetime')
			//TimA
			//03/13/12 Get the original Rdd date and set the Originall RDD date to date date if null
			dtRdd = This.GetITemDatetime(1,'REQUEST_DATE')
			If isnull(dtOriginalRDD ) then //Don't change the original date if there already is a date.
				idw_main.SetItem(1,'edm_generate_datetime',DateTime(dtRdd))
			end if
		end if
		
	Case "LOAD_ID"
		
		//GailM 11/19/2018 S25773 Google TMS Exception
		if gs_project = 'PANDORA' Then
			isTMSstatus = f_is_non_tms(idw_main.GetItemString(1, "user_field1"), ls_data, idw_main.GetItemString(1, "wh_code") )
			If Not IsNumber(ls_data) and Not IsNull(ls_data) and ls_data <> 'NA' and ls_data <> '' Then
				MessageBox(is_Title,'Invalid Load ID.  Only valid ID besides a number is NA.  Please re-enter.')
				Return 1
			Else
				isLoadID  = ls_data
				wf_enable_otm_status()
			End If
		End If
		
End Choose

//MStuart BabyCare EMC - 090111
If Upper(gs_project) = 'BABYCARE' Then
	Choose Case Upper(dwo.Name)
		Case "ORD_TYPE", "ORD_STATUS"
			wf_check_status_emc()
	End Choose
End If



end event

event itemerror;Choose Case dwo.name
	Case "cust_code"
		Return 1
	Case else
			return 2
End Choose
end event

event process_enter;
IF This.GetColumnName() = "cust_order_No" THEN
	tab_address.SetFocus()
	tab_address.SelectTab(1)
	tab_address.tabPage_shipto.SetFocus()
	tab_address.tabpage_shipTo.dw_shipTo.SetColumn('cust_name')
	
Else
	Send(Handle(This),256,9,Long(0,0))
	Return 1
End If
end event

event itemfocuschanged;call super::itemfocuschanged;

IF String(dwo.name) =  "cust_name" THEN
	tab_address.SelectTab(1)
//	tab_address.SetFocus()
	tab_address.tabPage_shipto.SetFocus()
	tab_address.tabpage_shipTo.dw_shipTo.SetRow(1)
	tab_address.tabpage_shipTo.dw_shipTo.SetColumn('cust_name')
	tab_address.SetFocus()
ElseIF String(dwo.name) =  "receive_date" THEN
	This.SetColumn('ord_date')
End If
end event

event constructor;call super::constructor;// 10/08/2010 - added cross-dock check box for Pandora
	If upper(gs_project) <> 'PANDORA' Then
	  this.Modify("CrossDock_Ind.Visible=0")
	end if
	
// Begin - Dinesh -12/10/2021 - S64720- Google - SIMS - Buy Sell Project
If gs_project <> 'PANDORA'  Then
	This.Modify("user_field21.visible=0")
End If
// End - Dinesh -12/10/2021 - S64720- Google - SIMS - Buy Sell Project

end event

event retrieveend;call super::retrieveend;/*GailM 5/12/2020 - S45954 F22932 I2621 Google DA Kitting move to Spoke Warehouse 																				*/
/*GailM 7/14/2020 - DE16760 Google DA Kitting - use not only cust order no but also client cust po nbr (plus added invoice no)								*/
/*Using a Named Field to set the DA Kitting checkbox.  The FOB named field is not being used and probably won't be in the forseeable future by Google */
string ls_cust, ls_invoice, ls_client_cust_po_nbr,ls_buysell

ls_cust = This.GetItemString(1,'cust_order_no')
ls_buysell = This.GetItemString(1,'user_field21') // 01/31/2022- S64720- Dinesh - Buy Sell Proje
ls_invoice = This.GetItemString(1,'invoice_no')
ls_client_cust_po_nbr = This.GetItemString(1,'client_cust_po_nbr')

// Begin - 01/31/2022- DE24764- PhilipsCLS - Ready to Ship button issue
If upper(gs_project) <> 'PANDORA' Then
	this.Modify("computekitting.Visible=0")
	this.Modify("buysell.Visible=0")
Else
	this.Modify("computekitting.Visible=1")
	this.Modify("computekitting.Protect=1")
	this.Modify("buysell.Visible=1")
	this.Modify("buysell.Protect=1")
	If Left(ls_cust,8) = 'MORSCKIT' Or Left(ls_invoice,8) = 'MORSCKIT' Or Left(ls_client_cust_po_nbr,8) = 'MORSCKIT' Then
		this.SetItem(1,"FOB","Y")
	Else
		this.SetItem(1,"FOB","N")
	End If
	
	If ls_buysell= 'BUYSELLSALESORDER' Then
		this.SetItem(1,"User_Field21","Y")
	Else
		this.SetItem(1,"User_Field21","N")
	End If
End If

// End - 01/31/2022- DE24764- PhilipsCLS - Ready to Ship button issue


end event

type cb_open_ro from commandbutton within tabpage_main
boolean visible = false
integer x = 50
integer y = 172
integer width = 457
integer height = 76
integer taborder = 50
boolean bringtotop = true
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "          Order Nbr:"
end type

event clicked;Str_parms	lStrparms_1
	If f_check_access ("W_DOR","") = 1 Then
		lstrparms_1.String_arg[1] = "W_ROD"
		lstrparms_1.String_arg[2] =  idw_main.GetItemString(1, 'Invoice_No' )
		setredraw(false)
		if isvalid(w_ro) then
			MessageBox(is_title,"Recieve Order Window is Already Open, First Close the existing window and then DoubleClick")
		else	
			OpenSheetwithparm(w_ro,lStrparms_1, w_main, gi_menu_pos, Original!)
		end if		
		
		

		setredraw(true)
	End If

end event

type cb_print_passout_note from commandbutton within tabpage_search
integer x = 2971
integer y = 904
integer width = 462
integer height = 96
integer taborder = 70
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print Pass-out Note"
end type

event clicked;//GailM 9/29/2020 - S50130/F24604/I3002 Singapore PassOut Note
string ls_c_select_ind, ls_ord_status, lsMsg, lsUF3, lsUF10, lsWhere, lsSIC, lsSICq
string lsDoNo, lsWhCode, lsOrders,  lsSqlSyntax, ERRORS, lsErrText, lsFind
string lsPrinter
long llRowCount, llRowPos, llCheckedCount, llIneligbleCount
decimal ld_NxtSeq
int liIdx, liFound
Datastore ldsPassoutNote
Str_parms lstrparmsOrd
Str_parms lstrparmsWh

ldsPassoutNote = Create Datastore
ldsPassoutNote.dataobject = 'd_pass_out_note'
ldsPassoutNote.SetTransObject(SQLCA)

lsMsg = "Only Delivery Orders in Packing or Complete/Delivery~r~nstatus can be selected for 'Print Pass-out Note'."
lsMsg += "~r~nOthers have be de-selected."
llCheckedCount = 0
llRowCount = w_do.idw_result.RowCount()
For llRowPos = 1 to llRowCount
	if w_do.idw_result.getITemString(llRowPos,'c_select_ind') = 'Y' Then
		ls_ord_status = w_do.idw_result.getITemString(llRowPos,'ord_status')
		// Begin-  DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		if gs_project= 'PANDORA' then
					if ls_ord_status = 'L' or ls_ord_status = 'A' or ls_ord_status = 'C'  or ls_ord_status = 'D' then //  DINESH - 04/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status - added -   ls_ord_status = 'A'
					llCheckedCount = llCheckedCount + 1
					lstrparmsOrd.String_arg[llRowPos] = w_do.idw_result.getITemString(llRowPos,'do_no')
					lsWhCode = w_do.idw_result.getITemString(llRowPos,'wh_code')
				else
					llIneligbleCount = llIneligbleCount + 1
					w_do.idw_result.setItem(llRowPos,'c_select_ind','N')
				end if
			// End - DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
		else
				if ls_ord_status = 'A' or ls_ord_status = 'C'  or ls_ord_status = 'D' then
					llCheckedCount = llCheckedCount + 1
					lstrparmsOrd.String_arg[llRowPos] = w_do.idw_result.getITemString(llRowPos,'do_no')
					lsWhCode = w_do.idw_result.getITemString(llRowPos,'wh_code')
				else
					llIneligbleCount = llIneligbleCount + 1
					w_do.idw_result.setItem(llRowPos,'c_select_ind','N')
				end if
			End if
	End If
Next

If llIneligbleCount > 0 Then
	Messagebox(is_title, lsMsg)																			
End If

If llCheckedCount > 0 Then
	lsOrders = f_parse_array_to_string(lstrparmsOrd.String_arg)
	lsWhere = " wh_code = '" + lsWhCode + "'~n"
	i_nwarehouse.of_anytable('warehouse',lsWhere)			 
	If i_nwarehouse.ids_any.Rowcount() = 1 Then
		lsUF3 = i_nwarehouse.ids_any.object.user_field3[1]
		If IsNull(lsUF3) Then lsUF3 = 'None'
		lsSIC = i_nwarehouse.ids_any.object.transaction_group[1]
		sqlca.sp_next_avail_seq_no(gs_project,"Passout_Note_Serial_No",lsSIC,ld_NxtSeq)		//get the next available serial no
		If IsNull(ld_NxtSeq) Or ld_NxtSeq = 0 Then 
			lsMsg   = "Warehouse " + lsWhCode + " does not participate in the Pass-out~r~nNote process or an entry is necessary in NextSequenceNo~r~ntable to proceed."
			lsMsg += "~r~n~r~nPass-out Note will not be printed."
			MessageBox(is_title + " - Pass-out Note", lsMsg, Stopsign!)
			Return
		Else
			lsUF10 = lsSIC + String(Long(ld_NxtSeq),"000000") 
		End If
		//There is a need to hardcode some SIC numbers when multiple warehouse share the same SIC.
		lsSICq = lsSIC
		If lsSIC = 'CPJ' and lsWhCode = 'MFT' then lsSICq = 'CPJ2'
		If lsSIC = 'CAV' and lsWhCode = 'MBLHCGS ' then lsSICq = 'CAV2' 
		
		lstrparmsWh = f_retrieve_parm_all(gs_project, 'PASSOUT', lsSICq)		//There are some SIC with a number, i.e. CPJ1, CPJ2
	End If
	
	lsSqlSyntax = ldsPassoutNote.GetSQLSelect()
	lsSqlSyntax = lsSqlSyntax + " WHERE dbo.Delivery_Master.DO_No IN " + lsOrders
	liIdx = ldsPassoutNote.SetSQLSelect( lsSqlSyntax )
	
	ldsPassoutNote.Retrieve()

	Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
	llRowCount = ldsPassoutNote.RowCount()
	For llRowPos = 1 to llRowCount
		lsDoNo = ldsPassoutNote.GetItemString(llRowPos,'delivery_master_do_no')
					
			update delivery_master set user_field10 = :lsUF10
			where project_id = :gs_project and do_no = :lsDoNo
			using SQLCA;
		
		lsFind = "do_no = '" + lsDoNo + "' "
		liFound = w_do.idw_result.Find(lsFind, 1, w_do.idw_result.rowcount())
		If liFound > 0 Then
			w_do.idw_result.setItem(liFound,'user_field10', lsUF10)
			w_do.idw_result.setItem(liFound,'c_select_ind','N')
		End If
		
		ldsPassoutNote.SetItem(llRowPos,'delivery_master_user_field10',lsUF10)
		ldsPassoutNote.SetItem(llRowPos,'address1',lstrparmsWh.string_arg[2])
		ldsPassoutNote.SetItem(llRowPos,'address2',lstrparmsWh.string_arg[3])
		ldsPassoutNote.SetItem(llRowPos,'address3',lstrparmsWh.string_arg[4])
	Next
	
	update warehouse set user_field3 = :lsUF10
	where wh_code = :lsWhCode
	using SQLCA;	

	Execute Immediate "COMMIT" using SQLCA;

	lsPrinter = ProfileString(gs_iniFile,'PRINTERS','Passout Note','')
	If lsPrinter > '' Then PrintSetPrinter(lsPrinter)
	 
	//Send the report to the Print report window
	OpenWithParm(w_dw_print_options,ldsPassoutNote) 
	 
	// 10/20 - We want to store the last printer used for Printing the Pass-out Note for defaulting later
	lsPrinter = PrintGetPrinter()
	SetProfileString(gs_inifile,'PRINTERS','Passout Note',lsPrinter)

End If

end event

type cb_combine_gsin from commandbutton within tabpage_search
boolean visible = false
integer x = 3785
integer y = 860
integer width = 485
integer height = 96
integer taborder = 60
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Combine GSIN"
end type

event clicked;string ls_c_select_ind, ls_ord_status, lsProceed, lsMsg1, lsGSIN, lsSupplier, lsPrevSupplier, lsDoNo
long ll_row, llCheckedCount, llRowPos, llRowCount,llCheckedPos,llPickCount
integer li_rtn
string ls_empty_batch_message[]

lsMsg1 = "One or more delivery orders already have a GSIN.~r~n~GSINs already generated will be replaced.~nDo you want to proceed?'"
lsProceed = "No"

llCheckedCount = 0
llRowCount = w_do.idw_result.RowCount()
If llRowCount > 0 Then
	For llRowPos = 1 to llRowCount
		if w_do.idw_result.GetItemString(llRowPos,'c_select_ind') = 'Y' Then
			lsSupplier = w_do.idw_result.GetItemString(llRowPos,'user_field3')
			if w_do.idw_result.getITemString(llRowPos,'user_field4') <> '' and lsProceed = "No" then
				 If Messagebox(is_title, lsMsg1, Question!, OkCancel!, 2) = 1 Then
					llCheckedCount = llCheckedCount + 1
					lsProceed = "Yes"
				Else
					Return 0
				End If
			else
				llCheckedCount = llCheckedCount + 1
			end if
		End If
	Next
	If llCheckedCount > 0 Then
		//MessageBox(is_title,"A GSIN will be created and assigned to " + String(llCheckedCount) + " checked delivery orders.")
		lsGSIN = f_get_gsin_number( gs_project, lsSupplier) 
		For llRowPos = 1 to llRowCount
			if w_do.idw_result.GetItemString(llRowPos,'c_select_ind') = 'Y' Then
				lsDoNo = w_do.idw_result.GetItemString(llRowPos, 'do_no')
				Execute Immediate "Begin Transaction" using SQLCA; 
					update delivery_master set user_field4 = :lsGSIN where project_id = :gs_project and do_no = :lsDoNo using sqlca;
				Execute Immediate "COMMIT" using SQLCA; 
				w_do.idw_result.SetItem(llRowPos,'user_field4',lsGSIN)
		End If
		Next
	End If
Else
	MessageBox(is_title,"Generate search list and choose multiple delivery orders to assign a GSIN to all.")
End If



end event

type cb_multi_ready_to_ship from commandbutton within tabpage_search
boolean visible = false
integer x = 3785
integer y = 748
integer width = 485
integer height = 96
integer taborder = 60
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Multi-Ready to Ship"
end type

event clicked;
//MikeA 08/2019 - S36465 - F17598 - Philips Outbound Delivery enhancement (Multi-Ready-To-Ship)

//.	‘READY TO SHIP’ to reflect button as below sample in RED column. 
//Users should be able to select orders that are in Packing status to perform multi-Ready to Ship.
 
string ls_c_select_ind, ls_ord_status
long ll_row, llCheckedCount, llRowPos, llRowCount,llCheckedPos,llPickCount
integer li_rtn
string ls_empty_batch_message[]


//show status bar
//get the max count (numer of checked orders
llCheckedCount = 0
llRowCount = w_do.idw_result.RowCount()
For llRowPos = 1 to llRowCount
	if w_do.idw_result.getITemString(llRowPos,'c_select_ind') = 'Y' Then
		 // Begin - Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
		if gs_project = 'PANDORA' then
			if w_do.idw_result.getITemString(llRowPos,'ord_status') <> 'L' then
			 	Messagebox(is_title, "Only Delivery Orders in Loading status can be selected for 'Multi-Ready to Ship'")																			
				 Return 0
			else
					llCheckedCount = llCheckedCount + 1
			end if
		 // End - Dinesh - 03/17/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
		else
			if w_do.idw_result.getITemString(llRowPos,'ord_status') <> 'A' then
			 	Messagebox(is_title, "Only Delivery Orders in Packing status can be selected for 'Multi-Ready to Ship'")																			
				 Return 0
			else
					llCheckedCount = llCheckedCount + 1
			end if
		end if

	End If
NExt

If llCheckedCount = 0 Then return 0

If Messagebox(is_title,'Are you sure you want to READY TO SHIP the selected orders?',Question!,YesNo!,2) = 2 Then Return

is_Ready_Or_Confirm = 'READY'

open(w_update_status)

w_update_status.hpb_status.MaxPosition = llCheckedCount

//Clear out batch messages

is_batch_message[] = ls_empty_batch_message[]

ib_batchconfirmmode = true

for ll_row = 1 to idw_result.RowCount()
	
	ls_c_select_ind = idw_result.GetItemString( ll_row, "c_select_ind")
	
	ls_ord_status = idw_result.GetItemString( ll_row, "ord_status")
	
	
	if ls_c_select_ind = "Y" then
	
		llCheckedPos ++
		w_update_status.hpb_status.Position = llCheckedPos
		//SEPT-2019 - MikeA - DE12570 - SIMS QAT DEFECT - S36465 - PHILIPSBH - Window title issues
		w_update_status.st_status.text = 'Ready to Ship Order: ' + idw_result.getITemString(ll_row,'invoice_no') + "..."
			
		is_dono =  idw_result.GetItemString( ll_row, "do_no")
		
		isle_order.Trigger Event modified()
		
		Yield ( )
		//SEPT-2019 - MikeA - DE12570 - SIMS QAT DEFECT - S36465 - PHILIPSBH - Window title issues
		iw_window.Title = "Ready to Ship Batch - [" + idw_result.GetItemString(ll_row,'invoice_no') + "]"

		
		li_rtn = icb_ReadyToShip.Trigger Event clicked()
		
	end if
	
next

Close(w_update_status)
cb_clearall.TriggerEvent('clicked')

//Show Error Messages

if UpperBound(is_batch_message) > 0 then
	
	str_parms  lstr_parms
	
	lstr_parms.string_arg = is_batch_message[]
	
	lstr_parms.string_arg_2[1] = "READYTOSHIP"
	
	OpenWithParm (w_batch_confirm_error,  lstr_parms )

	
end if


ib_batchconfirmmode = false


end event

event constructor;//MEA - 5/13 - Don't enable for PANDORA.
//Need to get autorization from them first

if gs_project = "PANDORA" then
 	this.visible = false
	tab_main.tabpage_search.cb_selectall.visible = FALSE
	tab_main.tabpage_search.cb_clearall.visible = FALSE
end if
end event

type cb_wmscutover from commandbutton within tabpage_search
integer x = 3785
integer y = 60
integer width = 485
integer height = 96
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "WMS Cutover"
end type

event clicked;string lsWH, ls_sql, ls_syntax, ls_errors, lsOwnerCD, ls_dono, lsInvoice
datastore dsOwners
long llOwnerID, ll_row, ll_rows, ll_dono, llDetailCount
datetime ldtToday

lsWH = idw_search.GetItemString(1,"wh_code")
if isNull(lsWH) then
	messagebox("Generate WMS Cut-over Orders", "Must select warehouse")
end if
//lsWH = idw_Main.getitemstring(1, "wh_code")
//if lsWH='' then
//	messagebox("Generate WMS Cut-over Orders", "Must select warehouse")
//end if

ls_sql = "select distinct c.Owner_ID, Owner_cd from Content c with(nolock) inner join Owner O with(nolock) on c.Project_Id=o.Project_Id and c.Owner_Id=o.Owner_Id"
ls_sql += " where c.Project_Id='pandora'"
ls_sql += " and WH_Code = '" + lsWH + "'"
ls_sql += " and inventory_type <> '*'"
ls_sql += " order by owner_cd"

ls_syntax = sqlca.SyntaxFromSql(ls_sql, "", ls_errors)
if len(ls_errors) > 0 then return

dsOwners = create datastore
dsOwners.create(ls_syntax, ls_errors)
if len(ls_errors) = 0 then
	dsOwners.SetTransObject(sqlca)
	dsOwners.Retrieve()
	ldtToday = f_getLocalWorldTime( lsWH ) 

	ll_rows = dsOwners.RowCount()
	for ll_row = 1 to ll_rows
		lsOwnerCD = dsOwners.GetItemString(ll_row, "owner_cd")
		llOwnerID = dsOwners.GetItemNumber(ll_row, "owner_id")
		if messagebox("Generate WMS Cut-over Orders", "Create order for OwnerCD: " + lsOwnerCD + "?", Question!, YesNo!, 1) = 1 then 
			// get next_sequence_no for DO_NO...
			ll_dono = g.of_next_db_seq(gs_project, 'Delivery_Master', 'DO_No')				
			If ll_dono <= 0 Then
				messagebox(is_title,"Unable to retrieve the next available order Number!")
				Return -1
			End If				
			ls_dono = Trim(Left(gs_project,9)) + String(ll_dono, "0000000")
			lsInvoice = 'WMSCUTOVER_' + lsOwnerCD
			
			//Create Order Header....
			Execute Immediate "Begin Transaction" using SQLCA;
			insert into Delivery_Master(Project_Id, WH_Code, Ord_Date, Ord_Type, Ord_Status, Inventory_Type, OTM_Status, DO_No, Invoice_No, Awb_Bol_No, Cust_Code, Cust_Name, Address_1, Address_2, City, Country, Request_Date, Carrier, Ship_Via, User_Field1, User_Field2, User_Field7, Transport_Mode, Create_User, Freight_Cost, Freight_Terms)
			values('PANDORA', :lsWH, :ldtToday, 'S', 'N', 'N', 'N', :ls_dono, :lsInvoice, :lsInvoice, 'WMSCUTOVER', 'WMSCUTOVER', 'WMSCUTOVER', 'NOT TO BE USED BY OPS', 'GENERIC', 'US', :ldtToday, 'MLOGSHLSHL', 'SHUTTLE', 'DOS', :lsOwnerCd, 'WMSCUTOVER', 'GROUND', :gs_userid, 0, 'NA')
			using sqlca;
			
			//Create Order Detail....
			insert into Delivery_Detail(DO_No,SKU,Supp_Code,Owner_Id,Alternate_Sku,Req_Qty,UOM,Line_Item_No,standard_of_measure)
			select :ls_dono, SKU, 'PANDORA', Owner_Id, SKU, sum(Avail_Qty), 'EA' ,row_number() over (order by sku) RowNum, 'E' 
			from Content c with(nolock)
			where c.Project_Id = 'pandora'
			and WH_Code = :lsWH
			and Inventory_Type<>'*'
			and Owner_Id= :llOwnerID
			group by SKU, Supp_Code, Owner_Id
			using sqlca;
			Execute Immediate "Commit" using SQLCA;
			
			select count(line_item_no) into :llDetailCount from Delivery_Detail
			where do_no = :ls_dono;
			messagebox("Generate WMS Cut-over Orders", "Order '" + lsInvoice + "' Created. Detail Line Count: " + string(llDetailCount))

		end if
	next

end if

destroy dsOwners
end event

type cb_clearall from commandbutton within tabpage_search
integer x = 320
integer y = 908
integer width = 293
integer height = 92
integer taborder = 70
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Clear All"
end type

event clicked;
Long	llRowCount, llRowPos

llRowCount = dw_result.RowCount()
For llRowPos = 1 to llRowCount
	dw_Result.SetITem(llRowPos,'c_select_ind','N')
Next
end event

type cb_selectall from commandbutton within tabpage_search
integer x = 14
integer y = 908
integer width = 293
integer height = 92
integer taborder = 60
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Select All"
end type

event clicked;
Long	llRowCount, llRowPos

llRowCount = dw_result.RowCount()
For llRowPos = 1 to llRowCount
	dw_Result.SetITem(llRowPos,'c_select_ind','Y')
Next
end event

type cb_batch_print_dn from commandbutton within tabpage_search
integer x = 3785
integer y = 524
integer width = 485
integer height = 96
integer taborder = 30
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print DN"
end type

event clicked;


u_nvo_process_dn	lu_dn
lu_dn = Create u_nvo_process_dn
lu_dn.uf_process_batch_dn()

cb_clearAll.TriggerEvent('clicked')
end event

type cb_confirm_batch from commandbutton within tabpage_search
integer x = 3785
integer y = 636
integer width = 485
integer height = 96
integer taborder = 50
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Multi-Confirm"
end type

event clicked;
//MEA 5/12 - For Physio-MAA - Made for baseline

//Comments from Pete

//We want to add logic that will allow users to confirm multiple orders at a time. My thinking is that we add a checkbox on the search results and allow them to select 
//one or more orders (that aren’t already confirmed) and click a ‘confirm batch’ button that will loop through and confirm the orders. We don’t want to try and 
//encapsulate the confirmation logic separately so we want to create a loop which will just simulate double clicking on a search results row and clicking the 
//confirmation button and then doing the next order, etc. We should disable the messageboxes in ue_confirm and ue_save when in batch mode and instead write 
//to an array that we can pop-up at the end to let them know of any failures. I think we should create a row for successes and show them at the end. Basically the 
//order number and either success or the error messages. I would create a new Boolean instance variable that when set to true (in batch confirm mode) writes any 
//messagebox text to an array instead of showing the messagebox.
 
string ls_c_select_ind, ls_ord_status
long ll_row, llCheckedCount, llRowPos, llRowCount,llCheckedPos,llPickCount
integer li_rtn
string ls_empty_batch_message[]



//show status bar
//get the max count (numer of checked orders
llCheckedCount = 0
llRowCount = w_do.idw_result.RowCount()
For llRowPos = 1 to llRowCount
	if w_do.idw_result.getITemString(llRowPos,'c_select_ind') = 'Y' Then
		if w_do.idw_result.getITemString(llRowPos,'ord_status') = 'I' or w_do.idw_result.getITemString(llRowPos,'ord_status') = 'P' Then			//SARUN2013NOV07
			llPickCount ++																			//SARUN2013NOV07
		end if
		llCheckedCount ++
	End If
NExt

If llCheckedCount = 0 Then return 0

//SARUN2013NOV07 Start : Warning for Picking Status Orders 

if llPickCount > 0 then
	If Messagebox(is_title, "There are " +String(llPickCount) + " orders in Picking status in the selected Orders ~r Are you sure you want to CONFIRM these pickng status orders too? ",Question!,YesNo!,2) = 2 Then Return
else
	If Messagebox(is_title,'Are you sure you want to CONFIRM the selected orders?',Question!,YesNo!,2) = 2 Then Return
end if

//SARUN2013NOV07 ENDt : Warning for Picking Status Orders 

open(w_update_status)
w_update_status.hpb_status.MaxPosition = llCheckedCount

//Clear out batch messages

is_batch_message[] = ls_empty_batch_message[]

ib_batchconfirmmode = true

for ll_row = 1 to idw_result.RowCount()
	
	ls_c_select_ind = idw_result.GetItemString( ll_row, "c_select_ind")
	
	ls_ord_status = idw_result.GetItemString( ll_row, "ord_status")
	
	
	if ls_c_select_ind = "Y" then
	
		llCheckedPos ++
		w_update_status.hpb_status.Position = llCheckedPos
		//SEPT-2019 - MikeA - DE12570 - SIMS QAT DEFECT - S36465 - PHILIPSBH - Window title issues
		w_update_status.st_status.text = 'Confirming Order: ' + idw_result.getITemString(ll_row,'invoice_no') + "..."
			
		//	N New
		//	P Process
		//	I Picking
		//	A Packing
	
		// 08/13 - PCONKL - Baseline should only allow Packing or Ready, Physio should only allow Ready
		If left(upper(gs_project),6) = 'PHYSIO' Then
			if ls_ord_status <> "R"  then
				wf_display_message("Order must be in Ready Status.")
				Continue
			end if
		ElseIf gs_project = 'PANDORA' Then // Begin-DINESH - 03/17/2023- sims-73- Google - SIMS - Load Lock and New Loading Status
			if ls_ord_status <> "R" and ls_ord_status <> "A"  and ls_ord_status <> "I"  and ls_ord_status <> "P" and  ls_ord_status <> "L" then				//SARUN2013NOV07
				wf_display_message("Order must be in Loading , Packing or Ready Status.")
				Continue
			end if
			
		Else /*BAseline*/
			
			if ls_ord_status <> "R" and ls_ord_status <> "A"  and ls_ord_status <> "I"  and ls_ord_status <> "P" then				//SARUN2013NOV07
				wf_display_message("Order must be in Packing or Ready Status.")
				Continue
			end if
			
		End If
		
//		if ls_ord_status <> "N" and ls_ord_status <> "P" and ls_ord_status <> "I" and ls_ord_status <> "A" then
//			wf_display_message("Order must be in New, Process, Picking, or Packing Status.")
//			Continue
//		end if
	
		is_dono =  idw_result.GetItemString( ll_row, "do_no")
		
		isle_order.Trigger Event modified()
		
		Yield ( )
		
//		tab_main.tabpage_main.sle_order.Trigger Event modified()
		//SEPT-2019 - MikeA - DE12570 - SIMS QAT DEFECT - S36465 - PHILIPSBH - Window title issues
		iw_window.Title = "Confirm Batch - [" + idw_result.GetItemString(ll_row,'invoice_no') + "]"
		
		
//		iw_window.Post Event ue_confirm()
	
		
		li_rtn = icb_confirm.Trigger Event clicked()
		
	end if
	
next

Close(w_update_status)
cb_clearall.TriggerEvent('clicked')

//Show Error Messages

if UpperBound(is_batch_message) > 0 then
	
	str_parms  lstr_parms
	
	lstr_parms.string_arg = is_batch_message[]
	
	OpenWithParm (w_batch_confirm_error,  lstr_parms )

	
end if


ib_batchconfirmmode = false


end event

event constructor;//MEA - 5/13 - Don't enable for PANDORA.
//Need to get autorization from them first

if gs_project = "PANDORA" then
 	this.visible = false
	tab_main.tabpage_search.cb_selectall.visible = FALSE
	tab_main.tabpage_search.cb_clearall.visible = FALSE
end if
end event

type dw_result from u_dw_ancestor within tabpage_search
integer x = 9
integer y = 988
integer width = 3739
integer height = 1084
integer taborder = 20
boolean bringtotop = true
string dataobject = "d_do_result"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean hsplitscroll = true
end type

event clicked;call super::clicked;

// Pasting the record to the main entry datawindow
string ls_code

//If row is clicked then highlight the row
IF row > 0 THEN
	This.SelectRow(0, FALSE)
	This.SelectRow(row, TRUE)

	//TimA 11/03/14 Pandora asked for this but I am making it a basline change.
	//This will look into the inbound order and display a popup box that shouls the list of skus and qty
	If isVAlid(w_order_details) Then
		Close (w_order_details)
	End if
	
	If idw_search.GetItemString(1,"show_more_detail") = '1' then
		ls_code = this.getitemstring(row,'invoice_no')
		is_dono = this.getitemstring(row,'do_no')
	
		Str_parms	lstrParms
	
		lstrparms.String_Arg[1] = gs_project
		lstrparms.String_Arg[2] = is_dono
		lstrparms.String_Arg[3] = ls_code
		lstrParms.String_arg[4] = 'w_do'
		Openwithparm(w_order_details, lStrparms)
	end if

END IF
end event

event doubleclicked;ib_search= False // Dinesh - 11/02/2023- SIMS-328 - Google  - Read only part 2
If row > 0 Then
	If isVAlid(w_order_details) Then
			Close (w_order_details)
		End if	
	iw_window.Trigger Event ue_edit()
	If not ib_changed Then
		isle_order.Text = This.GetItemString(row,'invoice_no')
		is_dono = This.GetItemString(row,'do_no')
		isle_order.Trigger Event Modified()
	End If
End If

//06-Nov-2014 :Madhu- Reset Serial Flag to N on SNI table -START
If upper(gs_project) = 'ARIENS' THEN
	wf_reset_serial_flag()
END IF
//06-Nov-2014 :Madhu- Reset Serial Flag to N on SNI table -END
end event

event constructor;call super::constructor;//09/14 - pconkl - hide mobile status if not enabled for project
If not g.ibMobileEnabled THen
	This.Modify("mobile_status_ind.visible=false mobile_status_ind_t.visible=false mobile_pack_status_ind.visible=false mobile_pack_status_ind_t.visible=false")
End If
end event

type cb_do_search from commandbutton within tabpage_search
integer x = 3941
integer y = 252
integer width = 270
integer height = 96
integer taborder = 30
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Search"
boolean default = true
end type

event clicked;DateTime ldt_date
String ls_string, ls_where, ls_sql ,ls_search_legid1,ls_User_field16,ls_User_field18,ls_search_legid
Boolean	lsUseSku
Boolean  lsuseCONTID,lsusePONO
Boolean lb_order_from, lb_order_to, lb_complete_from, lb_complete_to,lb_where
//TimA 05/22/12
Boolean lb_OBDashboard //Flag to for the Outbound Dashboard
Long i
String lsLateClause
String ls_search_string,ls_in_clause
//Initialize Date Flags
lb_order_from 		= FALSE
lb_order_to 		= FAlSE
lb_complete_from 	= FALSE
lb_complete_to 	= FALSE

lb_where = False

//Gailm 06/12/2013 #605 - Turn off the multi select status windows
	ib_show_ord_status = false
	tab_main.tabpage_search.uo_ord_status.bringtotop = false
	ib_show_otm_ord_status = false
	tab_main.tabpage_search.uo_otm_ord_status.bringtotop = false
	ib_show_mobile_status = false
	tab_main.tabpage_search.uo_mobile_status.bringtotop = false

// gwn - 10/09/2013 - #655 - Initalize Delete button on pick list
	tab_main.tabpage_pick.cb_pick_delete.Enabled = True
	tab_main.tabpage_pick.cb_pick_select.Enabled = False
	tab_main.tabpage_pick.cb_pick_delete.visible = True
	tab_main.tabpage_pick.cb_pick_select.visible = False

//TimA 05/22/12 Pandora issue #407
//Determine if the Outbound dashboard is open
If IsValid(w_delivery_order_dashboard) and ib_SearchCalledFromDashboard = True then
	lb_OBDashboard = True
Else
	lb_OBDashboard = False
End if
ib_SearchCalledFromDashboard = False

If idw_search.AcceptText() = -1 Then Return
//***************************************************************
// NOTE:: From TimA
//
// If you look ate the table Custom_Datawindow and Custom_Datawindow_Detail you can see how Pandora uses that table to sort and set column with automatically.
//Look for comments in the n_cst_appmanager under the function uf_set_dw on how you can use the table Customer_Datawindow to set the columns
//
//***************************************************************
idw_result.Reset()
ls_sql = is_sql
//MStuart 080311 - added where, iso conversion removed the where clause from original sql
ls_where = " where delivery_master.project_id = '" + gs_project + "' "
ldt_date = idw_search.GetItemDateTime(1,"ord_date_s")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.ord_date >= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_order_from = TRUE
	lb_where = TRUE
End If

ldt_date = idw_search.GetItemDateTime(1,"ord_date_e")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.ord_date <= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_order_to = TRUE
	lb_where = TRUE
End If

ldt_date = idw_search.GetItemDateTime(1,"complete_date_s")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.complete_date >= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_complete_from = TRUE
	lb_where = TRUE
End If

ldt_date = idw_search.GetItemDateTime(1,"complete_date_e")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.complete_date <= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_complete_to = TRUE
	lb_where = TRUE
End If

//Jxlim 09/16/2010 Added code for schedule Delivery Date range
ldt_date = idw_search.GetItemDateTime(1,"sched_delivery_date_s")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.schedule_date >= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_complete_from = TRUE
	lb_where = TRUE
Else
	//TimA 05/22/12 Pandora issue #407
	//Because the Outbound dashboard is open the search criteria changes
	If lb_OBDashboard = True Then
		lb_complete_from = TRUE
		lb_where = TRUE		
	End if
End If

ldt_date = idw_search.GetItemDateTime(1,"sched_delivery_date_e")
If  Not IsNull(ldt_date) Then
	//TimA 05/22/12 Pandora issue #407
	//Because the Outbound dashboard is open the search criteria changes
	If lb_OBDashboard = True Then
	  	ls_where += " and (delivery_master.schedule_date <= '" +  String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' " + "or Schedule_Date Is Null)"
	Else
	ls_where += " and delivery_master.schedule_date <= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	End if
	lb_complete_to = TRUE
	lb_where = TRUE
End If
//Jxlim 09/16/2010 End of Schedule Delivery Date range

//05-FEB-2019 :Madhu DE8361 Need 'Ready_By_Date' START
ldt_date = idw_search.GetItemDateTime(1,"ready_by_date_s")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.ready_by_date >= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_complete_from = TRUE
	lb_where = TRUE
End If

ldt_date = idw_search.GetItemDateTime(1,"ready_by_date_e")
If  Not IsNull(ldt_date) Then
	ls_where += " and delivery_master.ready_by_date <= '" + &
		String(ldt_date, "yyyy-mm-dd hh:mm:ss") + "' "
	lb_complete_to = TRUE
	lb_where = TRUE
End If
//05-FEB-2019 :Madhu DE8361 Need 'Ready_By_Date' END

ls_string = idw_search.GetItemString(1,"ord_type")
if not isNull(ls_string) then
	ls_where += " and delivery_master.ord_type = '" + ls_string + "' "
	lb_where = TRUE
end if

//GailM 05/30/2013 Pandora 605
/*ls_string = idw_search.GetItemString(1,"ord_status")*/
ls_string = tab_main.tabpage_search.uo_ord_status.uf_build_search(True)
if not isNull(ls_string) then
	//ls_where += " and delivery_master.ord_status = '" + ls_string + "' "
	ls_where += ls_string
	lb_where = TRUE
end if 

ls_string = idw_search.GetItemString(1,"wh_code")
if not isNull(ls_string) then
	ls_where += " and delivery_master.wh_code = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"cust_code")
if not isNull(ls_string) then
	ls_where += " and delivery_master.cust_code = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"carrier")
if not isNull(ls_string) then
	ls_where += " and delivery_master.carrier = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"cust_order_no")
if not isNull(ls_string) then
	// KRZ Added beginning '%' to search string.
	ls_where += " and delivery_master.cust_order_no Like '" + ls_string + "%' "
	lb_where = TRUE
end if
// S62674-  Dhirendra Added load_seq filed on search tab for PANDORA-Start
ls_string = idw_search.GetItemString(1,"load_seq")
If not isNull(ls_string)  then
	ls_where += " and delivery_master.Load_Sequence = '" + ls_string + "'"
	lb_where = TRUE
end if
// S62674-  Dhirendra Added load_seq filed on search tab for PANDORA-END

ls_string = idw_search.GetItemString(1,"sku")
if not isNull(ls_string) then
	ls_where += " and delivery_detail.sku = '" + ls_string + "' "
	lsUseSku = True /* 07/00 PCONKL - searching on sku, we need to remove outer join to Master*/
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"container_id")
if not isNull(ls_string) then
	ls_where += " and delivery_picking.container_id = '" + ls_string + "' "
	lsuseCONTID = True /* 07/03 Mathi - searching on CONT ID, we need to remove outer join to Master*/
	lb_where = TRUE
end if

// 10/10 - PCONKL - added lot search
ls_string = idw_search.GetItemString(1,"lot_no")
if not isNull(ls_string) then
	ls_where += " and delivery_picking.lot_no = '" + ls_string + "' "
	lsuseCONTID = True /* we dont need a seperate indicator for lot, all we need to do is get rid of the outer join*/
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"po_no")
if not isNull(ls_string) then
	ls_where += " and (delivery_picking.po_no = '" + ls_string + "' or delivery_picking.do_no in (select delivery_picking_detail.do_no from receive_xref, delivery_picking_detail with (nolock) where receive_xref.ro_no = delivery_picking_detail.ro_no and receive_xref.po_no = '" + ls_string + "'))" /* 04/04 - MA - Added so Receive _Xref would be search for po_no */
	lsusePONO = True /* 12/03 Mathi - searching on PO NO, we need to remove outer join to Master*/
	lb_where = TRUE
end if


//Nxjain  Improve the search criteria, trim the invoice number  - 20161102
ls_string= trim(idw_search.GetItemString(1,"invoice_no"))
long ll_find,flag
//Dinesh - 02/11/2021 - S52817 - Google - SIMS - SAP Conversion - GUI - Multileg Search 
select count(*) into :ll_find from delivery_master where invoice_no= :ls_string and project_id=:gs_project;
if ll_find=1 then
	flag=1 
end if
//Dhirendra-11 Jan 2021 PANDORA -S52706 Added if condition for multiple search and creating search string to pass in  IN Clauae
IF not isNull(ls_string)  and  (Pos(ls_string, ",") > 0 or (Pos(ls_string, ",") = 0 and flag=1)) and Upper(gs_project) ="PANDORA" THEN
//IF not isNull(ls_string)  and  (Pos(ls_string, ",") > 0 ) and Upper(gs_project) ="PANDORA" THEN
	ls_where  += "and delivery_master.invoice_no IN (" 
// Begin - Dinesh - 01/19/2021 - S52817 - Google - SIMS - SAP Conversion - GUI - Multileg Search
for i = 1 to 15
    IF  pos(ls_string,',') > 0 then 
			ls_in_clause = left(ls_string,(pos(ls_string,',')))
		 	ls_in_clause =  left(ls_in_clause,(len(ls_in_clause) - 1))
		 	 select User_field16,User_field18 into :ls_User_field16, :ls_User_field18 from delivery_master where invoice_no=:ls_in_clause and project_id=:gs_project;
			 ls_search_string = ls_search_string + "'" + ls_in_clause + "'"
			 ls_search_string  =  ls_search_string + ", "
			 ls_string= right(ls_string,(len(ls_string) - len(ls_in_clause) )-1)
			 if ((not isnull(ls_User_field16) or trim(ls_User_field16)<>"") and (not isnull(ls_User_field18) or trim(ls_User_field18)<>"")) or ((not isnull(ls_User_field16) or trim(ls_User_field16)<> "") and (isnull(ls_User_field18) or  trim(ls_User_field18)= "")) or ((isnull(ls_User_field16) or trim(ls_User_field16)= "") and (not isnull(ls_User_field18) or  trim(ls_User_field18) <> "")) or ((isnull(ls_User_field16) or trim(ls_User_field16)= "") and (isnull(ls_User_field18) or  trim(ls_User_field18)= "")) then
					if  ( isnull(ls_User_field16) and not isnull(ls_User_field18)) then
						ls_User_field16=""
					elseif  (isnull(ls_User_field16) and isnull(ls_User_field18)) then
						ls_User_field16=""
						ls_User_field18=""
					elseif  (not isnull(ls_User_field16) and isnull(ls_User_field18)) then
						ls_User_field18=""
					end if
					ls_search_legid  = ls_search_legid+ "'"+ls_User_field16+"'" + ", "+ "'"+ls_User_field18+"'"+", "
			  end if
		 ls_search_legid1=ls_search_legid
	ELSE
		IF not isnull(ls_string) or ls_string <> ''  then
			select User_field16,User_field18 into :ls_User_field16, :ls_User_field18 from delivery_master where invoice_no=:ls_string and project_id=:gs_project;
		 if ((not isnull(ls_User_field16) or trim(ls_User_field16)<>"") and (not isnull(ls_User_field18) or trim(ls_User_field18)<>"")) or ((not isnull(ls_User_field16) or trim(ls_User_field16)<> "") and (isnull(ls_User_field18) or  trim(ls_User_field18)= "")) or ((isnull(ls_User_field16) or trim(ls_User_field16)= "") and (not isnull(ls_User_field18) or  trim(ls_User_field18) <> "")) or ((isnull(ls_User_field16) or trim(ls_User_field16)= "") and (isnull(ls_User_field18) or  trim(ls_User_field18)= "")) then
					if  ( isnull(ls_User_field16) and not isnull(ls_User_field18)) then
						ls_User_field16=""
					elseif  (isnull(ls_User_field16) and isnull(ls_User_field18)) then
						ls_User_field16=""
						ls_User_field18=""
					elseif  (not isnull(ls_User_field16) and isnull(ls_User_field18)) then
						ls_User_field18=""
					end if
				ls_search_legid1  = ls_search_legid1+ "'"+ls_User_field16+"'" + ", "+ "'"+ls_User_field18+"'"
		  end if
			  ls_search_string = ls_search_string + "'" + ls_string + "'" + ", "+ ls_search_legid1
			  ls_where += ls_search_string + ") "
			  lb_where =true
		 END if 
		exit 
	END IF  
	next
		
	// End - Dinesh - 01/19/2021 - S52817 - Google - SIMS - SAP Conversion - GUI - Multileg Search
	
//IF not isNull(ls_string)  and  Pos(ls_string, ",") > 0 and Upper(gs_project) ="PANDORA" THEN
//	ls_where  += "and delivery_master.invoice_no IN (" 
//for i = 1 to 10
//
//IF  pos(ls_string,',') > 0 then 
//	ls_in_clause = left(ls_string,(pos(ls_string,',')))
//    ls_in_clause =  left(ls_in_clause,(len(ls_in_clause) - 1))
//        ls_search_string = ls_search_string + "'" + ls_in_clause + "'"
//		 ls_search_string  =  ls_search_string + ", "
//	    ls_string= right(ls_string,(len(ls_string) - len(ls_in_clause) )-1)
//	else
//		IF not isnull(ls_string) or ls_string <> '' then
//	   
//		  ls_search_string = ls_search_string + "'" + ls_string + "'"
//		  ls_where += ls_search_string + ") "
//		  lb_where = TRUE
//	end if 
//	exit 
//end if 
//next
else
	//End Dhirendra
	//ls_where += " and delivery_master.invoice_no Like '%" + ls_string + "%' " /* 02/03 - PCONKL */

if not isNull(ls_string) then
	//ls_where += " and delivery_master.invoice_no = '" + ls_string + "' "
	ls_where += " and delivery_master.invoice_no Like '%" + ls_string + "%' " /* 02/03 - PCONKL */
	lb_where = TRUE
end if
end if 

ls_string = idw_search.GetItemString(1,"ship_ref")
if not isNull(ls_string) then
	ls_where += " and delivery_master.ship_ref = '" + ls_string + "' "
	lb_where = TRUE
end if

//%%%%%  Search on freight terms  10/25/00 lkm
ls_string = idw_search.GetItemString(1,"freight_terms")
if not isNull(ls_string) then
	ls_where += " and delivery_master.freight_terms = '" + ls_string + "' "
	lb_where = TRUE
end if

//ls_string = idw_search.GetItemString(1,"user_field2")
ls_string = idw_search.GetItemString(1,"awb_bol_no") /* 09/09 - Pconkl - now really using UF2 for UF2 instead of AWB */
if not isNull(ls_string) then
	ls_where += " and delivery_master.awb_bol_no = '" + ls_string + "' "
	lb_where = TRUE
end if

//TimA Pandora issue #452 Add user field1 as part of the search criteria
ls_string = idw_search.GetItemString(1,"user_field1")
if not (isNull(ls_string) or ls_string = "") then
	ls_where += " and delivery_master.user_field1 = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"user_field2")
if not isNull(ls_string) then
	ls_where += " and delivery_master.user_field2 = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"user_field3")
if not isNull(ls_string) then
	ls_where += " and delivery_master.user_field3 = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"user_field4")
if not isNull(ls_string) then
	ls_where += " and delivery_master.user_field4 = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"user_field5")
if not isNull(ls_string) then
	ls_where += " and delivery_master.user_field5 = '" + ls_string + "' "
	lb_where = TRUE
end if

ls_string = idw_search.GetItemString(1,"user_field6")
if not isNull(ls_string) then
	ls_where += " and delivery_master.user_field6 = '" + ls_string + "' "
	lb_where = TRUE
end if

// 03/04 - PCONKL - Ship To Country
ls_string = idw_search.GetItemString(1,"ship_to_country")
if not isNull(ls_string) then
	ls_where += " and delivery_master.country = '" + ls_string + "' "
	lb_where = TRUE
end if

//Jxlim 01/21/2014 added carrier_pro_no to search criteria. This is Pro Number
ls_string = idw_search.GetItemString(1,"carrier_pro_no") 
if not isNull(ls_string) then
	ls_where += " and delivery_master.carrier_pro_no = '" + ls_string + "' "
	lb_where = TRUE
end if

//TimA 02/14/12 OTM Project
//GailM 05/30/2013 Pandora 605 - Use multi select DW
//Utilized the contract_order field to call OTM Status
If isOTMEnabled = 'Y' Then
		//ls_string = idw_search.GetItemString(1,"contract_order")
		ls_string = tab_main.tabpage_search.uo_otm_ord_status.uf_build_search( lb_where)
	if not isNull(ls_string) then
		//ls_where += " and ( Delivery_Master.OTM_Status = '" + ls_string + "')"
		ls_where += ls_string
		lb_where = TRUE
	End if
Else

	//09/08 - MEA - Added Contract Orders
	ls_string = idw_search.GetItemString(1,"contract_order")
	
	IF ls_string = "Y" OR ls_string = "N" THEN
		
		lsUseSku = TRUE
		lb_where = TRUE
		
		IF ls_string = "Y" THEN
		
			ls_where += " and ( Delivery_Detail.User_Field6 = 'Z3' or  Delivery_Detail.User_Field6 = 'Z4') "
		
			// and Delivery_Detail.User_Field6 is not null
		
		ELSE
	
			ls_where += " and ( not ( Delivery_Detail.User_Field6 = 'Z3' or  Delivery_Detail.User_Field6 = 'Z4') or Delivery_Detail.User_Field6 is null ) "
		
		//
		
		END IF
		
	END IF

End if

 // 11/11 - PCONKL - Added Delivery_Detail.User_Field1
ls_string = idw_search.GetItemString(1,"dd_user_field1")
if not isNull(ls_string) then
	ls_where += " and delivery_detail.User_Field1 = '" + ls_string + "' "
	lsUseSku = True /* 07/00 PCONKL - searching on sku, we need to remove outer join to Master*/
	lb_where = TRUE
end if

 // 2012/06 - TAM - Added Delivery_Detail.User_Field3
ls_string = idw_search.GetItemString(1,"dd_user_field3")
if not isNull(ls_string) then
	ls_where += " and delivery_detail.User_Field3 = '" + ls_string + "' "
	lsUseSku = True /* 07/00 PCONKL - searching on sku, we need to remove outer join to Master*/
	lb_where = TRUE
end if



////12/08 - MEA - added Serial Number search in support of 3COM RMA
//ls_string = idw_search.GetItemString(1,"serial_no")
//if not isNull(ls_string) then
//	ls_where += " and delivery_master.do_no in (SELECT Delivery_Picking_Detail.do_no from Delivery_Picking_Detail, Delivery_Serial_Detail with (nolock) Where   Delivery_Serial_Detail.ID_No = Delivery_Picking_Detail.ID_No  and  Delivery_Serial_Detail.serial_no = '" + ls_string + "') "
//	lsUseSku = True 
//	lb_where = TRUE
//end if

//BCR 27-SEP-2011 - Search for Serial No in Delivery_Picking...in addition to Delivery_Serial_Detail as commented out above.
ls_string = idw_search.GetItemString(1,"serial_no")
if not isNull(ls_string) then
	ls_where += " and delivery_master.do_no in (SELECT Delivery_Picking_Detail.do_no from Delivery_Picking_Detail, Delivery_Serial_Detail with (nolock) Where   Delivery_Serial_Detail.ID_No = Delivery_Picking_Detail.ID_No  and " +  & 
					+ "Delivery_Serial_Detail.serial_no = '" + ls_string + "' "+ & 
					"UNION SELECT Delivery_Picking.do_no from Delivery_Picking with (nolock) Where   Delivery_Picking.Serial_No = '" + ls_string + "') "
	lsUseSku = True 
	lb_where = TRUE
end if

// dts - 05/09 - added system number search...
ls_string = idw_search.GetItemString(1,"do_no")
if not isNull(ls_string) then
	ls_where += " and delivery_master.do_no = '" + ls_string + "' "
	lb_where = TRUE
end if

//09/14 - PCONKL - Added Mobile Status
//ls_string = idw_search.GetItemString(1,"mobile_status")

ls_string = tab_main.tabpage_search.uo_mobile_status.uf_build_search(true)
if not isNull(ls_string) then
	ls_where += ls_string
	lb_where = TRUE
end if 
//
//if not isNull(ls_string) then
//	ls_where += " and delivery_master.mobile_status_ind = '" + ls_string + "' "
//	lb_where = TRUE
//end if

//Check Order Date range for any errors prior to retrieving
IF ((lb_order_to = TRUE and lb_order_from = FALSE) 	OR &
	 (lb_order_from = TRUE and lb_order_to = FALSE)  	OR &
	 (lb_order_from = FALSE and lb_order_to = TRUE)) 	THEN
		messagebox("ERROR", "Please complete the FROM\To in Order Date Range", Stopsign!)
	Return
END IF

//Check Complete Date range for any errors prior to retrieving
IF ((lb_complete_to = TRUE and lb_complete_from = FALSE) 	OR &
	 (lb_complete_from = TRUE and lb_complete_to = FALSE)  	OR &
	 (lb_complete_from = FALSE and lb_complete_to = TRUE)) 	THEN
		messagebox("ERROR", "Please complete the FROM\To in Complete Date Range", Stopsign!)
	Return
END IF	

//MEA - 10/15/2012 Added generic search functions for User_Fields.

integer liIdx

for liIdx = 1 to 8

	if UpperBound(isGenericSearchColumnNameValue) >= liIdx then
	
		ls_string = idw_search.GetItemString(1,"search_field" + string(liIdx))
		if not isNull(ls_string) and trim(ls_string) <> '' and  trim(isGenericSearchColumnNameValue[liIdx]) <> '' then
//			ls_where += " and " + isGenericSearchColumnNameValue[liIdx] + " = '" + ls_string + "' "
//		     Use like so you can search wildcard %
//			ls_where += " and " + isGenericSearchColumnNameValue[liIdx] + " like '" + ls_string + "' "
			//Sarun2013dec06
// TAM 2016/08/03 - Fixed the "Like" operator.  It Needs "%" befor and after
			//	ls_where += " and " + isGenericSearchColumnNameValue[liIdx] +  idw_search.getItemString(1,'search_field' + string(liIdx) + '_oper' ) + " '" + ls_string + "' "
			If idw_search.getItemString(1,'search_field' + string(liIdx) + '_oper' ) = 'Like' then
				ls_where += " and " + isGenericSearchColumnNameValue[liIdx] + " like '%" + ls_string + "%' "
			Else
				ls_where += " and " + isGenericSearchColumnNameValue[liIdx] +  idw_search.getItemString(1,'search_field' + string(liIdx) + '_oper' ) + " '" + ls_string + "' "
			End iF	

			
			lb_where = TRUE
		end if
	else
		EXIT
	end if
		

next

//GailM 10/01/2013 Pandora Issue 655 - Add select all to delete all Pick rows at one time
	tab_main.tabpage_pick.cbx_selectall.checked = false

ls_sql += ls_where

//DGM For giving warning for all no search criteria
if not lb_where then
	  IF i_nwarehouse.of_msg(is_title,1) = 2 THEN Return
END IF	  
// 07/00 PCONKL - If including search on SKU ( 11/11 - PCONKL - or other detail fields), remove the outer join on master - we only want to show masters that have sku in detail
If lsUseSku  Then	
	//MStuart - commented 080211 - iso sql changes
	//ls_sql = Replace(ls_sql,pos(ls_sql,"=*"),2,"=")
	ls_sql = Replace(ls_sql,pos(ls_sql,"left outer"),10,"inner")	
End If

// 07/03 Mathi - If including search on CONTID, remove the outer joins on master - we only want to show masters that have CONTID in picking
If lsuseCONTID or lsusePONO Then	
	//MStuart - commented 080211 - iso sql changes
	//ls_sql = Replace(ls_sql,pos(ls_sql,"=*"),2,"=")
	ls_sql = Replace(ls_sql,pos(ls_sql,"left outer"),10,"inner")	
	If Not lsuseSku Then
		//MStuart - commented 080211 - iso sql changes
		//ls_sql = Replace(ls_sql,pos(ls_sql,"=*"),2,"=")	
		ls_sql = Replace(ls_sql,pos(ls_sql,"left outer"),10,"inner")	 
   End If 
End If

//TImA 07/28/14 Pandora issue #887 
//This part is base line.  We lookup the lacal warehouse time and set the value in the WH_Datetime field.
//At this time the filed is non visible.  If another project wants to use it set it to visible.
ls_sql = Replace(ls_sql,pos(ls_sql,"Convert(datetime,'') as WH_Datetime"),35,"	Case when GETDATE()> Warehouse.Dylght_Svngs_Time_Start and GETDATE() < Warehouse.Dylght_Svngs_Time_End then ~r" + & 
+ "		GETDATE()+ (GMT_Offset+1)/24 else  ~r" + &
+ "		GETDATE()+ GMT_Offset/24 ~r" + &
+ "	End WH_Datetime " )

//**********
//NOTE: for other baseline project replace the 	ls_sql = Replace(ls_sql,pos(ls_sql,"'                      ' as change_color_ind"),45, with a condition that is right for that project
//
//Look for comments in the n_cst_appmanager under the function uf_set_dw on how you can use the table Customer_Datawindow to set the columns
//**********


//TImA 07/28/14 Pandora issue #887 
//Show late orders in RED
//To make this baseline This where clause is defined in the Custom_Datawindow table

If g.ids_Custom_dw.RowCOunt() > 0 Then
	lsLateClause = g.ids_Custom_dw.GetItemString(1,'Late_Where_Clause_Condition')
End If

If Len(lsLateClause) > 0 then
	lsLateClause += ','
	ls_sql = Replace(ls_sql,pos(ls_sql,"'                      ' as change_color_ind"),45, lsLateClause  )	
End if
//Replaced this code with the code found in the table above.

//	ls_sql = Replace(ls_sql,pos(ls_sql,"'                      ' as change_color_ind"),45,"	Case when GETDATE()> Warehouse.Dylght_Svngs_Time_Start and GETDATE() < Warehouse.Dylght_Svngs_Time_End then /*In Daylight Savings*/ ~r " + &
//	+ "		Case when OTM_Status = 'N' and EDM_Generate_Datetime < GETDATE()+ (GMT_Offset+1)/24 then 'LATE' ~r " + &
//	+ "			 when OTM_Status in('R') and Schedule_Date < GETDATE()+ (GMT_Offset+1)/24 then 'LATE' ~r" + &
//	+ "		Else ~r" + &
//	+ "		'' ~r" + &
//	+ "		end ~r" + &
//	+ "	Else /*Not in Daylight Savings*/  ~r" + &
//	+ "		case when OTM_Status = 'N' and EDM_Generate_Datetime < GETDATE()+ GMT_Offset/24 then 'LATE'  ~r" + &
//	+ "			 when OTM_Status in('R') and Schedule_Date < GETDATE()+ GMT_Offset/24 then 'LATE' ~r" + &
//	+ "		Else ~r" + &
//	+ "		'' ~r" + &
//	+ "		end ~r" + &
//	+ "	End change_color_ind "  )	

//ClipBoard(ls_sql)
//MessageBox ("sql", ls_sql)

idw_result.SetSqlSelect(ls_sql)

SetPointer(Hourglass!)

If idw_result.Retrieve() = 0 Then
	messagebox(is_title,"No records found!")
else
//	idw_result.SetSort("#1 A") //Column #1 is Do_No   //05-Sep-2014 : Madhu- commented as discussed in code-review.
//	idw_result.sort( )													//05-Sep-2014 : Madhu- commented as discussed in code-review.
//	//07/28/14 TimA Pandora issue #887 Filter out the Late Orders only
	If idw_search.GetItemString(1,"late_orders") = '1' then
		idw_result.SetFilter("change_color_ind = 'LATE'")
		idw_result.Filter()
	else
		idw_result.SetFilter("")
		idw_result.Filter()
	end if

End If

SetPointer(arrow!)
end event

event constructor;
g.of_check_label_button(this)
end event

type cb_do_clear from commandbutton within tabpage_search
integer x = 3941
integer y = 364
integer width = 270
integer height = 96
integer taborder = 40
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Clear"
end type

event clicked;idw_search.Reset()
idw_search.InsertRow(0)

If gs_default_WH > '' Then
	idw_search.SetITem(1,'wh_code',gs_default_WH) /* 04/04 - PCONKL - Warehouse now reauired field on search to keep users within their domain*/
End If

idw_result.Reset()

//GailM 05/29/2013 Pandora Issue 605
tab_main.tabpage_search.uo_ord_status.visible = true
tab_main.tabpage_search.uo_ord_status.bringtotop = false
ib_show_ord_status = False
tab_main.tabpage_search.uo_ord_status.uf_clear_list( )
 idw_search.setItem(1,"ord_status", "<Select Multiple>")

tab_main.tabpage_search.uo_otm_ord_status.visible = true
tab_main.tabpage_search.uo_otm_ord_status.bringtotop = false
ib_show_otm_ord_status = False
tab_main.tabpage_search.uo_otm_ord_status.uf_clear_list( )
 idw_search.setItem(1,"contract_order", "<Select Multiple>")
 
 // 11/14 - PCONKL - Added MObile status
 tab_main.tabpage_search.uo_mobile_status.visible = true
tab_main.tabpage_search.uo_mobile_status.bringtotop = false
ib_show_mobile_status = False
tab_main.tabpage_search.uo_mobile_status.uf_clear_list( )
 idw_search.setItem(1,"mobile_status", "<Select Multiple>")


end event

event constructor;
g.of_check_label_button(this)
end event

type uo_mobile_status from uo_multi_select_search within tabpage_search
event ue_mousemove pbm_mousemove
integer x = 2880
integer y = 288
integer height = 284
integer taborder = 80
end type

event ue_mousemove;/*GailM 05/30/2013 - Pandora Issue 605 - MultiSelect status dropdown 
	 Hide window when mouse travels outside window.  */

if ib_show_mobile_status then
	ib_show_mobile_status = false
	this.bringtotop = false
else
	ib_show_mobile_status = true
	this.bringtotop = true
end if

end event

on uo_mobile_status.destroy
call uo_multi_select_search::destroy
end on

type uo_ord_status from uo_multi_select_search within tabpage_search
event ue_mousemove pbm_mousemove
integer x = 2875
integer y = 220
integer height = 284
integer taborder = 50
end type

event ue_mousemove;/*GailM 05/30/2013 - Pandora Issue 605 - MultiSelect status dropdown 
	 Hide window when mouse travels outside window.  */

if ib_show_ord_status then
	ib_show_ord_status = false
	this.bringtotop = false
else
	ib_show_ord_status = true
	this.bringtotop = true
end if

end event

on uo_ord_status.destroy
call uo_multi_select_search::destroy
end on

type uo_otm_ord_status from uo_multi_select_search within tabpage_search
event ue_mousemove pbm_mousemove
integer x = 2880
integer y = 400
integer height = 284
integer taborder = 60
end type

event ue_mousemove;/*GailM 05/30/2013 - Pandora Issue 605 - MultiSelect status dropdown 
	 Hide window when mouse travels outside window.  */
 
if ib_show_otm_ord_status then
	ib_show_otm_ord_status = false
	this.bringtotop = false
else
	ib_show_otm_ord_status = true
	this.bringtotop = true
end if


end event

on uo_otm_ord_status.destroy
call uo_multi_select_search::destroy
end on

type dw_search from u_dw_ancestor within tabpage_search
event ue_nozoom pbm_other
integer x = 14
integer y = 12
integer width = 3703
integer height = 872
integer taborder = 20
boolean bringtotop = true
string dataobject = "d_do_search"
boolean border = false
borderstyle borderstyle = stylebox!
end type

event ue_nozoom;CONSTANT INT WM_MOUSEWHEEL = 522
IF message.number = WM_MOUSEWHEEL THEN
  message.processed = TRUE
  RETURN 1
END IF
end event

event clicked;call super::clicked;string 	ls_column
DatawindowChild	ldwc
long		ll_row

datetime	ldt_begin_date
datetime	ldt_end_date

dw_search.AcceptText()
ls_column 	= DWO.Name
ll_row 		= dw_search.GetRow()

CHOOSE CASE ls_column
		
	CASE "ord_date_s"
		
		IF ib_order_from_first THEN
			
			ldt_begin_date = f_get_date("BEGIN")
			dw_search.SetColumn("ord_date_s")
			dw_search.SetText(string(ldt_begin_date, "mm/dd/yyyy hh:mm"))
			ib_order_from_first = FALSE
			
		END IF
		
	CASE "ord_date_e"
		
		IF ib_order_to_first THEN
			
			ldt_end_date = f_get_date("END")
			dw_search.SetColumn("ord_date_e")
			dw_search.SetText(string(ldt_end_date, "mm/dd/yyyy hh:mm"))
			ib_order_to_first = FALSE
			
		END IF
		
			
	CASE "complete_date_s"
		
		IF ib_complete_from_first THEN
			
			ldt_begin_date = f_get_date("BEGIN")
			dw_search.SetColumn("complete_date_s")
			dw_search.SetText(string(ldt_begin_date, "mm/dd/yyyy hh:mm"))
			ib_complete_from_first = FALSE
			
		END IF
		
	CASE "complete_date_e"
		
		IF ib_complete_to_first THEN
			
			ldt_end_date = f_get_date("END")
			dw_search.SetColumn("complete_date_e")
			dw_search.SetText(string(ldt_end_date, "mm/dd/yyyy hh:mm"))
			ib_complete_to_first = FALSE
			
		END IF
		
	//18-Nov-2014 : Madhu- Display Schedule dates - START
	CASE "sched_delivery_date_s"
		
		IF ib_complete_from_first THEN
			ldt_begin_date = f_get_date("BEGIN")
			dw_search.SetColumn("sched_delivery_date_s")
			dw_search.SetText(string(ldt_begin_date, "mm/dd/yyyy hh:mm"))
			ib_complete_from_first = FALSE
		END IF
		
	CASE "sched_delivery_date_e"

		IF ib_complete_to_first THEN
			ldt_end_date = f_get_date("END")
			dw_search.SetColumn("sched_delivery_date_e")
			dw_search.SetText(string(ldt_end_date, "mm/dd/yyyy hh:mm"))
			ib_complete_to_first = FALSE
		END IF
	//18-Nov-2014 : Madhu- Display Schedule dates - END
	
	//GailM 05/29/2013 Pandora Issue 605	
	CASE "ord_status"
		uf_showhide_status("ord_status")
		
	CASE "contract_order"
		uf_showhide_status("otm_status")
		
	Case "mobile_status" /*filter to only show header level statuses*/
		
		uf_showhide_status("mobile_status")
		
//		This.GetChild('mobile_status',ldwc)
//		ldwc.SetFilter("mobile_status_ind <> 'N' and mobile_status_ind <> 'Z'")
//		ldwc.Filter()
		
//	Case 'carrier' /*load dropdown if not already loaded*/
//		This.GetChild('Carrier',ldwc)
//		If ldwc.RowCount() < 2 Then
//			ldwc.Retrieve(gs_project)
//		End If
		
	CASE ELSE
		
END CHOOSE

end event

event constructor;call super::constructor;ib_order_from_first 		= TRUE
ib_order_to_first 		= TRUE
ib_complete_from_first 	= TRUE
ib_complete_to_first 	= TRUE

//09/14 - pconkl - hide mobile status if not enabled for project
If not g.ibMobileEnabled THen
	This.Modify("mobile_status.visible=false mobile_status_t.visible=false")
End If

// S62674-  Dhirendra Added load_seq filed on search tab for PANDORA-Start
If gs_project = 'PANDORA'  Then
	This.Modify("load_seq.visible=1")
	This.Modify("t_3.visible=1")
End If
// S63601-  Dhirendra Added load_seq filed on search tab for PANDORA-END
end event

event process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

event itemchanged;call super::itemchanged;BOOLEAN lb_SN_cleaned = FALSE
LONG    ll_Rtn = 0

CHOOSE CASE dwo.name
		
	CASE 'serial_no'
		IF UPPER(gs_project) = 'PANDORA' THEN
					
			// ET3 - 2012-07-05 Pandora 447 - cleanup SN's by removing leading/trailing '.' and '-'
			data = TRIM(data)
			If len(data) > 1 Then
				// strip extraneous Trailing chars
				DO WHILE MATCH( data, "[-\.]$" )
					data = MID(data, 1, len(data) - 1 )
					lb_SN_cleaned = TRUE
				LOOP
				
				// strip extraneous Leading chars
				DO WHILE MATCH( data, "^[-\.]")
					data = MID(data, 2, len(data) - 1 )
					lb_SN_cleaned = TRUE
				LOOP
				
			End If
			
		END IF  // Pandora

	Case 'late_orders'
		//07/28/14 TimA Pandora issue #887 Filter out the Late Orders only
		If  data = '1'  then
			idw_result.SetFilter("change_color_ind = 'LATE'")
			idw_result.Filter()
			idw_result.SetSort("#1 A")  //Column #1 is Do_No
			idw_result.sort( )
		else
			idw_result.SetFilter("")
			idw_result.Filter()
			idw_result.SetSort("#1 A")
			idw_result.sort( )
		end if
	Case 'show_more_detail'

		If isVAlid(w_order_details) Then
			Close (w_order_details)
		End if	
END CHOOSE


IF lb_SN_cleaned THEN
	ll_Rtn = 2
	this.setitem( row, dwo.name, data )
ELSE
	ll_Rtn = 0

END IF

RETURN ll_Rtn

end event

event doubleclicked;call super::doubleclicked;long		ll_row
string		ls_column

ls_column 	= DWO.Name
ll_row 		= dw_search.GetRow()

//CHOOSE CASE ls_column
		
//	CASE "invoice_no"			//Testing only
//		messagebox(is_title,"Enter a list of orders to be searched.")

//END CHOOSE

end event

type tabpage_other from userobject within tab_main
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = " Other Info "
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_lock_load_google cb_lock_load_google
cb_assign_pro cb_assign_pro
dw_other dw_other
end type

on tabpage_other.create
this.cb_lock_load_google=create cb_lock_load_google
this.cb_assign_pro=create cb_assign_pro
this.dw_other=create dw_other
this.Control[]={this.cb_lock_load_google,&
this.cb_assign_pro,&
this.dw_other}
end on

on tabpage_other.destroy
destroy(this.cb_lock_load_google)
destroy(this.cb_assign_pro)
destroy(this.dw_other)
end on

type cb_lock_load_google from commandbutton within tabpage_other
integer x = 3026
integer y = 1884
integer width = 402
integer height = 104
integer taborder = 30
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Lock"
end type

event clicked;// Begin - Dinesh - 03/16/2023- SIMS-53 - Google - SIMS - Load Lock and New Loading Status
long ll_count
If ib_changed Then
	messagebox(is_title,'Please save Packing list first!')
	return
End If

if isLoad_Status = 'LOCK' then 
	isLoad_Status = 'LOCK_ON_SAVE'	
	ib_lock = True
		messagebox(is_title,'Order will be Locked on Save !')
		return
ElseIf isLoad_Status = 'NOLOCK' then 
	isLoad_Status = 'UNLOCK_ON_SAVE'	
	ib_lock = False
		messagebox(is_title,'Order will be Unlocked on Save !')
		return
End If

//g.of_check_label_button(this)

// End - Dinesh - 05/08/2023- SIMS-53 - Google - SIMS - Load Lock and New Loading Status


end event

event constructor;// Begin - Dinesh -SIMS-53 - Google - SIMS - Load Lock and New Loading Status 
if gs_project= 'PANDORA' then
	
	tab_main.tabpage_other.cb_lock_load_google.visible = True
else
	tab_main.tabpage_other.cb_lock_load_google.visible = False
end if
// End - Dinesh -SIMS-53 - Google - SIMS - Load Lock and New Loading Status 

g.of_check_label_button(this)

end event

type cb_assign_pro from commandbutton within tabpage_other
integer x = 2085
integer y = 668
integer width = 498
integer height = 76
integer taborder = 70
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean underline = true
string text = "Assign &Pro Nbr:"
end type

event clicked;//Jxlim 02/20/2014 Generate Carrier Pro Nbr
iw_window.TriggerEvent("ue_generate_carrier_pro") 
	

end event

event constructor;
g.of_check_label_button(this)
end event

type dw_other from u_dw_ancestor within tabpage_other
event ue_nozoom pbm_other
integer x = 9
integer y = 12
integer width = 4114
integer height = 2284
integer taborder = 50
string dataobject = "d_do_master2"
boolean border = false
borderstyle borderstyle = stylebox!
end type

event ue_nozoom;CONSTANT INT WM_MOUSEWHEEL = 522
IF message.number = WM_MOUSEWHEEL THEN
  message.processed = TRUE
  RETURN 1
END IF
end event

event itemchanged;// pvh 09/08/05 - modified to remove references to Gemini Tab

string ls_Code_Descript, ls_carrier, lsWH, ls_awbbolno, ls_invoice_no, lsTRAXAcctNo, lsTRAXPackLocation
long ll_carrier_row
boolean lbAlreadyChanged, lbUF7Valid
lbAlreadyChanged = ib_Changed
ib_changed = True
lbUF7Valid = True
String lsSipVia, lsTransport, lsSchCD

//TimA 02/02/2012 OTM Project
//Look for the columns in the lookup table that if changed we call OTM and update it.
If isOTMEnabled = 'Y' then
	//Only call this is the flag has not already been thrown by another update.
	//After the save the flag is set back to 0
	If ilUpdateOTM = 0 then
		ilUpdateOTM = wf_check_for_OTM_Updates(this.dataobject, dwo.name)
	End if
End if

CHOOSE CASE Upper(dwo.Name)
		
	Case 'CARRIER' /* 03/03 PCONKL - If carrier changes, load any default values */
		
		/* 04/11/07 - if Order is on a shipment, a change in Carrier must be reflected on Shipment
			(and any other orders on said shipment) 
			Change must occur on the Shipment , not the order */
		if g.ibTNTEnabled and icb_shipment.Text = 'Open &Shipment' then
				messagebox(is_title, "Order is already on a shipment so Carrier can not be changed here. It must be changed on the Shipment.", StopSign!)
				ib_changed = lbAlreadyChanged //Don't want to set ib_changed back to false if it was already true (before changing Carrier)
				return 1
		End if

		// LTK 20120508  Pandora #413 (although this line is baseline) Needed to reset the instance variable to access the DW below
		this.GetChild('carrier',idwc_carrier)

		//DGM 07/07/2005 Made this changes so that we can get initialize the change
		//In the 
		ll_carrier_row= idwc_carrier.Getrow( )
		If ll_carrier_row > 0 Then
			This.object.ship_ref[row] = idwc_carrier.Getitemstring(ll_carrier_row,"ship_ref")
			This.object.ship_via[row] = idwc_carrier.Getitemstring(ll_carrier_row,"ship_via")
			This.object.transport_mode[row] = idwc_carrier.Getitemstring(ll_carrier_row,"transport_mode")	
			This.object.transport_mode[row] = idwc_carrier.Getitemstring(ll_carrier_row,"transport_mode")
			//02/25/2021- Dhirendra S53682 Google - SIMS - TMS F10 User Update - Start
		IF Upper(gs_project) = 'PANDORA' THEN
			This.object.user_field1[row] = idwc_carrier.Getitemstring(ll_carrier_row,"user_field1")
		end if 
			//02/25/2021- Dhirendra S53682 Google - SIMS - TMS F10 User Update - End
			iw_window.PostEvent('ue_load_Carrier')
		End If
		
		//TimA 02/13/12 OTM Project
		If isOTMEnabled = 'Y' Then
			If Upper(gs_project) = 'PANDORA'  Then
				
				//If the OTM Status is in HOLD or Planning then we need to send an OTM Delete when the order is saved
				If idw_main.getitemstring(1,'OTM_Status') = 'H' or idw_main.getitemstring(1,'OTM_Status') = 'P' Then
					getdeletedskus()
					isFlagDeleteOTM = 'Y'
					wf_set_otm_message('D') //Turn on the Delete message
	
				End if
				//TimA 08/08/12
				//Bug found when a carrier is blanked it would set the OTM status to null.  Problem is there might be picking rows.
				If idw_pick.RowCount() > 0 then
					If isnull(data) or data = '' then
						messagebox(is_title, "You must choose a carrier if you have picking rows.", StopSign!)
						Return 1
					end if

				end if
				//TimA 10/22/12 Per James anytime the carrier is changed set the order to NON OTM 
				idw_main.setitem(1,'OTM_Status','N')	
				ls_carrier =  data
				
				//lsTransport = Mid(ls_carrier,5,3)	// LTK 20120508  Pandora #413 Now setting DM.transport_mode from the CM.transport_mode 
				
				//NOTE: we need to change this so that we are not using Address_1 field
				select Address_1, user_field1 INTO :lsSipVia, :lsSchCD
				from Carrier_Master WITH (NOLOCK) where Project_ID = 'PANDORA' and Carrier_Code = :ls_carrier and (inactive is null or inactive = 0);
				
				SELECT 	Code_Descript 	INTO :ls_Code_Descript FROM 	Lookup_Table WITH (NOLOCK)   
				Where 	project_id = :gs_project and Code_type = 'SL' and Code_ID = :lsSchCD;
				
				idw_other.object.ship_via[1] = lsSipVia			
				//idw_other.object.transport_mode[1] = lsTransport			// LTK 20120508  Pandora #413 Now setting DM.transport_mode from the CM.transport_mode 
				//TimA 06/22/12 Pandora issue #429  Don't call OTM on manualy created outbound orders what the user chooses a carrier and they have a schedule code.
				If Len(lsSchCD) > 0 or Not IsNull(lsSchCD) then
					ll_SkipOTMFlag = 1
				Else 
					ll_SkipOTMFlag = 0
				End if
				idw_other.object.user_field1[1] = lsSchCD			
				idw_other.object.agent_info[1] = ls_Code_Descript			
				
			End if
		End if

		// LTK 20150423  Pandora #962  Reset Carrier Pro No if Carrier changes
		if Upper(gs_project) = 'PANDORA'  then
			if NOT IsNull( dw_other.Object.carrier_pro_no[1] ) and Len(Trim( dw_other.Object.carrier_pro_no[1] )) > 0 then
				MessageBox(is_title, "Warning:  Carrier has changed so the Carrier Pro No is being reset.", Information!)
				dw_other.Object.carrier_pro_no[1] = ""
			end if
		end if

		// LTK 20150924  Pandora #986  Allow transport_mode to be modified if carrier is vendor paid
		if Upper(gs_project) = 'PANDORA'  then
			if Trim( data ) = 'VNDRPIUSTD' then
				idw_other.Object.transport_mode.Protect = FALSE
				idw_other.Modify("transport_mode.Background.Color = '" +  String(RGB(255, 255, 255)) + "'")
				String ls_null
				SetNull( ls_null )
				idw_other.Object.transport_mode[1] = ls_null
			else
				idw_other.Object.transport_mode.Protect = TRUE
				idw_other.Modify("transport_mode.Background.Color = '" +   idw_main.object.datawindow.color + "'")			
			end if
		end if

		//If Upper(Left(gs_project,4)) = 'GM_M'  Then	/* GAP 05/2002 - load default values by carrier as found in the lookup_table */ 
		If Upper(gs_project) = 'GM_MONTRY'  Then	/*  12/04 - PCONKL - No longer want to do for GM_MI_DAT */ 
			ls_carrier =  data
		
			SELECT 	Code_Descript 	INTO :ls_Code_Descript FROM 	Lookup_Table WITH (NOLOCK)   
			Where 	project_id = :gs_project and Code_type = :ls_carrier and Code_ID = "ShipVia";
			idw_other.object.ship_via[1] = ls_Code_Descript

			SELECT 	Code_Descript 	INTO :ls_Code_Descript FROM 	Lookup_Table WITH (NOLOCK)   
			Where 	project_id = :gs_project and Code_type = :ls_carrier and Code_ID = "SchdCd";	
			idw_other.object.user_field1[1] = ls_Code_Descript

			SELECT 	Code_Descript 	INTO :ls_Code_Descript FROM 	Lookup_Table WITH (NOLOCK)   
			Where 	project_id = :gs_project and Code_type = :ls_carrier and Code_ID = "FreightTerms";		
			idw_other.object.Freight_Terms[1] = ls_Code_Descript

		End If

		//03/07 - PCONKL - For Powerwave, if UTI selected as Carrier, set AWB to '00' + Invoice_No
		If Upper(gs_project) = 'POWERWAVE' and Pos(upper(data),'UTI') > 0 and (this.GetItemString(1,'awb_bol_no') = "" or isnull(this.GetItemString(1,'awb_bol_no'))) Then
			this.SetItem(1,'awb_bol_no','00' + This.GetItemString(1,'invoice_no'))
		End IF
		
		// KRZ If the carrier selected = 'Shuttle' or 'Transfer',
		If lower(data) = "shuttle" or lower(data) = "transfer" then
			
			// Get the awb_bol_no
			ls_awbbolno = idw_bol.Getitemstring(ll_carrier_row,"awb_bol_no")
			
			// If the awb_bol_no is null,
			If isnull(ls_awbbolno) or trim(ls_awbbolno) = "" then
				
				// Get the invoice no.
				ls_invoice_no = This.GetItemString(1,'invoice_no')
				
				// Set the awb_bol_no to the invoice_no.
				this.setitem(1, "awb_bol_no", ls_invoice_no)
			End If
			
		End If

	
	Case 'USER_FIELD1' /* 07/02 - Pconkl - Schedule Code */
		
		//For Saltillo, we will load default values for Carrier and Ship Via
		//If Upper(Left(gs_project,4)) = 'GM_M'  Then
		If Upper(gs_project) = 'GM_MONTRY'  Then	/*  12/04 - PCONKL - No longer want to do for GM_MI_DAT */ 
			tab_main.Tabpage_carrier.Enabled = True /*GAP 6/18 enable so we can export labels*/
			Choose Case Upper(data)
				Case 'V'
					This.SetItem(row,'carrier','FEDEX')
					This.SetItem(row,'ship_via','AIR / 2ND DAY')
					This.SetItem(row,'freight_terms','PREPAID')
				Case 'V/OVN FEDEX'
					This.SetItem(row,'carrier','FEDEX')
					This.SetItem(row,'ship_via','AIR / OVERNIGHT')
					This.SetItem(row,'freight_terms','PAID')
				Case 'V/TRK'
					This.SetItem(row,'carrier','FEDEX')
					This.SetItem(row,'ship_via','AIR / 2ND DAY')
					This.SetItem(row,'freight_terms','PREPAID')					
				Case 'V/AFR'
					This.SetItem(row,'carrier','FEDEX')
					This.SetItem(row,'ship_via','AIR / 2ND DAY')
					This.SetItem(row,'freight_terms','PREPAID')	
				Case 'E/TRK', 'N', 'B', 'L', 'Q', 'F'
					This.SetItem(row,'carrier','FEDEX')
					This.SetItem(row,'ship_via','LAND / FEDEX GROUND')
					This.SetItem(row,'freight_terms','PREPAID')	
				Case 'EWW'
					This.SetItem(row,'carrier','EWW')
					This.SetItem(row,'ship_via','AIR / NEXT DAY')
					This.SetItem(row,'freight_terms','PAID')		
				Case 'RDWY'
					This.SetItem(row,'carrier','RDWY')
					This.SetItem(row,'ship_via','LAND / LTL')
					This.SetItem(row,'freight_terms','PREPAID')	
				Case 'CONWY'
					This.SetItem(row,'carrier','CON-WAY')
					This.SetItem(row,'ship_via','LAND / LTL')
					This.SetItem(row,'freight_terms','PREPAID')	
				Case 'AAACOOP'
					This.SetItem(row,'carrier','AAACOOP')
					This.SetItem(row,'ship_via','LAND / LTL')
					This.SetItem(row,'freight_terms','PREPAID')	
				Case 'TUM'
					This.SetItem(row,'carrier','TUM')
					This.SetItem(row,'ship_via','LAND / LTL')
					This.SetItem(row,'freight_terms','PREPAID')	
				Case 'V/OVN BAX'
					This.SetItem(row,'carrier','BAX')
					This.SetItem(row,'ship_via','AIR / OVERNIGHT')
					This.SetItem(row,'freight_terms','PAID')
			End Choose
		End If /*Saltillo */
	
	
		
	Case 'SCANNER_ID'  //GAP 12/02 Check scanner status   
		If left(This.GetItemString(1, "scanner_status"),5) = "INUSE" or This.GetItemString(1, "scanner_status") = "CANCELED" or IsNull(This.GetItemString(1, "scanner_status")) Then
		integer li_scan
		string ls_msg
			IF IsNull(This.GetItemString(1, "scanner_status"))  then 
				ls_msg = "Scanner status is: NOT READY, Re-assigning the Scanner ID will reset the Status to READY!"
			else
				ls_msg = "Scanner status is: " + This.GetItemString(1, "scanner_status") + ", Re-assigning the Scanner ID will reset the Status to READY!"
			end if
			li_scan = MessageBox("Scanner ID Status",ls_msg, &
			Exclamation!, OKCancel!, 2)
		
			IF li_scan = 1 THEN
				This.SetItem(1, "scanner_status", "READY")
			ELSE
 				This.SetItem(1, "scanner_id", This.GetItemString(1, "scanner_id" ))
			END IF
		End IF		

	case "AWB_BOL_NO"
		/* 04/11/07 - if Order is on a shipment, a change in AWB must be reflected on Shipment
			(and any other orders on said shipment) 
			Change must occur on the Shipment , not the order */

			//TimA 03/06/12 OTM Project
			//This is on the OTM Project don't validate the AWB for Pandora
			If Upper(gs_project) <> 'PANDORA'  Then	
				if g.ibTNTEnabled and icb_shipment.Text = 'Open &Shipment' then
						messagebox(is_title, "Order is already on a shipment so AWB can not be changed here. It must be changed on the Shipment.", StopSign!)
						ib_changed = lbAlreadyChanged //Don't want to set ib_changed back to false if it was already true (before changing AWB)
						return 1
				end if
			End if

	//Case 'USER_FIELD2_PANDORA' /* 02/09 - Pandora's Sub-Inventory Location */
	Case 'USER_FIELD2' 	// LTK 20101209	SIM-24
								// Modified this string to 'USER_FIELD2' so that the following validation occurs.
		if gs_project = 'PANDORA' then
			//messagebox("TEMPO", "data: " + data + ", wh: " + idw_main.GetItemString(1, "wh_code"))
			select user_field2 into :lsWH
			from customer
			where project_id = 'pandora'
//TAM - 3/18 - S13945 -  For Pandora, Don't allow "INACTIVE" Ship from_location(UF2) 
//			and cust_code = :data;
			and cust_code = :data and customer_type <> 'IN'; 

			if upper(lsWH) <> upper(idw_main.GetItemString(1, "wh_code")) then
				messagebox(is_title, "FROM Location must be an active Warehouse Sub-Inventory Location for " + idw_main.GetItemString(1, "wh_code"))
				return 1		// LTK 20101209	SIM-24	Added this return
			end if
		end if

	Case 'TRAX_ACCT_NO'

		//MEA - 9/12

		If Upper(gs_project) = 'KLONELAB' Then
		
		
		//In ItemChanged event, do a lookup against Lookup_table based on Project_id, Code_Type = “traxPackLocation” and Code_Id = new value from trax_acct_no. If a value exists in Code_Descript, copy it to “trax_pack_location”.  We will also want to display a message that a default pack location has been found and clear out the account number that they just entered (we don’t want to just clear it out without telling them why)
		//o entry is found and we are setting trax_acct_no, we also want to set freight_terms to “THIRDPARTY”
		//
		//traxPackLocation location needs to be added to d_do_master and all the datawindows that are shared with it but it does NOT need to be visible.
	
	
	
			lsTRAXAcctNo = data
		
			SELECT Code_Descript INTO :lsTRAXPackLocation FROM Lookup_Table With (NoLock)
				WHERE Project_ID = :gs_project AND
						Code_Type = 'traxPackLocation' AND
						Code_Id = :lsTRAXAcctNo 
				USING SQLCA;
			
			
			IF SQLCA.SQLCode >= 0 THEN
							
				IF SQLCA.SQLCode = 100 THEN
				
					//Not Found
					//If no entry is found and we are setting trax_acct_no, we also want to set freight_terms to “THIRDPARTY”
					
					this.SetItem( row, "freight_terms", 'THIRDPARTY')
					
				Else
					
					//Found
					
					If Not IsNull(lsTRAXPackLocation) and Trim(lsTRAXPackLocation) <> '' then
						 this.SetItem(row, "trax_pack_location",lsTRAXPackLocation)
					End IF		
					
					
				End If
			
			Else
				
				//Error
				MessageBox ("DB Error", SQLCA.SQLErrText )
				
			End IF

		End If
		
	// ET3 2013-01-17 Embargoed country checks
	Case 'EMBARGOED_OVERRIDE_USER', 'EMBARGOED_OVERRIDE_LICENSE', 'EMBARGOED_OVERRIDE_DATE', 'EMBARGOED_OVERRIDE_T'
		// call function to authenticate and record the override user and license
		MessageBox('STOP', 'Authenticate user called')
		wf_set_embargo_override_authorization()
	
	//08-Jan-2019 :Madhu S27852 Added validation for UF7
	Case 'USER_FIELD7'
		
		If upper(gs_project) ='CREE' Then
			If not isnumber(data) Then 
				lbUF7Valid = FALSE
			ElseIf (long(data) < 0 or long(data) > 99) Then
				lbUF7Valid = FALSE
			End If	
			If not lbUF7Valid Then
				MessageBox(is_title, "User Field7 (Skid Count) must be a number between 1 and 99!", StopSign!)
				This.SetItem(1,"user_field7","")
				return 1
			End If
		End If
		
END CHOOSE		

end event

event itemerror;Return 2
end event

event process_enter;Send(Handle(This),256,9,Long(0,0))
Return 1
end event

event constructor;call super::constructor;DatawindowChild	ldwc

// 02/02 PCONKL - Transport Mode and carrier dropdowns - we'll only populate if  clicked on
This.GetChild('transport_mode',ldwc)
ldwc.SetTransObject(SQLCA)
ldwc.InsertRow(0)

This.GetChild('carrier',idwc_carrier)
idwc_carrier.SetTransObject(SQLCA)
idwc_carrier.InsertRow(0)

/* 07/02 - Pconkl - Schedule Code */
This.GetChild('user_field1',ldwc)
ldwc.SetTransObject(SQLCA)
ldwc.InsertRow(0)

// 12/03 - CCC fields should only be visible for CCC Enabled Projects
If Not g.ibCCCEnabled Then
	This.Modify("trader_id.Visible=0 trader_id_t.Visible=0 contract_owner_ID.visible=0 contract_owner_id_t.visible=0 factory_id.visible=0 factory_id_t.visible=0")
End If

// 09/04 - PCONKL - Carrier Notified date is being set when users hit 'Ready to Ship' button for 3COM. We don't want it to be editable
// TAM 04/2006 Added K&N to Ready to ship
if Upper(gs_project) = '3COM_NASH' or Upper(gs_project) = 'K&N' Then
//if Upper(gs_project) = '3COM_NASH' Then
	This.Modify("carrier_notified_date.protect=1")
End If

//Jxlim 08/15/2013 Ariens Lock Down Fields; User_field22 is use for Ariens to set indicator to 'Y' when serial_no scan is validating from pick tab serialvalidation button.
If UPPER(gs_project) = 'ARIENS'   then
	This.Modify("user_field22.protect=1")
End if

// LTK 20140228 Commercial invoice printing project additions
if Upper(gs_project) = 'PHYSIO-MAA' or Upper(gs_project) = 'PHYSIO-XD' then
	String ls_dw_color
	ls_dw_color = this.object.datawindow.color
	this.Modify("user_field20.Background.Color = '" +  ls_dw_color + "'")
	this.Modify("user_field20.protect=1")
end if

// Begin - Dinesh -12/10/2021 - S64720- Google - SIMS - Buy Sell Project
If gs_project <> 'PANDORA'  Then
	This.Modify("client_cust_so_nbr.visible=0")
	This.Modify("t_8.visible=0")
	This.Modify("shipment_id.visible=0")
	This.Modify("t_7.visible=0")
End If
// End - Dinesh -12/10/2021 - S64720- Google - SIMS - Buy Sell Project
 
end event

event clicked;call super::clicked;DatawindowChild	ldwc
string ls_shipment_id

// 02/02 PCONKL - Retrieve dropdowns when clicked on

Choose Case Upper(dwo.Name)
		
	// Begin - 02092022- Dinesh - S66897- Google - SIMS - CBOL Changes
		
	Case  'SHIPMENT_ID' 
	
	idw_other.Object.shipment_id.Protect = True

 	// End 02082022- Dinesh - S66897- Google - SIMS - CBOL Changes
		
	Case 'TRANSPORT_MODE' 
		This.GetChild('Transport_mode',ldwc)
		ldwc.Retrieve(gs_project)
		If ldwc.RowCount() <=0 Then ldwc.InsertRow(0)
		
	Case 'USER_FIELD1'  /*Schedule Code */
		This.GetChild('user_field1',ldwc)
		ldwc.Retrieve(gs_project)
		If ldwc.RowCount() <=0 Then ldwc.InsertRow(0)
//	Case 'CARRIER' /* should be shared with global DS loaded in project open*/
//		This.GetChild('Carrier',ldwc)
//		If ldwc.RowCount() < 2 Then
//			ldwc.Retrieve(gs_project)
//		End If

	Case 'EMBARGOED_OVERRIDE_USER', 'EMBARGOED_OVERRIDE_LICENSE', 'EMBARGOED_OVERRIDE_DATE', 'EMBARGOED_OVERRIDE_T'
		// call function to authenticate and record the override user and license
		//MessageBox('STOP', 'Authenticate user called')
		wf_set_embargo_override_authorization()
		
End Choose
end event

event getfocus;call super::getfocus;//GAP 1-03 Enable Scanner ID and Status boxes in Datawindow
//If  g.is_scanner_ind = "Y" Then
//	idw_other.object.scanner1_t.visible = 1	
//	idw_other.object.scanner2_t.visible = 1	
//	idw_other.object.scanner_id.visible = 1	
//	idw_other.object.scanner_status.visible = 1
//	IF not IsNull(gs_role) and gs_role <> " " THEN							
//		if integer(gs_role) <= 1 then idw_other.object.scanner_status.protect = 0
//	end if
//	
//End If
end event

event rbuttondown;call super::rbuttondown;
//
//if dwo.name= 'shipment_id' then
//		
//is_shipment_id= this.getitemstring(row,'shipment_id')
//this.Clipboard(is_shipment_id) // Dinesh - 02082022
//
//end if
end event

event doubleclicked;call super::doubleclicked; // Begin - 02092022- Dinesh - S66897- Google - SIMS - CBOL Changes
string ls_shipment_id,ls_color
Choose Case Upper(dwo.Name)
		
	Case  'SHIPMENT_ID' 
	//idw_other.Object.shipment_id.Protect = False
	ls_shipment_id= this.getitemstring(row,'shipment_id')
	this.Object.shipment_id.Protect = FALSE
	this.Object.shipment_id.Edit.DisplayOnly = False
	ls_color =String(67108864 ) //ButtonFace
	this.Modify("shipment_id.Background.Color = '" +  ls_color + "'")
	::Clipboard(ls_shipment_id)
	//idw_other.Object.shipment_id.Protect = True

END Choose

 // End 02082022- Dinesh - S66897- Google - SIMS - CBOL Changes
end event

type tabpage_detail from userobject within tab_main
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = " Order Detail"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_import_ib cb_import_ib
cb_show_so cb_show_so
otm_message_t otm_message_t
cb_show_dn cb_show_dn
st_verify_sku_upc st_verify_sku_upc
sle_verify sle_verify
cb_do_det_insert cb_do_det_insert
cb_do_det_delete cb_do_det_delete
dw_detail dw_detail
end type

on tabpage_detail.create
this.cb_import_ib=create cb_import_ib
this.cb_show_so=create cb_show_so
this.otm_message_t=create otm_message_t
this.cb_show_dn=create cb_show_dn
this.st_verify_sku_upc=create st_verify_sku_upc
this.sle_verify=create sle_verify
this.cb_do_det_insert=create cb_do_det_insert
this.cb_do_det_delete=create cb_do_det_delete
this.dw_detail=create dw_detail
this.Control[]={this.cb_import_ib,&
this.cb_show_so,&
this.otm_message_t,&
this.cb_show_dn,&
this.st_verify_sku_upc,&
this.sle_verify,&
this.cb_do_det_insert,&
this.cb_do_det_delete,&
this.dw_detail}
end on

on tabpage_detail.destroy
destroy(this.cb_import_ib)
destroy(this.cb_show_so)
destroy(this.otm_message_t)
destroy(this.cb_show_dn)
destroy(this.st_verify_sku_upc)
destroy(this.sle_verify)
destroy(this.cb_do_det_insert)
destroy(this.cb_do_det_delete)
destroy(this.dw_detail)
end on

type cb_import_ib from commandbutton within tabpage_detail
integer x = 850
integer y = 16
integer width = 434
integer height = 92
integer taborder = 50
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Import From IB"
end type

event clicked;
Open(w_import_from_ib)
end event

type cb_show_so from commandbutton within tabpage_detail
boolean visible = false
integer x = 1179
integer y = 16
integer width = 343
integer height = 92
integer taborder = 80
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Show SO..."
end type

event clicked;

Open(w_nike_Show_so)
end event

type otm_message_t from statictext within tabpage_detail
boolean visible = false
integer x = 1509
integer y = 28
integer width = 1938
integer height = 64
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 16711680
long backcolor = 67108864
string text = "This order has not been sent to OTM"
boolean focusrectangle = false
end type

type cb_show_dn from commandbutton within tabpage_detail
boolean visible = false
integer x = 832
integer y = 16
integer width = 343
integer height = 92
integer taborder = 50
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Show DN..."
end type

event clicked;
Open(w_nike_Show_dn)
end event

type st_verify_sku_upc from statictext within tabpage_detail
integer x = 3209
integer y = 76
integer width = 457
integer height = 48
integer textsize = -7
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Verify SKU or UPC"
alignment alignment = center!
boolean focusrectangle = false
end type

event constructor;
g.of_check_label_button(this)
end event

type sle_verify from singlelineedit within tabpage_detail
integer x = 3141
integer y = 12
integer width = 553
integer height = 76
integer taborder = 50
integer textsize = -7
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 16777215
textcase textcase = upper!
borderstyle borderstyle = stylelowered!
end type

event getfocus;This.SelectText(1,len(This.Text))
end event

event modified;
String	lsText, lsFind
Long	i, ll_Sku_Scan_Count, ll_Find
String ls_sku, ls_supp_code, ls_alternate_sku, ls_dono, ls_sku_scan_count, lsSerialValFlag
Long ll_lineitemno, ll_owner_id

lsText = This.Text

If lsText = "" Then Return

lsFind = "Upper(Sku) = '" + Upper(lsText) + "'" 

If isNumber(lsText) Then
	lsFind += " or part_upc_Code = " + Trim(lsText) 
End If

If idw_Detail.Find(lsFind,1,idw_Detail.RowCount()) > 0 Then
	
	This.backcolor = rgb(0,255,0)
	Timer(3)
	
	// 2019/08 - MikeA - S36602 - I2406 - Riverbed - SKU scanning validation
	// 2019/11/11 - MikeA DE13515 Added Flag around SKU scanning validation
			
	IF UPPER(gs_project) = 'RIVERBED' THEN
	
		lsSerialValFlag = f_retrieve_parm("RIVERBED","SERIAL_VAL","SERIAL_OUT_VAL","CODE_DESCRIPT")
	
		//Check if enabled
		IF Upper(lsSerialValFlag) = 'Y' THEN 	
			ll_Find =   idw_Detail.Find(lsFind + " and Serialized_Ind = 'O'  and (IsNull(user_field5)   OR (long(user_field5) < alloc_qty)) " ,1,idw_Detail.RowCount())
			IF ll_Find > 0 THEN
				ll_Sku_Scan_Count = Long(idw_Detail.GetItemString(ll_Find, "user_field5"))
				If IsNull(ll_Sku_Scan_Count) then ll_Sku_Scan_Count = 0
				ll_Sku_Scan_Count = ll_Sku_Scan_Count + 1
				
				idw_Detail.SetItem(ll_Find, "user_field5",string(ll_Sku_Scan_Count))
				
				ls_dono = idw_Detail.GetItemString(ll_Find,"do_no")
				ls_sku = idw_Detail.Getitemstring(ll_Find,"sku")
				ls_Supp_code = idw_Detail.Getitemstring(ll_Find,"supp_code")
				ll_owner_id= idw_Detail.GetitemNumber(ll_Find,"owner_id")
				ls_alternate_sku= idw_Detail.Getitemstring(ll_Find,"alternate_sku")
				ll_LineItemNo = idw_detail.GetItemnumber(ll_Find, "line_Item_No")
				
				ls_Sku_Scan_Count = string(ll_Sku_Scan_Count)
				
				Execute Immediate "BEGIN TRANSACTION" using SQLCA;
					UPDATE Delivery_Detail SET user_field5 = :ls_Sku_Scan_Count
					WHERE Do_No =:ls_dono and SKU = :ls_sku and supp_code = :ls_Supp_code and owner_id = :ll_owner_id and alternate_sku = :ls_alternate_sku and line_item_no = :ll_LineItemNo ;
				Execute Immediate "COMMIT" using SQLCA; 
				
				wf_riverbed_enable_serial_tabpage()
			
			ELSE
				//Check for overscan.
				
				ll_Find =   idw_Detail.Find(lsFind + " and Serialized_Ind = 'O'  " ,1,idw_Detail.RowCount())
	
				ls_sku = idw_Detail.Getitemstring(ll_Find,"sku")
	
				//Added Over scanning error
				MessageBox ("Over scan", ls_sku + " has been scanned more than allocated in this order.")
			
			END IF
		END IF
	
	END IF
Else
	
	Messagebox(is_title,'SKU/UPC Code not found on this order',Stopsign!)
	
End If

This.SetFocus()
This.SelectText(1,len(This.Text))
end event

type cb_do_det_insert from commandbutton within tabpage_detail
integer x = 27
integer y = 16
integer width = 402
integer height = 92
integer taborder = 50
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Insert Row"
end type

event clicked;Long ll_row,  ll_trial_line_Item_no, ll_found_row
String lsFromLoc


//DGM 091300
IF idwc_supplier.Rowcount() = 0 THEN idwc_supplier.InsertRow(0)
//
idw_detail.SetFocus()

If idw_detail.AcceptText() = -1 Then Return

if gs_project = 'PANDORA' then
	
	If idw_other.AcceptText() = -1 Then Return
	
	// KRZ Lock the currency in at USD.
	idw_detail.SetItem(ll_row,"currency_code", "USD")
	idw_detail.SetTabOrder("currency_code",0)
	
	lsFromLoc = idw_main.GetItemString(1, "User_Field2")
	if isnull(lsFromLoc) or lsFromLoc = '' then
		
		messagebox(is_title, "Must select 'FROM' Location before insterting Detail Lines.")

		tab_main.SelectTab(2) 
		idw_other.SetColumn("User_Field2")
		idw_other.SetFocus()
		
		return -1

	end if
	
end if



ll_row = idw_detail.GetRow()

//5/3/00 PCONKL - do_no must match the do_no on master which isn't assigned until record is saved.
//                do_no for details will be assigned in ue_save after master has been saved

If ll_row > 0 Then
	idw_detail.setcolumn('sku')
	ll_row = idw_detail.InsertRow(ll_row + 1)
	idw_detail.ScrollToRow(ll_row)	
		
Else
	
	ll_row = idw_detail.InsertRow(0)
		
End If	

//TimA 09/17/12 Pandora issue #471.  This is a baseline change.  We need to update the project_id field on new inserts.
idw_detail.SetItem(ll_row,"project_id", gs_project)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////                                              THIS USES ll_row Found above                         ///////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 05/24/2010 ujh:  Don't allow duplicate line_item_no for Pandora ( 2 of 2 : see dw_detail. itemchanged)
if gs_Project = 'PANDORA' then
	ll_trial_line_item_no = 1  // Set trial number to look for any number not used.
	// If it exists, find a row that duplicates the trial line item number
	ll_found_row = idw_detail.Find("line_item_no = " + String(ll_trial_line_item_no), 1,idw_detail.RowCount())  
	Do while ll_found_row > 0  // Keep incrementing trial item number until no duplicate is found
		ll_trial_line_item_no++
		ll_found_row = idw_detail.Find("line_item_no = " + String(ll_trial_line_item_no), 1,idw_detail.RowCount())
	Loop
	// At this point, the only possiblity is 0 (NO Duplicate Found)  or an Error in the "find"
	if ll_found_row = 0 then
		idw_detail.SetItem(ll_row,'line_item_no', ll_trial_line_item_no)
	else
		messagebox(is_title, "System Error,  Cannot proceed")  // This should only happen in test
	end if

else
	// 09/01 - PConkl - default line item number to row number
	idw_detail.SetItem(ll_row,'line_item_no',ll_row)
end if
/////End 05/24/2010 ujh:///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 09/09 - PCONKL - For manually created orders we might have retreived a default 'To Project' (Cust.UF10)
If upper(gs_project) = 'PANDORA' and isPandoraToProject > '' Then
	idw_detail.SetItem(ll_row,'User_Field5',isPandoraToProject)
End If

// TAM W&S 2011/01 -  Wine and Spirit is defaulting Lot No to DP for Non Bonded Warehouse
If left(gs_project,3) = 'WS-'  and is_bonded = 'N' Then
	idw_detail.SetItem(ll_row,'pick_lot_no', 'DP')
End If

//TimA 02/02/2012 OTM Project
//Throw the OTM update flag it inserting new rows after OTM has already been called.
If isOTMEnabled = 'Y' then
	If idw_main.GetItemString(1,"otm_status") = 'P' then //OTM is in processng
		//After the save the flag is set back to 0
		If ilUpdateOTM = 0 then
			ilUpdateOTM = 1
		End if
	End if
End if

end event

event constructor;
g.of_check_label_button(this)
end event

type cb_do_det_delete from commandbutton within tabpage_detail
integer x = 434
integer y = 16
integer width = 402
integer height = 92
integer taborder = 60
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Delete Row"
end type

event clicked;String ls_sku
Long ll_row, ll_crow

ll_crow = idw_detail.GetRow()

If ll_crow > 0 Then
	ib_changed = True
	ls_sku = idw_detail.GetItemString(ll_crow,"sku")
	
	// Delete corresponding items in the picking list
	ll_row = 1
	Do While ll_row > 0
		ll_row = idw_pick.Find("sku = '" + ls_sku + "'", 1, idw_pick.RowCount())
		//TimA 05/31/12 Bug fix Pandora issue #412
		//NOTE: This is a baseline change
		//We are now having the user delete picking rows first before they can delete the detail.
		
		//If ll_row > 0 Then idw_pick.DeleteRow(ll_row) //<- removed this.  We don't automaticly delete picking
		If ll_row > 0 Then 
			Messagebox("Pick row exist",  'There are still Picking rows for sku ' + ls_sku + '.  Please delete Picking rows first.')
			Return
		end if
	Loop

	// Delete corresponding items in the packing list
	ll_row = 1
	Do While ll_row > 0
		ll_row = idw_pack.Find("sku = '" + ls_sku + "'", 1, idw_pack.RowCount())
		If ll_row > 0 Then idw_pack.DeleteRow(ll_row)
	Loop

	idw_detail.DeleteRow(0)
End If
//TimA 02/02/2012 OTM Project
//Throw the OTM update flag it inserting new rows after OTM has already been called.
If isOTMEnabled = 'Y' then
	If idw_main.GetItemString(1,"otm_status") = 'P' then //OTM is in processng
		//After the save the flag is set back to 0
		If ilUpdateOTM = 0 then
			ilUpdateOTM = 1
		End if
	End if
End if

end event

event constructor;
g.of_check_label_button(this)
end event

type dw_detail from u_dw_ancestor within tabpage_detail
event ue_set_column ( )
event ue_hide_unused ( )
integer y = 116
integer width = 3483
integer height = 1644
integer taborder = 20
string dataobject = "d_do_detail"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
end type

event ue_set_column;
This.SetColumn(isColumn)
end event

event ue_hide_unused();// 10/09 - PCONKL - Show lottables to pick if indicators set and a manually created order

This.SetRedraw(False)

//Lot
If This.Find("lot_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 and (idw_main.GetItemNumber(1,'edi_batch_seq_no') = 0 or isnull(idw_main.GetItemNumber(1,'edi_batch_seq_no'))) Then
	This.Modify("pick_lot_no.width=550 lot_no_t.width=550")
Else /*Hide*/
	// This.Modify("pick_lot_no.width=0 lot_no_t.width=0")
// TAM W&S 2011/02  Allow pick lot no to be visible on electronic orders	
	If Left(gs_Project,3) = 'WS-' Then
		This.Modify("pick_lot_no.width=550 lot_no_t.width=550")
	Else
		This.Modify("pick_lot_no.visible=0 lot_no_t.visible=0")
	End If
End If

//PO NO
If This.Find("po_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 and (idw_main.GetItemNumber(1,'edi_batch_seq_no') = 0 or isnull(idw_main.GetItemNumber(1,'edi_batch_seq_no'))) Then
	This.Modify("pick_po_no.width=550 po_no_t.width=550")
Else /*Hide*/
	// This.Modify("pick_po_no.width=0 po_no_t.width=0")
	This.Modify("pick_po_no.visible=0 po_no_t.visible=0")
End If

//PO NO 2
If This.Find("po_no2_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 and (idw_main.GetItemNumber(1,'edi_batch_seq_no') = 0 or isnull(idw_main.GetItemNumber(1,'edi_batch_seq_no'))) Then
	This.Modify("pick_po_no2.width=550 po_no2_t.width=550")
Else /*Hide*/
	// This.Modify("pick_po_no2.width=0 po_no2_t.width=0")
	This.Modify("pick_po_no2.visible=0 po_no2_t.visible=0")
End If

This.SetRedraw(True)
end event

event constructor;call super::constructor;//DGM Make owner name invisible based in indicator
IF Upper(g.is_owner_ind) <> 'Y' THEN
	this.object.cf_owner_name.visible = 0
	this.object.cf_name_t.visible = 0
End IF

// 12/03 - CCC fields should only be visible for CCC Enabled Projects
If Not g.ibCCCEnabled Then
	This.Modify("contract_no.Visible=0 contract_no_t.Visible=0 commodity_Code.visible=0 commodity_Code_t.visible=0")
End If

//01/10 - PCONKL - Accepted Qty only visible for Warner right now.
If gs_project <> 'WARNER' Then
	This.Modify("accepted_qty.width=0 accepted_qty_t.width=0")
End If

//01/10 - PCONKL -Description only visible for Pandora right now.
If gs_project <> 'PANDORA' Then
	This.Modify("description.width=0 description_t.width=0")
End If
// Begin Dinesh - 05122022- S71358- Google - SIMS - RMA/Harvest Pick Exceptions
If gs_project = 'PANDORA' Then
	This.Modify("user_field7.protect=1")
End If
// End Dinesh - 05122022- S71358- Google - SIMS - RMA/Harvest Pick Exceptions
// TAM W&S 2011/01 -  Make User field2 a DDDW for UOM

if Left(gs_project,3) = "WS-" then

//Pick Lot No DDDW
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.name='dddw_lot_no'
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.displaycolumn='lot_no'
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.datacolumn='lot_no'
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.useasborder='yes'
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.allowedit='no'
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.vscrollbar='yes'
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.width="200"
	 tab_main.tabpage_detail.dw_detail.object.pick_lot_no.dddw.percentwidth="200"         
	 tab_main.tabpage_detail.dw_detail.GetChild("pick_lot_no", idwc_lot_no)
	 idwc_lot_no.SetTransObject(SQLCA)
	 
// User Field 2 DDDW over Item Master UOM
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.name='dddw_item_uom'
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.displaycolumn='uom'
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.datacolumn='uom'
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.useasborder='yes'
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.allowedit='no'
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.vscrollbar='yes'
	 tab_main.tabpage_detail.dw_detail.object.user_field2.width="200"
	 tab_main.tabpage_detail.dw_detail.object.user_field2.dddw.percentwidth="200"         
	 tab_main.tabpage_detail.dw_detail.GetChild("user_field2", idwc_detail_uf2)
	 idwc_detail_uf2.SetTransObject(SQLCA)

End If

end event

event doubleclicked;call super::doubleclicked;str_parms	lstrparms,lStrparms_1
String	lsFind, ls_wh_code
Long	llFindRow,	&
		llOwnerHold,	&
		llRowPos,	&
		llRowCOunt

If Row > 0 Then

	Choose Case dwo.Name
		
		Case "cf_owner_name"
						
			If Upper(idw_main.object.ord_status[1])	= 'C' or &
				Upper(idw_main.object.ord_status[1])	= 'D' or Upper(idw_main.object.ord_status[1])	= 'V' Then Return
				
			// ET3 2013-01-04 Pandora 555 Disable access to changing Owner - F10 override
			IF NOT bChange_cf_owner_name_Allowed THEN Return
				
			ls_wh_code = idw_main.GetItemString(1, "wh_code")	
				
			OpenWithParm(w_select_owner, ls_wh_code)
			lstrparms = Message.PowerObjectParm
			If Not lstrparms.Cancelled and UpperBound(lstrparms.Long_arg) > 0 Then
				
				//07/02 - Pconkl - If checked, update all detail rows, otherwise just current
				If lstrparms.String_Arg[4] = 'Y' Then /*update all*/
				
					llRowCOunt = This.RowCOunt()
					For llRowPos = 1 to llRowCount
						This.SetItem(llRowpos,"owner_id",Lstrparms.Long_arg[1])
						This.SetITem(llrowpos,"cf_owner_name",Lstrparms.String_arg[1])
					Next
					
					//Update all Putaway as well
					llRowCOunt = idw_pick.RowCount()
					For llRowPos = 1 to llRowCOunt
						idw_pick.SetItem(llRowPos,"owner_id",Lstrparms.Long_arg[1])
						idw_pick.SetITem(llRowPos,"cf_owner_name",Lstrparms.String_arg[1])
					Next
					
				Else /* update current*/
					
					llOwnerHold = This.GetITemNumber(row,'owner_id')
					This.SetItem(Row,"owner_id",Lstrparms.Long_arg[1])
					This.SetITem(row,"cf_owner_name",Lstrparms.String_arg[1])
					
					//Owner Change needs to be reflected on current Putaway record as well
					lsFind = "sku = '" + This.GetItemString(row,"sku") + "' and owner_id = " + String(llOwnerHold) 
					llFindRow = idw_pick.Find(lsFind,1,idw_pick.RowCount())
					Do While llFindRow > 0
						idw_pick.SetItem(llFindRow,"owner_id",Lstrparms.Long_arg[1])
						idw_pick.SetITem(llFindrow,"cf_owner_name",Lstrparms.String_arg[1])
						llFindRow = idw_pick.Find(lsFind,(llFindRow + 1),(idw_pick.RowCount() + 1))
					Loop
				
				End If
				
				ib_changed = True
				
				
								
			End If /*owner selection not cancelled*/
			
	//SARUN2016Feb10 : On Double Click Calling Item Master : Start
	
Case "sku"

// TAM 05/2018 - S19728 - Google -  SIMS to provide access on doubleclick GPN from order detail for all users with view(Same as Item Maintenance Menu)
//	If f_check_access ("w_maintenance_itemmaster","") = 1 Then
	If f_check_access ("M_ITEM","") = 1 Then
		lStrparms_1.String_arg[1] = "ITEMMASTER"
		lStrparms_1.String_arg[2] =  this.GetItemString(row, 'sku')
		lStrparms_1.String_arg[3] =  this.GetItemString(row, 'supp_code')
		if isvalid(w_maintenance_itemmaster) then
			MessageBox(is_title,"Item Master is Already Open, First Close the existing window and then DoubleClick")
		else	
			OpenSheetwithparm(w_maintenance_itemmaster,lStrparms_1, w_main, gi_menu_pos, Original!)
		end if
	End If
	//SARUN2016Feb10 : On Double Click Calling Item Master : End			
			
	End Choose /*Clicked column*/
	
END IF /*Valid Row*/


end event

event itemchanged;Str_Parms	lStrparms
string ls_supp_code,ls_alternate_sku,ls_coo,ls_sku,ls_uom
Long ll_row,ll_owner_id,llCount
String	lsDDSQL
DatawindowChild	ldwc
string ls_customer_code
datastore ds_check_sku
integer li_rowcount
string ls_null
integer li_idx
String lsUF2
long llOwner
long ll_RowNum  // 05/24/2010 ujh Making line_item_number unique for Pandora
// TAM W&S 2010/12
String lsUOM1, lsUom2, lsUF4, lsUF5, lsUF6, lsUF7,ls_description //23-Jan-2015 :Madhu- Added "ls_description"
Decimal ldqty1, ldqty2

ib_changed = True

//TimA 02/02/2012 OTM Project
//Look for the columns in the lookup table that if changed we call OTM and update it.
If isOTMEnabled = 'Y' then
	//Only call this is the flag has not already been thrown by another update.
	//After the save the flag is set back to 0
	If ilUpdateOTM = 0 then
		ilUpdateOTM = wf_check_for_OTM_Updates(this.dataobject, dwo.name)
	End if
End if


Choose Case dwo.name
	
	case 'sku'
		//Check if item_master has the records for entered sku	
		llCount = i_nwarehouse.of_item_sku(gs_project,data)
		Choose Case llCount
			Case 1 /*only 1 supplier, Load*/
				This.SetItem(row,"supp_code",i_nwarehouse.ids_sku.GetItemString(1,"supp_code"))
				ls_sku = data
				ls_supp_code = i_nwarehouse.ids_sku.GetItemString(1,"supp_code")
				goto pick_data
			Case is > 1 /*Supplier dropdown populated for current sku when focus received*/
				This.object.supp_code[row]=""
				This.SetItem(row,"supp_code",i_nwarehouse.ids_sku.GetItemString(1,"supp_code"))
				ls_sku = data
				ls_supp_code = i_nwarehouse.ids_sku.GetItemString(1,"supp_code")
			Case Else			
				MessageBox(is_title, "Invalid SKU, please re-enter!",StopSign!)
				tab_main.selecttab(3)
				return 1
		END Choose
		
	Case 'supp_code'
		
		 ls_sku = this.Getitemstring(row,"sku")
		 ls_supp_code = data
	 	goto pick_data
		 
	Case 'alternate_sku' /*populate sku from Alternate*/
		
		If isnull(data) or data = '' or data = This.GetITemString(row,'sku') Then Return /* 03/03- PCONKL - allow user to enter alk sku as primary*/
	
		//BCR 17-JAN-2012: Need to first retrieve into ids_sku before GetItem in Pick_Data (below) works. Else, very frustrating error!
		//                           Had to modify d_item_master_sku in order for this to work when user wants to create DO using Alt_SKU.
		i_nwarehouse.of_item_sku(gs_project,data)
		
		//There might be more than 1 primary SKU that matches this alt sku/supplier
				
		Select Count(*) into :llCount
		From Item_Master
		Where project_id = :gs_project and
				alternate_sku = :data
		Using SQLCA;
	
		Choose Case llCount
			
			case 0 /*invalid*/
				MessageBox(is_title, "Invalid Alternate SKU, please re-enter!")
				Return 1
			Case 1 /*only one found, populate Primary SKU*/
				Select sku, supp_code into :ls_sku, :ls_supp_code
				From Item_Master
				Where project_id = :gs_project and
						Alternate_sku = :data
				Using SQLCA;
				This.SetItem(row,'sku',ls_sku)
				This.SetItem(row,'supp_code',ls_supp_code)
				goto pick_data
			Case Else /*multiple Primary SKU's found, open selection Window*/
			
				lstrparms.String_arg[1] = 'A' /*searching by Alternate Sku*/
				lstrparms.String_arg[2] = data /*Alt Sku*/
				lStrparms.String_arg[3] = '*' /*All Suppliers*/
				OpenWithParm(w_select_sku_supplier,lstrparms)
				Lstrparms = message.PowerObjectParm
				If Not Lstrparms.cancelled Then
					ls_sku = Lstrparms.String_arg[2]
					ls_supp_code = Lstrparms.String_arg[1]
					This.SetItem(row,'sku',ls_sku)
					This.SetItem(row,'supp_code',ls_supp_code)
					goto pick_data
				End If
				
		End Choose /*valid SKU*/
		
	Case "commodity_code", "contract_no" /* 01/04 - PCONKL - If changes, need to re-allocate CCC */
		
		ibCCCFirstSave = True
		This.SetITem(row,'ccc_change_ind','Y') /* ccc isn't called until after record saved and original values are reset*/

	case 'user_field1' /*MEA 03/08 - Dropdown for GM_Montry and SLI-POOL for Order Detail UserField 1*/

	
		IF Upper(gs_Project) = "GM_MONTRY" OR Upper(gs_Project) = "SLI-POOL" THEN
		
		
			dw_detail.GetChild("user_field1", ldwc)
		
			ls_customer_code = ldwc.GetItemString(ldwc.GetRow(), "cust_code")
		
			ds_check_sku = CREATE datastore;
			
			ds_check_sku.dataobject = "d_gm_uf1_sku_location_count"
			ds_check_sku.SetTransObject(SQLCA)

			ls_sku = this.GetItemString(row,"sku")
			
			li_rowcount = ds_check_sku.Retrieve(Upper(gs_Project), ls_sku)
			
			if li_rowcount > 1 then
				
				if  trim(ls_customer_code) <>  trim(left(ds_check_sku.GetItemString(1,"user_field1"),len(ls_customer_code))) then
	
						if MessageBox (is_title, "Destino no usal, esta seguro que desea continuar?", Exclamation!, YesNo!, 2) = 2 then
							SetNull(ls_null)
							this.SetItem(row,"user_field1",ls_null)
							return 1
						
						end if
				end if


			end if


			
			destroy ds_check_sku;
		
	
			for li_idx =1 to this.RowCount()
				
				if li_idx = row then continue

					ls_sku = this.GetItemString(row,"sku")
				
					
					if ls_sku = this.GetItemString(li_idx,"sku") AND  data = this.GetItemString(li_idx,"user_field1") then
	
						MessageBox(is_title, "The customer code is used for the same part on another row within this order.")
						
						EXIT
						
					end if
					
				
			next
		
		END IF	
		
// TAM = W&S - 2010/01 For Wine and Spirit we are not entering the Quantity and Unit of Measure.   QTY is being Entered in User_Field1 and UOM is being entered in User_Field2
// We are then taking thos values and looking in the Item master to see which level the UOM is entered.  If User Field 2 = Item_master UOM2 we will calculate the QTY and UOM values.
//We want to convert the QTY and UOM to UOM1 equivelents
		If Left(gs_project,3) = 'WS-' Then
			if Not isnumber(data)  then
				MessageBox(is_title, "Only Numberic values allowed!")
				Return 1
			Else 
				lsUOM2 = this.Getitemstring(row,"user_field2")
				// If UF2 is blank. Skip the Calculation 
				If Not IsNull(lsUOM2) and lsUOM2 <> '' Then 
					ls_sku = this.Getitemstring(row,"sku")
					ls_Supp_code = this.Getitemstring(row,"supp_code")
					lsUOM2 = this.Getitemstring(row,"user_field2")
					ldqty2 = dec(data)

					select UOM_1, QTY_2  into :lsUom1, :ldqty1
					From Item_Master
					Where project_id = :gs_project and
						supp_code = :ls_Supp_code and
						sku = :ls_sku and 
						UOM_2 = :lsUOM2
					Using SQLCA;

					// If UOM2 record is not found then assume User Field entered is UOM1 othewise Calculate UOM1 and QTY1			
					If ldqty1 > 0 then
						This.SetItem(row, "req_qty", dec(data) * dec(ldqty1))
						This.SetItem(row, "UOM", lsUom1)
					Else
						This.SetItem(row, "req_qty", dec(data))
						This.SetItem(row, "UOM", lsUom2)
					end if
				End If
			End If
		End If

// TAM = W&S - 2010/01 For Wine and Spirit we are not entering the Quantity and Unit of Measure.   QTY is being Entered in User_Field1 and UOM is being entered in User_Field2
// We are then taking thos values and looking in the Item master to see which level the UOM is entered.  If User Field 2 = Item_master UOM2 we will calculate the QTY and UOM values.
//We want to convert the QTY and UOM to UOM1 equivelents
	Case "user_field2"
		If Left(gs_project,3) = 'WS-' Then
			if isnumber(this.GetitemString(row,"user_field1"))  then
				ldQTY2 = dec(this.GetitemString(row,"user_field1"))
				// If UF1 is blank. Skip the Calculation 
				If Not IsNull(ldQTY2)  Then 
					ls_sku = this.Getitemstring(row,"sku")
					ls_Supp_code = this.Getitemstring(row,"supp_code")
					lsUOM2 = data

					select UOM_1, QTY_2  into :lsUom1, :ldqty1
					From Item_Master
					Where project_id = :gs_project and
						supp_code = :ls_Supp_code and
						sku = :ls_sku and 
						UOM_2 = :lsUOM2
					Using SQLCA;

					// If UOM2 record is not found then assume User Field entered is UOM1 othewise Calculate UOM1 and QTY1			
					If ldqty1 > 0 then
						This.SetItem(row, "req_qty", ldQty2 * dec(ldqty1))
						This.SetItem(row, "UOM", lsUom1)
					Else
						This.SetItem(row, "req_qty", ldQty2)
						This.SetItem(row, "UOM", lsUom2)
					end if
				End If
			End If
		End If
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
	// 05/24/2010 ujh: prevent duplicate line item numbers for PANDORA ( 1 of 2 : see cb_det_insert.clicked)
	case 'line_item_no'
		if upper(gs_project) = "PANDORA" then
			if this.Find("line_item_no = " + data, 1, this.RowCount()) <> 0 then
				MessageBox(is_title, "Line Item Numbers must be unique!")
				Return 1
			end if
		End if
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
		
END Choose			

return

pick_data: //if you change this routine, it is also used in event 'process enter'
IF i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code) > 0 THEN
	ll_row =i_nwarehouse.ids.Getrow()
	ls_alternate_sku= i_nwarehouse.ids.Getitemstring(ll_row,"alternate_sku")
	ll_owner_id=i_nwarehouse.ids.GetItemnumber(ll_row,"owner_id")
	if gs_project = 'PANDORA' then
		//Pandora needs to set Owner based on Oracle Sub-Inventory Location (Sub-Warehouse)
		lsUF2 = idw_main.GetItemString(1, "user_field2")
		if lsUF2 = '' then
			messagebox(is_title, "Must Enter Sub-Inventory Location.")
		else
			select owner_id into :llOwner
			from owner
			where project_id = 'pandora'
			and owner_cd = :lsUF2;
			if llOwner > 0 then
				ll_owner_id = llOwner
			end if
		end if
	end if
	ls_uom =i_nwarehouse.ids.GetitemString(ll_row,"uom_1")
	//Set the values from datastore ids which is item master  
	this.object.owner_id[row] = ll_owner_id
	this.SetItem(row, "uom", ls_uom)
	//Get the owner name
	this.object.cf_owner_name[ row ] = g.of_get_owner_name(ll_owner_id)
	If  ls_alternate_sku > ' ' Then /*ac sku exists*/
		This.SetItem(row,"alternate_sku", ls_alternate_sku)
	Else
		This.SetItem(row,"alternate_sku",ls_sku) /*default to GM Sku*/
	END IF	
	
	// 01/01 PCONKL - load Cost
	This.SetItem(row,'cost',i_nwarehouse.ids.GetitemDecimal(ll_row,"std_cost"))

// TAM 2006/06/15 Added a calculation for AMS-MUSER to populate price = Cost * Upcharge(Project User_field1)
// 08/11 - PCONKL - Price was not being set for Non AMS-MUSER projects
	If gs_project = 'AMS-MUSER' Then
		if isnumber(g.isprojectuserfield1) and g.isprojectuserfield1 <> '0' then
			This.SetItem(row, "price", dec(i_nwarehouse.ids_sku.GetITemNumber(ll_Row,'std_cost') * dec(g.isprojectuserfield1)))
		Else 
			This.SetItem(row, "price", dec(i_nwarehouse.ids_sku.GetITemNumber(ll_Row,'std_cost')))
		End If
	Else 
		This.SetItem(row, "price", dec(i_nwarehouse.ids_sku.GetITemNumber(ll_Row,'std_cost')))
	End If

// TAM W&S 2011/01  For W&S Added Item Master values to the user Fields
	if Left(gs_project,3) = 'WS-' then
		lsUF4 =i_nwarehouse.ids.GetitemString(ll_row,"Country_of_Origin_Default")
		This.SetItem(row,"user_field4", lsUF4)
		lsUF5 =i_nwarehouse.ids.GetitemString(ll_row,"HS_Code")
		This.SetItem(row,"user_field5", lsUF5)
		lsUF6 =i_nwarehouse.ids.GetitemString(ll_row,"User_Field3")
		This.SetItem(row,"user_field6", lsUF6)
		lsUF7 =i_nwarehouse.ids.GetitemString(ll_row,"User_Field4")
		This.SetItem(row,"user_field7", lsUF7)
	end if
	
	// 10/09 - PCONKL - Lottable indicators being set on Detail to show/hide pick lottables fields
	This.SetItem(row,'lot_controlled_ind',i_nwarehouse.ids.GetitemString(ll_row,"lot_controlled_ind"))
	This.SetItem(row,'po_controlled_ind',i_nwarehouse.ids.GetitemString(ll_row,"po_controlled_ind"))
	This.SetItem(row,'po_no2_controlled_ind',i_nwarehouse.ids.GetitemString(ll_row,"po_no2_controlled_ind"))
	
	This.SetItem(row,'part_upc_Code',i_nwarehouse.ids.GetitemNumber(ll_row,"part_upc_Code"))
	
	isColumn = "req_qty"
	This.PostEvent("ue_set_column")
	
	// LTK 20111130	Pandora #334 set the QA check indicator for manually entered sku's so that the sku column 
	//						background color gets set correctly.  It is a datawindow background color expression on sku.
	if gs_project = 'PANDORA' then

		String ls_qa_check_ind

		select qa_check_ind,description
		into :ls_qa_check_ind,:ls_description
		from item_master
		where project_id = 'PANDORA'
		and sku = :ls_sku
		and supp_code = :ls_supp_code;

		if SQLCA.SQLCode = 0 then
			this.Object.qa_check_ind[row] = ls_qa_check_ind
		end if
		
		this.setitem( row, 'Description',ls_description) //23-Jan-2015 : Madhu- Set Description value on Order Detail record
	end if
	// Pandora #334 end

ELSE
	MessageBox(is_title, "Invalid Supplier, please re-enter!")
	return 1
END IF


end event

event itemerror;
// 05/00 pconkl - dont show 2 validation error msgs
//If dwo.Name = "sku" Then
//	Return 1
//End If

Return 2
end event

event itemfocuschanged;call super::itemfocuschanged;
//If clicked on Supplier, populate for proper SKU/Supplier
Choose Case dwo.name
	Case 'supp_code'
		idwc_supplier.Retrieve(gs_project,This.GetITemString(row,'sku'))
	
	Case 'alternate_sku'
	//	this.triggerevent( 'process_enter')

// TAM W&S 2010/12 For Wine and spirit, Make_Pick Lot_no a Droppdown		
	Case 'pick_lot_no'
		If Left(gs_project,3) = 'WS-' Then
			idwc_lot_no.Retrieve(gs_project,This.GetITemString(row,'sku'),This.GetITemString(row,'supp_code'),idw_main.GetITemString(1,'wh_code')) //TAM W&S 04/21/2011 added wh_code
		End If

// TAM W&S 2010/12 For Wine and spirit, Make UF2 a Droppdown		
	Case 'user_field2'
		If Left(gs_project,3) = 'WS-' Then
				idwc_detail_uf2.Retrieve(gs_project,This.GetITemString(row,'sku'),This.GetITemString(row,'supp_code'))
		End If

end choose

end event

event retrieveend;call super::retrieveend;Integer i, liRet
long ll_owner

This.SetRedraw(False)

IF rowcount > 0  and Upper(g.is_owner_ind) = 'Y' THEN
	For i = 1 to rowcount
		ll_owner=This.GetItemNumber(i,"owner_id")
		IF not isnull(ll_owner) or ll_owner <> 0 THEN
			// 11/02 - PConkl - retreiving Owner_Cd and Owner_Type in SQL, just format here, don't retrieve
			//This.object.cf_owner_name[ i ] = g.of_get_owner_name(ll_owner)
			This.SetITem(i,'cf_owner_Name',This.GetITemString(i,'Owner_Owner_cd') + '(' + This.GetITemString(i,'Owner_Owner_type') + ')')
		ENd IF	
	Next
END IF	

This.SetRedraw(True)
end event

event process_enter;string ls_supp_code,ls_alternate_sku,ls_sku,ls_uom, ls_Data
Long ll_row,ll_owner_id,llCount
String	lsDDSQL
DatawindowChild	ldwc
string lsUF2
long llOwner

//ib_changed = True

IF This.GetColumnName() = "user_field3" THEN
	IF This.GetRow() = This.RowCount() THEN
		icb_det_insert.TriggerEvent(Clicked!)
	END IF
ELSEIF This.GetColumnName() = "supp_code" or This.GetColumnName() = "alternate_sku" THEN  //gap 02-03 
	//BCR 24-JAN-2012: Need to first retrieve into ids_sku before GetItem in Pick_Data (below) works. Else, very frustrating error!
	//                           Had to modify d_item_master_sku in order for this to work when user wants to create DO using Alt_SKU.
	THIS.AcceptText()
	ls_Data = THIS.Getitemstring(This.GetRow(),"alternate_sku")
	i_nwarehouse.of_item_sku(gs_project,ls_Data)
	//
	ls_sku = this.Getitemstring(This.GetRow(),"sku")
	ls_supp_code = this.Getitemstring(This.GetRow(),"supp_code")
	goto pick_data
ELSE
	Send(Handle(This),256,9,Long(0,0))
End If

Return 1

pick_data: //if you change this routine, it is also used in event 'itemchanged!'
IF i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code) > 0 THEN
	ll_row =i_nwarehouse.ids.Getrow()
	ls_alternate_sku= i_nwarehouse.ids.Getitemstring(ll_row,"alternate_sku")
	ll_owner_id=i_nwarehouse.ids.GetItemnumber(ll_row,"owner_id") 
	if gs_project = 'PANDORA' then
		//Pandora needs to set Owner based on Oracle Sub-Inventory Location (Sub-Warehouse)
		lsUF2 = idw_main.GetItemString(1, "user_field2")
		if lsUF2 = '' then
			messagebox(is_title, "Must Enter Sub-Inventory Location.")
		else
			select owner_id into :llOwner
			from owner
			where project_id = 'pandora'
			and owner_cd = :lsUF2;
			if llOwner > 0 then
				ll_owner_id = llOwner
			end if
		end if
	end if
	ls_uom =i_nwarehouse.ids.GetitemString(ll_row,"uom_1")
	//Set the values from datastore ids which is item master  
	this.object.owner_id[This.GetRow()] = ll_owner_id
	this.SetItem(This.GetRow(), "uom", ls_uom)
	//Get the owner name
	this.object.cf_owner_name[ This.GetRow() ] = g.of_get_owner_name(ll_owner_id)
	If  ls_alternate_sku > ' ' Then /*ac sku exists*/
		This.SetItem(This.GetRow(),"alternate_sku", ls_alternate_sku)
	Else
		This.SetItem(This.GetRow(),"alternate_sku",ls_sku) /*default to GM Sku*/
	END IF	
	
	// 01/01 PCONKL - load Cost
	This.SetItem(This.GetRow(),'cost',i_nwarehouse.ids.GetitemDecimal(ll_row,"std_cost"))

	
	isColumn = "req_qty"
	This.PostEvent("ue_set_column")
ELSE
	MessageBox(is_title, "Invalid Supplier, please re-enter!")
	return 1
END IF


end event

type tabpage_pick from userobject within tab_main
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = " Picking List"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_pick_unallocate cb_pick_unallocate
rb_pick_fefo rb_pick_fefo
rb_pick_lifo rb_pick_lifo
rb_pick_fifo rb_pick_fifo
rb_pick_default rb_pick_default
cb_replace_boxid cb_replace_boxid
dw_pick_mobile dw_pick_mobile
st_pallet st_pallet
sle_palletno sle_palletno
cbx_selectall cbx_selectall
cb_serial cb_serial
cb_wt_dims cb_wt_dims
cbx_partial_bom cbx_partial_bom
cb_lmsroute cb_lmsroute
batch_pick_t batch_pick_t
cb_pick_insert cb_pick_insert
cb_pick_generate cb_pick_generate
cb_pick_print cb_pick_print
dw_pickdetail dw_pickdetail
cb_picklocs cb_picklocs
cb_pick_copy cb_pick_copy
dw_print dw_print
cbx_show_comp cbx_show_comp
dw_pick dw_pick
gb_2 gb_2
cb_pick_select cb_pick_select
cb_pick_delete cb_pick_delete
end type

on tabpage_pick.create
this.cb_pick_unallocate=create cb_pick_unallocate
this.rb_pick_fefo=create rb_pick_fefo
this.rb_pick_lifo=create rb_pick_lifo
this.rb_pick_fifo=create rb_pick_fifo
this.rb_pick_default=create rb_pick_default
this.cb_replace_boxid=create cb_replace_boxid
this.dw_pick_mobile=create dw_pick_mobile
this.st_pallet=create st_pallet
this.sle_palletno=create sle_palletno
this.cbx_selectall=create cbx_selectall
this.cb_serial=create cb_serial
this.cb_wt_dims=create cb_wt_dims
this.cbx_partial_bom=create cbx_partial_bom
this.cb_lmsroute=create cb_lmsroute
this.batch_pick_t=create batch_pick_t
this.cb_pick_insert=create cb_pick_insert
this.cb_pick_generate=create cb_pick_generate
this.cb_pick_print=create cb_pick_print
this.dw_pickdetail=create dw_pickdetail
this.cb_picklocs=create cb_picklocs
this.cb_pick_copy=create cb_pick_copy
this.dw_print=create dw_print
this.cbx_show_comp=create cbx_show_comp
this.dw_pick=create dw_pick
this.gb_2=create gb_2
this.cb_pick_select=create cb_pick_select
this.cb_pick_delete=create cb_pick_delete
this.Control[]={this.cb_pick_unallocate,&
this.rb_pick_fefo,&
this.rb_pick_lifo,&
this.rb_pick_fifo,&
this.rb_pick_default,&
this.cb_replace_boxid,&
this.dw_pick_mobile,&
this.st_pallet,&
this.sle_palletno,&
this.cbx_selectall,&
this.cb_serial,&
this.cb_wt_dims,&
this.cbx_partial_bom,&
this.cb_lmsroute,&
this.batch_pick_t,&
this.cb_pick_insert,&
this.cb_pick_generate,&
this.cb_pick_print,&
this.dw_pickdetail,&
this.cb_picklocs,&
this.cb_pick_copy,&
this.dw_print,&
this.cbx_show_comp,&
this.dw_pick,&
this.gb_2,&
this.cb_pick_select,&
this.cb_pick_delete}
end on

on tabpage_pick.destroy
destroy(this.cb_pick_unallocate)
destroy(this.rb_pick_fefo)
destroy(this.rb_pick_lifo)
destroy(this.rb_pick_fifo)
destroy(this.rb_pick_default)
destroy(this.cb_replace_boxid)
destroy(this.dw_pick_mobile)
destroy(this.st_pallet)
destroy(this.sle_palletno)
destroy(this.cbx_selectall)
destroy(this.cb_serial)
destroy(this.cb_wt_dims)
destroy(this.cbx_partial_bom)
destroy(this.cb_lmsroute)
destroy(this.batch_pick_t)
destroy(this.cb_pick_insert)
destroy(this.cb_pick_generate)
destroy(this.cb_pick_print)
destroy(this.dw_pickdetail)
destroy(this.cb_picklocs)
destroy(this.cb_pick_copy)
destroy(this.dw_print)
destroy(this.cbx_show_comp)
destroy(this.dw_pick)
destroy(this.gb_2)
destroy(this.cb_pick_select)
destroy(this.cb_pick_delete)
end on

type cb_pick_unallocate from commandbutton within tabpage_pick
integer x = 2213
integer y = 188
integer width = 567
integer height = 92
integer taborder = 20
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Un-allocate to Loc..."
end type

event clicked;//26-SEP-2017 :Madhu PEVS-848 Kendo- Return to Stock

str_parms	lstrparms

//Any changes being made which needs to be saved.
If ib_changed Then
	Messagebox(is_title,'Please save Picking list before going to Unallocate Stock!')
	Return
End If

If idw_pick.rowcount( ) = 0 Then
	MessageBox(is_title, 'Pick List records should be present before going to Unallocate Stock!')
	Return
End If

//pack list records exist
If idw_pack.rowcount( ) > 0 Then
	MessageBox(is_title, 'Please delete existing Packing Records!')
	Return
End If

lstrparms.string_arg[1] = gs_project
lstrparms.string_arg[2] = is_dono
lstrparms.string_arg[3] = idw_main.getItemString(1,'wh_code')
lstrparms.string_arg[4] ='-'

//open a response window to update Location
OpenWithParm(w_unallocate_location, lstrparms)
lstrparms =Message.powerobjectparm

//call new function to un-allocate order
//calling from close event
If lstrparms.string_arg[4] <> 'Close' Then
	If wf_return_to_stock() < 0 Then
		Return -1
	End If
End If
end event

type rb_pick_fefo from radiobutton within tabpage_pick
integer x = 4087
integer y = 236
integer width = 270
integer height = 76
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "FEFO"
end type

event clicked;
If idw_Main.RowCount() > 0 Then
	idw_main.SetITem(1,'pick_sort_order','EXPIRATION_DATE A, COMPLETE_DATE A')
End If
end event

type rb_pick_lifo from radiobutton within tabpage_pick
integer x = 3867
integer y = 236
integer width = 229
integer height = 76
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "LIFO"
end type

event clicked;

If idw_Main.RowCount() > 0 Then
	idw_main.SetITem(1,'pick_sort_order','COMPLETE_DATE D')
End If
end event

type rb_pick_fifo from radiobutton within tabpage_pick
integer x = 3634
integer y = 236
integer width = 247
integer height = 76
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "FIFO"
end type

event clicked;
If idw_Main.RowCount() > 0 Then
	idw_main.SetITem(1,'pick_sort_order','COMPLETE_DATE A')
End If
end event

type rb_pick_default from radiobutton within tabpage_pick
integer x = 3191
integer y = 236
integer width = 498
integer height = 76
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "Project Default"
end type

event clicked;
If idw_Main.RowCount() > 0 Then
	idw_main.SetITem(1,'pick_sort_order','PROJECT')
End If
end event

type cb_replace_boxid from commandbutton within tabpage_pick
integer x = 3653
integer y = 28
integer width = 713
integer height = 92
integer taborder = 100
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Replace/Validate Box ID’s"
end type

event clicked;Long llRow, ll_EDIBatchSeqNo, ll_LineItemNo,ll_qty, ll_LineNo, llSkuRow, llBoxRow
String ls_ContainerId, ls_Sku, ls_lCode, ls_LotNo, ls_Coo, ls_OldContainerId, ls_Container_ID_Scanned_Ind, ls_PoNo2
Long ll_upbound,i, llFound
String ls_Container_id, ls_CurrentRec, lsFind, ls_FoundSku
long ll_find, ll_end, ll_start
string ll_list
int liSplitReqd

str_parms	lstrparms
str_parms	lsReturntrparms

//GailM 09/20/2017 - SIMSPEVS-849 - Fix to SIMSPEVS-605 to all all GPNs to be validated
llRow = idw_pick.GetRow( )
If il_DblClkPickRow > 1 then
	llRow = il_DblClkPickRow
	idw_pick.scrolltorow( llRow)
Else
	If isSelSku <> '' Then
		lsFind = " SKU = '" + isSelSku + "' and container_id_scanned_ind = 'N' "
		llSkuRow = idw_pick.Find( lsFind, 1, idw_pick.rowcount( ) ) 
		If llSkuRow > 0 Then llRow = llSkuRow
		isSelSku = ''   //Re-initialize isSelSku
	Else
		lsFind = " Container_id <> '-' and container_id_scanned_ind = 'N' "
		llBoxRow = idw_pick.Find( lsFind, 1, idw_pick.rowcount( ) )   		//GailM 06/20/2017 - SIMSPEVS-605 - Display the first SKU/Project that is container tracked
		If llBoxRow > 0 Then llRow = llBoxRow												//GailM 08/29/2017 - Check for fail to find
	End If
End If
If llRow = 0 Then llRow = 1
idw_pick.scrolltorow( llRow)

//GailM 08/16/2018 - S20849 - Google Footprint Container Split
//isWhCode = tab_main.tabpage_main.dw_main.getitemstring(1, "wh_code")
If ibFootprint and f_retrieve_parm("PANDORA","FLAG","CONTAINER MOVEMENT") = "Y" Then
	For i = 1 to idw_pick.rowcount()
		If idw_pick.GetItemString(i, 'color_code') = '5' Then
			liSplitReqd ++
		End if
	Next
End If

If liSplitReqd = 0 Then		//Allowed to validate
	//GailM 06/20/2017 - SIMSPEVS-605 - Return if all Boxes have been validated
	If il_CountNotScanned = 0 Then
		messagebox('Replace/Vaidate Box IDs', 'All Box IDs have been validated')
		Return
	End if
	
	If idw_Main.GetItemString(1,'ord_status') = 'I' or idw_Main.GetItemString(1,'ord_status') = 'P' Then
	
		If idw_main.GetItemNumber(1, "EDI_Batch_Seq_No") > 0 then
			ll_EDIBatchSeqNo = idw_main.GetItemNumber(1, "EDI_Batch_Seq_No")
			ll_LineItemNo = idw_pick.GetItemNumber(llRow, "Line_Item_No")
			ls_Sku = idw_pick.GetItemString(llRow, "SKU")
			Select ED.Container_Id ED INTO :ls_ContainerId
			from EDI_Outbound_Header EH With (Nolock)
			Inner Join EDI_Outbound_Detail ED With (Nolock) on ED.Project_Id = EH.Project_Id and  ED.EDI_Batch_Seq_No = EH.EDI_Batch_Seq_No 
			Where 
			EH.Project_Id = :gs_project
			and 
			EH.EDI_Batch_Seq_No = :ll_EDIBatchSeqNo
			and ED.Line_Item_No = :ll_LineItemNo
			and ED.SKU = :ls_Sku;
			
			// Determine whether to alllow this box id or show window to scan a box id
			// 605
			// Allow this to move forward with a containerID
			//If Nz(ls_ContainerID,'') <> '' then
			//MessageBox(is_title,'You can not change the Box ID on this SKU.  You must pick the Boxes listed.  Possible DejaVu order ')
			//Return
			//End if
		end if
		
		Datastore lds_BoxesPicked
		lds_BoxesPicked = Create datastore
		lds_BoxesPicked.DataObject = 'd_pandora_box_id'
		
		lstrparms.String_arg[1] = gs_project
		lstrparms.String_arg[2] = idw_main.GetItemString(1, "wh_code")
		lstrparms.String_arg[3] = idw_pick.GetItemString(llRow, "SKU")
		lstrparms.String_arg[4] = idw_pick.GetItemString(llRow, "PO_No")
		lstrparms.String_arg[5] = idw_pick.GetItemString(llRow, "l_code")
		lstrparms.String_arg[6] = idw_pick.GetItemString(llRow, "Do_No")
		lstrparms.String_arg[7] = idw_pick.GetItemString(llRow, "Owner_Owner_Cd")
		ls_OldContainerId =  idw_pick.GetItemString(llRow, "Container_Id")
		lstrparms.String_arg[8] = idw_pick.GetItemString(llRow, "Container_Id")
		//6/15/2017 - Added scan indicator for 605
		lstrparms.String_arg[9] = idw_pick.GetItemString(llRow, "Container_ID_Scanned_Ind")
// TAM -2018/11/02 - DE6948	added PONO2(Pallet Id)
		lstrparms.String_arg[10] = idw_pick.GetItemString(llRow, "PO_No2")
	
		lstrparms.Long_arg[1] = idw_pick.GetItemNumber(llRow, "Line_Item_No")
		lstrparms.Long_arg[2] = nz(idw_main.GetItemNumber(1, "EDI_Batch_Seq_No"),0)
		lstrparms.Long_arg[3] = idw_pick.GetItemNumber(llRow, "Owner_ID")
		lstrparms.Long_arg[4] = il_SingleBoxIdSwap
		lstrparms.Long_arg[5] = llRow
	
		lstrparms.datawindow_arg[1] = idw_pick
		lstrparms.datastore_arg[2] = lds_BoxesPicked
		
		OpenWithparm(w_box_no_add_delete,lstrparms)
	
		lsReturntrparms = message.PowerobjectParm
		
		
		ll_upbound=lds_BoxesPicked.rowcount( )
		lds_BoxesPicked.SetSort("Current_record Desc,Container_id asc")
		lds_BoxesPicked.Sort( )
		
		FOR i= 1 TO ll_upbound
			ls_FoundSku = lds_BoxesPicked.GetItemString(i,'Sku')
			ls_CurrentRec = lds_BoxesPicked.GetItemString(i,'Current_Record')
			ls_Container_id = lds_BoxesPicked.GetItemString(i,'Container_id')
			ls_Container_ID_Scanned_Ind = lds_BoxesPicked.GetItemString(i,'Container_ID_Scanned_Ind')
			ll_qty = lds_BoxesPicked.GetItemNumber(i,'qty')
			ls_lCode = lds_BoxesPicked.GetItemString(i,'l_code')
			ll_LineNo = lds_BoxesPicked.GetItemNumber(i,'line_item_no')
			ls_Coo = lds_BoxesPicked.GetItemString(i,'country_of_origin' )
			ls_LotNo= lds_BoxesPicked.GetItemString(i,'lot_no' )	
// TAM -2018/11/02 - DE6948	added PONO2(Pallet Id)
			ls_Pono2 = lds_BoxesPicked.GetItemString(i,'po_no2')
			If ls_CurrentRec = '1' then
				//First flag all the boxes on the order that were already on the picking list.
				ll_end = idw_pick.RowCount() + 1
				ll_find = 1
				lsFind =  " Upper(Sku) = '" + Upper(ls_FoundSku) + "' and Container_Id = '" + ls_Container_id + "'" //+ "' and line_item_no = " + String(ll_LineNo)
				ll_find = idw_pick.Find(lsFind, ll_find, ll_end)
				DO WHILE ll_find > 0
						idw_pick.scrolltorow( ll_find )
						idw_pick.SetItem(ll_find,'containerid_found','1')
						//GailM 06/17/17 605 - Validate BoxID 
						idw_pick.SetItem(ll_find,'container_id_scanned_ind','Y' )
						  // Search again
						  ll_find++
					ll_find = idw_pick.Find(lsFind, ll_find, ll_end)
				LOOP
			else
				ll_end = idw_pick.RowCount() + 1
				ll_find = 1
				If il_DblClkPickRow > 0 Then
					lsFind =  " Upper(Sku) = '" + Upper(ls_FoundSku) + "' and quantity = " + String(ll_qty) + " and containerid_found = '" + '0' + "'" + " and container_id = '" + ls_OldContainerId + "'"
				Else
				lsFind =  " Upper(Sku) = '" + Upper(ls_FoundSku) + "' and quantity = " + String(ll_qty) + " and containerid_found = '" + '0' + "'"
				End if
				//lsFind =  " Upper(Sku) = '" + Upper(ls_FoundSku) + "' and Container_Id <> '" + ls_Container_id + "'" + "' and containerid_found = '" + '0' + "'"
				ll_find = idw_pick.Find(lsFind, ll_find, ll_end)
				If ll_find > 0 then
					idw_pick.scrolltorow( ll_find )
					idw_pick.SetItem(ll_find,'Container_Id',ls_Container_id)
					idw_pick.SetItem(ll_find,'Container_ID_Scanned_Ind',ls_Container_ID_Scanned_Ind)
					idw_pick.SetItem(ll_find,'Lot_no',ls_Container_id)
					idw_pick.SetItem(ll_find,'L_code',ls_lCode)
					idw_pick.SetItem(ll_find,'country_of_origin',ls_Coo)
					idw_pick.SetItem(ll_find,'user_field1',ls_Coo)
					idw_pick.SetItem(ll_find,'lot_no',ls_LotNo)
					idw_pick.SetItem(ll_find,'containerid_found','2')
// TAM -2018/11/02 - DE6948	added PONO2(Pallet Id)
					idw_pick.SetItem(ll_find,'po_no2',ls_pono2)
					dwobject ldwo
					ldwo = idw_pick.Object.Container_Id
					idw_pick.event itemchanged( ll_find, ldwo, ls_Container_id )
				end if
			End IF	
		Next
				
		ib_changed = True		//Changes have been made
		wf_check_container_scanned()

	Else
		Messagebox(is_title,'Order must be in either Process or Picking status.')
		Return
	end if
Else
		Messagebox(is_title,'Cannot continue to validate containers until container split is completed.')
		Return
End If		/*End Split*/

il_SingleBoxIdSwap = 0
il_DblClkPickRow = 0

end event

type dw_pick_mobile from u_dw_ancestor within tabpage_pick
integer x = 201
integer y = 332
integer width = 4018
integer height = 172
integer taborder = 20
string dataobject = "d_do_master_Mobile"
boolean border = false
borderstyle borderstyle = stylebox!
end type

event itemchanged;call super::itemchanged;DateTime	ldtGMT
String	lsDONO, lsFindStr, lsWarehouse,lsmobilepackloc,lsmobilescanreqind
Integer	i

lsDONO = idw_Main.GetITemString(1,'do_no')
lsWarehouse = idw_Main.GetITemString(1,'wh_code')
ldtGMT = f_getLocalWorldTime( idw_main.object.wh_code[1] ) 

//ib_changed = true


Choose Case Upper(dwo.name)
		
	Case "MOBILE_STATUS_IND"
		
		if ib_changed then
			Messagebox(is_title,"Please save your changes before updating Mobile Status")
			Return 1
		End If
		
		If This.GetITEmString(1,'mobile_status_ind') = 'P' Then /* Currently in Process...*/
	
			If data = 'R' Then /* changing to Released - Can only do if all Items are in New Status*/
				
				If idw_pick.Find("Mobile_Status_Ind <> 'N'",1,idw_pick.RowCOunt()) > 0 Then
					MessageBox(is_title,"Status cannot be changed to 'Released' unless all detail status are 'New'~rSet to 'Suspend' instead.",StopSign!)
				Else
					
					//Update directly so Pick List no re-allocated
					Execute Immediate "Begin Transaction" using SQLCA;
			
					Update Delivery_Picking
					Set Mobile_status_Ind = 'N', mobile_picked_qty = 0, mobile_picked_by = '', mobile_pick_start_time = null, mobile_pick_Complete_time = null
					Where do_no = :lsDONO;
			
					Update DElivery_MAster 
					set mobile_Status_ind = 'R'
					Where do_no = :lsDONO;
					
					Execute Immediate "Commit" using SQLCA;
					
				End If 
				
			ElseIf data = 'S' Then /* changing to Suspend */
				
				//Update directly so Pick List no re-allocated
					Execute Immediate "Begin Transaction" using SQLCA;
			
					Update Delivery_Picking
					Set Mobile_status_Ind = 'S'
					Where do_no = :lsDONO;
			
					Update DElivery_MAster 
					set mobile_Status_ind = 'S'
					Where do_no = :lsDONO;
					
					Execute Immediate "Commit" using SQLCA;
									
			ElseIf data = 'C' Then /* changing to Complete - Can only do if no discprepency*/
				
				If idw_pick.Find("Mobile_Status_Ind = 'D'",1,idw_pick.RowCOunt()) > 0 Then
					MessageBox(is_title,"Status cannot be changed to 'Complete' if there are items with discprepancies~rSet to 'Discrepancy' instead.",StopSign!)
				Else
					
					Execute Immediate "Begin Transaction" using SQLCA;
								
					Update DElivery_MAster 
					set mobile_Status_ind = 'C', mobile_pick_complete_time = :ldtGMT
					Where do_no = :lsDONO;
					
					Execute Immediate "Commit" using SQLCA;
					
				End If
				
			ElseIf data = 'D' Then /* changing to Discprepancy - Can only do if  discprepency exist*/
				
				If idw_pick.Find("Mobile_Status_Ind = 'D'",1,idw_pick.RowCOunt()) = 0 Then
					MessageBox(is_title,"Status cannot be changed to 'Discprenancy' if there are no items with discprepancies~rSet to 'Complete' instead.",StopSign!)
				Else
					
					Execute Immediate "Begin Transaction" using SQLCA;
								
					Update DElivery_MAster 
					set mobile_Status_ind = 'D', mobile_pick_complete_time = :ldtGMT
					Where do_no = :lsDONO;
					
					Execute Immediate "Commit" using SQLCA;
					
				End If
				
			End If
		
		End If
		
	Case "MOBILE_ENABLED_IND"
		
		if ib_changed then
			Messagebox(is_title,"Please save your changes before releasing to Mobile")
			Return 1
		End If
		
		SetPointer(Hourglass!)
		
		//If checking, set status and dates, otherwise clear
		if Data = 'Y' Then /* checking*/
		
			//Idw_Main.SetItem(1,'Mobile_status_ind','R') /*Released*/ //13-Madhu-2014 :Madhu- As Pete suggested, commented 
			//Idw_Main.SetItem(1,'Mobile_Enabled_Ind','Y') //13-Madhu-2014 :Madhu- As Pete suggested, commented 
			
			lsFindStr = "wh_code = '" + lsWarehouse + "'"
			i = g.ids_project_warehouse.Find(lsFindStr,1,g.ids_project_warehouse.rowcount())
			If i > 0  Then
					//Idw_Main.SetItem(1,'MObile_Pack_Location',g.ids_project_warehouse.GetItemString(i, "MObile_Default_Pack_Location")) //13-Madhu-2014 :Madhu- As Pete suggested, commented 
					//Idw_Main.SetItem(1,'MObile_Scan_all_Units_Req_Ind',g.ids_project_warehouse.GetItemString(i, "MObile_Scan_all_Units_Req_Ind")) //13-Madhu-2014 :Madhu- As Pete suggested, commented 
					lsmobilepackloc= g.ids_project_warehouse.GetItemString(i, "MObile_Default_Pack_Location") //13-Madhu-2014 :Madhu- As Pete suggested- Added
					lsmobilescanreqind=g.ids_project_warehouse.GetItemString(i, "MObile_Scan_all_Units_Req_Ind") //13-Madhu-2014 :Madhu- As Pete suggested- Added
			End If
						
			
			//Idw_Main.SetItem(1,'Mobile_Released_time',	ldtGMT  ) //13-Madhu-2014 :Madhu- As Pete suggested, commented 
			
			//Update Status on Picking without sending to Websphere
			Execute Immediate "Begin Transaction" using SQLCA;
			
			//13-Nov-2014 :Madhu- As Pete said, prepard update statement -START
			Update Delivery_Master 
			Set Mobile_status_ind='R',Mobile_Enabled_Ind='Y',Mobile_Pack_Location=:lsmobilepackloc,
			MObile_Scan_all_Units_Req_Ind=:lsmobilescanreqind,Mobile_Released_time=:ldtGMT
			where Project_Id=:gs_project 
			and Do_No=:lsDONO;
			//13-Nov-2014 :Madhu- As Pete said, prepard update statement -END
			
			Update Delivery_Picking
			Set Mobile_status_Ind = 'N'
			Where do_no = :lsDONO;
			
			Execute Immediate "Commit" using SQLCA;
			
		Else /*unchecking*/
			//13-Madhu-2014 :Madhu- As Pete suggested, commented - START
			//Idw_Main.SetItem(1,'Mobile_status_ind','') //13-Madhu-2014 :Madhu- As Pete suggested, commented 
			//Idw_Main.SetItem(1,'Mobile_Enabled_Ind','')
			//Idw_Main.SetItem(1,'Mobile_User_Assigned','')
		
			SetNull(ldtGMT )
			//Idw_Main.SetItem(1,'Mobile_Released_time',	ldtGMT  ) 
			//Idw_Main.SetItem(1,'Mobile_Pick_start_time',	ldtGMT  ) 
			//Idw_Main.SetItem(1,'Mobile_Pick_complete_time',	ldtGMT  ) 
			//13-Madhu-2014 :Madhu- As Pete suggested, commented - END
			
			//Update Status on Picking without sending to Websphere
			Execute Immediate "Begin Transaction" using SQLCA;
			
			//13-Nov-2014 :Madhu- As Pete Suggested, prepared update statement -START
			Update Delivery_Master 
			Set Mobile_status_ind='',Mobile_Enabled_Ind='',Mobile_User_Assigned='',Mobile_Released_time=:ldtGMT,
			Mobile_Pick_start_time=:ldtGMT,Mobile_Pick_complete_time=:ldtGMT
			where Project_Id=:gs_project 
			and Do_No=:lsDONO;
			//13-Nov-2014 :Madhu- As Pete Suggested, prepared update statement -END
			
			Update Delivery_Picking
			Set Mobile_status_Ind = '', mobile_picked_qty = 0, mobile_picked_by = '', mobile_pick_start_time = null, mobile_pick_Complete_time = null
			Where do_no = :lsDONO;
			
			Execute Immediate "Commit" using SQLCA;
			
		End If
		
		//iw_window.TriggerEvent('ue_Save') //13-Madhu-2014 :Madhu- As Pete suggested, commented
		idw_main.Retrieve( lsDONO) /* re-trieve main with updated status */ //13-Madhu-2014 :Madhu- As Pete suggested- Added
		idw_pick.Retrieve(lsDONO) /* re-retrieve Pick with updated status */
		
		wf_check_status_mobile() //13-Madhu-2014 :Madhu- As Pete suggested- Added
		
		SetPointer(Arrow!)
		
End Choose
end event

event itemerror;call super::itemerror;return 2
end event

event clicked;call super::clicked;
DatawindowChild	ldwc

Choose case dwo.name
		
	Case "mobile_status_ind" /*filter to only show header level statuses*/
		
		This.GetChild('mobile_status_ind',ldwc)
		ldwc.SetFilter("mobile_status_ind <> 'N' and mobile_status_ind <> 'Z'")
		ldwc.Filter()
	//13-Nov-2014 :Madhu- Added code to don't enable unless pick list	lists -START
	Case "mobile_enabled_ind"
		IF idw_pick.rowcount( ) =0 THEN
			idw_mobile.setitem( 1, 'mobile_enabled_ind', 'N')
			MessageBox(is_title,"Pick List records should be generated first!",Stopsign!)
			Return -1
		END IF	
	//13-Nov-2014 :Madhu- Added code to don't enable unless pick list	lists -END

		
End Choose
end event

type st_pallet from statictext within tabpage_pick
boolean visible = false
integer x = 1655
integer y = 124
integer width = 274
integer height = 60
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long backcolor = 67108864
string text = "Pallet No."
boolean focusrectangle = false
end type

type sle_palletno from singlelineedit within tabpage_pick
boolean visible = false
integer x = 1938
integer y = 108
integer width = 1038
integer height = 76
integer taborder = 40
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
integer limit = 20
borderstyle borderstyle = stylelowered!
end type

event modified;//GailM 6/25/2017 S20849 F8117 I1026 Google - SIMS - Footprints - Movements of partial containers
//ibpickmodified = True
//If Not isnull( sle_palletno.text ) or sle_palletno.text <> '' Then
//	iw_window.TriggerEvent("ue_pick_pallet")
//End If
//ibpickmodified = True
end event

type cbx_selectall from checkbox within tabpage_pick
integer x = 64
integer y = 428
integer width = 64
integer height = 64
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
end type

event clicked;int li_row, li_rows
boolean lb_checked

lb_checked = tab_main.tabpage_pick.cbx_selectall.checked
li_rows = tab_main.tabpage_pick.dw_pick.RowCount() 

if lb_checked then
	for li_row = 1 to li_rows
		idw_pick.SetItem( li_row, 'c_delete_ind', 'Y')
	next
else
	for li_row = 1 to li_rows
		idw_pick.SetItem( li_row, 'c_delete_ind', 'N')
	next
End if

// Change delete button from delete row to delect selected and back
If idw_pick.Find("upper(c_DELETE_Ind) = 'Y'",1,idw_pick.RowCOunt()) > 0 Then
	cb_pick_select.Enabled = True
	cb_pick_delete.Enabled = False
	cb_pick_delete.visible = False
	cb_pick_select.visible = True
Else
	cb_pick_delete.Enabled = True
	cb_pick_select.Enabled = False
	cb_pick_delete.visible = True
	cb_pick_select.visible = False
End If
	

end event

event constructor;//09/14 - PCONKL - If not mobile enabled, move back up to original space since mobile DW not visible
if not g.ibMobileEnabled Then
	this.y = 240
End If
end event

type cb_serial from commandbutton within tabpage_pick
boolean visible = false
integer x = 3003
integer y = 80
integer width = 485
integer height = 92
integer taborder = 30
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "&Serial Validation"
end type

event clicked;//Jxlim 08/12/2013 Ariens Blank out (-) all Serial_no after generating Picking list before save.
//This button only available for Ariens
Long llrowcount, i
string lsDono

If ib_Changed Then
	Messagebox(is_title,'Please save your changes first.')
	Return
End IF

llRowCOunt = idw_pick.RowCount()
For i = 1 to llRowcount
	idw_pick.SetItem(i, "serial_no", '-')	
Next

//uf22 is 'Y' when serial no is validated from srial validation button on picking list
If  Upper(gs_project) ='ARIENS' Then	
	f_setfocus(idw_pick,1,"serial_no")
	idw_main.Setitem(1, "user_field22", 'Y')
End If

ibPickModified = True	 //save pick list thru webserver
ib_changed = True  //save before pack generation
end event

type cb_wt_dims from commandbutton within tabpage_pick
boolean visible = false
integer x = 2587
integer y = 28
integer width = 393
integer height = 92
integer taborder = 80
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Wt/DIMs Rpt"
end type

event clicked;If gs_project = 'PANDORA' and idw_pick.RowCount() > 0 then
	
	if idw_pick.AcceptText() < 0 then
		return
	end if
	
	datastore lds_skus
	lds_skus = CREATE datastore
	lds_skus.dataobject = 'd_pandora_sku_missing_wt_dims_rpt'
		
	Long ll_row
	String ls_where_clause
	Long k, ll_rows
	ll_rows = idw_pick.RowCount()

	ls_where_clause = "where project_id = 'PANDORA' and supp_code = 'PANDORA' and sku in ("

	for k = 1 to ll_rows

		ls_where_clause += "'" + idw_pick.Object.sku[k] + "'"

		if k <> ll_rows then
			ls_where_clause += ", "
		end if
	next
	ls_where_clause += ")"

	datastore lds_items
	lds_items = create datastore
	String ls_sql_syntax, ERRORS

	ls_sql_syntax = "SELECT sku, UOM_1, Length_1, Width_1, Height_1, Weight_1 from item_master "
	ls_sql_syntax += ls_where_clause + ";"

	lds_items.Create(SQLCA.SyntaxFromSQL(ls_sql_syntax,"", ERRORS))
	if Len(ERRORS) > 0 then
		MessageBox("Errors", "Unable to create datastore to check for weight, DIMs and UOM.~r~r" + Errors)
		return
	end if

	if lds_items.SetTransObject(SQLCA) <> 1 then
		MessageBox("Error","Error setting datastore's transaction object to check for weight, DIMs and UOM.")
		return
	end if

	long ll_items
	ll_items = lds_items.retrieve()

	String ls_inadequate_skus
	Int li_inadequate_sku_count

	for k = 1 to ll_items
		
//		if NOT IsNull(lds_items.Object.uom_1[k]) and Trim(lds_items.Object.uom_1[k]) = "EA" and &
		if NOT IsNull(lds_items.Object.length_1[k]) and lds_items.Object.length_1[k] <> 0 and &
			NOT IsNull(lds_items.Object.height_1[k]) and lds_items.Object.height_1[k] <> 0 and &
			NOT IsNull(lds_items.Object.width_1[k]) and lds_items.Object.width_1[k] <> 0 and &
			NOT IsNull(lds_items.Object.weight_1[k]) and lds_items.Object.weight_1[k] <> 0 then

			// SKU has the requirements

		else
			li_inadequate_sku_count++

			ll_row = lds_skus.InsertRow(0)
			lds_skus.Object.sku[ll_row] = lds_items.Object.sku[k]
			
			if li_inadequate_sku_count > 1 then
				ls_inadequate_skus += ", " + lds_items.Object.sku[k]
			else
				ls_inadequate_skus = lds_items.Object.sku[k]
			end if
		end if
	next

	if li_inadequate_sku_count > 0 then

		lds_skus.Object.t_title.text = lds_skus.Object.t_title.text + String(idw_main.Object.invoice_no[1])

		Window wReport
		Str_parms	lstrparms
		lstrparms.String_arg[1] = "All"
		lstrparms.String_arg[2] = ls_inadequate_skus
		
		lstrparms.datastore_arg[1] = lds_skus
		
		OpenSheetWithParm( wReport, lstrparms, "w_pandora_sku_missing_wt_dims_rpt", w_main, gi_menu_pos, Original! )
		
	else
		MessageBox(is_title,"All items contain valid DIMs and weight.")
	end if
end if	

end event

type cbx_partial_bom from checkbox within tabpage_pick
integer x = 3003
integer y = 76
integer width = 690
integer height = 76
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Allow Partial BOM Pick"
end type

event constructor;
g.of_check_label_button(this)
end event

type cb_lmsroute from commandbutton within tabpage_pick
integer x = 2217
integer y = 28
integer width = 357
integer height = 92
integer taborder = 90
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&LMS Route"
end type

event clicked;/* dts 02/02/06 - added parameter to control what is updated by socket call...
				- from here, DM.UF8 is updated
				- for 3COM Carrier Prioritized Picking, DM.UF13 is updated
*/
//openwithParm (w_dssocket, "Routing")
Str_parms	lstrParms

lstrParms.String_Arg[1] = "Routing"
lstrParms.String_Arg[2] = "UF8" //Original Routing Code
lstrParms.String_Arg[3] = "N/A" // passing Previous Wgt (UF14) in Carrier Prioritized Pick LMS Call
OpenWithParm(w_dssocket, lstrParms)
end event

event constructor;
g.of_check_label_button(this)
end event

type batch_pick_t from statictext within tabpage_pick
integer x = 27
integer y = 108
integer width = 1618
integer height = 108
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Batch Picking Text"
boolean focusrectangle = false
end type

type cb_pick_insert from commandbutton within tabpage_pick
integer x = 27
integer y = 28
integer width = 357
integer height = 92
integer taborder = 60
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = " &Insert Row"
end type

event clicked;Long ll_row,	&
		llBatchPickID
Integer	liMsg

String	lsMsg
Boolean	lbKeepBatch

idw_pick.SetFocus()

If idw_pick.AcceptText() = -1 Then Return

// 05/02 PCONKL - If this Order is being batch Picked, changing the list here will have an effect on the batch - give option to keep in Batch
llBatchPickID = idw_main.GetITemNumber(1,'batch_pick_id')
lbKeepBatch = False
If llBatchPickID > 0 Then
	lsMsg = 'This order is currently setup to be Batch Picked (Batch Pick ID # ' + string(llBatchPickID) +  ').~rAny changes made here will affect the batch.~r~r'
	lsMsg += 'Would you like to leave this order on this Batch?~r~r'
	lsMsg += "'Yes'    - Keep order on Batch~r"
	lsMsg += "'No'     - Remove Order from Batch~r"
	lsMsg += "'Cancel' - No changes to Pick List"
	liMsg = MessageBox(is_title,lsMsg,Question!,yesNoCancel!,1)
	Choose Case liMsg
		Case 1 /*yes*/
			lbKeepBatch = True /*we will assing the Batch Pick ID to the new row*/
		CAse 2 /*No*/
			lbKeepBatch = False
			idw_Main.SetITem(1,'batch_Pick_id',0) /*remove the master from the batch*/
		Case Else /*cancel*/
			REturn
	End CHoose
End If /*setup for batch Picking*/
	
ll_row = idw_Pick.GetRow() /* 08/00 PCONKL */

If ll_row > 0 Then
	idw_pick.setcolumn('sku')
	ll_row = idw_pick.InsertRow(ll_row + 1)
	idw_pick.ScrollToRow(ll_row)
	idw_pick.setitem(ll_row,'do_no',idw_Main.GetItemString(1,"do_no"))
Else
	ll_row = idw_pick.InsertRow(0)
	idw_pick.setitem(ll_row,'do_no',idw_Main.GetItemString(1,"do_no"))	
End If	


idw_Pick.SetITem(ll_row,'sku_pickable_ind','Y') /* 09/01 PCONKL*/

If lbKeepBatch Then /* 05/02 - PCONKL if staying in the batch, assign the batch Pick ID to this new row */
	idw_Pick.SetITem(ll_row,'batch_pick_id',llBatchPickID)
End If


if ll_row > 1 then
	
//	wf_post_pick_list_generate(ll_row)
	
	idw_Pick.SetITem(ll_row,'staging_location',idw_Pick.GetItemString(1,"staging_location")) /* 05/08   MEA*/
end if
end event

event constructor;
g.of_check_label_button(this)
end event

type cb_pick_generate from commandbutton within tabpage_pick
integer x = 1125
integer y = 28
integer width = 357
integer height = 92
integer taborder = 70
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Generate"
end type

event clicked;// special for SIEMENS-LM
boolean lbServer
long i_indx
string lsDoNo

lbServer = True
//if gs_userid = 'DTS' then //try old picking code for debugging purposes (or connectivity issues)
//	if messagebox("TEMPO!", "Hey Dave, Use server-based code?", Question!, YesNo!, 1)=2 then
//		lbServer = false
//	end if
//end if
//if not lbServer then
//	iw_window.TriggerEvent("ue_generate_pick")
//else
	
//GailM 1/21/2018 - S14940 F5829 I469 - PAN SIMS to provide message on consolidation shipment at outbound
if upper(gs_project) = "PANDORA" then
	lsDoNo = tab_main.tabpage_main.dw_main.GetItemString( 1, "do_no" )
	i_indx = f_consolidated_shipment_message( lsDoNo )
End if  //Project Pandora//

ibpickmodified = True
iw_window.TriggerEvent("ue_generate_pick_server")

//GailM 6/22/2020 DE15963 Google COO on picklist is not updating on the packing list
iF ibEscape Then
	ibEscape = FALSE
	Return
Else
	ibpickmodified = True
End If
//end if


// Jxlim 07/17/2013 SkuSerialHold validation, initiated by Arien; Note If serialize is captured, seem logic need to happen on serial tab
If  Upper(gs_project) = 'ARIENS'   Then
	If wf_validate_skuserialhold() < 0 Then			
		Return 
	End If
End If 


////////////////////////////////////////////////////////////////////////////////////////////////////////////
/* 10/06/2010 ujh Populate Pandora COO field from Baseline COO field.
  	See dw_pick constructor for where the child datawindow for COO was created and populated.*/
if upper(gs_project) = "PANDORA" then
	wf_populate_COO_Pandora()
End if  //Project Pandora//

////////////////////////////////////////////////////////////////////////////////////////////////////////////

//if upper(gs_project) = "PANDORA" and ibFootprint then
//	isWhCode = idw_main.getitemstring(1,"wh_code")
//	wf_check_footprint_containers()
//End if  //Project Pandora//


//GailM 06/20/2017 - SIMSPEVS-605 - Check if all container ids have been verified for Pandora BoxID validation
if gs_project = 'PANDORA' then
	wf_check_container_scanned()
End If

end event

event constructor;
g.of_check_label_button(this)
end event

type cb_pick_print from commandbutton within tabpage_pick
integer x = 1490
integer y = 28
integer width = 357
integer height = 92
integer taborder = 30
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Print"
end type

event clicked;
//nxjain 28-08-2013 Can not print before save the picklist .

If ib_changed Then
	messagebox(is_title,'Please save Picking list before going to print!')
	return
End If

ib_print = true

w_do.trigger event ue_print()
end event

event constructor;
g.of_check_label_button(this)
end event

type dw_pickdetail from u_dw_ancestor within tabpage_pick
boolean visible = false
integer x = 3392
integer y = 860
integer width = 411
integer height = 316
integer taborder = 50
boolean bringtotop = true
string dataobject = "d_do_pick_detail"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean hsplitscroll = true
end type

event retrievestart;return 2
end event

type cb_picklocs from commandbutton within tabpage_pick
integer x = 1851
integer y = 28
integer width = 357
integer height = 92
integer taborder = 50
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Pick Locs..."
end type

event clicked;str_parms	lstrparms


// 05/00 Pconkl -  pop putway recommendation window

lstrparms.String_arg[1] = gs_project
lstrparms.String_arg[2] = idw_main.GetItemString(1, "wh_code")

// pvh - 01/15/09 validate pickrow
if ilCurrPickRow = 0 or isNull(ilcurrpickrow) then
	if idw_pick.rowcount() > 0 then 
		ilcurrpickrow = idw_pick.getrow()
		if ilcurrpickrow = 0 then ilcurrpickrow=1
	else
		messagebox("Row Error","No Row selected",exclamation!)
		return
	end if
end if
lstrparms.String_arg[3] = idw_pick.getItemString(ilcurrpickrow,"sku")
lstrparms.String_arg[4] = idw_pick.getItemString(ilcurrpickrow,"supp_code")
lstrparms.String_arg[5] = idw_pick.GetITemString(ilcurrpickrow,"l_code") /*if currently has location, recommendation will default to this*/
lstrparms.Decimal_arg[1] = idw_pick.getItemNumber(ilcurrpickrow,"quantity") /* 11/02 - PCONKL */
lstrparms.Long_arg[1] = idw_pick.getItemNumber(ilcurrpickrow,"owner_id") /* 08/02 - Pconkl/Tony */

OpenWithparm(w_pick_recommend,lstrparms)

// LTK 20110721  SIMS Over/Under picking issue.  Set this flag so that ue_refresh is fully performed upon ue_save.
setCalcAllocated( true )

//Jxlim 04/05/2011For Pandora, If any of the field being modified on the w_pick_recommendation then ibPickModified is True per Dave
idw_pick.TriggerEvent("ue_process_pick")

//GailM 10/29/2018 DE6979 Always turn container_id_scanned_ind off when changing a location
idw_pick.SetItem(ilCurrPickRow, 'container_id_scanned_ind', 'N' )

//GailM 10/28/2019 DE13103 Google - Outbound - Looping issue for loses serial numbers
//If pick row GPN is footprint, check whether serial numbers have been linked to do_no and reset serial_flag to "N"/reset do_no
If f_is_sku_foot_print(lstrparms.string_arg[3],lstrparms.string_arg[4]) Then
	wf_reset_serial_flag()
End If

//New value after process
String ls_nsku, ls_suppcode, ls_nloc
decimal ld_nqty
Long ll_nOwnerID
ls_nsku = idw_pick.getItemString(ilcurrpickrow,"sku")
ls_suppcode = idw_pick.getItemString(ilcurrpickrow,"supp_code")
ls_nloc = idw_pick.GetITemString(ilcurrpickrow,"l_code")
ld_nqty = idw_pick.getItemNumber(ilcurrpickrow,"quantity") 
ll_nownerId = idw_pick.getItemNumber(ilcurrpickrow,"owner_id") 

// ET3 2013-01-29 Decision made to turn off the optimization and force the save in all cases
//If lstrparms.String_arg[1]  = 'PANDORA' Then
//	If ls_nsku 		<> lstrparms.String_arg[3] or &
//		ls_suppcode <> lstrparms.String_arg[4] or &
//		ls_nloc 		<> lstrparms.String_arg[5] or &
//		ld_nqty     <> lstrparms.Decimal_arg[1] or &
//		ll_nOwnerID	<> lstrparms.Long_arg[1] Then
//		ibPickModified = True	
//	End If
//Else
	ibPickModified = True	
//End If
//Jxlim 04/05/2011 end of Code
end event

event constructor;
g.of_check_label_button(this)
end event

type cb_pick_copy from commandbutton within tabpage_pick
integer x = 754
integer y = 28
integer width = 357
integer height = 92
integer taborder = 50
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "C&opy Row"
end type

event clicked;
idw_pick.TriggerEvent("ue_copy")


end event

event constructor;
g.of_check_label_button(this)
end event

type dw_print from datawindow within tabpage_pick
boolean visible = false
integer x = 2158
integer y = 1260
integer width = 759
integer height = 316
integer taborder = 50
boolean bringtotop = true
string dataobject = "d_picking_prt"
boolean hscrollbar = true
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

type cbx_show_comp from checkbox within tabpage_pick
integer x = 3003
integer y = 12
integer width = 649
integer height = 76
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "Show Components"
end type

event clicked;

//02/01 show or filter out component info depending on check
wf_set_pick_filter('Set')
end event

event constructor;
g.of_check_label_button(this)
end event

type dw_pick from u_dw_ancestor within tabpage_pick
event ue_calc_uom ( )
event ue_post_component ( )
event ue_process_pick ( )
event ue_set_column ( )
event ue_hide_unused ( )
event ue_keydown pbm_dwnkey
event ue_mouseclick pbm_rbuttondown
integer x = 27
integer y = 508
integer width = 3877
integer height = 1488
integer taborder = 20
string dataobject = "d_do_picking"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean hsplitscroll = true
end type

event ue_calc_uom();// 11/02 - PConkl - change QTY to Decimal

datastore	lds
datawindowChild	ldwc
Long	llRow, llUOMCount,llUOMPos,lltempPos,llNewRow
Decimal ldReqQty,ldWorkQty, ldWorkQty_mod
String	lsSKU, lsSupplier, lsUOMText, lsUOM, lsUOMText_Multi_UOM
boolean		lb_build_multi_uom

// 11/00 PCONKL - Calculate possible UOM combinations for SKU/QTY

llRow = This.GetRow()
If llRow <=0 Then Return

// 05/9/11 - cawikholm - Make this a baseline change - Set lb_build_multi_uom to TRUE
//IF Upper(gs_project) = 'PHXBRANDS' THEN
	
	// 05/3/11 - cawikholm - Phoenix brands do not want to see decimal for pallet qty.  Change to show
	// full palets and cases.
	// 05/9/11 - cawikholm - Set to TRUE so it is done for all projects
	lb_build_multi_uom = TRUE
	
//END IF

lsSku = This.getItemString(llRow,"sku")
lsSupplier = This.GetItemString(llRow,"supp_code")

This.Getchild("user_field2",ldwc) /*user field 2 is dropdown of pick choices*/
ldwc.Reset()

//UOM's for current Sku
lds = Create datastore
lds.dataobject = 'd_pick_uom'
lds.SetTransObject(SQLCA)

llUOMCount = lds.Retrieve(gs_project,lsSku,lsSupplier)

For llUOMPos = 1 to llUOMCount

	lsUOMText = ''
	lsUOMText_Multi_UOM = ''
	ldReqQty = This.GetItemNumber(llRow,"quantity")
	
	If ldReqQty < lds.getItemNumber(llUOMPos,"qty") Then Continue
	
	For llTempPos = llUomPos to llUOMCount
		
		//lowest UOM may be blank - set to 'EACH' if it is
		If (lltempPos = llUOMCount) and (isnull(lds.GetItemString(llTempPos,'uom')) or lds.GetItemString(llTempPos,'uom') = '') Then
			lsUOM = 'EA'
		Else
			lsUOM = lds.GetItemString(llTempPos,'uom')
		End If
	
		// Check if we are building a multi uom string - if true then add new uom
		IF lsUOMText_MUlti_UOM <> '' THEN
					
			lsUOMText_MUlti_UOM = lsUOMText_MUlti_UOM + ' ' + lsUOM
					
		END IF		
	
		//If current UOM can be divided into reamining required qty, take as many of this UOM
		If ldReqQty >= lds.getItemNumber(llTempPos,"qty") Then
		//	ldWorkQty = truncate(ldReqQty/lds.getItemNumber(lltempPos,"qty"),0) /*whole uoms divisble*/
			ldWorkQty = ldReqQty/lds.getItemNumber(lltempPos,"qty")
			
			// 05/03/11 - cawikholm - Added check for showing full pallet qty and cases - multiple uom on a line
			IF lb_build_multi_uom = TRUE THEN
		
				// Check if workqty is a whole number
				ldWorkQty_mod = Mod(ldReqQty,lds.getItemNumber(lltempPos,"qty"))
			
				IF ldWorkQty_mod > 0 THEN
					
					lsUOMText_Multi_UOM += String(truncate(ldReqQty/lds.getItemNumber(lltempPos,"qty"),0)) + '. ' &
														+ lsUOM + '  ' + String( ldWorkQty_mod ) + '.'
			
				END IF
			END IF
			
			lsUOMText += "," + string(ldWorkQty,'#######.#####') + ' ' + lsUOM
			ldReqQty = Mod(ldReqQty,(ldWorkQty * lds.getItemNumber(llTempPos,"qty")))
			
		End If /*req qty > UOM*/
		
	Next /*iteration of current UOM*/
	
	llNewRow = ldwc.InsertRow(0)
	lsUOMText = Right(lsUOMText,(len(lsUOMText) - 1)) /*strip off first , */
	
	ldwc.SetItem(llNewRow,'Pick_as',lsUOMText)
		
	IF lb_build_multi_uom = TRUE AND lsUOMText_Multi_UOM <> '' THEN
		
		llNewRow = ldwc.InsertRow(0)
		ldwc.SetItem(llNewRow,'Pick_as',lsUOMText_Multi_UOM)
		
	END IF	

Next /*UOM*/



end event

event ue_post_component();i_nwarehouse.of_create_comp_child(ilComprow,idw_main,idw_pick,iw_window)
end event

event ue_process_pick();
// 05/00 Pconkl - process Picking requests from recommendation window

Str_parms	lstrparms
Long			llFindRow,llArrayPos,llNewRow, llCompnumber,	llowner,			&
				llCurrentPickRow,	llLineItemNo,llRowID
				
String		lsFind,	lsSku, lsSupplier,lsLoc,lsSerial,lsLot, lsWareHouse,		&
				lsPO,	lsPO2,lsCont,lsWork,	lsCompInd,lsCOO,	lsSKUPARent,	&
				lsOwner, lsInvType, lsOwnerCode, lsOwnerType, lslength, lswidth, lsheight, lsweight, lsCompNo

string		lsUOM1,ls_comp
int 		li_shelf,li_days //29-Jul-2013 :Madhu added for shelf life validation
datetime ldexpdate	   //29-Jul-2013 :Madhu added for shelf life validation



//Parms returned rows of string for location and long for amt to putaway there!
lstrparms = Message.PowerobjectParm

// 02/01 PCONKL - Pick may be filtered to not show components
This.SetRedraw(False)
// rowfocus changed from filter will change, capture first
llCurrentPickRow = ilcurrpickrow

// 2002/08/12 Tony add row id to return to correct row
llRowID = This.GetRowIDFromRow(ilcurrpickrow)

lsWarehouse = idw_Main.GetITemString(1,'wh_Code')

//wf_set_pick_filter('Remove')

Choose Case Upperbound(lstrparms.String_arg)
		
	Case 1 /* picking everything from 1 location*/
		
		//String Arg contains Location, Serial # and Lot number seperated by pipe (changed from comma to pipe - 09/04 - PCONKL)
		lsWork = lstrparms.String_arg[1]
		lsLoc = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsLoc)+1))
		lsSerial = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsSerial)+1))
		lsLot = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsLot)+1))
		lsPO = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsPO)+1))
		lsPO2 = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsPO2)+1))
		lsCont = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsCont)+1))
		lsCOO = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsCOO)+1))
		lsInvType = Left(lsWork,(pos(lsWork,'|')-1))
		// Begin SIMS 227 - Akash for adding component no........05/23/2023
		lsWork = Right(lsWork,len(lsWork) - (len(lsInvType)+1))
		ls_comp = Left(lsWork,(pos(lsWork,'|')-1))
		lswork = Right(lsWork,len(lsWork) - (len(ls_comp)+1)) // 
		// End SIMS 227 - Akash.....05/23/2023
		
		//8/04 - PCONKL - add cntnr dims/weight
		lsWork = Right(lsWork,len(lsWork) - (len(lsInvType)+1))
		lsLength = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsLength)+1))
		lsWidth = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsWidth)+1))
		lsHeight = Left(lsWork,(pos(lsWork,'|')-1))
		lsWork = Right(lsWork,len(lsWork) - (len(lsHeight)+1))
		lsWeight = lsWork
		
		This.SetItem(llCurrentPickRow,"l_code",lsLoc)
		
		// 01/05 - PCONKL - Need Picking Seq when setting Location
		IF i_nwarehouse.inv_common_tables.of_select_location(lsWarehouse,lsLoc) > 0 THEN
			This.SetItem(llCurrentPickRow,"picking_seq",i_nwarehouse.inv_common_tables.id_picking_seq)
		END IF
		 
		This.SetItem(llCurrentPickRow,"serial_no",lsSerial)
		This.SetItem(llCurrentPickRow,"lot_no",lsLot)
		This.SetItem(llCurrentPickRow,"po_no",lsPO)
		This.SetItem(llCurrentPickRow,"po_no2",lsPO2)
		This.SetItem(llCurrentPickRow,"Country_of_Origin",lsCoo)
		// 11/02/2010 ujh Set COO Dropdown
		If upper(gs_project) = 'PANDORA'  Then
			wf_populate_COO_Dropdown(tab_main.tabpage_pick.dw_pick, lsCOO, llCurrentPickRow) // 11/02/2010 ujh Set COO Dropdown
		END IF
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
		This.SetItem(llCurrentPickRow,"container_ID",lsCont) /* 11/02 - PCONKL */
		This.SetItem(llCurrentPickRow,"inventory_Type",lsInvType) /* 06/03 - PCONKL */
		This.SetItem(llCurrentPickRow,"quantity",lstrparms.Decimal_arg[1])
//dts This.SetItem(llCurrentPickRow,"user_field2",string(lstrparms.Decimal_arg[1],'#####') + ' ea')
		//dts - 04/08 - now looking up Level-One UOM to write to 'Pick As' (user_field2)
		lsSku = This.GetItemString(llCurrentPickRow,"sku") /*current row we're processing*/
		lsSupplier = This.GetItemString(llCurrentPickRow,"supp_code") 
		//29-Jul-2013 :Madhu -Added shelf_life column for shelf life validation
		select upper(uom_1),shelf_life into :lsUOM1,:li_shelf
		From item_master
		Where Project_id = :gs_Project and sku = :lsSKU and supp_code = :lsSupplier;		
		This.SetItem(llCurrentPickRow,"user_field2",string(lstrparms.Decimal_arg[1],'#####.##') + ' ' + lsUOM1)

// TAM 2012/10/03 - Save current Component For NYCSP.  they need to delete all rows for the specific component number.  		
		lsCompNo = String(This.GetItemNumber(llCurrentPickRow,"component_no" ))
		
		//This.SetItem(llCurrentPickRow,"component_no",lstrparms.Integer_arg[1])
		//This.SetItem(llCurrentPickRow,"component_no",lstrparms.Long_arg[1])  // Interger to Change Long Value By Akash...05/May/2023//
		// 08/18/2023 - Dinesh 
		This.SetItem(llCurrentPickRow,"component_no",long(ls_comp))  /* SIMS 227 - 05/24/2023 adding the component No. ...by Akash */
		This.SetItem(llCurrentPickRow,"expiration_date",lstrparms.dateTime_arg[1])
		
		This.SetItem(llCurrentPickRow,"cntnr_Length",dec(lsLength)) //8/04 - PCONKL - add cntnr dims/weight
		This.SetItem(llCurrentPickRow,"cntnr_width",dec(lswidth))
		This.SetItem(llCurrentPickRow,"cntnr_height",dec(lsHeight))
		This.SetItem(llCurrentPickRow,"cntnr_Weight",dec(lsWeight))
		
		//29-Jul-2013 :Madhu Added for shelf life validation -START
		ldexpdate = this.getItemDateTime(llCurrentPickRow,"expiration_date")
		li_days =DaysAfter(today(),date(ldexpdate))
		
		if li_days < li_shelf  and li_shelf > 0 THEN
			MessageBox("Shelf Life Validation","Expiration date shouldn't be greater than current date + shelf life",StopSign!)
			This.SetItem(llCurrentPickRow,"quantity",0)
			This.SetItem(llCurrentPickRow,"l_code",'')
		END IF
		//29-Jul-2013 :Madhu Added for shelf life validation -END
		
		/* 09/03 - PCONKL */
		llowner = lstrparms.Long_arg[1]
		This.SetItem(llCurrentPickRow,"owner_id",llowner) 
		Select Owner_cd, Owner_Type 
		Into	:lsOwnerCode, :lsOwnerType
		From Owner
		Where Project_id = :gs_Project and owner_id = :llOwner;
		This.SetItem(llCurrentPickRow,'cf_owner_name',lsOwnerCode + '(' + lsOwnerType + ')')
		
		//If a component, copy location to dependent records
		If This.GetItemString(llCurrentPickRow,"component_ind") = 'Y' and This.GetItemNumber(llCurrentPickRow,'Component_no') > 0  Then

			// 06/03 - PCONKL - If we've changed locations, we need to delete and re-create the children
			llFindrow = llCurrentPickRow + 1 /*don't delete the current parent row*/
			
// TAM 2012/10/03 - For NYCSP they need to delete all children rows for the specific component number.  
               // Added Geistlich project_id with OR condition by Dhirendra for SIMS-66
			If upper(gs_project) = 'NYCSP' or  upper(gs_project) = 'GEISTLICH'   Then
				lsFind = "sku_parent = '" + This.GetItemString(llCurrentPickRow,"sku") + "' and component_no = " + lsCompNo /*sku from current putaway row*/
			Else
				lsFind = "line_item_no = " + String(This.GetItemNumber(llCurrentPickRow,'line_Item_no'))
			End If
			
// TAM 2017/07/14 - PEVS-739 Not deleting the last component child  
//			If llFindRow >= This.RowCount() Then llFindRow = 0
			If llFindRow > This.RowCount() Then llFindRow = 0
			
			Do While llFindRow > 0
				llFindRow = This.Find(lsFind,llFindRow,This.RowCount())
				If llFindRow > 0 Then
					This.DeleteRow(llFindRow)
				End If
// TAM 2017/07/14 - PEVS-739 Not deleting the last component child  
//				If llFindRow >= This.RowCount() Then llFindRow = 0
				If llFindRow > This.RowCount() Then llFindRow = 0
			Loop
			
			i_nwarehouse.of_create_comp_child(llCurrentPickRow,idw_main,idw_pick, iw_window) /* re-create the children*/
			
		End If /*Component*/
		
		This.SetFocus()
		
	Case 0 /*nothing entered*/
		
		This.SetFocus()
		
	Case Else /*more than 1 row*/
		
		//If more than 1 row, we will delete existing row for SKU and re-create
		
		lsSku = This.GetItemString(llCurrentPickRow,"sku") /*current row we're processing*/
		lsSkuParent = This.GetItemString(llCurrentPickRow,"sku_parent") /*current row we're processing*/
		lsSupplier = This.GetItemString(llCurrentPickRow,"supp_code") 
		lsCompInd = This.GetItemString(llCurrentPickRow,"component_ind")
		lsOwner = This.GetItemString(llCurrentPickRow,"cf_owner_name")
		lsCoo = This.GetItemString(llCurrentPickRow,"country_of_origin")
		llOwner = This.GetItemNumber(llCurrentPickRow,"owner_id")
		llLineItemNo = This.GetItemNumber(llCurrentPickRow,"Line_Item_No") /* 05/02 - PCONKL*/
		
		//dts - 04/08 - now looking up Level-One UOM to write to 'Pick As' below (user_field2)
		//29-Jul-2013 :Madhu -Added shelf_life column for shelf life validation
		select upper(uom_1),shelf_life into :lsUOM1,:li_shelf
		From item_master
		Where Project_id = :gs_Project and sku = :lsSKU and supp_code = :lsSupplier;

		//Delete all rows for this sku
		llFindrow = 1
//		If llCompNumber > 0 Then
//			lsFind = "sku_parent = '" + This.GetItemString(llCurrentPickRow,"sku") + "' and component_no = " + String(This.GetItemNumber(llCurrentPickRow,"component_no"))/*sku from current putaway row*/
//		Else
//			lsFind = "sku_parent = '" + This.GetItemString(llCurrentPickRow,"sku") + "'"
//		End If
// TAM 2012/10/03 - For NYCSP they need to delete all component rows for the line item number.  
		If upper(gs_project) = 'NYCSP'  Then
//			lsFind = "sku_parent = '" + This.GetItemString(llCurrentPickRow,"sku") + "' and component_no = " + String(This.GetItemNumber(llCurrentPickRow,"component_no"))/*sku from current putaway row*/
			lsFind = "Upper(SKU_parent) = '" + Upper(lsSKU) + "' and line_item_no = " + String(This.GetItemNumber(llCurrentPickRow,'line_Item_no'))
		Else
			lsFind = "Upper(SKU) = '" + Upper(lsSKU) + "' and line_item_no = " + String(This.GetItemNumber(llCurrentPickRow,'line_Item_no'))
		End If 
		
		Do While llFindRow > 0
			llFindRow = This.Find(lsFind,0,This.RowCount())
			If llFindRow > 0 Then
				This.DeleteRow(llFindRow)
			End If
		Loop
		
		//Rebuild from array
		For llArrayPos = 1 to Upperbound(lstrparms.String_arg)
			
			llnewRow = This.InsertRow(0)
			
			//String Arg contains Location, Serial # and Lot number seperated by pipe (changed from comma to pipe - 09/04 - PCONKL)
			lsWork = lstrparms.String_arg[llArrayPos]
			lsLoc = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsLoc)+1))
			lsSerial = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsSerial)+1))
			lsLot = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsLot)+1))
			lsPO = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsPO)+1))
			lsPO2 = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsPO2)+1))
			lsCont = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsCont)+1))
			lsCOO = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsCOO)+1))
			//lsInvType = lsWork
			lsInvType = Left(lsWork,(pos(lsWork,'|')-1))
		
			//8/04 - PCONKL - add cntnr dims/weight
			lsWork = Right(lsWork,len(lsWork) - (len(lsInvType)+1))
			lsLength = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsLength)+1))
			lsWidth = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsWidth)+1))
			lsHeight = Left(lsWork,(pos(lsWork,'|')-1))
			lsWork = Right(lsWork,len(lsWork) - (len(lsHeight)+1))
			lsWeight = lsWork
		
			This.setitem(llnewRow,'do_no', idw_main.GetItemString(1, "do_no"))
			This.SetItem(llNewRow,"sku",lssku)
			This.SetItem(llNewRow,"sku_parent",lsskuParent)
			This.SetItem(llNewRow,"supp_code",lssupplier)
			//This.SetItem(llNewRow,"owner_id",llOwner)
			This.SetItem(llNewRow,"Line_Item_No",llLineItemNo) /*05/02 - PCONKL */
			
			
			/* 09/03 - PCONKL */
			llowner = lstrparms.Long_arg[llArrayPos]
			This.SetItem(llNewRow,"owner_id",llowner)
					
			Select Owner_cd, Owner_Type 
			Into	:lsOwnerCode, :lsOwnerType
			From Owner
			Where Project_id = :gs_Project and owner_id = :llOwner;
			This.SetItem(llNewRow,'cf_owner_name',lsOwnerCode + '(' + lsOwnerType + ')')
						
			This.SetItem(llNewRow,"country_of_origin",lsCoo)
			// 11/02/2010 ujh Set COO Dropdown
			If upper(gs_project) = 'PANDORA'  Then
				wf_populate_COO_Dropdown(tab_main.tabpage_pick.dw_pick, lsCOO, llNewRow) // 11/02/2010 ujh Set COO Dropdown
			END IF
			/////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			//This.SetItem(llNewRow,"component_no",llCompnumber)
			This.SetItem(llNewRow,"l_code",lsloc)
			This.SetItem(llNewRow,"serial_no",lsserial)
			This.SetItem(llNewRow,"lot_no",lslot)
			This.SetItem(llNewRow,"po_no",lspo)
			This.SetItem(llNewRow,"po_no2",lspo2)
			This.SetItem(llNewRow,"container_ID",lsCont) /* 11/02 - PCONKL */
			This.SetItem(llNewRow,"quantity",lstrparms.decimal_arg[llArrayPos])
//dts		This.SetItem(llNewRow,"user_field2",string(lstrparms.Decimal_arg[llArrayPos],'#####') + ' ea')
			//dts - 04/08 - now looking up Level-one UOM (above)...
			This.SetItem(llNewRow,"user_field2",string(lstrparms.Decimal_arg[llArrayPos],'#####.##') + ' ' + lsUOM1)
			
			//This.SetItem(llNewRow,"component_no",lstrparms.Integer_arg[llArrayPos]) - /*Dinesh - SIMS-274 - 08/18/2023 - Google - System Error when trying to change a pick
			This.SetItem(llNewRow,"component_no",long(ls_comp))  //*Dinesh - SIMS-274 - 08/18/2023 - Google - System Error when trying to change a pick
			
			This.SetItem(llNewRow,"expiration_date",lstrparms.DateTime_arg[llArrayPos]) /* 11/02 - PCONKL */
			// TAM 2006/03/14 - Use Inventory Type returned from location selection screen instead of Main			
			//This.SetItem(llNewRow,"inventory_type", idw_main.GetItemString(1, "inventory_type"))
			This.SetItem(llNewRow,"inventory_type", lsInvType)
			
			//29-Jul-2013 :Madhu Added for shelf life validation -START
			ldexpdate = this.getItemDateTime(llNewRow,"expiration_date")
			li_days =DaysAfter(today(),date(ldexpdate))
		
			if li_days < li_shelf  and li_shelf >0 THEN
				MessageBox("Shelf Life Validation","Expiration date shouldn't be greater than current date + shelf life",StopSign!)
				This.SetItem(llNewRow,"quantity",0)
				This.SetItem(llNewRow,"l_code",'')
			END IF
			//29-Jul-2013 :Madhu Added for shelf life validation -END
						
			This.SetItem(llNewRow,"cntnr_Length",dec(lsLength)) //8/04 - PCONKL - add cntnr dims/weight
			This.SetItem(llNewRow,"cntnr_width",dec(lswidth))
			This.SetItem(llNewRow,"cntnr_height",dec(lsHeight))
			This.SetItem(llNewRow,"cntnr_Weight",dec(lsWeight))
		
			// 01/05 - PCONKL - Need Picking Seq when setting Location
			IF i_nwarehouse.inv_common_tables.of_select_location(lsWarehouse,lsLoc) > 0 THEN
				This.SetItem(llNewRow,"picking_seq",i_nwarehouse.inv_common_tables.id_picking_seq)
			END IF
		
			//for assigning item master data
			i_nwarehouse.of_item_master(gs_project,lssku,lsSupplier,idw_pick,llNewRow)	
			// 10/00 PCONKL - If this row is a componet, build child pick rows
			If lsCompInd = 'Y' Then
				i_nwarehouse.of_create_comp_child(llNewRow,idw_main,idw_pick,iw_window)
			End If /*Component parent Row*/
			
			This.SetItem(llNewRow,"component_ind",lsCompInd)

		Next
		
		This.Sort()
		This.GroupCalc()
		This.SetFocus()
		
// 2002/08/12 Tony add row id to return to correct row
		llRowID = This.GetRowIDFromRow(llNewRow)
		
End Choose

ib_changed = True
ibpickmodified = True

This.AcceptText()

// GailM 10/29/2018 DE6979 Google Re-check container scanned
If upper(gs_Project) = 'PANDORA' and il_ContainerTracked > 0 Then
	wf_check_container_scanned()
End If

// 02/01 PCONKL - Filter Pick list to not show components if box is not checked
//wf_set_pick_filter('SET')

This.SetRedraw(True)

// 2002/08/12 Tony add row id to return to correct row

llFindRow = This.GetRowFromRowID(llRowID)
This.SetRow(llFindRow)
This.ScrollToRow(llFindRow)
end event

event ue_set_column;This.SetColumn(isColumn)
end event

event ue_hide_unused();
// 10/02 - Pconkl - Hide Serial, Lot, etc if not used anywhere

This.SetRedraw(False)

//Serial
If This.Find("serialized_Ind = 'Y'",1,This.RowCOunt()) > 0 or This.Find("serial_no <> '-'",1,This.RowCOunt()) > 0 Then
	This.Modify("serial_no.width=550 serial_no_t.width=550")
	//TimA Pandora Issue #261 
	//Note: This is a tempory fix until the DW is fixed.  SKU_Picking_Ind is not being set to 'Y'
	//This is a Websphere fix
	This.Modify("serial_no.protect=0")
	
Else /*Hide*/
	This.Modify("serial_no.width=0 serial_no_t.width=0")
	//This.Modify("serial_no.visible=0 serial_no_t.visible=0")
End If

//Lot
If This.Find("lot_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 Then
	This.Modify("lot_no.width=600 lot_no_t.width=600")
Else /*Hide*/
	This.Modify("lot_no.width=0 lot_no_t.width=0")
	//This.Modify("lot_no.visible=0 lot_no_t.visible=0")
//TAM 2009/08/06 Lot - Pandora shows if value
	If Upper(gs_Project) = 'PANDORA' and This.Find("lot_no <> '-'",1,This.RowCOunt()) > 0 Then
		This.Modify("lot_no.width=600 lot_no_t.width=600")
	End If
End If

//PO NO
If This.Find("po_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 Then
	This.Modify("po_no.width=600 po_no_t.width=600")
Else /*Hide*/
	This.Modify("po_no.width=0 po_no_t.width=0")
	//This.Modify("po_no.visible=0 po_no_t.visible=0")
End If

//PO NO 2
If This.Find("po_no2_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 Then
	This.Modify("po_no2.width=600 po_no2_t.width=600")
Else /*Hide*/
	This.Modify("po_no2.width=0 po_no2_t.width=0")
	//This.Modify("po_no2.visible=0 po_no2_t.visible=0")
End If

//Container ID, also hide container dimensions
If This.Find("container_tracking_Ind = 'Y'",1,This.RowCOunt()) > 0 Then
	This.Modify("container_id.width=800 cntnr_length.Width=0 cntnr_width.Width=0 Cntnr_height.Width=0 Cntnr_weight.Width=0")
	//This.Modify("container_id.width=600 cntnr_length.visible=0 cntnr_width.visible=0 Cntnr_height.visible=0 Cntnr_weight.visible=0")
	//GailM 06/20/2017 - SIMSPEVS-605
	If Upper(gs_Project) <> 'PANDORA' Then
		This.Modify("container_id_scanned_ind_t.width=0 container_id_scanned_ind.width=0")
	Else
		This.Modify("container_id_scanned_ind_t.width=91 container_id_scanned_ind.width=91")	//GailM 06/20/2017 - SIMSPEVS-605
	End If
Else /*Hide*/
	This.Modify("container_id.width=0 cntnr_length.Width=0 cntnr_width.Width=0 cntnr_height.Width=0 cntnr_weight.Width=0")
	//This.Modify("container_id.visible=0 cntnr_length.visible=0 cntnr_width.visible=0 cntnr_height.visible=0 cntnr_weight.visible=0")
	//TAM 2009/08/12 Container Id - Pandora shows if value
	If Upper(gs_Project) = 'PANDORA' and This.Find("container_id <> '-'",1,This.RowCOunt()) > 0 Then
		This.Modify("container_id.width=600 cntnr_length.Width=0 cntnr_width.Width=0 Cntnr_height.Width=0 Cntnr_weight.Width=0")
		//This.Modify("container_id.width=600 cntnr_length.visible=0 cntnr_width.visible=0 Cntnr_height.visible=0 Cntnr_weight.visible=0")
		This.Modify("container_id_scanned_ind_t.width=91 container_id_scanned_ind.width=91")	//GailM 06/20/2017 - SIMSPEVS-605
	Else
		This.Modify("container_id_scanned_ind_t.width=0 container_id_scanned_ind.width=0 ")	//GailM 06/20/2017 - SIMSPEVS-605
	End If
End If

//Expiration Date
If This.Find("expiration_controlled_Ind = 'Y'",1,This.RowCOunt()) > 0 Then
	This.Modify("expiration_date.width=407 expiration_date_t.width=407")
Else /*Hide*/
	This.Modify("expiration_date.width=0 expiration_date_t.width=0")
	//This.Modify("expiration_date.width=0 expiration_date_t.visible=0")
End If

//Zone ID
If This.Find("zone_id <> '-'",1,This.RowCOunt()) > 0 Then
	This.Modify("zone_id.width=400 zone_id.width=400")
	This.Modify("zone_id.width=400 zone_id_t.visible=1")
Else /*Hide*/
	// This.Modify("zone_id.width=0 zone_id_t.width=0")
	This.Modify("zone_id.width=0 zone_id_t.visible=0")
End If

//Alt SKU Picked Ind
If This.Find("alt_sku_pick_ind = 'Y'",1,This.RowCOunt()) > 0 Then
	This.Modify("alt_sku_pick_ind.width=123")
Else /*Hide*/
	This.Modify("alt_sku_pick_ind.width=0")
	//This.Modify("alt_sku_pick_ind.visible=0")
End If

// 09/13 - PConkl - For Ariens, Validate Serial button is being obsoleted as serial numbers not in Content anymore. Only enable button for orders where serial numbers exist (existing orders)
If idw_Pick.Find("Serial_no <> '-'",1, idw_Serial.RowCount()) > 0 Then
	tab_main.tabpage_pick.cb_serial.enabled = True
Else
	tab_main.tabpage_pick.cb_serial.enabled = False
End If
		
This.SetRedraw(True)
end event

event ue_keydown;//17-Aug-2015 :Madhu- Added code to prevent Manul Scanning
If gbPressKeySNScan ='Y' THEN
	CHOOSE CASE gs_role
		CASE '1','2'
			IF this.getcolumnname( )='serial_no' and  ibPressF10Unlock =FALSE THEN
				If ibkeytype =FALSE THEN
					timer(0.5)
					ibkeytype=TRUE
				END IF

				//Get Key Pressed
				IF (KeyDown(KeyShift!) and KeyDown(KeyInsert!)) or (KeyDown(KeyControl!))THEN
					MessageBox("Manual Entry", " Control, Shift Key's are disabled!")
					this.setitem(idw_pick.getrow(), 'serial_no', '-')
					ibkeytype =FALSE
				ELSEIF KeyDown(KeyEnter!) or KeyDown(KeyLeftArrow!) or KeyDown(KeyRightArrow!) or KeyDown(KeyUpArrow!) or KeyDown(KeyDownArrow!) THEN
					timer(0)
					ibkeytype=FALSE
				END IF

			END IF
	END CHOOSE 
END IF
end event

event ue_mouseclick;//17-Aug-2015 :Madhu- Added code to prevent Manual Scanning
If gbPressKeySNScan ='Y' THEN
	CHOOSE CASE gs_role
		CASE '1','2'
			IF Upper(gs_project)='PANDORA' and this.getcolumnname( )='serial_no'  and ibPressF10Unlock =FALSE THEN
				ibmouseclick =FALSE
				MessageBox("MouseClick","Right Mouse Click (RMC) Option is disabled")
			ELSE 
				ibmouseclick =TRUE
			END IF
	END CHOOSE
END IF

return 0
end event

event constructor;call super::constructor;long i_indx

//09/14 - PCONKL - If not mobile enabled, move back up to original space since mobile DW not visible
if not g.ibMobileEnabled Then
	this.y = 320
End If

//DGM Make owner name invisible based in indicator
IF Upper(g.is_owner_ind) <> 'Y' THEN
	this.object.cf_owner_name.visible = 0
	this.object.cf_name_t.visible = 0
End IF

If g.is_coo_ind  <> 'Y' Then
	this.Modify("country_of_origin.visible=0")
End If

If not g.ibCCCEnabled  Then
	This.Modify("ccc_alloc_status.visible=0 ccc_alloc_status_t.visible = 0")
End iF

//03/10 - PCONKL - Description and native DEscription only visible for Warner right now
If gs_project <> 'WARNER' Then
	This.Modify("description.width=0 native_description.width= 0")
End IF

//////////////////////////////////////////////////////////////////////////////////////////////////////

// 10/06/2010 ujh  - Make country a dddw for Pandora.  This is needed for clicked on picking list generate.
if upper(gs_project) = "PANDORA" then
	//DatawindowChild	ldwc
	//TimA 04/09/13 Pandora Issue #560
	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.name='dddw_get_item_master_coo'
	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.displaycolumn='Country_Of_Origin'
	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.datacolumn='Country_Of_Origin'
//	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.name='dddw_country_2char'
//	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.displaycolumn='designating_code'
//	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.datacolumn='designating_code'

	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.useasborder='yes'
	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.allowedit='no'
	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.vscrollbar='yes'
	 tab_main.tabpage_pick.dw_pick.object.user_field1.width="650"
	 tab_main.tabpage_pick.dw_pick.object.user_field1.dddw.percentwidth="200" 
	 
	 tab_main.tabpage_pick.dw_pick.GetChild("user_field1", ldwc_ItemMasterCoo)
	 ldwc_ItemMasterCoo.SetTransObject(SQLCA)

//	 tab_main.tabpage_pick.dw_pick.GetChild("user_field1", ldwc)
//	 ldwc.SetTransObject(SQLCA)
//	 ldwc.retrieve()	 
	 tab_main.tabpage_pick.dw_pick.object.user_field1_t.text = 'COO'
	 tab_main.tabpage_pick.dw_pick.object.Country_of_Origin.visible = false
	 
//	 FOR i_indx = 1 to tab_main.tabpage_pick.dw_pick.RowCount()
//		 tab_main.tabpage_pick.dw_pick.SetItem(i_indx, 'user_field1', 'nl')
//	next
//


End If  // Project Pandora//

/////////////////////////////////////////////////////////////////////////////////////////////////////

end event

event doubleclicked;Str_parms	lStrparms,lStrparms_1
string ls_serialised_ind,	&
		lsFind, ls_wh_code
Long		llOwnerHold,	&
			llFindRow,		&
			llRowCount,		&
			llRowPos
String lsold_owner, lsnew_owner, lsColorCode, lsSKU
String lsGPNConversionFlag 

//TimA 08/11/11 Pandora #261
Integer liReturn			
If Row > 0 Then
	ilCurrPickRow = Row

	Choose Case dwo.name
			
		case 'po_no2' 
			lsGPNConversionFlag = f_retrieve_parm("PANDORA","FOOTPRINT","GPN_CONVERSION")
			//Gailm 6/26/2018 S20849 F8117 I1026 Google Footprint Partial Containers
			If Upper(gs_project) = 'PANDORA' and f_retrieve_parm("PANDORA","FLAG","CONTAINER MOVEMENT") = "Y" and  idw_main.GetItemString(1,"ord_status") <> 'C' &
				and idw_main.GetItemString(1,"ord_status") <> 'D' and idw_main.GetItemString(1,"ord_status") <> 'V' Then
				if ib_Changed then
					Messagebox(is_title,'Please save your changes first.')
					Return
				End if
				ilCurrPickRow = Row
				isPallet = This.GetITemString(ilCurrPickRow,'po_no2') 
				isContainer = This.GetItemString(ilCurrPickRow, 'container_id')
				lsColorCode = This.GetItemString(ilCurrPickRow, 'color_code' )
				isWhCode = idw_main.GetItemString( 1, 'wh_code' )
				lsSKU = This.GetItemString(ilCurrPickRow, 'sku')
				
				If lsColorCode = "0" or lsColorCode = "" Then			//No action required
					If ibFootprint Then											//Only footprint GPNs
						If gs_role <= "2" Then								//SuperDuper Access Only -- 12/16/2019 Opened to all
							If lsGPNConversionFlag = "Y" Then
								If idw_pick.getitemstring(ilCurrPickRow,'po_no2') <> '-' and idw_pick.getitemstring(ilCurrPickRow,'container_id') <> '-' Then
									MessageBox("Change Pallet and/or Container","Footprint GPN " + lsSKU + " at Row " + String(ilCurrPickRow) + " does not contain a dash and cannot change pallet or container through this process.")
								ElseIf MessageBox("Footprint GPN " + lsSKU + " processing","Do you wish to change pallet or container for this pick row?",Question!,YesNo!) = 1 Then
									iw_window.TriggerEvent("ue_enter_serial_numbers") 
								End If
							End If
						End If
					End If
				ElseIf lsColorCode = "6" Then			//DE7355 Move containers out of pallet - Pallet is allocated by another order
					wf_check_footprint_containers()
					//iw_window.TriggerEvent("ue_move_pallet") temp
				ElseIf lsColorCode = "7" Then			//DE7355 Move containers out of pallet
					iw_window.TriggerEvent("ue_move_pallet")
				ElseIf	lsColorCode = "8" Then			//DE10131 Mixed Containerization
					iw_window.TriggerEvent("ue_pick_mixed") 
				ElseIf	lsColorCode = "9" Then			//S37314 GTN Conversion Procedss
					iw_window.TriggerEvent("ue_enter_serial_numbers") 
				ElseIf ibCanSplitContainer = TRUE Then
					
					//19-MAR-2019 :Madhu S30668 -Mixed Containerization - Removed Pallet and Container Id condition
					//If isPallet = '-' or isContainer = '-' Then
					//	MessageBox("Container Split Error", "Cannot split this pallet/container.  No pallet data detected.",StopSign!, OK!)
					//Else
						iw_window.TriggerEvent("ue_pick_pallet")
					//End If
				Else
					MessageBox("Container Split ", "Cannot split this pallet/container at this time.~nPallet " + isPallet + " has be allocated through multiple orders.",StopSign!, OK!)
				End If
			End If

		case 'serial_no' 
			
	 		ls_serialised_ind = this.object.serialized_ind[ row ]
			IF upper(ls_serialised_ind) = 'Y'  and &
	  		 Upper(idw_main.object.ord_status[1])	<> 'C' THEN
				//TimA 08/08/11
				//Pandora issue #261 The problem is the rowfocus event does not fire if on the first row.  So if there is a row set the instance varable to 1
				If ilcurrpickrow = 0 and row >0 then
					ilcurrpickrow = 1
				end if
				//i_nwarehouse.of_do_serial_nos(idw_pick,ilcurrpickrow)
				liReturn = i_nwarehouse.of_do_serial_nos(idw_pick,ilcurrpickrow,idw_main.GetItemString(1,'wh_code'))
				dwobject ldwo
				ldwo = dwo
				If liReturn > 0 then
					this.event itemchanged( row, ldwo,this.getitemString(row,"serial_no"))
					// ET3 2013-01-29 Force PickList save
					ibpickmodified = TRUE
				end if

			END IF		

			
//--

	case "po_no"  /* 04/04 - MAnderson - Multi PO */
		if this.getitemstring(row,'po_no') = 'MULTIPO' then
		
			lstrparms.Long_arg[1] = 0
	
			lstrparms.String_arg[1] = this.getItemString(row,"sku")
			lstrparms.String_arg[2] = this.getitemstring(row,"supp_code")
			lstrparms.String_arg[3] = this.getitemString(row,"do_no")

			lstrparms.String_arg[4] = "DO"

			if NOT isnull(lstrparms.String_arg[1]) and &
				NOT isnull(lstrparms.String_arg[2]) and &
				NOT isnull(lstrparms.String_arg[3])  THEN
				
				openwithParm(w_ro_multipo,lstrparms)
				
				// ET3 2013-01-29 Force PickList save
				ibpickmodified = TRUE
			end if
	
		end if	

			

//--
			
			

		Case "cf_owner_name"
			
			// 09/14 - PCONKL - Don't allow to be changed if there are any mobile statuses (released to mobile)
			if This.GetITemString(row,'mobile_status_Ind') <> '' Then Return
			
			//Cant update Component child rows
			If This.GetITemString(row,'component_ind') = '*' or Upper(idw_main.object.ord_status[1])	= 'C' or &
				Upper(idw_main.object.ord_status[1])	= 'D' or Upper(idw_main.object.ord_status[1])	= 'V' Then Return
			
			ls_wh_code = idw_main.GetItemString(1, "wh_code")	
						
			OpenWithParm(w_select_owner, ls_wh_code)
			lstrparms = Message.PowerObjectParm
			If Not lstrparms.Cancelled and UpperBound(lstrparms.Long_arg) > 0 Then
				
				//07/02 - Pconkl - If checked, update all detail rows, otherwise just current
				If lstrparms.String_Arg[4] = 'Y' Then /*update all record*/
					llRowCount = This.RowCount()
					For llRowPOs = 1 to llRowCount
						This.SetItem(llrowpos,"owner_id",Lstrparms.Long_arg[1])
						//Jxlim 03/17/2011 Check if owner code change, If so set ibpickModified to True					
						lsOld_owner = This.GetItemString(llRowPos,"cf_owner_name")
						//Messagebox('oowner', lsOld_owner)
							This.SetITem(llRowPos,"cf_owner_name",Lstrparms.String_arg[1])
						lsNew_owner = This.GetItemString(llRowPos,"cf_owner_name")
						//Messagebox('oowner', lsNew_owner)						
							If lsOld_owner <> lsNew_owner Then
								ibpickModified = True
							End If
						//This.SetITem(llRowPos,"cf_owner_name",Lstrparms.String_arg[1])				
						//Jxlim 03/18/2011 end of changed
					Next
					
					//Update all order details as well
					llRowCount = idw_detail.RowCount()
					For llRowPos = 1 to llRowCount
						idw_detail.SetItem(llRowPos,"owner_id",Lstrparms.Long_arg[1])
						idw_detail.SetITem(llRowPos,"cf_owner_name",Lstrparms.String_arg[1])
					Next
					
				Else /*only update current */
					
					llOwnerHold = This.GetITemNumber(row,'owner_id')
					This.SetItem(Row,"owner_id",Lstrparms.Long_arg[1])
					//Jxlim 03/17/2011 Check if owner code change, If so set ibpickModified to True					
						lsOld_owner = This.GetItemString(Row,"cf_owner_name")
						//Messagebox('update oowner', lsOld_owner)
							This.SetITem(row,"cf_owner_name",Lstrparms.String_arg[1])
						lsNew_owner = This.GetItemString(Row,"cf_owner_name")
						//Messagebox('update nowner', lsNew_owner)
						
							If lsOld_owner <> lsNew_owner Then
								ibpickModified = True
							End If
					//This.SetITem(row,"cf_owner_name",Lstrparms.String_arg[1])		
					//Jxlim 03/18/2011 end of changed
				
					//Owner Change needs to be reflected on Order Detail as well
					lsFind = "sku = '" + This.GetItemString(row,"sku") + "' and owner_id = " + String(llOwnerHold) 
					llFindRow = idw_detail.Find(lsFind,1,idw_detail.RowCount())
					Do While llFindRow > 0
						idw_detail.SetItem(llFindRow,"owner_id",Lstrparms.Long_arg[1])
						idw_detail.SetITem(llFindrow,"cf_owner_name",Lstrparms.String_arg[1])
						llFindRow = idw_detail.Find(lsFind,(llFindRow + 1),(idw_detail.RowCount() + 1))
					Loop
					
					//If a component, copy Owner to dependent records
					If This.GetItemString(row,"component_ind") = 'Y' Then
						lsFind = "sku_parent = '" + This.GetItemString(row,"sku_parent") + "' and component_no = " + String(this.GetItemNumber(row,"component_no"))
						llFindRow = This.Find(lsFind,1,This.RowCount())
						Do While llFindRow > 0
							This.SetItem(llFindRow,"owner_id",Lstrparms.Long_arg[1])
							This.SetITem(llFindrow,"cf_owner_name",Lstrparms.String_arg[1])
							llFindRow = This.Find(lsFind,(llFindRow + 1),(This.RowCount() + 1))
						Loop

						// ET3 2013-01-29 Force PickList save
						ibpickmodified = TRUE

					End If /*Component*/
				
				End If /*all or current row*/
								
				ib_changed = True
				
				
				
			End If /*owner selection not cancelled*/
			
			// 02/01 PCONKL - Filter Pick list to not show components if box is not checked
			wf_set_pick_filter('Set')
			
			This.SetRedraw(True)
		Case 'container_id'
			il_SingleBoxIdSwap = 1
			il_DblClkPickRow = Row
			if ib_Changed then
				Messagebox(is_title,'Please save your changes first.')
				Return
			End if
			//TimA 07/15/15
			//GailM 06/20/2017 605 - Validate BoxID - Remove check for User_Field5 (CommodityCode)
			//If pos ( Upper(is_BoxIDLookup ), ',' + This.GetItemString(Row,"User_Field5") + ',',  1 ) > 0 then
			//If This.GetItemString(Row,"User_Field5") = 'HD' Then
			If Upper(gs_project) = 'PANDORA' and il_CountNotScanned > 0 Then
				tab_main.tabpage_pick.cb_replace_boxid.event clicked( )
			Else
				messagebox('Replace/Vaidate Box IDs', 'All Box IDs have been validated')
			End If

	//SARUN2016Feb10 : On Double Click Calling Item Master : Start
	
	Case 'sku'
	
// TAM 05/2018 - S19728 - Google -  SIMS to provide access on doubleclick GPN from order detail for all users with view(Same as Item Maintenance Menu)
	//	If f_check_access ("w_maintenance_itemmaster","") = 1 Then
		If f_check_access ("M_ITEM","") = 1 Then
			lStrparms_1.String_arg[1] = "ITEMMASTER"
			lStrparms_1.String_arg[2] =  this.GetItemString(row, 'sku')
			lStrparms_1.String_arg[3] =  this.GetItemString(row, 'supp_code')
			if isvalid(w_maintenance_itemmaster) then
				MessageBox(is_title,"Item Master is Already Open, First Close the existing window and then DoubleClick")
			else	
				OpenSheetwithparm(w_maintenance_itemmaster,lStrparms_1, w_main, gi_menu_pos, Original!)
			end if
		End If
			
		//SARUN2016Feb10 : On Double Click Calling Item Master : End
			
	End Choose
	
END IF


end event

event itemchanged;// 11/02 - PConkl - QTY field changed to Decimal

string ls_supp_code,ls_alternate_sku,ls_coo,ls_sku,lsFind, lsChildSku,lsChildSupplier,lsddsql,lsUOM, lsWarehouse, lsCOmpType, lsGroup, lsLotInd
Long ll_row,ll_rows,ll_owner_id, llFindRow,llFindrow2,llCount, llSerialCount, ll_pickrow
Long ll_line_item_no,ll_LineCount, llrc
String ls_DoNo, lsCoo,ls_Carton_No, ls_Find_Carton, ls_checked,lsloctype //07-Oct-2015 :Madhu Added lsloctype
int li_checked
String lsMsg, lsOrigCOO, lsFilter, ls_old_containerId, ls_old_pono2

Decimal	ldExtQty, ldPrevQty, ldQty
DatawindowChild	ldwc
boolean lb_validcoo
nvo_coo lnvo_coo
DateTime	ldtDT

//TimA Pandora issue #261
String ls_ShipType, ls_serial_No, ls_Original_Value, ls_L_code,  ls_InvType, ls_SupCode, ls_Lot_No, ls_Po_No, ll_OwnerId

// /GailM select all on pick list should not cause the Are You Sure warning
ib_changed = True

//12/06 - PCONKL - With new server based allocation, modifying a pick row will cause serial records to be deleted. Warn here
//10/13 - GailM - Pandora Issue 655 - Do not warn if the delete checkbox is checked
If idw_serial.RowCount() > 0 And this.GetItemStatus(row,0,Primary!) <> New! and this.GetItemStatus(row,0,Primary!) <> NewModified! &
	and lower(dwo.name) <> 'c_delete_ind' Then
	
	if lower(dwo.name) <> 'user_field1' then //dts 2011-02-14 - not triggering this when they change user field1
		//See if we have any serial rows for this line/sku/supplier
		lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'sku')) + "' and Upper(Supp_Code) = '" + Upper(This.GetITemString(row,'supp_code')) + "'"
		lsFind += " and Line_Item_No = " + String(This.GetITemNumber(row,'line_Item_No'))
		If idw_serial.Find(lsFind,1,idw_Serial.RowCount()) > 0 Then
			
			If Messagebox(is_title,'*** CAUTION***~r~rModifying this Pick Row will cause the serial numbers you have already entered for this row to be deleted!~r~rDo you want to continue?',Exclamation!,YesNo!,2) = 2 Then
				Return 1
			End If
			
		End If
	end if
	
End If

ib_changed = True

//TAM 2011/03/09  Changed per daves instruction
//ibpickmodified = True
if lower(dwo.name) <> 'user_field1' then //dts - not triggering this when they change user field1
	ibpickmodified = True
end if

// ET3 2013-01-29 Force PickList save
ibpickmodified = TRUE

Choose Case dwo.name
		
	case 'container_id'
	
		ls_old_containerId = idw_pick.getItemString( row, 'container_id', primary!, true)
		
		//GailM 8/11/2020 S48701 F24564 Google - Prevent N/A on put away and stock adjustment and stock adjustment
		//Force container_id to 5 or more characters and do not allow anything less that 5 to be anything but NA
		If UPPER(gs_project) = 'PANDORA' and len(data) < 5 and data <> 'NA' Then
			Messagebox(is_title,"ContainerId must be over 4 characters except the value NA.  Please re-enter.")
			idw_pick.setitem(row, 'container_id', ls_old_containerid)
			This.SetFocus()
			This.SelectText(1, Len(ls_old_containerId))
			Return 1
		End If
		
	case 'po_no2'
		
		ls_old_pono2 = idw_pick.getItemString( row, 'po_no2', primary!, true)
		
		//GailM 8/11/2020 S48701 F24564 Google - Prevent N/A on put away and stock adjustment and stock adjustment
		//Force po_no2 to 5 or more characters and do not allow anything less that 5 to be anything but NA
		If UPPER(gs_project) = 'PANDORA' and len(data) < 5 and data <> 'NA' Then
			Messagebox(is_title,"PalletId must be over 4 characters except the value NA.  Please re-enter.")
			idw_pick.setitem(row, 'po_no2', ls_old_pono2)
			This.SetFocus()
			This.SelectText(1, Len(ls_old_pono2))
			Return 1
		End If
			
	case 'sku'
		
		//	This.SetItem(row,'sku_parent',data)
		//Check if item_master has the records for entered sku	
		llCount = i_nwarehouse.of_item_sku(gs_project,data)
		Choose Case llCount
			Case 1 /*only 1 supplier, Load*/
				This.SetItem(row,"supp_code",i_nwarehouse.ids_sku.GetItemString(1,"supp_code"))
				ls_sku = data
				ls_supp_code = i_nwarehouse.ids_sku.GetItemString(1,"supp_code")
				goto pick_data
			Case is > 1 /*Supplier dropdown retrievd when clicked*/
				This.object.supp_code[row]=""
			Case Else			
				MessageBox(is_title, "Invalid SKU, please re-enter!",StopSign!)
				tab_main.selecttab(4)
				return 1
		END Choose
	
	Case 'supp_code'
		
	 ls_sku = this.Getitemstring(row,"sku")
	 ls_supp_code = data
	 goto pick_data
	 
	case 'l_code'
		
		// 08/04 - PCONKL = Allow N/A for Components
		If This.GetItemString(row,"component_ind") = 'Y' and data = 'N/A' Then Return 0
		
		// 01/03 - PCONKL - Validate here instead of when saving
		//07-Oct-2015 :Madhu- Added lsloctype
		lsWarehouse = idw_main.GetItemString(1,'wh_code')
		Select l_type,Count(*) into :lsloctype,:llCount
		From Location WITH (NOLOCK)
		where wh_code = :lsWarehouse and l_code = :data
		group by l_type;
		
		If llCount = 0 or isNull(llCount) Then
			MessageBox(is_title, "Invalid Location, please re-enter!")
			Return 1
		End If

		//07-Oct-2015 :Madhu - Don't allow users to provide CROSS DOCK Location for Non Cross Dock Orders -START
		If Upper(gs_project)='PANDORA' and lsloctype='9' and idw_main.getitemstring(1,'Crossdock_Ind')='N' THEN
			MessageBox(is_title,"Can't use CROSS DOCK Location for Non CROSS DOCK Orders!")
			f_method_trace_special( gs_project, this.ClassName() + ' - itemchanged', 'End itemchanged ' + ' Can not use Location# '+data+' for Non CROSS DOCK Orders!' ,is_dono, ' ',' ',isinvoice_no)
			Return 1
		End If
		//07-Oct-2015 :Madhu - Don't allow users to provide CROSS DOCK Location for Non Cross Dock Orders -END

		IF i_nwarehouse.inv_common_tables.of_select_location(lsWarehouse,data) > 0 THEN
				This.object.picking_seq [row] = i_nwarehouse.inv_common_tables.id_picking_seq
		 END IF		
		
		//If a component, copy location to dependent records
		If This.GetItemString(row,"component_ind") = 'Y' Then
			
			Messagebox(is_title,"You must use the Pick Locs button to change the location for a Component!")
			Return 2
		End If /*Component*/
		
	Case 'inventory_type'
		
		//If a component, copy location to dependent records
		If This.GetItemString(row,"component_ind") = 'Y' Then
			//lsFind = "sku_parent = '" + This.GetItemString(row,"sku_parent") + "' and component_no = " + String(this.GetItemNumber(row,"component_no"))
			//09/02 - update child for entire line item - we may have multiple levels of children 
			lsFind = "line_item_no = " + String(This.GetItemNumber(row,'line_Item_no'))
			llFindRow = This.Find(lsFind,1,This.RowCount())
			Do While llFindRow > 0
				This.SetItem(llFindRow,"inventory_type",data)
				llFindRow = This.Find(lsFind,(llFindRow + 1),(This.RowCount() + 1))
			Loop
		End If /*Component*/
		
	Case 'quantity'
		//GailM 2/18/2019 S29552 F13773 I1745 Philips BlueHeart  - SIMS - Product Picked - Client Changes
		//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
		
		//DHIRENDRA DE23785-SIMS PHILIPSCLS SHORT PICK OVERPICK ISSUE- START
               setCalcAllocated( true)
               //DHIRENDRA DE23785-SIMS PHILIPSCLS SHORT PICK OVERPICK ISSUE- END
					
		If Upper(gs_project)='PHILIPSCLS' OR Upper(gs_project)='PHILIPS-DA' Then
			ldQty = Dec(data)
			ldPrevQty = This.GetItemNumber( row, "quantity" )
			If IsNull(ldQty) or ldQty = 0 Then
				lsMsg = "Picking line item will be considered as cancelled.~n~r" +&
							"Pick line will be removed.  Zero qty will be reported~n~rthru delivery detail.~n~r~n~r" +&
							"Do you want to Cancel this line item?"
				If MessageBox("Partial Order Cancellation", lsMsg, Question!, YesNo!) = 1 Then
					This.SetItem(row, "c_delete_ind", "Y")
					Parent.cb_pick_delete.TriggerEvent("clicked")
				Else
					This.SetItem(row, "quantity", ldPrevQty)
				End If
				Return 1
			End If
			
			return
		End If
		
		// pvh - 11/21/06 - calc allocatted qty
		setCalcAllocated( true )
		
		// 11/00 PCONKL - If qty has changed, reset the UOM Text to qty + EA
		lsUOM = data + ' EA'
		This.SetItem(row,'user_field2',lsUOM)
		
		// 11/14 - PCONKL - If mobile status is discprepancy and adjusting qty to match what was actually picked, change status to complete
		If This.GetITemString(row,'mobile_status_ind') = 'D' Then
			
			If Dec(data) = This.GetITemNUmber(row,'mobile_picked_qty') Then
				
				This.SetItem(row,'mobile_status_ind','C')
				
			End If
			
		End If /* Mobile Discprepancy*/
		
		// 09/00 PCONKL - If Quantity has changed for a component Item, recalc child extended amts
		If This.GetItemString(row,"component_ind") = 'Y' Then
		//	lsFind = "sku_parent = '" + This.GetItemString(row,"sku_parent") + "' and component_no = " + String(this.GetItemNumber(row,"component_no"))
			//09/02 - update child for entire line item - we may have multiple levels of children 
			lsFind = "line_item_no = " + String(This.GetItemNumber(row,'line_Item_no'))
			llFindRow = This.Find(lsFind,1,This.RowCount())
			Do While llFindRow > 0
				
				ldExtQty = 0
				
				ls_Sku = This.GetITemString(Row,'sku_parent')
				lsChildSku = This.GetITemString(llFindRow,'sku')
				ls_supp_code = This.GetITemString(row,"supp_code")
				lsChildSupplier = This.GetITemString(llFindRow,'supp_code')
				
				Select Child_qty Into :ldExtQty
				From Item_Component WITH (NOLOCK)
				Where Project_id = :gs_project and sku_parent = :ls_Sku and sku_child = :lsChildSku and supp_code_parent = :ls_supp_code and supp_code_child = :lsChildSupplier
				Using SQLCA;
				
				If ldExtQty > 0 Then
					This.SetItem(llFindRow,'quantity',ldExtQty* Long(data))
				Else /* 10/06 - PCONKL - There might be a Delivery_BOM record */
					
					Select Child_qty Into :ldExtQty
					From Delivery_BOM WITH (NOLOCK)
					Where Project_id = :gs_project 
					and sku_parent = :ls_Sku 
					and sku_child = :lsChildSku 
					and supp_code_parent = :ls_supp_code 
					and supp_code_child = :lsChildSupplier
					Using SQLCA;
				
					If ldExtQty > 0 Then
						This.SetItem(llFindRow,'quantity',ldExtQty* Long(data))
					End If
					
				End If
								
				llFindRow = This.Find(lsFind,(llFindRow + 1),(This.RowCount() + 1))
				
			Loop
			
		End If /*Component Item*/
		
	Case "country_of_origin" /* 09/00 PCONKL - validate Country of Origin*/

		If gs_project = 'PANDORA' Then
				idwc_IM_Coo_Pick.Retrieve(gs_project,This.GetITemString(row,'sku'),This.GetITemString(row,'supp_code'))
		End If				
		// Create the COO object.
		lnvo_coo = Create nvo_coo
		
		// If we can determine if the COO is a valid 2 char country code.
		If lnvo_coo.f_validatecoo(data, lb_validcoo) then
			
			// If the coo is valid,
			If lb_validcoo then
		
				//02/02 - PCONKL - we will now allow 2,3 char or 3 numeric COO and validate agianst Country Table
				ls_COO = f_get_Country_Name(data)
				If isNull(ls_COO) or ls_COO = '' Then
					MessageBox(is_title, "Invalid Country of Origin, please re-enter!")
					Return 1
				End If
				
				// KRZ If this COO is XX,
				If data = 'XX' then
					
					// Change the COO to the 3X version.
					Post setitem(row, 'country_of_origin', 'XXX')
				End If
				
			// Otherwise, if this is NOT a valid COO,
			Else
				
				// Return 1 to reject the value.
				Return 1
				
			// end if this is NOT a valid COO.
			End If
			
		// End If we can determine if the coo is a valid 2 char country code.
		End If
		
		// Destroy the lnvo_coo object.
		Destroy lnvo_coo

	Case "staging_location"

		integer li_idx
		
		for li_idx =1 to this.RowCount()
			
			IF li_idx = 1 then continue
			
			this.SetItem( li_idx, "staging_location", data)
			
		next 		
			
	Case 'lot_no'
		
		// 01/09 - PCONKL - For LMC, we need to validate Lot_no against the Luhn Mod N algorithm
		IF Upper(gs_Project) = 'LMC' Then
				
			If not iuo_check_digit_validations.uf_validate_luhn(data) Then
				Messagebox(is_title,"Invalid Lot Number!",StopSign!)
				Return 1
			End IF
	
		End If
		
		// 11/10 - PCONKL For Comcast, if we are transfering pallets to an SIK warehouse, we want to validate that we have enough serial numbers and we have Unit ID's and/or MAC ID's based on the product group (currently DTA or uDTA)
		IF Upper(gs_Project) = 'COMCAST' Then
			
			If idw_Main.GetItemString(1,'ord_type') = 'Z' and Left(idw_Main.GetITEmString(1,'Cust_Code'),7) = 'COM-SIK' Then
				
				//Get the item group so we can determine which addresses we need to validate against
				ls_sku = this.Getitemstring(row,"sku")
				ls_supp_code =  this.Getitemstring(row,"supp_Code")
				
				Select grp, Lot_Controlled_Ind into :lsGroup, :lsLotInd
				From Item_MAster WITH (NOLOCK)
				Where project_id = :gs_Project 
				and sku = :ls_Sku 
				and supp_Code = :ls_Supp_Code
				USING SQLCA;
				
				if (lsGroup = 'DTA' or lsGroup = 'UDTA') and lsLotInd = 'Y' Then
					
					Choose Case Upper( lsGROUP)
							
						Case 'DTA' /*Needs Unit ID (User Field1) */
							
							Select Count(*) into :llSerialCount
							From Carton_serial
							Where Project_id = :gs_Project and pallet_id = :data and User_Field1 > '';
							
						Case 'UDTA' /*Needs Unit ID (User Field1) and RFMAC (User Field2) */
							
							Select Count(*) into :llSerialCount
							From Carton_serial
							Where Project_id = :gs_Project and pallet_id = :data and User_Field1 > '' and User_Field2 > '';
							
					End Choose
					
					If llSerialCount <> This.GetITemNumber(row,'quantity') Then /*mismatch between pick qty for pallet and number of valid serial numbers */
					
						Messagebox(is_title,"This pallet cannot be transferred to the SIK warehouse for one or more of the following reasons:~r~r - No Serial Numbers on file~r - Pallet ID not correct~r - Full pallet not being transferred~r - Qty discrepancy between Pick Qty and Serial Count~r - Missing Unit ID and/Or RF MAC ID~r~rPlease correct the data or transfer a different pallet.~r~rPallet Count = " + String(This.GetITemNumber(row,'quantity')) + ",  Serial Count = " + String(llSerialCount) ,StopSign!)
						Return 1
					
					End If
					
				End If /* DTA or uDTA and Lot (Pallet) Controlled*/
				
			End If /*warehouse transfer to SIK Warehouse*/
			
		End If /* Comcast */
		
	Case 'serial_no'
		
		//TimA 08/10/11 Pandora issue #261
		ls_Original_Value  = This.GetItemString(row,'serial_no',Primary!,True)
		lsWarehouse = idw_main.GetItemString(1,'wh_code')
		ls_sku = this.Getitemstring(row,"sku")
		ls_serial_No = data
		
		// 09/13 - PCONKL - For Ariens, we need to be able to swap a seial with one on another order if they aren't picking what SIMS told them to.
		//						WE might want to make this baseline at some point.
		If upper(gs_Project) = 'ARIENS' Then
			
//			llRC = wf_serial_Swap(row,ls_original_value,ls_Serial_no)
//			dwItemStatus lstat
//			lstat = this.GetITEmStatus(row,0,Primary!)
//			
//			If  llRC< 0 Then
//				return 1
//			End If
			
		Else
		
			// We need to compare the original primary buff numer because it was already moved 
			// from Contenet and if the user choose the number again they get the invalid serial number error again.
			If ls_serial_no <> ls_original_value then
				select 
					Inventory_Type.Inventory_Shippable_Ind,
					Content.L_code,
					Content.Inventory_Type,
					Content.Country_of_Origin,
					Content.Supp_Code,
					Content.Lot_no,
					Content.Po_No,
					Content.Owner_Id
				INTO :ls_ShipType, :ls_L_code, :ls_InvType, :ls_COO, :ls_SupCode, :ls_Lot_No, :ls_Po_No, :ll_OwnerId
				from Content WITH (NOLOCK)
					JOIN Inventory_Type WITH (NOLOCK) ON Content.Inventory_Type = Inventory_Type.Inv_Type
				where content.Project_ID = :gs_project
					and Inventory_Type.Project_ID = :gs_project
					and Content.WH_Code = :lsWarehouse
					and Content.SKU = :ls_sku
					and Serial_No = :ls_serial_no
				Using SQLCA;
		
				If ls_ShipType ="" then
					Messagebox(is_title,"'" + ls_serial_no + "' INVALID SERIAL NUMBER:",StopSign!)
				//	this.object.serial_no.undo()
					Return 1
				End if
			
				If ls_ShipType <> 'Y' then
					Messagebox(is_title,"THIS SERIAL NUMBER '" + ls_serial_no + "' HAS A NON-SHIPPABLE INVENTORY TYPE",StopSign!)
							//this.object.serial_no.undo()
					Return 1
				Else
					This.SetItem(row,'Country_of_Origin',ls_COO)
					This.SetItem(row,'Inventory_Type',ls_InvType)
					This.SetItem(row,'L_Code',ls_L_code)
					This.SetItem(row,'Supp_Code',ls_SupCode)
					This.SetItem(row,'Lot_No',ls_Lot_No)
					This.SetItem(row,'PO_No',ls_Po_No)
					This.SetItem(row,'Owner_Id',ll_OwnerId)			
					This.SetItem(row,'quantity',1)			
				end if
			
				// Jxlim 07/17/2013 SkuSerialHold validation, initiated by Arien; Note If serialize is captured, seem logic need to happen on serial tab
				If  Upper(gs_project) = 'ARIENS'   Then
					If wf_validate_skuserialhold() < 0 Then			
						Return 
					End If
				End If 
			
	//			//Jxlim 08/08/2013 Ariens
	//			This.ScrollToRow(row + 1)
	//			isColumn = "serial_no"
	//			This.PostEvent("ue_set_column")
			Else
				ibpickmodified = false
			End if
			
		End If /*Ariens */
		
	Case 'user_field1'
		if gs_project = 'PANDORA' then
			//TimA 09/12/11 Pandora issue #226
			//If the user changes the COO change it in the Pack also
			//GailM 6/29/2020 DE15963 COO on picklist is not updating on the packing list
			ls_COO = data
			lsOrigCOO = idw_pick.GetItemString(row, 'user_field1')
			
			idw_pick.selectrow(row,false) // Dhirendra - 02/11/2021 - S52818 -COO on picklist
			
			If data > '' and idw_Pack.RowCOunt() > 0 THEN					
				lsFilter = "Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Line_Item_no = " + String(This.GetITemNumber(row,'Line_Item_no')) + " and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
				lsFilter += " and Upper(pack_container_id) = '" + Upper(This.GetItemString(row,'container_id')) + "' and country_of_origin = '" + lsOrigCOO + "' "

				idw_pack.SetFilter(lsFilter)
				idw_pack.Filter()
				
				ll_rows = idw_Pack.RowCount()
				For ll_row = 1 to ll_rows
					idw_pack.SetItem(ll_row,'Country_of_Origin',ls_COO)
				Next
				
				idw_pack.SetFilter("")
				idw_pack.Filter()
			End if	
			//GXMOR Issue 576 05/10/2013 - Allow change to COO (UF1) even if SNs are assigned
			If idw_serial.RowCount() > 0 Then
				ibPickModified = False
			End If
		End if
		
	CASE 'c_delete_ind'			//GailM 10/01/2013 Pandora Issue 655 - Add SelectAll to mass delete pick list
		ll_pickrow = row
		ls_checked = data
		
		Post Event ue_postitemchanged(row,dwo)  // This should not be here.  A call to super should do it.  What's going on?
		
	/*	li_checked = GetNbrChecked()
		if ls_checked = 'Y' and li_checked = 0 then		//This is the first checked on
			tab_main.tabpage_pick.cb_pick_select.bringtotop = true			
		elseif  ls_checked = 'N' and li_checked <= 1 then	//This is the last checked off
			tab_main.tabpage_pick.cb_pick_delete.bringtotop = true
		elseif li_checked > 1 then
			tab_main.tabpage_pick.cb_pick_select.bringtotop = true
		else
			tab_main.tabpage_pick.cb_pick_delete.bringtotop = true
		end if */
	Case "mobile_status_ind" /* 09/14 - PCONKL*/
		
		if data = 'N' Then /*resetting to New*/
		
			This.SetItem(row,'mobile_picked_qty',0)
			
			SetNull(ldtDT)
			This.SetItem(row,'mobile_pick_start_Time',ldtDT)
			This.SetItem(row,'mobile_pick_complete_Time',ldtDT)
			This.SetItem(row,'mobile_picked_by','')
			
		Elseif data = "C" Then /*marking as complete*/
			
			ldtDT = f_getLocalWorldTime( idw_main.object.wh_code[1] ) 
			this.SetItem(row,'mobile_pick_complete_Time',	ldtDT  ) 
			
		End If
				
END Choose			
return

pick_data:
IF i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code) > 0 THEN
	
	//Keep original component type if 'W'
	lsCOmpType = This.GetITemString(row,'component_ind')
	//Get the values from datastore ids which is item master
	ll_row =i_nwarehouse.ids.Getrow()
	ll_owner_id=i_nwarehouse.ids.GetItemnumber(ll_row,"owner_id")
	ls_coo = i_nwarehouse.ids.GetItemString(ll_row,"Country_of_Origin_Default")
	//Set the values from datastore ids which is item master
	this.object.owner_id[ row ]=ll_owner_id
	this.Setitem(row,"country_of_origin",ls_coo)
	//Call function to set the indicatores
	i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code,idw_pick,row)
	//Get the owner name
	this.object.cf_owner_name[ row ] = g.of_get_owner_name(ll_owner_id)
	this.Setitem(row,'Component_Type',i_nwarehouse.ids.GetItemString(ll_row,"Component_Type")) /* 11/04 - PCONKL */
	If lsCompType = 'W' Then This.SetItem(row,'Component_ind','W')
	
	// 10/00 PCONKL - If this row is a componet, build child pick rows
	If This.GetITemString(row,'component_ind') = 'Y' Then
		This.SetItem(row,'sku_parent',data)
		ilCompRow = Row
		This.PostEvent("ue_post_component") /*needs to happen after itemchanged complete*/
	Else
		If isnull(This.GetITemString(row,'sku_parent')) or This.GetITemString(row,'sku_parent') = "" Then /* 05/07 - PCONKL - only set parent if not already set */
			This.SetItem(row,'sku_parent',ls_sku)
		End If
	End If /*Component parent Row*/
		
	isColumn = "l_code"
	This.PostEvent("ue_set_column")
	
ELSE
	MessageBox(is_title, "Invalid Supplier or Supplier not valid for this SKU, please re-enter!")
	return 1	
END IF

end event

event itemerror;
//if dwo.name = 'l_code' Then
//	Return 3
//Else
	return 2
//End If
end event

event itemfocuschanged;call super::itemfocuschanged;String	lsDDSQL
DataWindowChild	Ldwc

// 05/00 Pconkl - Pick Locations button only enabled when in location field
If dwo.name = "l_code" Then
	cb_picklocs.Enabled = True
Else
	cb_picklocs.Enabled = False
End If

Choose Case dwo.name
		
	Case "supp_code"
				
	// 11/00 PCONKL - If clicking on UOM text (user 2), calcualte valid UOM itterations for current SKU
	Case "user_field2"
		
		This.TriggerEvent("ue_calc_uom")
		
	//TimA 04/09/13 Pandora issue #560		
	Case "user_field1"
		If gs_project = 'PANDORA' Then
				ldwc_ItemMasterCoo.Retrieve(gs_project,This.GetITemString(row,'sku'),This.GetITemString(row,'supp_code'))
		End If				
End Choose

end event

event retrieveend;call super::retrieveend;// GailM 8/20/2014 - Pandora #883 DejaVu - Scan containerIDs

Long	llRowCount,	&
		llRowPos, llContainerCount, llSerialCount,llPoNoCount
String ls_mod, ls_err, ls_yes, lsSku, lsSupplier
Int liRC

This.Setredraw(False)
ls_yes = "*"
llContainerCount = 0
llSerialCount = 0
llPoNoCount = 0 //Tam2014/09/19
ibLPN = false
ibFootprint = false
ibCntrSerial = false
ibSerializedOnly = false 
f_method_trace_special( gs_project, this.ClassName() + ' - RetrieveEnd', 'RetrieveEnd - Start function  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added

llRowCOunt = This.RowCount()
If llRowCount > 0 Then		// Do nothing if no picking rows.

	// #883 Check for LPN on first pick record.  If 1st row is LPN then all rows are LPN
	// GailM The above is no longer true.  Must loop through pick list to identify sku type
	
	//10SEPT-2018 :MEA S23046 F9270 - I1304 - Google - SIMS Footprints Containerization - Outbound
	//Use Foot_Prints_Ind Flag

	//This.GetItemString(1, "serialized_ind") = 'B' and  This.GetItemString(1,"po_no2_controlled_ind") = 'Y' and This.GetItemString(1, "container_tracking_ind") = 'Y' 
	
	For llRowPos = 1 to llRowCount

		lsSku = This.GetItemString(llRowPos, "sku") 
		lsSupplier = This.GetItemString(llRowPos, "supp_code") 
	
		if  f_is_sku_foot_print( lsSku, lsSupplier)  Then
			ibLPN = true
			ibFootprint = true //TAM 2018/02 S14838
			idw_serial.Object.serial_no_t.text = 'PalletID'
		ElseIf This.GetItemString(llRowPos, "serialized_ind") = 'B' and  This.GetItemString(llRowPos,"po_no2_controlled_ind") = 'N' and This.GetItemString(llRowPos, "container_tracking_ind") = 'Y' Then
			ibCntrSerial = true	//GWM 20180220  DE3189 ContainerTracked and Serialized
			idw_serial.Object.serial_no_t.text = 'ContainerID'
		ElseIf This.GetItemString(llRowPos, "serialized_ind") = 'B' and  This.GetItemString(llRowPos,"po_no2_controlled_ind") = 'N' and This.GetItemString(llRowPos, "container_tracking_ind") = 'N' Then
			ibSerializedOnly = true	//GWM 20180223 
		End If

		If g.is_owner_ind  = 'Y' Then /*only need to populate if showing */
			// 11/02 - PConkl - retreiving Owner_Cd and Owner_Type in SQL, just format here, don't retrieve
			//This.object.cf_owner_name[ i ] = g.of_get_owner_name(ll_owner)
			This.SetITem(llRowPos,'cf_owner_Name',This.GetITemString(llRowPos,'Owner_Owner_cd') + '(' + This.GetITemString(llRowPos,'Owner_Owner_type') + ')')
		End If
		//set lot and po controlled ind on component child records, not saved and no need to get from itemmaster every time!
		If This.GetItemString(llRowPos,"component_ind") = '*' Then
			idw_pick.SetItem(llRowPos,"lot_controlled_ind",'N')
			idw_pick.SetItem(llRowPos,"po_controlled_ind",'N')
			idw_pick.SetItem(llRowPos,"po_no2_controlled_ind",'N')
		End If
		If Upper(gs_project) = 'PANDORA' or Upper(gs_project) = 'HONDA-TH' Then
			If idw_pick.GetItemString(llRowPos,"container_id") <> '' and idw_pick.GetItemString(llRowPos,"container_id") <> '-' Then
				llContainerCount ++
			End If
			If idw_pick.GetItemString(llRowPos,"serial_no") <> '' and idw_pick.GetItemString(llRowPos,"serial_no") <> '-' Then
				llSerialCount ++
			End If
		End if
		//TAM 2014/09/19 - HONDA-TH - using Dejavu indicator to scan and validate PONO instead of ContainerID.  Need to count PONOs
		If idw_pick.GetItemString(llRowPos,"Po_No") <> '' and idw_pick.GetItemString(llRowPos,"Po_No") <> '-' Then
			llPoNoCount ++
		End If

	//TAM 2018/02 - S14838  - For Footprint Auto Set the Container scan Flag 
		If ibFootprint = true Then
			idw_pick.SetItem(llRowPos,"containerid_found",'Y')
		End If

	next
	
	// #883 is this a DejaVu GPN -- NonSerialized with container IDs
	If llContainerCount > 0 and llSerialCount = 0 and NOT ibLPN and This.GetItemString(1, "serialized_ind") = 'N'  Then
		ibDejaVu = true

		// For Pandora, the lookup flag that toggles Deju Vu functionality must also be set
		if Upper(gs_project) = 'PANDORA' and f_retrieve_parm("PANDORA", "FLAG", "VALIDATE_DEJAVU_DOCONFIRM") <> 'Y' then
			ibDejaVu = false
		end if

		if ibDejaVu then
			tab_main.tabpage_serial.Enabled = true
			idw_serial.Object.serial_no_t.text = 'ContainerID'
		end if
	//TAM 2014/09/19 - HONDA-TH - Use DejaVu to scan PoNo for the export warehouse only
	ElseIf Upper(gs_project) = 'HONDA-TH' and llPonoCount > 0 and idw_main.GetItemString(1,'Wh_Code'  ) =  'EXP-HONDA' Then
		ibDejaVu = true
		tab_main.tabpage_serial.Enabled = true
		idw_serial.Object.serial_no_t.text = 'PalletID'
	Else
		ibDejaVu = false
		idw_serial.Object.serial_no_t.text = 'SerialNo'
	End If
End If

//GailM 07/03/2017 - SIMSPEVS-654 - Is this a MIM osrder.  2D barcode scan will use this to pick correct structure
If Upper(gs_project) = 'PANDORA' and Len( idw_main.GetItemString(1,'Client_Cust_PO_Nbr')) > 0 and Left(idw_main.GetItemString(1,'Client_Cust_PO_Nbr'),1) = 'X' Then
	ibMIM = true
Else
	ibMIM = false
End If

//GailM 6/19/2018 S19742 F7864 I898 Google - Edge Packaging - SIMS Changes - GPN level mapping replaced with Commodity code level
If Upper(gs_project) = 'PANDORA' and llRowCOunt > 0 Then
	wf_set_special_packaging_comments()
End If
	
//GailM 06/20/2017 - Determine if pick rows have container tracked records - Pandora SIMSPEVS-605
if idw_main.getitemstring(1,'ord_status') = 'P' Then
	wf_check_container_scanned()
End If
//f_method_trace_special( gs_project, this.ClassName() + ' - RetrieveEnd', 'RetrieveEnd - Start wf_check_footprint_containers  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added
SetMicroHelp("RetrieveEnd - Enter wf_check_footprint_containers")
//GailM 08/16/2018 - S20849 - Google Footprint Container Split
If Upper(gs_project) = 'PANDORA' and f_retrieve_parm("PANDORA","FLAG","CONTAINER MOVEMENT") = "Y" Then
	If idw_main.GetItemString(1,"ord_status") <> 'C' and idw_main.GetItemString(1,"ord_status") <> 'D' and idw_main.GetItemString(1,"ord_status") <> 'V' Then
		liRC = wf_check_footprint_containers()
	End If
End If
SetMicroHelp("RetrieveEnd - Finished wf_check_footprint_containers")
//f_method_trace_special( gs_project, this.ClassName() + ' - RetrieveEnd', 'RetrieveEnd - Finished wf_check_footprint_containers  ',gs_system_no, ' ',' ',gs_system_no) //2/7/2020  :Gail added


This.SetRedraw(True)

// 01/01 Reset Update Status - causing pick detail records to be deleted and re-created every time!
liRC = This.ResetUpdate()

///* 10/06/2010 ujh Populate Pandora COO field from Baseline COO field.
//  	See dw_pick constructor for where the child datawindow for COO was created and populated.*/
//if upper(gs_project) = "PANDORA" then
//	wf_populate_COO_Pandora()
//End if  //Project Pandora//

end event

event rowfocuschanged;ilCurrPickRow = currentrow
String	lsWarehouse, lsFindStr
Integer	i

//09/14 - PCONKL - If mobile enabled, we are not allowing rows to be inserted/deleted. If a new row has been added, we want to allow it to be deleted though
If idw_MAin.RowCount()  = 0 Then Return

lsWarehouse = idw_main.GetItemString(1, "wh_code")
lsFindStr = "wh_code = '" + lsWarehouse + "'"

If idw_Main.GetItemString(1,'ord_status') <> 'C' and  idw_Main.GetItemString(1,'ord_status') <> 'D' and  idw_Main.GetItemString(1,'ord_status') <> 'V' Then
	//TimA 07/20/15 Bug found in the double click event.  Set the il_DblClkPickRow = 0 when rowfocus changes.
	il_DblClkPickRow = 0
	//TimA 07/15/15
	//GailM 06/20/2017 - 605 - Validate BoxID - Remove check for User_Field5 (CommodityCode)
	//If pos ( Upper(is_BoxIDLookup) ,',' + This.GetItemString(currentrow,"User_Field5" ) + ',' , 1 ) > 0 then
	//If This.GetItemString(currentrow,"User_Field5") = 'HD' Then
	//		tab_main.tabpage_pick.cb_Replace_BoxId.enabled = True
	//Else
	//		tab_main.tabpage_pick.cb_Replace_BoxId.enabled = False
	//End if	
	i = g.ids_project_warehouse.Find(lsFindStr,1,g.ids_project_warehouse.rowcount())
	If i > 0 and currentrow > 0 Then
		If g.ids_project_warehouse.GetItemString(i, "Mobile_Enabled_Ind") = 'Y' Then
			If trim(This.GetITemString(currentrow,'mobile_status_ind')) = '' or isnull(This.GetITemString(currentrow,'mobile_status_ind')) Then
				icb_Pick_delete.Enabled = True
			Else
			//	icb_Pick_delete.Enabled = False
			End If
		End If
	End If
	
End If
end event

event ue_copy;Long ll_row,	ll_rows, &
		llNewRow,	&
		llBatchPickID

Integer	liMsg

String	lsSku,lsSupplier, lsMsg
Boolean	lbKeepBatch

This.SetFocus()

If This.AcceptText() = -1 Then Return -1

// 05/02 PCONKL - If this Order is being batch Picked, changing the list here will have an effect on the batch - give option to keep in Batch
llBatchPickID = idw_main.GetITemNumber(1,'batch_pick_id')
lbKeepBatch = False
If llBatchPickID > 0 Then
	lsMsg = 'This order is currently setup to be Batch Picked (Batch Pick ID # ' + string(llBatchPickID) +  ').~rAny changes made here will affect the batch.~r~r'
	lsMsg += 'Would you like to leave this order on this Batch?~r~r'
	lsMsg += "'Yes'    - Keep order on Batch~r"
	lsMsg += "'No'     - Remove Order from Batch~r"
	lsMsg += "'Cancel' - No changes to Pick List"
	liMsg = MessageBox(is_title,lsMsg,Question!,yesNoCancel!,1)
	Choose Case liMsg
		Case 1 /*yes*/
			lbKeepBatch = True /*we will assing the Batch Pick ID to the new row*/
		CAse 2 /*No*/
			lbKeepBatch = False
			idw_Main.SetITem(1,'batch_Pick_id',0) /*remove the master from the batch*/
		Case Else /*cancel*/
			REturn -1
	End CHoose
End If /*setup for batch Picking*/

ll_row = This.GetRow() /* 08/00 PCONKL */
ll_rows = This.RowCount()

If ll_rows > 0 Then
	
	// 10/00 PCONKL - Cant copy a component Child Row
	If This.GetItemString(ll_row,'component_ind') = '*' or This.GetItemString(ll_row,'component_ind') = 'Y' Then
		MessageBox(is_title,"You can not copy a Component row!")
		Return -1
	End If
	
	This.setcolumn('sku')
	llNewrow = This.InsertRow(ll_row + 1)
	This.ScrollToRow(llNewrow)
	This.setitem(llNewrow,'do_no',idw_Main.GetItemString(1,"do_no"))
	
	//copy items to new row
	This.SetItem(llNewRow,'sku',This.GetITemString(ll_row,'sku'))
	This.SetItem(llNewRow,'sku_parent',This.GetITemString(ll_row,'sku_parent'))
	This.SetItem(llNewRow,'supp_code',This.GetITemString(ll_row,'supp_code'))
	This.SetItem(llNewRow,'country_of_origin',This.GetITemString(ll_row,'country_of_origin'))
	This.SetItem(llNewRow,'component_ind',This.GetITemString(ll_row,'component_ind'))
	This.SetItem(llNewRow,'qa_check_ind',This.GetItemString(ll_row,'qa_check_ind' ) )
	This.SetItem(llNewRow,'sku_Pickable_ind',This.GetITemString(ll_row,'sku_Pickable_ind'))
	This.SetItem(llNewRow,'cf_owner_name',This.GetITemString(ll_row,'cf_owner_name'))
	This.SetItem(llNewRow,'owner_id',This.GetITemNumber(ll_row,'owner_id'))
	This.SetItem(llNewRow,'component_no',This.GetITemNumber(ll_row,'component_no'))
	This.SetItem(llNewRow,'Line_Item_no',This.GetITemNumber(ll_row,'Line_Item_No'))
	This.SetItem(llNewRow,'l_code',This.GetITemString(ll_row,'l_code'))
	This.SetItem(llNewRow,'inventory_type',This.GetITemString(ll_row,'inventory_type'))
	This.SetItem(llNewRow,'lot_no',This.GetITemString(ll_row,'lot_no'))
	This.SetItem(llNewRow,'po_no',This.GetITemString(ll_row,'po_no'))
	This.SetItem(llNewRow,'po_no2',This.GetITemString(ll_row,'po_no2'))
	This.SetItem(llNewRow,'container_id',This.GetITemString(ll_row,'container_id')) //18-Jan-2019 :Madhu DE8189 - Copy Container Id.
	This.SetItem(llNewRow,'expiration_date',This.GetITemDateTime(ll_row,'expiration_date')) //18-Jan-2019 :Madhu DE8189 - Copy Expiration Date.
	
	This.SetItem(llNewRow,'lot_controlled_Ind',This.GetITemString(ll_row,'lot_controlled_Ind'))
	This.SetItem(llNewRow,'po_controlled_Ind',This.GetITemString(ll_row,'po_controlled_Ind'))
	This.SetItem(llNewRow,'po_no2_controlled_Ind',This.GetITemString(ll_row,'po_no2_controlled_Ind'))
	This.SetItem(llNewRow,'serialized_Ind',This.GetITemString(ll_row,'serialized_Ind'))
	This.SetItem(llNewRow,'expiration_controlled_Ind',This.GetITemString(ll_row,'expiration_controlled_Ind'))
	This.SetItem(llNewRow,'container_Tracking_Ind',This.GetITemString(ll_row,'container_Tracking_Ind'))
	This.SetItem(llNewRow, 'zone_id', This.GetItemString(ll_row, 'zone_id')) //18-Jan-2019 :Madhu DE8189 - Copy Zone Id.
	
	This.SetItem(llNewRow,'cntnr_Length',This.GetITemNumber(ll_row,'cntnr_Length'))
	This.SetItem(llNewRow,'cntnr_Width',This.GetITemNumber(ll_row,'cntnr_Width'))
	This.SetItem(llNewRow,'cntnr_height',This.GetITemNumber(ll_row,'cntnr_Height'))
	This.SetItem(llNewRow,'cntnr_Weight',This.GetITemNumber(ll_row,'cntnr_Weight'))
		
	This.SetItem(llNewRow,'user_field1',This.GetITemString(ll_row,'user_field1'))
	This.SetItem(llNewRow,'project_id',This.GetITemString(ll_row,'project_id'))
	
		
	// 05/02 - Pconkl - If keeping in batch, assign batch pick ID to the new record
	If lbKeepBatch Then
		This.SetItem(llNewRow,'batch_pick_ID',llBatchPickID)
	End If
Else
	Messagebox(is_title,"Nothing to copy!")
End If	
	
	This.Setcolumn("Quantity")
	This.SetRedraw( True )	


return 1


end event

event process_enter;//Jxlim 08/15/2013 Ariens pressing enter after serial_no scan will set focus to next serial_no field
//Clone from putaway pallet field
Long	llRow	
// 09/08 - PCONKL - We may be processing down the page instead of across if we are in "Scan MOde" for a particular column (lottables)
IF This.GetColumnName() = "serial_no" and This.GetRow() <> This.RowCount() Then
	llRow = This.GetRow() + 1
	This.SetRow(llRow)
	This.ScrollToRow(llRow)
	This.SetColumn("serial_no")
Else
	Send(Handle(This),256,9,Long(0,0))
End If

Return 1

end event

event ue_postitemchanged;call super::ue_postitemchanged;
CHOOSE CASE lower(dwo.Name)
	CASE 'c_delete_ind'
		If THis.Find("upper(c_DELETE_Ind) = 'Y'",1,This.RowCOunt()) > 0 Then
			cb_pick_select.Enabled = True
			cb_pick_delete.Enabled = False
			cb_pick_delete.visible = False
			cb_pick_select.visible = True
		Else
			cb_pick_delete.Enabled = True
			cb_pick_select.Enabled = False
			cb_pick_delete.visible = True
			cb_pick_select.visible = False
		End If
END CHOOSE		

end event

event clicked;call super::clicked;DatawindowChild	ldwc
String	lsColumn
Long	llRow

lsColumn 	= DWO.Name
llRow  = row	

This.SetRow(row)

//TimA 01/25/14 Enable Change Box ID's button if User_Field5 is 'HD'
//TimA 07/15/15
//GailM 06/20/2017 605 - Validate BoxID - Remove check for User_Field5 (CommodityCode)

CHOOSE CASE lsColumn
		
	Case "mobile_status_ind"

		This.GetChild('mobile_status',ldwc)
		ldwc.SetFilter("mobile_status_ind <> 'X' and mobile_status_ind <> 'R'")
		ldwc.Filter()
		
	Case 'quantity'
		
//		//If cursor in Qty field of discrepancy row, allow it to be deleted
//		If This.GetITemString(row,'mobile_status_ind') = 'D' Then
//			icb_pick_delete.Enabled = True
//		End If

	Case 'sku'
	
		isSelSku = This.GetItemString( llRow, 'sku' )
		
End Choose
end event

type gb_2 from groupbox within tabpage_pick
integer x = 2843
integer y = 188
integer width = 1472
integer height = 144
integer taborder = 90
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Pick Priority"
end type

type cb_pick_select from commandbutton within tabpage_pick
boolean visible = false
integer x = 393
integer y = 28
integer width = 357
integer height = 92
integer taborder = 60
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Delete Seltd"
end type

event clicked;/* GailM - 10/09/2013 - Pandora Issue #655 - ability to delete multiple rows at once or all with selectall */
/* Clone of cb_dekete_pick.clicked event */

Long	llRow,	&
		llFindRow, ll_row, llRows, llFindChecked, ll_deleted, ll_delete_buffer, ll_primary, ll_modified
String	lsFind, lsFindChecked

string ls_sku

//GailM 06/20/2017 - llRow is not set before next operations
llRow = idw_pick.GetRow()
llRows = idw_pick.rowcount( )

//TimA 05/31/12 Bug fix Pandora issue #412
//NOTE: This is a baseline change
//We are now having the user delete packing rows first before they can delete the picking.
If llRows > 0 Then			//GWM 20180219	Do not click on the button when there are no rows to process
	ls_sku = idw_pick.GetItemString(idw_pick.GetRow(),"sku")
	ll_row = idw_pack.Find("sku = '" + ls_sku + "'", 1, idw_pack.RowCount())
	
	If ll_row > 0 Then 
		Messagebox("Pack row exist",  'There are still Packing rows for sku ' + ls_sku + '.  Please delete Packing rows first.')
		Return
	end if
	
	If cbx_show_comp.Enabled and cbx_show_comp.Checked = False Then
		Messagebox(is_title,'You must show components before you can delete any rows.')
		Return
	End If
	
	// LTK 20110916	Pandora #296 Don't allow deletion of a child record.
	if llRow > 0 and Upper(gs_project) = 'PANDORA' and idw_pick.GetItemString(llRow,"component_ind") = 'W' then
		MessageBox(is_title,'Child pick rows cannot be deleted.',StopSign!,OK!)
		return
	end if
	
	
	ib_changed = True
	ibpickmodified = True
	setCalcAllocated( true ) /*refresh allocate qty on detail */
	
	idw_pick.SetRedraw(False)
	
	lsFindChecked = "c_delete_ind = 'Y'"
	llFindChecked = idw_pick.find(lsFindChecked, 1, idw_pick.rowcount())
	
	Do While llFindChecked > 0
			If idw_pick.GetItemString(llFindChecked,"component_ind") = 'Y' Then /*if component, delete dependent rows as well*/
			
				lsFind ="component_no = " + string(idw_Pick.GetItemNumber(llFindChecked,"component_no"))
				lsFind += "and Line_item_no = " + string(idw_Pick.GetItemNumber(llFindChecked,"Line_item_no"))
				
				// 02/01 PCONKL - Unfilter if not showing components
				wf_set_Pick_filter('Remove')
			
				//Delete any child dependent rows
				llFindRow = idw_pick.Find(lsFind,1,idw_pick.RowCount())
				Do While llFindRow > 0
					idw_pick.DeleteRow(llFindRow)
					llFindRow = idw_pick.Find(lsFind,1,(idw_pick.RowCount() + 1))
				Loop
			
		Else /*not a component, delete the current row only*/
			
			ll_deleted = idw_pick.DeleteRow(llFindChecked)
			ll_delete_buffer = idw_pick.deletedcount( )
			ll_primary = idw_pick.rowcount()
			ll_modified= idw_pick.modifiedcount( )
			
		End If /*component or not*/
		
		llFindChecked = idw_pick.find(lsFindChecked, 1, idw_pick.rowcount())	  /* Find next checked */
		
	Loop
	
	wf_set_pick_filter('Set')
		
	// 2002-08-13 Tony Add keep row focus around deleted row
	//If llRow > idw_pick.RowCount() and idw_pick.RowCount() > 0 Then llRow -= 1
	//dw_pick.SetRow(llRow)
	//idw_pick.ScrollToRow(llRow)
	idw_pick.SetRedraw(True)
	idw_pick.SetFocus()
	
End If

end event

event constructor;
g.of_check_label_button(this)
end event

type cb_pick_delete from commandbutton within tabpage_pick
integer x = 384
integer y = 28
integer width = 357
integer height = 92
integer taborder = 50
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Delete Row"
end type

event clicked;Long	llRow,	&
		llFindRow, ll_row
String	lsFind

string ls_sku

//TimA 05/31/12 Bug fix Pandora issue #412
//NOTE: This is a baseline change
//We are now having the user delete packing rows first before they can delete the picking.

//TODO - This needs to be based on Line ITem instead of SKU - we may have multiple lines with the same SKU

llRow = idw_pick.GetRow()		// LTK 20110916	Pandora #296 Moved this line from below

if llRow > 0 Then					//GWM 20180219  Wrapped remainder if there are no rows to process 
	ls_sku = idw_pick.GetItemString(idw_pick.GetRow(),"sku")
	ll_row = idw_pack.Find("sku = '" + ls_sku + "'", 1, idw_pack.RowCount())

	//If ll_row > 0 Then 
	//	Messagebox("Pack row exist",  'There are still Packing rows for sku ' + ls_sku + '.  Please delete Packing rows first.')
	//	Return
	//end if
	
	If cbx_show_comp.Enabled and cbx_show_comp.Checked = False Then
		Messagebox(is_title,'You must show components before you can delete any rows.')
		Return
	End If
	
	// LTK 20110916	Pandora #296 Don't allow deletion of a child record.
	if llRow > 0 and Upper(gs_project) = 'PANDORA' and idw_pick.GetItemString(llRow,"component_ind") = 'W' then
		MessageBox(is_title,'Child pick rows cannot be deleted.',StopSign!,OK!)
		return
	end if
	
	// 10/16 - PCONKL - Don't allow row to be deleted if anything picked on the mobile device
	if llRow > 0 and (idw_pick.GetItemNumber(llRow,"mobile_picked_qty") > 0 or idw_pick.GetItemString(llRow,"mobile_status_Ind") = 'P'  )then
		MessageBox(is_title,'This row has a mobile picked qty or is in Process status. It cannot be deleted',StopSign!,OK!)
		return
	end if
	
	// TAM 2017/07/14	PEVS-739 Don't allow deletion of a child record.
	if llRow > 0 and idw_pick.GetItemString(llRow,"component_ind") = '*' then
		MessageBox(is_title,'Child pick rows cannot be deleted.',StopSign!,OK!)
		return
	end if
	
	ib_changed = True
	ibpickmodified = True
	setCalcAllocated( true ) /*refresh allocate qty on detail */
	
	idw_pick.SetRedraw(False)
	
	
	
	//lLRow = idw_pick.GetRow()		// LTK 20110916	Pandora #296 Moved this line above
	
	If  llRow > 0 then
		
		If idw_pick.GetItemString(llRow,"component_ind") = 'Y' Then /*if component, delete dependent rows as well*/
		
			lsFind ="component_no = " + string(idw_Pick.GetItemNumber(llRow,"component_no"))
			lsFind += "and Line_item_no = " + string(idw_Pick.GetItemNumber(llRow,"Line_item_no"))
			
			// 02/01 PCONKL - Unfilter if not showing components
			wf_set_Pick_filter('Remove')
		
			//lsFind = "sku_parent = '" + idw_pick.GetItemString(llRow,"sku_parent") + "' and component_no = " + string(idw_Pick.GetItemNumber(llRow,"component_no"))
			
			//lsFind += "and sku <> '" + dw_pick.GetItemString(llRow,"sku_parent") + "'" /* 02/03 - PConkl - We dont want to delete other rows for the same SKU */
			//idw_pick.DeleteRow(llRow)
			//Delete any child dependent rows
			llFindRow = idw_pick.Find(lsFind,1,idw_pick.RowCount())
			Do While llFindRow > 0
				idw_pick.DeleteRow(llFindRow)
				llFindRow = idw_pick.Find(lsFind,1,(idw_pick.RowCount() + 1))
			Loop
			
		Else /*not a component, delete the current row only*/
			idw_pick.DeleteRow(llRow)
		End If /*component or not*/
		
	End If
	
	wf_set_pick_filter('Set')
		
	// 2002-08-13 Tony Add keep row focus around deleted row
	If llRow > idw_pick.RowCount() and idw_pick.RowCount() > 0 Then llRow -= 1
	idw_pick.SetRow(llRow)
	idw_pick.ScrollToRow(llRow)
	idw_pick.SetRedraw(True)
	idw_pick.SetFocus()

End If

end event

event constructor;
g.of_check_label_button(this)
end event

type tabpage_pack from userobject within tab_main
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = " Packing List"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_print_sscc_label cb_print_sscc_label
cb_pack_copypaste cb_pack_copypaste
cb_lock_load cb_lock_load
sle_carton_scan_t sle_carton_scan_t
sle_carton_scan sle_carton_scan
cb_print_ship_label cb_print_ship_label
cb_calc_carton_count cb_calc_carton_count
cbx_gen_level2_qty cbx_gen_level2_qty
cb_ci_load_tender cb_ci_load_tender
cb_print_dn cb_print_dn
cb_lmsrate cb_lmsrate
cbx_show_comp_pack cbx_show_comp_pack
cb_pack_copy cb_pack_copy
dw_packlist_notes dw_packlist_notes
rb_metric rb_metric
rb_eng rb_eng
cb_pack_insert cb_pack_insert
cb_pack_generate cb_pack_generate
cb_pack_print cb_pack_print
dw_packprint dw_packprint
dw_pack dw_pack
gb_etom gb_etom
cb_import_pack cb_import_pack
cbx_sel cbx_sel
cb_pack_select cb_pack_select
cb_pack_delete cb_pack_delete
end type

on tabpage_pack.create
this.cb_print_sscc_label=create cb_print_sscc_label
this.cb_pack_copypaste=create cb_pack_copypaste
this.cb_lock_load=create cb_lock_load
this.sle_carton_scan_t=create sle_carton_scan_t
this.sle_carton_scan=create sle_carton_scan
this.cb_print_ship_label=create cb_print_ship_label
this.cb_calc_carton_count=create cb_calc_carton_count
this.cbx_gen_level2_qty=create cbx_gen_level2_qty
this.cb_ci_load_tender=create cb_ci_load_tender
this.cb_print_dn=create cb_print_dn
this.cb_lmsrate=create cb_lmsrate
this.cbx_show_comp_pack=create cbx_show_comp_pack
this.cb_pack_copy=create cb_pack_copy
this.dw_packlist_notes=create dw_packlist_notes
this.rb_metric=create rb_metric
this.rb_eng=create rb_eng
this.cb_pack_insert=create cb_pack_insert
this.cb_pack_generate=create cb_pack_generate
this.cb_pack_print=create cb_pack_print
this.dw_packprint=create dw_packprint
this.dw_pack=create dw_pack
this.gb_etom=create gb_etom
this.cb_import_pack=create cb_import_pack
this.cbx_sel=create cbx_sel
this.cb_pack_select=create cb_pack_select
this.cb_pack_delete=create cb_pack_delete
this.Control[]={this.cb_print_sscc_label,&
this.cb_pack_copypaste,&
this.cb_lock_load,&
this.sle_carton_scan_t,&
this.sle_carton_scan,&
this.cb_print_ship_label,&
this.cb_calc_carton_count,&
this.cbx_gen_level2_qty,&
this.cb_ci_load_tender,&
this.cb_print_dn,&
this.cb_lmsrate,&
this.cbx_show_comp_pack,&
this.cb_pack_copy,&
this.dw_packlist_notes,&
this.rb_metric,&
this.rb_eng,&
this.cb_pack_insert,&
this.cb_pack_generate,&
this.cb_pack_print,&
this.dw_packprint,&
this.dw_pack,&
this.gb_etom,&
this.cb_import_pack,&
this.cbx_sel,&
this.cb_pack_select,&
this.cb_pack_delete}
end on

on tabpage_pack.destroy
destroy(this.cb_print_sscc_label)
destroy(this.cb_pack_copypaste)
destroy(this.cb_lock_load)
destroy(this.sle_carton_scan_t)
destroy(this.sle_carton_scan)
destroy(this.cb_print_ship_label)
destroy(this.cb_calc_carton_count)
destroy(this.cbx_gen_level2_qty)
destroy(this.cb_ci_load_tender)
destroy(this.cb_print_dn)
destroy(this.cb_lmsrate)
destroy(this.cbx_show_comp_pack)
destroy(this.cb_pack_copy)
destroy(this.dw_packlist_notes)
destroy(this.rb_metric)
destroy(this.rb_eng)
destroy(this.cb_pack_insert)
destroy(this.cb_pack_generate)
destroy(this.cb_pack_print)
destroy(this.dw_packprint)
destroy(this.dw_pack)
destroy(this.gb_etom)
destroy(this.cb_import_pack)
destroy(this.cbx_sel)
destroy(this.cb_pack_select)
destroy(this.cb_pack_delete)
end on

type cb_print_sscc_label from commandbutton within tabpage_pack
integer x = 1861
integer y = 512
integer width = 430
integer height = 104
integer taborder = 120
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print sscc label"
end type

event clicked;Long	llRowPos, llRowCount, llFindRow, llPrintCount
String	lsFind, lsDONO
Boolean lbLabelsPrinted

//MikeA 8/2019 S36892 F16645 - I2432 - KDO - Kendo - Supervisor Only to Reprint Carton Labels
//Added check here if printing from window. If I didn't, it would look thru each label and give error. 

lsDONO = idw_Main.GetITEmString(1,'do_no')

//Only ad Admin or Super can re-print if already printed once
Select carton_label_Print_Count Into :llPrintCount From delivery_master with (NOLOCK) Where do_no = :lsDONO;

//If IsNull(llPrintCount) Then llPrintCount = 0
//
//If llPrintCount > 0 Then
//	If gs_role = "2" Then
//		MessageBox("Labels", "Only an ADMIN or SUPER can re-print labels!",StopSign!)
//		Return
//	End If
//End If


//If idw_Main.GetITemNumber(1,'ctn_cnt') = 0 Then
//	Messagebox(is_title, "Carton Count must be entered before printing labels",StopSign!)
//	REturn
//End If

idw_pack.AcceptText()

Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
	If idw_pack.Update() = 1 Then
		Execute Immediate "COMMIT" using SQLCA;
   			If SQLCA.SQLCode = 0 Then
   			Else /*commit failed*/
				Execute Immediate "ROLLBACK" using SQLCA;
     			MessageBox(is_title, "Unable to save Packing List - No label to print " + SQLCA.SQLErrText)
				  return 
			End If
End If

idw_pack.REsetUpdate()

	
llRowCOunt = idw_Pack.RowCount()

//For llRowPos = 1 to llRowCount

	//If idw_Pack.GetITemString(llRowPos,'c_select_ind') <> 'Y' Then Continue
	if llRowCount > 0 then					
	//quick and dirty - open kendo label windo invisibly, check the carton row and execute print logic and then close

	
	//OpenSheet(w_generic_uccs_labels,w_main, gi_menu_pos, Original!)
	
	//w_bosch_sscc_label_print.visible = false
					

	//Check the correct box for carton/SKU
	//lsFind = "Upper(Delivery_Packing_carton_No) = '" + Upper(idw_Pack.GetITemString(llRowPos,'carton_no')) + "' and upper(sku) = '" + Upper(idw_Pack.GetITemString(llRowPos,'sku')) + "'"
//	llFindRow = w_generic_uccs_labels.dw_label.Find(lsFind,1,w_generic_uccs_labels.dw_label.RowCount())
	//If llFindRow > 0 Then
						
			//w_bosch_sscc_label_print.dw_label.SetItem(llFindRow,'c_print_ind','Y')
//			w_generic_uccs_labels.ibUserSecurityChecked = True /*MikeA 8/2019 S36892 F16645 - I2432 - KDO - Kendo - Supervisor Only to Reprint Carton Labels */
		//	w_generic_uccs_labels.ibUseCalculatedCartonCount = True /* will use calculated Carton Qty instead of what's already been generated*/
			
			if Upper(idw_main.GetITemString(1,'User_Field22'))='SSCC' then
					//OpenSheet(w_bosch_sscc_label_print, w_main,gi_menu_pos,Original!)
					OpenSheet(w_bosch_sscc_label_print,w_main,gi_menu_pos,Original!)
				lbLabelsPrinted = true
			else
				Messagebox(is_title, 'Not applicable to print the Labels')
				lbLabelsPrinted = false
			end if
				
	Else
	
			Messagebox(is_title, 'No label to print')
			lbLabelsPrinted = false
	End If
					
//	Close(w_bosch_sscc_label_print)
	
	//idw_pack.SetItem(llRowPos,'c_select_ind','N')
	
//Next

if lbLabelsPrinted then
	//MikeA 8/2019 S36892 F16645 - I2432 - KDO - Kendo - Supervisor Only to Reprint Carton Labels
	
	Execute Immediate "Begin Transaction" using SQLCA; 
	
	Update Delivery_master
	Set carton_label_Print_Count = ( :llPrintCount + 1 ) where Do_no = :lsDONO;
	
	Execute Immediate "COMMIT" using SQLCA;

end if
end event

event constructor;
If  gs_project <> 'BOSCH'   Then // Dinesh SIMS-107 - 10/13/2022- SIMS BOSCH SSCC LABEL
	This.visible = false
End If
end event

type cb_pack_copypaste from commandbutton within tabpage_pack
boolean visible = false
integer x = 1938
integer y = 28
integer width = 366
integer height = 92
integer taborder = 40
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Copy/Paste"
end type

event clicked;Int liRet = 0
Int i
String lsInd
Integer liCopyRows[]
Long llRowCount, llRowPos

//There must be a least 1 row past the first pack row to copy/paste to the first row.
If idw_pack.Find("C_select_Ind='Y'",2,idw_pack.RowCount()) > 0 Then
	llRowCount = idw_pack.RowCount()
	For llRowPos = 2 to llRowCount
		lsInd = idw_pack.GetItemString(llRowPos,'c_select_ind')
		If lsInd = "Y" Then
			
			//MikeA - 3/2020 - DE14755 - Defect-KDO-Kendo - Fix 'Copy Row' Function to Generate Unique SSCC Number for Each Line
			If (gs_project = 'KENDO') and idw_pack.GetITemString(llRowPos,'pack_sscc_no')  <> '' and not isnull(idw_pack.GetITemString(llRowPos,'pack_sscc_no')) Then
				Messagebox(is_title, "Cannot Copy/Paste Row  . The SSCC numbers have already been created.",Stopsign!)
				return -1 
			End If
				
			liRet ++
			liCopyRows[liRet] = llRowPos
		End If
	Next
Else
	MessageBox(is_title,"To copy/paste, please identify the rows to merge to row one.")
End If


liRet = f_pack_copypaste( liCopyRows[], idw_pack )

//Reset indicators
For i = 1 to llRowCount
	idw_pack.SetItem( i, "c_select_ind", "N" )
Next


end event

type cb_lock_load from commandbutton within tabpage_pack
integer x = 1938
integer y = 28
integer width = 366
integer height = 92
integer taborder = 100
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Lock"
end type

event clicked;long ll_count
If ib_changed Then
	messagebox(is_title,'Please save Packing list first!')
	return
End If

//GailM 05/29/2019 S33974 F16110 Google TMS - F10 access now not needed to unlock a load (Removed)
if isLoad_Status = 'LOCK' then 
	isLoad_Status = 'LOCK_ON_SAVE'	
		messagebox(is_title,'Order will be Locked on Save !')
		return
ElseIf isLoad_Status = 'NOLOCK' then 
	isLoad_Status = 'UNLOCK_ON_SAVE'	
		messagebox(is_title,'Order will be Unlocked on Save !')
		return
End If


end event

event constructor;
// Begin - Dinesh -SIMS-53 - Google - SIMS - Load Lock and New Loading Status 
if gs_project= 'PANDORA' then
	tab_main.tabpage_pack.cb_lock_load.visible = False
end if
// End - Dinesh -SIMS-53 - Google - SIMS - Load Lock and New Loading Status 

g.of_check_label_button(this)


end event

type sle_carton_scan_t from statictext within tabpage_pack
integer x = 2021
integer y = 540
integer width = 366
integer height = 92
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Scan Carton:"
alignment alignment = center!
boolean focusrectangle = false
end type

event constructor;If gs_project <> 'KENDO' Then
	This.visible = false
End If
end event

type sle_carton_scan from singlelineedit within tabpage_pack
integer x = 2377
integer y = 524
integer width = 594
integer height = 92
integer taborder = 100
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
borderstyle borderstyle = stylelowered!
boolean hideselection = false
end type

event modified;
idw_pack.PostEvent('ue_process_carton_scan')
end event

event getfocus;
This.SelectText(1,999)
end event

event constructor;If gs_project <> 'KENDO' Then
	This.visible = false
End If
end event

type cb_print_ship_label from commandbutton within tabpage_pack
integer x = 1440
integer y = 524
integer width = 393
integer height = 92
integer taborder = 110
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print label"
end type

event constructor;
If gs_project <> 'KENDO' Then
	This.visible = false
End If
end event

event clicked;Long	llRowPos, llRowCount, llFindRow, llPrintCount
String	lsFind, lsDONO
Boolean lbLabelsPrinted

//MikeA 8/2019 S36892 F16645 - I2432 - KDO - Kendo - Supervisor Only to Reprint Carton Labels
//Added check here if printing from window. If I didn't, it would look thru each label and give error. 

lsDONO = idw_Main.GetITEmString(1,'do_no')

//Only ad Admin or Super can re-print if already printed once
//Select carton_label_Print_Count Into :llPrintCount From delivery_master with (NOLOCK) Where do_no = :lsDONO;
//
//If IsNull(llPrintCount) Then llPrintCount = 0
//
//If llPrintCount > 0 Then
//	If gs_role = "2" Then
//		MessageBox("Labels", "Only an ADMIN or SUPER can re-print labels!",StopSign!)
//		Return
//	End If
//End If
//
//
//If idw_Main.GetITemNumber(1,'ctn_cnt') = 0 Then
//	Messagebox(is_title, "Carton Count must be entered before printing labels",StopSign!)
//	REturn
//End If

idw_pack.AcceptText()

Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
	If idw_pack.Update() = 1 Then
		Execute Immediate "COMMIT" using SQLCA;
   			If SQLCA.SQLCode = 0 Then
   			Else /*commit failed*/
				Execute Immediate "ROLLBACK" using SQLCA;
     			MessageBox(is_title, "Unable to save Packing List - No label to print " + SQLCA.SQLErrText)
				  return 
			End If
End If

idw_pack.REsetUpdate()

	
llRowCOunt = idw_Pack.RowCount()

For llRowPos = 1 to llRowCount

	If idw_Pack.GetITemString(llRowPos,'c_select_ind') <> 'Y' Then Continue
						
	//quick and dirty - open kendo label windo invisibly, check the carton row and execute print logic and then close
	Open(w_kendo_labels)
	w_kendo_labels.visible = false
					
	//Check the correct box for carton/SKU
	lsFind = "Upper(Delivery_Packing_carton_No) = '" + Upper(idw_Pack.GetITemString(llRowPos,'carton_no')) + "' and upper(sku) = '" + Upper(idw_Pack.GetITemString(llRowPos,'sku')) + "'"
	llFindRow = w_kendo_labels.dw_label.Find(lsFind,1,w_kendo_labels.dw_label.RowCount())
	If llFindRow > 0 Then
						
			w_kendo_labels.dw_label.SetItem(llFindRow,'c_print_ind','Y')
			w_kendo_labels.ibUserSecurityChecked = True /*MikeA 8/2019 S36892 F16645 - I2432 - KDO - Kendo - Supervisor Only to Reprint Carton Labels */
			w_kendo_labels.ibUseCalculatedCartonCount = True /* will use calculated Carton Qty instead of what's already been generated*/
			w_kendo_labels.cb_label_print.TriggerEvent('clicked')
			lbLabelsPrinted = true		
	Else
	
			Messagebox(is_title, 'No label to print')
			lbLabelsPrinted = false
	End If
					
	Close(w_kendo_labels)
	
	idw_pack.SetItem(llRowPos,'c_select_ind','N')
	
Next

if lbLabelsPrinted then
	//MikeA 8/2019 S36892 F16645 - I2432 - KDO - Kendo - Supervisor Only to Reprint Carton Labels
	
	Execute Immediate "Begin Transaction" using SQLCA; 
	
	Update Delivery_master
	Set carton_label_Print_Count = ( :llPrintCount + 1 ) where Do_no = :lsDONO;
	
	Execute Immediate "COMMIT" using SQLCA;

end if
end event

type cb_calc_carton_count from commandbutton within tabpage_pack
integer x = 750
integer y = 524
integer width = 631
integer height = 92
integer taborder = 100
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Calculate Carton Count"
end type

event clicked;Long	llCartonCount

SetPointer(Hourglass!)
llCartonCount = uf_generate_kendo_level2_carton_count()
idw_main.SetITem(1,'ctn_cnt',llCartonCount)
ib_changed = True
end event

event constructor;
If gs_project <> 'KENDO' Then
	This.visible = false
End If
end event

type cbx_gen_level2_qty from checkbox within tabpage_pack
integer x = 1051
integer y = 124
integer width = 951
integer height = 76
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "separate carton per level 2 qty"
end type

type cb_ci_load_tender from commandbutton within tabpage_pack
integer x = 2318
integer y = 28
integer width = 315
integer height = 92
integer taborder = 60
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Send CI/LT"
end type

event constructor;// LTK Pandora #370  Pandora only button
//this.visible = (Upper(gs_project) = 'PANDORA')	
this.visible = ( (Upper(gs_project) = 'PANDORA')	or (Upper(gs_project) = 'PHYSIO-MAA') or (Upper(gs_project) = 'PHYSIO-XD' ) )	// LTK 20140202
end event

event clicked;int i_indx
Decimal llen,lw,lh,lgw
string ls_error
if Upper(gs_project) = 'PANDORA' then

	// LTK 20120523	Pandora #370 Added this button/event so that CI's and Load Tenders can be sent manually.
	//						Moved the CI and Load Tender logic from ue_save to here.
	Long llResponce
	Boolean lbCallCI
	//TimA 09/28/12 Pandora issue #514
	//On EU To EU orders we automaticly send the CI
	if ib_Changed then
		Messagebox(is_title,'Please save your changes first.')		// LTK 20120622  Pandora #438  Added change check because updating DM.UF22 below with AWB/BOL Nbr value from datawindow
		Return
	End if
	//Begin - Dinesh - 08/29/2023 - SIMS-311- Google - Not able to send a CI when weights are in below 1
	FOR i_indx = 1 to idw_pack.RowCount()
		llen = idw_pack.getitemdecimal( i_indx , "length" )
		lw   = idw_pack.getitemdecimal( i_indx , "width" )
		lh   = idw_pack.getitemdecimal( i_indx , "height" )
		lgw  = idw_pack.getitemdecimal( i_indx , "weight_gross" )
		
		if (llen <= 0 OR lw <= 0 OR lh <= 0 OR lgw <= 0) THEN
			ls_error = 'Error in row ' + string(i_indx) + '~r~n' &
		+ 'All values for length, width, height and ' + '~r~n' &
		+ 'gross weight must be greater than zero.'
			SetMicroHelp("Save Interrupted - invalid Dimensions!")
			messagebox (is_Title, ls_error, StopSign!)
			return -1
		end if
	next
	//End - Dinesh - 08/29/2023 - SIMS-311- Google - Not able to send a CI when weights are in below 1
	
	If ibEUFlag = True then //TimA This flag is set in ue_confirm
		lbCallCI = True
	else
		llResponce = MessageBox('Send CI/Load Tender', 'Are you sure you want to send CI/Load Tender?', Question!, YesNo!)
		If llResponce = 1 then
			lbCallCI = True
		else
			lbCallCI = False
		End if
	End if
	
	//24-APR-2019 :Madhu S32730 Picking and Packing Quantity Validation 
	IF wf_pick_pack_qty_comparision() < 0 THEN Return -1
	IF wf_pick_pack_container_qty_validation(false, false, true) < 0 THEN Return -1
		// CI Logic
		
		Long ll_numexistingci , llOldCIFound
		DateTime ldtToday, ldtCreateDate
		String ls_order
	If lbCallCI = True Then
		
		// pvh - 08/24/05 - GMT
		if idw_main.rowcount() > 0 then
			ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 
		else
			ldtToday = f_getLocalWorldTime( gs_default_wh )
		end if
	
		ls_order = idw_main.GetItemString(1,"do_no")
	
		// See if there's an existing CI record. (11/24 dts: added trans_status = 'N' condition)
		// TAM - 2018/04 - DE3565 - Added the trans_Status = 'C' Condition.  two batch transactions are created the second time the button is pressed,
		Select count(*)
		into :ll_numexistingci
		from batch_Transaction
		where project_id = 'PANDORA'
		AND trans_type = 'CI'
//		and trans_status = 'N'
		and trans_status in ('N','C')
		and trans_order_id = :ls_order;
		
		//TimA 08/12/13 added the Pre_CI
		Select count(*)
		into :llOldCIFound
		from batch_Transaction
		where project_id = 'PANDORA'
		AND trans_type = 'CI'
		and trans_status = 'C'
		and Trans_Parm <> 'PRE_CI' //This is needed because of the Pre_CI 3b18 being sent to Pandora when the order is first dropped.
		and trans_order_id = :ls_order;
			
	
		// If there isn't an existing CI transaction (in New status) for this order number,
		If ll_numexistingci = 0 and ibEUFlag = false then
			// Begin a new transaction.
			Execute Immediate "Begin Transaction" using SQLCA;
			// Insert a new record into batch_transaction to create the 3B18.
			Insert Into batch_Transaction
			(project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
			Values(:gs_Project, 'CI', :ls_order, 'N', :ldtToday, '');
			// Commit the transaction.
			Execute Immediate "COMMIT" using SQLCA;
		End if
		
		If llOldCIFound > 0 then
			//21-JUNE-2018 :Madhu DE4907 - Removed Access Level
			//If gs_role = "0"  OR gs_role = "-1" Then //Only Supper and Supper Duper can send the CI
				
				Select Max(Trans_Create_Date )
				into :ldtCreateDate
				from batch_Transaction
				where project_id = 'PANDORA'
				AND trans_type = 'CI'
				and trans_status = 'C'
				and trans_order_id = :ls_order
				and Trans_Parm <> 'PRE_CI' //This is needed because of the Pre_CI 3b18 being sent to Pandora when the order is first dropped.
				group by Trans_Order_Id;
	
				llResponce = MessageBox('Send CI/Load Tender', 'Would you like to create a Commercial Invoice Transaction?~r~rThe last Commercial Invoice transaction was sent on ' + String( ldtCreateDate ), Question!, YesNo!) 
				If llResponce = 1 then
					// Begin a new transaction.
					Execute Immediate "Begin Transaction" using SQLCA;
					// Insert a new record into batch_transaction to create the 3B18.
					Insert Into batch_Transaction
					(project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
					Values(:gs_Project, 'CI', :ls_order, 'N', :ldtToday, '');
					// Commit the transaction.
					Execute Immediate "COMMIT" using SQLCA;
				else
					Return
				End if
			//End if
		Else
			If ibEUFlag = True then
				Execute Immediate "Begin Transaction" using SQLCA;
				// Insert a new record into batch_transaction to create the 3B18.
				Insert Into batch_Transaction
				(project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
				Values(:gs_Project, 'CI', :ls_order, 'N', :ldtToday, '');
				// Commit the transaction.
				Execute Immediate "COMMIT" using SQLCA;			
			End if
	end if	
		// Load Tender Logic
	//
	//	LTK 20120525  Commented this code out per Roy's email..."We should not be sending load tender to UPS.  Pandora pulled the plug on UPS some time ago."
	//	
	//	Long ll_numexistingup
	//	String ls_ups, ls_carrier
	//
	//	ls_carrier = w_do.tab_main.tabpage_other.dw_other.getitemstring(1, "carrier")
	//	ls_ups = Mid(ls_carrier,1,3)
	//
	//	//Jxlim 06/28/2011 Commented code for country since this is now not limited to US warehouse per Ian
	//	//If not exist create one.						
	//	//If idw_main.GetItemString(1,"ord_status") = "A" And ls_Country = 'US'  And ls_ups = 'UPS' Then
	//	If idw_main.GetItemString(1,"ord_status") = "A"  And ls_ups = 'UPS' Then
	//		Select count(*)
	//		into :ll_numexistingup
	//		from batch_Transaction
	//		where project_id = 'PANDORA'
	//		AND trans_type = 'UP'
	//		and trans_status = 'N'
	//		Using SQLCA;
	//		//and trans_order_id = :ls_order;			
	//
	//		// If there isn't an existing UP transaction then create a trans record.
	//		If ll_numexistingup = 0 Then							
	//
	//			// Begin a new transaction.
	//			Execute Immediate "Begin Transaction" using SQLCA;
	//			// Insert a new record into batch_transaction to create the UP
	//			Insert Into batch_Transaction
	//			(project_ID, Trans_Type, Trans_order_id, Trans_Status, Trans_Create_Date, Trans_Parm)
	//			Values(:gs_Project, 'UP', :ls_order, 'N', :ldtToday, '');
	//
	//			// Commit the transaction.
	//			Execute Immediate "COMMIT" using SQLCA;
	//			//Jxlim 03/31/2011 end of code for UPS Load tender 
	//
	//		End If	
	//	End If
	//	//Jxlim 03/31/2011 end of code for UPS Load tender 
	
	
		// Set the CI Printed to the Carrier Pro No (unless it's null then set to AWB Number) 
		if idw_other.RowCount() > 0 then
			//TimA 10/03/12 Panodra issue #514 Don't set user_Field22 if the order is EU to EU
			If ibEUFlag = False then

//				if NOT IsNull(idw_other.Object.awb_bol_no[1]) and Len(Trim(idw_other.Object.awb_bol_no[1])) > 0 then
//					idw_other.Object.user_field22[1] = idw_other.Object.awb_bol_no[1]
//				end if

				String ls_uf22
//				ls_uf22 = idw_other.Object.awb_bol_no[1]
				// LTK 20150930  Comment above out, set UF22 to carrier_pro_no unless it is null, then set to awb_bol_no
				if NOT IsNull( idw_other.Object.carrier_pro_no[1] ) and Len( Trim( idw_other.Object.carrier_pro_no[1] ) ) > 0 then
					ls_uf22 = idw_other.Object.carrier_pro_no[1]
				else
					ls_uf22 = idw_other.Object.awb_bol_no[1]
				end if

				if NOT IsNull( ls_uf22 ) and Len( Trim( ls_uf22 )) > 0 then

					idw_other.Object.user_field22[1] = ls_uf22
					idw_other.setITemStatus(1, 'user_field22', Primary!, NotModified!)	// Reset status, order was saved above
	
					// LTK 20120622  Pandora #438 Update DM.UF22 with AWB/BOL Nbr
					// Begin a new transaction.
					Execute Immediate "Begin Transaction" using SQLCA;
	
					update delivery_master
					set user_field22 = :ls_uf22
					where do_no = :ls_order;
				
					Execute Immediate "COMMIT" using SQLCA;
				end if
			end if
		end if
	
	End if
	
elseif Upper(gs_project) = 'PHYSIO-MAA' or Upper(gs_project) = 'PHYSIO-XD' then

	// LTK  20140202  Added Physio branch

	if ib_Changed then
		Messagebox(is_title,'Please save your changes first.')
		Return
	End if

	// First, delete the old CI that my exist in the DB
	Execute Immediate "Begin Transaction" using SQLCA;

	DELETE FROM Commercial_Invoice
	WHERE project_id = :gs_Project 
	AND do_no = :is_dono
	USING SQLCA;

	Execute Immediate "COMMIT" using SQLCA;


	//Add the header and footer
	String lsPost, lsxml, lsxmlresponse, lsreturncode, lsreturndesc
	iuoWebsphere = CREATE u_nvo_websphere_post
	linit = Create Inet
	lsPost = iuoWebsphere.uf_request_header("CommercialInvoiceRequest", "ProjectID='" + gs_Project + "'")
	lsPost += 	'<Do_No>' + idw_main.GetITemstring(1,'do_no') +  '</Do_No>' 
	lsPost += lsXML
	lsPost = iuoWebsphere.uf_request_footer(lsPost)
	
	w_main.setMicroHelp("Commercial Invoice request to Application Server...")
	
	f_method_trace_special( gs_project, this.ClassName() + ' - CommercialInvoiceRequest', 'Call to Webshpere:  ',is_dono, ' ',lsPost,isinvoice_no) 
	
	lsXMLResponse = iuoWebsphere.uf_post_url(lsPost)
	
	w_main.setMicroHelp("Commercial Invoice request complete.")
	
	f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Response from Webshpere:  ',is_dono, ' ',lsXMLResponse,isinvoice_no) 
	
	//Check for Valid Return...
	//If we didn't receive an XML back, there is a fatal exception error
	If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
		f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Websphere Fatal Exception Error:  ',is_dono, ' ',lsXMLResponse,isinvoice_no) 
		Messagebox("Websphere Fatal Exception Error","Unable to save Pick List: ~r~r" + lsXMLResponse,StopSign!)
		Return -1
	End If
	
	//Check the return code and return description for any trapped errors
	lsReturnCode = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"returncode")
	lsReturnDesc = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"errormessage")
	
	Choose Case lsReturnCode
			
		Case "-99" /* Websphere non fatal exception error*/
			f_method_trace_special( gs_project, this.ClassName() + ' - wf_update_content_server', 'Websphere Error Unable to Save Pick List:  ',is_dono, ' ',lsXMLResponse,isinvoice_no) 		
			Messagebox("Websphere Operational Exception Error","Unable to Save Pick List: ~r~r" + lsReturnDesc,StopSign!)
			Return -1
		
		Case Else
			
			If lsReturnDesc > '' Then
				Messagebox(is_title,lsReturnDesc)
			End If
			
			if lsReturnCode = "-1" Then Return -1
				
	End Choose

	Messagebox(is_title, "Commercial Invoice request successfully sent to application server.")

end if

end event

type cb_print_dn from commandbutton within tabpage_pack
integer x = 1637
integer y = 28
integer width = 293
integer height = 92
integer taborder = 90
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print DN"
end type

event clicked;
u_nvo_process_dn	lu_dn

//nxjain	01272016

If ib_changed Then
	messagebox(is_title,'Please save Packing list before going to print Delivery NoteReport !')
	return
End If

ib_print = true
//end nxjain01272016

lu_dn = Create u_nvo_process_dn

lu_dn.uf_process_dn()


end event

event constructor;
g.of_check_label_button(this)
end event

type cb_lmsrate from commandbutton within tabpage_pack
boolean visible = false
integer x = 3543
integer y = 144
integer width = 165
integer height = 92
integer taborder = 30
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "&LMS Rate"
end type

event clicked;/* dts 02/02/06 - added parameter to control what is updated by socket call...
*/


// “Suggestions for screen appearance -- these can be called “Parcel Rate Type” 
//with the addition of AMI for Nashville, APR for Singapore and EMEA for Eersel. For example:
//
//“Parcel Rate Type AMI
//“Parcel Rate Type APR
//“Parcel Rate Type EMEA

string lsWarehouse, lsCarrier, ls_Rate_Type, ls_carton_type
integer li_idx

lsWarehouse = idw_main.GetItemString(1,'wh_code')
lsCarrier = idw_main.getitemstring(1,"Carrier")



CHOOSE CASE lsWarehouse
CASE "NASHVILLE" //Nashville

	SELECT User_Field1 INTO :ls_Rate_Type
		FROM CARRIER_MASTER
		WHERE PROJECT_ID = '3COM_NASH' AND
				 CARRIER_CODE = :lsCarrier;

CASE "3COM-SIN" //Singapore

	SELECT User_Field2 INTO :ls_Rate_Type
		FROM CARRIER_MASTER
		WHERE PROJECT_ID = '3COM_NASH' AND
				 CARRIER_CODE = :lsCarrier;

CASE "3CGLSEMEA", "3COM-NL"   //Eersel

	SELECT User_Field3 INTO :ls_Rate_Type
		FROM CARRIER_MASTER
		WHERE PROJECT_ID = '3COM_NASH' AND
				 CARRIER_CODE = :lsCarrier;

END CHOOSE

// If the flag is “P” all “cartons” should have a type that starts with “pallet” (not case sensitive.)

IF ls_Rate_Type = "P" THEN
	
	FOR li_Idx = 1 to idw_pack.RowCount()
		
		ls_carton_type = idw_pack.GetItemString( li_Idx, "carton_type")

		If IsNull(ls_carton_type) THEN ls_carton_type = ""
	
		IF Left(Upper(ls_carton_type),6) <> "PALLET" THEN
			
			MessageBox ("Error", "The rating rate for this carrier is set to 'P'. All of the 'cartons' should have a type that starts with 'pallet'.")
			
			RETURN -1
		END IF
	
	NEXT
	
END IF


// If the flag is “B”, none of the “cartons” should have a type that starts with “pallet” (again, not case sensitive.)

IF ls_Rate_Type = "B" THEN

	FOR li_Idx = 1 to idw_pack.RowCount()
		
		ls_carton_type = idw_pack.GetItemString( li_Idx, "carton_type")

		If IsNull(ls_carton_type) THEN ls_carton_type = ""
	
		IF Left(Upper(ls_carton_type),6) = "PALLET" THEN
			
			MessageBox ("Error", "The rating rate for this carrier is set to 'B'. None of the 'cartons' should have a type that starts with 'pallet'.")
			
			RETURN -1
		END IF
	
	NEXT
	
END IF


//openwithParm (w_dssocket, "Rating")
Str_parms	lstrParms

lstrParms.String_Arg[1] = "Rating"
lstrParms.String_Arg[2] = "UF8" //Original Routing Code
lstrParms.String_Arg[3] = "N/A" // passing Previous Wgt (UF14) in Carrier Prioritized Pick LMS Call
lstrParms.String_Arg[4] = ls_Rate_Type

OpenWithParm(w_dssocket, lstrParms)
end event

event constructor;
g.of_check_label_button(this)
end event

type cbx_show_comp_pack from checkbox within tabpage_pack
integer x = 3355
integer y = 28
integer width = 613
integer height = 76
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
boolean enabled = false
string text = "Show Components"
end type

event clicked;
wf_set_pack_filter('SET')
end event

event constructor;
g.of_check_label_button(this)
end event

type cb_pack_copy from commandbutton within tabpage_pack
integer x = 357
integer y = 28
integer width = 293
integer height = 92
integer taborder = 60
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Copy Row"
end type

event clicked;Long  llRow, llNewRow, llFindRow, llRowCount
String	lsCarton, lsFind, lsScrollFind, lsSerialized
Boolean	lbNewCarton
boolean lbUsingTrax
Integer	liMsg

lbNewCarton = False

idw_pack.SetFocus()

If cbx_show_comp_pack.Enabled and cbx_show_comp_pack.Checked = False Then
	Messagebox(is_title,'You must show components before you can copy a Parent Row.')
	Return
End If

llRow = ilSetRow

//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab
lsSerialized = idw_pack.GetItemString( llRow, 'serialized_ind' )
If lsSerialized = 'Y' Or lsSerialized = 'B' Then 	/* Was this row generated from Serial Tab?  Cannot add rows from here.*/
	Messagebox(is_title, 'This row was generated from the Serial Tab and cannot be copied here.~n Make changes on Serial Tab and re-generate pack list.', Stopsign!)
	Return
End If

//TimA 06/05/14 Pandora issue #855.
ibCopied = True
isSkuCopied = idw_pack.GetItemString(idw_pack.getrow ( ) ,"sku")
// 098/13 - USe the Phx code as baseline
idw_pack.TriggerEvent("ue_Copy")

ibCopied = False
////BCR 08-DEC-2011: For PhxBrands, call ue_copy...
//IF gs_project = 'PHXBRANDS' THEN
//	idw_pack.TriggerEvent("ue_Copy")
//ELSE
//	llrow = idw_pack.GetRow()
//	
//	If llRow <= 0 Then
//		REturn
//	Else
//		//llNewRow = llRow + 1
//		idw_pack.RowsCopy(llRow,llRow,Primary!,idw_pack,999999999,Primary!)
//		ib_changed = True
//	End If
//	
//	// pvh 11/09/05
//	// 09/05 - PCONKL - If the row being copied has been shipped via TRAX, then the new row must have a new carton number
//	If g.is_unique_pack_cartonNumbers = 'Y' Then
//	
//		lbUsingTrax = false
//		if idw_pack.Find("tracking_id_type='T'",1,idw_pack.RowCount())  > 0 then lbUsingTrax = true
//		
//		If Not lbUsingTrax Then /*no need to prompt if we are going to do it anyway*/
//			liMsg =  Messagebox(is_title, "Would you like to assign a new carton Number to the new row?",Question!,YesNo!,2) 
//		End If
//			
//		If liMsg = 1 or lbUsingTrax Then
//			lscarton = wf_set_PAck_Carton(idw_Pack.RowCount())
//			idw_pack.SetItem(idw_Pack.RowCount(),'carton_no',lsCarton)
//			
//			if lbUsingTrax then idw_pack.SetItem(idw_Pack.RowCount(),'shipper_tracking_id','')
//			
//			idw_pack.SetItem(idw_Pack.RowCount(),'tracking_Id_type','')
//			lbNewCarton = True
//		end If
//			
//	End If
//	//
//	// pvh 11/09/05 - old code.  Users complained about the zapping of shipper tracking id
//	//
//	//// 09/05 - PCONKL - If the row being copied has been shipped via TRAX, then the new row must have a new carton number
//	//If g.is_unique_pack_cartonNumbers = 'Y' Then
//	//	
//	//	If idw_pack.Find("tracking_id_type='T'",1,idw_pack.RowCount()) = 0 Then /*no need to prompt if we are going to do it anyway*/
//	//		liMsg =  Messagebox(is_title, "Would you like to assign a new carton Number to the new row?",Question!,YesNo!,2) 
//	//	End If
//	//		
//	//	If liMsg = 1 or idw_pack.Find("tracking_id_type='T'",1,idw_pack.RowCount()) > 0 Then
//	//		lscarton = wf_set_PAck_Carton()
//	//		idw_pack.SetItem(idw_Pack.RowCount(),'carton_no',lsCarton)
//	//		idw_pack.SetItem(idw_Pack.RowCount(),'shipper_tracking_id','')
//	//		idw_pack.SetItem(idw_Pack.RowCount(),'tracking_Id_type','')
//	//		lbNewCarton = True
//	//	end If
//	//		
//	//End If
//	
//	//We will want to scroll to the new row
//	lsScrollFind =  "Upper(carton_No) = '" + Upper(idw_Pack.GetITemString(idw_Pack.RowCount(),'Carton_No')) + & 
//					"' and Line_Item_No = " + String(idw_Pack.GetITemNumber(idw_Pack.RowCount(),'Line_Item_No')) 
//	
//	// 04/05 - PCONKL - If this is a parent and we have created a new carton, we will copy the children to the new carton as well
//	If lbNewCarton and idw_Pack.GetITemString(lLRow,'Component_ind') = 'Y' Then
//		
//		lLRowCount = idw_Pack.RowCount()
//		//Find and Copy the children to the new carton
//		lsFind = "Upper(carton_No) = '" + Upper(idw_Pack.GetITemString(lLRow,'Carton_No')) + & 
//					"' and Line_Item_No = " + String(idw_Pack.GetITemNumber(lLRow,'Line_Item_No')) + &
//					" and (component_ind = 'W' or Component_ind = '*')"
//		llFindRow = idw_Pack.Find(lsFind,llRow,lLRowCount)
//		
//		Do While llFindrow > 0
//			
//			//llNewRow ++
//			idw_pack.RowsCopy(llFindRow,llFindRow,Primary!,idw_pack,999999999,Primary!)
//			idw_pack.SetItem(idw_pack.RowCount(),'carton_no',lsCarton)
//			
//			llFindRow ++
//			If llFindRow > lLRowCount Then 
//				llFindRow = 0
//			Else
//				llFindRow = idw_Pack.Find(lsFind,llFindRow,lLRowCount)
//			End If
//			
//		Loop
//			
//	End If /*New Carton and parent*/
//	
//	idw_pack.Sort()
//	idw_pack.GroupCalc()
//	
//	uf_enable_first_carton_row(0,"")
//	
//	//Find the row we just created and scroll to it
//	llFindRow = idw_pack.Find(lsScrollFind,1,idw_pack.rowCount())
//	If llFindRow > 0 Then
//		idw_pack.SetRow(llFindRow)
//		idw_Pack.ScrollToRow(llFindRow)
//		idw_pack.SetColumn('carton_no')
//	End If
//END IF
//
//
end event

event constructor;
g.of_check_label_button(this)
end event

type dw_packlist_notes from u_dw_ancestor within tabpage_pack
integer x = 9
integer y = 188
integer width = 3877
integer height = 492
integer taborder = 20
string dataobject = "d_do_packlist_notes"
boolean resizable = true
end type

event constructor;call super::constructor;
If gs_project <> 'KENDO' Then
	This.Modify("ctn_cnt.visible=false ctn_Cnt_t.visible=false gb_labels.visible=false")
End If
end event

type rb_metric from radiobutton within tabpage_pack
integer x = 2944
integer y = 44
integer width = 270
integer height = 76
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Metric"
end type

event clicked;string ls_data
ls_data='M'
is_metric=ls_data
//IF wf_convert(ls_data,0) <> 1 THEN rb_eng.checked = TRUE
//added parameter to convert a particular row (as P/L is being generated) or all rows
IF wf_convert(ls_data, 0, 0) <> 1 THEN rb_eng.checked = TRUE

// Begin - Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer
 if rb_metric.checked = TRUE then
	 tab_main.tabpage_pack.cb_ci_load_tender.enabled= True
end if
// End -Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer
end event

type rb_eng from radiobutton within tabpage_pack
integer x = 2661
integer y = 44
integer width = 306
integer height = 76
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "English"
end type

event clicked;string ls_data
ls_data='E'
is_eng = ls_data

//IF wf_convert(ls_data,0) <> 1 THEN rb_metric.checked = TRUE
//added parameter to convert a particular row (as P/L is being generated) or all rows
IF wf_convert(ls_data, 0, 0) <> 1 THEN rb_metric.checked = TRUE
// Begin -  Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer
 if rb_eng.checked = TRUE then
	 tab_main.tabpage_pack.cb_ci_load_tender.enabled= False
end if
// End - Dinesh -09/01/2023- SIMS-293- Google- DIMS and Weights are missing in the 945CI we send to customer
end event

type cb_pack_insert from commandbutton within tabpage_pack
integer x = 9
integer y = 28
integer width = 338
integer height = 92
integer taborder = 60
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Insert Row"
end type

event clicked;
Long ll_row, llCarton, llFindRow
String ls_sku,ls_supp,ls_std_measure,ls_wh_code, lsNextCarton, ls_Standard_of_measure
Decimal ld_l, ld_w, ld_h, ld_net_wt, ld_gross_wt, ld_cbm
Boolean lb_default


// 08/16 - PCONKL - For Kendo, we may be inserting rows one at a time and printing the shipping label. If this is the case, the carton count needs to be set first
If gs_project = 'KENDO' and (idw_Main.GetITemNumber(1,'ctn_cnt') = 0 or isnull(idw_Main.GetITemNumber(1,'ctn_cnt')))Then
	If Messagebox(is_title,'If you are printing Shipping labels, you must enter the Carton Count first.~r~rDo you want to continue?',Question!,YesNo!,2) = 2 Then
		return
	End If
End If

idw_pack.SetFocus()

ib_changed = True
ll_row = idw_pack.GetRow()

If ll_row = idw_pack.RowCount() Then ll_row ++

ll_row = idw_pack.InsertRow(ll_row)

ls_wh_code = idw_main.object.wh_code[1]      	

//Use the Radio Buttons to set the standard of measure instead of the warehouse default.

IF  rb_eng.checked = false AND rb_metric.checked = false THEN
	
	idw_pack.Setitem(ll_row,"standard_of_measure",g.ids_project_warehouse.object.standard_of_measure[g.of_project_warehouse(gs_project,ls_wh_code)])
	wf_assignetom(2)//Assign to radio button

	
ELSE

	IF rb_eng.checked THEN
		ls_Standard_of_measure = "E"
	ELSE
		ls_Standard_of_measure = "M"
	END IF
	
	idw_pack.Setitem(ll_row,"standard_of_measure", ls_Standard_of_measure)

END IF

//Old code is at the bottom.

//idw_pack.Setitem(ll_row,"standard_of_measure",g.ids_project_warehouse.object.standard_of_measure[g.of_project_warehouse(gs_project,ls_wh_code)])
//wf_assignetom(2)//Assign to radio button
		
idw_pack.GroupCalc()

idw_pack.SetRow(ll_Row)
idw_pack.ScrollToRow(ll_row)
idw_pack.SetItem(ll_row,"do_no", idw_main.GetItemString(1,"do_no"))

//get the next available carton number
lsNextCarton = wf_set_pack_carton(ll_row)
idw_pack.SetITem(ll_row,'carton_no',lsNextCarton)
idw_pack.SetITem(ll_row,'component_ind','N')
idw_pack.SetITem(ll_row,'c_first_carton_row','Y') /* 03/07 - PCONKL - default dims enabled**/

//JXLIM 05/06/2010 for PHXBRANDS
IF Upper(gs_project) = 'PHXBRANDS' THEN
	idw_pack.SetItem(ll_row,"carton_type","Case")
END IF
//JXLIM 05/06/2010 end for PHXBRANDS.

idw_pack.SetColumn('Sku')

// 08/16 - PCONKL - For Kendo, set pack lot No to blank to ensure a value is entered to trigger the label logic
If gs_project = 'KENDO' THen
	idw_pack.SetItem(ll_row,"pack_lot_no","")
End If
end event

event constructor;g.of_check_label_button(this)
end event

type cb_pack_generate from commandbutton within tabpage_pack
integer x = 997
integer y = 28
integer width = 293
integer height = 92
integer taborder = 30
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Generate"
end type

event clicked;//Jxlim 08/12/2013 Ariens; validate serial No
//uf22 is 'Y' when serial no is validated from srial validation button on picking list
// 09/13 - PCONKL - Moving to serial outbound scanning. Will need to generate pack first. Only validate here if serials exist on picking tab.

String ls_uf22,ls_uf2,ls_sku, ls_uf1,lsMsg
int li_scanned = 0
long lldetailCount,k,ll_lineno,ll_count
string ls_code_type,ls_code_id,ls_count,lsDONO,ls_country,lswhcode
string ls_pack_po_no2,ls_trailer_num,ls_seal_num
long j	

//31-May-2016 :Madhu- added to prevent AIR carrier for Dangerous goods -START
	If g.ibpreventaircarrierforhazardous Then
		If wf_check_carrier_dangerous_goods() = -1 Then
			MessageBox(is_title,"Dangerous goods# "+ is_dangerous_item +" is restricted to ship via AIR Carrier. ~n~rPlease select a different Carrier.")
			tab_main.SelectTab(2) 
			idw_other.SetColumn("carrier")
			idw_other.SetFocus()
			SetMicroHelp("Save failed!")
			Return -1
		End If
	End If
//31-May-2016 :Madhu- added to prevent AIR carrier for Dangerous goods -END

If Upper(gs_project) = 'ARIENS' and idw_pick.Find("trim(serial_no) <> '-'",1, idw_pick.RowCount()) > 0 Then
	
	ls_uf22 = Trim(idw_main.GetItemString(1,"user_field22"))
	
	If IsNull(ls_uf22) or ls_uf22 <> 'Y' Then
		MessageBox("Serial Validation", "Must validate serial numbers before pack generation.", Exclamation!)
		Return 0
	End if
	
elseif Upper (gs_project) = 'PHYSIO-MAA' then /* 01/14 - PCONKL - Physio needs option to generate or scan */
	
	 If  g.isProjectUserField1 = 'Y'  Then
		
		Open(w_physio_scan_or_generate)
		str_resp = Message.PowerObjectParm
		if str_resp.bok = false then //hdc 10-05-2012 user cancelled out of the box
			return
		elseif str_resp.action="scan" then 
			tab_main.selectTab(6)
			return
		End If
		
	Else
		
		str_resp.action="generate"  

	End If
	
elseif Upper (gs_project) = 'PANDORA' then /* 06/14 - GAILML - Pandora Issue 861 - Capture SN prior to generate packinng list */
	
	// Begin - Dinesh -01/05/2022- DE24075- Google - SIMS Production - Outbound order completed without Serial Numbers
//	int j
	//long llLineNum
	//string llserialno
	//If tab_main.tabpage_serial.dw_serial.RowCount() > 0 then
		//FOR j = 1 to tab_main.tabpage_serial.dw_serial.RowCount()
		//	llserialno = tab_main.tabpage_serial.dw_serial.GetItemString(j,"serial_no")
			//llLineNum = tab_main.tabpage_serial.dw_serial.GetItemNumber(j,"line_item_no")
			//if llserialno = '' or Isnull(llserialno) then
				//	wf_display_message("Serial Number is required on line item no: " +  String (llLineNum)) 
				//	tab_main.selecttab(6)
					//tab_main.tabpage_serial.dw_serial.scrolltorow(j)
				//	f_setfocus(idw_serial, j, "serial_no")
//					tab_main.tabpage_serial.dw_serial.Protect = TRUE
					
				//	Return -1
			//end if
		//NEXT
	//end if
	
	// End - Dinesh 01/05/2022- DE24075- Google - SIMS Production - Outbound order completed without Serial Numbers
	
	li_scanned = wf_check_serials_scanned()
	Choose Case li_scanned
		Case 0
			messagebox(is_title,"Serial Numbers need to be scanned before generating the Pack List", Exclamation!)
			return
		Case 1
			//messagebox(is_title,"Required to scan and scan completed - temptest", Exclamation!)  for testing only
		Case 2
			//messagebox(is_title,"Not required to scan serial numbers - temptest", Exclamation!)
		Case 3
			messagebox(is_title,"Cannot generate pack list without pick list", Exclamation!)
			return
	End Choose

//TAM 2018/08 - S22531 - Add Lock Load ID Validation	
	ls_uf1 = Trim(idw_main.GetItemString(1,"user_field1"))
	isloadId = Trim(idw_main.GetItemString(1,"load_id"))
	
	If ls_uf1 <> 'DOS' and  ls_uf1 <> 'PIU' and ls_uf1 <> 'NOS'  and ls_uf1 <> 'GND' and (isloadId = '' or isNull(isloadId)) then /* 11/19 - PCONKL - F19222/DE13597 - add 'GND' */
	
		//GailM 10/15/2018 Temporarily use flag to disable this function until other testing is done
		If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"tHEN
			messagebox(is_title,"This is TMS order and should have Load ID, Pack List Cannot generate", Exclamation!)
			return
		Else
//			messagebox(is_title,"This is a TMS order and should have Load ID.~rThis stop is temporarily disabled.  Change Flag to 'Y' to reenable.", Exclamation!)
		End If
		
	End If
	
		//GailM 10/15/2018 Temporarily use flag to disable this function until other testing is done
	If f_retrieve_parm("PANDORA","FLAG","TMS") = "Y" and  f_retrieve_parm("PANDORA","SKIP_TMS", isWareHouse, "CODE_DESCRIPT")  <> "SKIP_IT"tHEN
	ls_trailer_num=w_do.idw_main.getitemstring(1,'user_field3')
	ls_seal_num=w_do.idw_main.getitemstring(1,'user_field6')
//TAM 2018/12/10 - S25773 Skip Load ID = 'NA'
// 11/19 - PCONKL - F19222/DE13597 - add 'GND'
//		If ls_uf1 <> 'DOS' and  ls_uf1 <> 'PIU' and ls_uf1 <> 'NOS' and isloadId > ''  then 
		//If ls_uf1 <> 'DOS' and  ls_uf1 <> 'PIU' and ls_uf1 <> 'NOS' and ls_uf1 <> 'GND' and isloadId > '' and isloadID <> 'NA' then 
		If ls_uf1 <> 'DOS' and  ls_uf1 <> 'PIU' and ls_uf1 <> 'NOS' and ls_uf1 <> 'GND' and isloadId > '' and isloadID <> 'NA' and (ls_trailer_num <> '' or not isnull(ls_trailer_num)) and (ls_seal_num <> '' or not isnull(ls_seal_num))   then // Dinesh - 03/24/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
			//lsMsg = 'LOAD ID ' + isloadId + ' will be locked on Save. Do you want to proceed?'
			lsMsg = 'LOAD ID ' + isloadId + ' will locked when order is placed in to LOADING Status.  Do you want to proceed?' // Dinesh - 03/24/2023- SIMS-53- Google - SIMS - Load Lock and New Loading Status
			If MessageBox( is_title, lsMsg, Exclamation!, YesNo!,2 ) <> 1 Then
				return
			Else 
				isLoad_Status = 'LOCK_ON_SAVE'
			End If 
		End If
	End If
End If

//26-Jun-2014 :Madhu- Don't allow to re-generate pack list, if serial no records exists on Serial Tab-START
If Upper(gs_Project) ='ARIENS' and tab_main.tabpage_serial.dw_serial.rowcount() > 0 Then
	MessageBox(is_title,"Serial records exist for this pack list.  Please delete them before you generate a new Pack list.",Stopsign!)
	tab_main.selectTab(6)
	return
ELSE
	iw_window.triggerEvent("ue_generate_pack")
END IF
//26-Jun-2014 :Madhu- Don't allow to re-generate pack list, if serial no records exists on Serial Tab-END

end event

event constructor;
g.of_check_label_button(this)
end event

type cb_pack_print from commandbutton within tabpage_pack
integer x = 1317
integer y = 28
integer width = 293
integer height = 92
integer taborder = 40
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Print"
end type

event clicked;Integer li_ren, i
u_nvo_custom_packlists	luo_Pack

string ls_Ord_Type, lsCustCode, lsUF1, lsFind
Long	llRowCount, llRowPos, llLIneItemNo, ll_row, llPickQty, llPackQty


luo_pack = Create u_nvo_custom_packlists

// 10/14 - PCONKL - Moved validation from wf_validation so we can save a short pack list

If idw_Pack.RowCount() > 0 Then
	
	// 08/16 - For Kendo (and might be best for baseline - just compare total Pick vs Pack Qty - lines may not match for Kendo and it doesn't matter as long as totals match
	If gs_project = 'KENDO' Then
		
		llPickQty = 0
		llRowCount = idw_Pick.RowCount()
		For llRowPos = 1 to llRowCount
			llPickQty += idw_Pick.GetITemNumber(llRowPos,'quantity')
		Next
		
		llPackQty = 0
		llRowCount = idw_Pack.RowCount()
		For llRowPos = 1 to llRowCount
			llPackQty += idw_Pack.GetITemNumber(llRowPos,'quantity')
		Next
			
		If llPickQty <> llPackQty Then
			Messagebox(is_title,"Packed Qty (" + String( llPackQty) + ") does not match Picked Qty (" + String(llPickQty) + ") . Please check!",StopSign!)
			return
		End If
		
	Else
		
		llRowCount = idw_Pick.RowCount()
		For llRowPos = 1 to llRowCount
			
				llLIneItemNo = idw_Pick.GetITemNumber(llRowPos,'Line_Item_No')
				lsFind =  "Line_item_no = " + string(llLIneItemNo)
				ll_row = idw_Pack.Find(lsFind, 1, idw_Pack.RowCount())
	
				If ll_row < 1 Then
					Messagebox(is_title,"Packing List information missing for Line Item " + string(llLIneItemNo) + ". Please check!",StopSign!)
					tab_main.selecttab(5)
					return 
				End If	
			Next

		//24-APR-2019 :Madhu S32730 Picking and Packing Quantity Validation
		IF wf_pick_pack_qty_comparision() < 0 THEN Return -1

		//16-MAY-2019 :Madhu S33666 Picking and Packing Container Quantity Validation
		IF upper(gs_project)='PANDORA' THEN
			IF wf_pick_pack_container_qty_validation(false, true, false) < 0 Then Return -1
		END IF

	END IF	
END IF

// 03/04 - PCONKL - Moved Custom Packlists to UO 

choose case Upper(gs_project)
		
	Case 'MAQUET'  // pconkl 03/0/06
		
			luo_pack.uf_packprint_Maquet()
		  
	case 'LOGITECH'  
  
     	luo_pack.uf_packing_slip_logitech() 
			  
	case 'POWERWAVE'  /* 09/06 - PCONKL */
  
    		 luo_pack.uf_packprint_powerwave() 
	
	case 'SCITEX-IID'  /* 2006/10/23 - TAM */
  
     	luo_pack.uf_packprint_scitex() 
	  
	case 'SIKA'  /* 2007/12/21 - MEA */
  
    		 luo_pack.uf_packprint_sika() 	 
	  
	 case 'LMC'  /* 2009/01/26 - PFC */
  
     	luo_pack.uf_packprint_lmc() 	 
	  
	 case 'PANDORA'  /* 2010/07/16 ZUV */
  
     	f_packprint_pandora()
	
	Case "HILLMAN"
		
		//07/09 - PCONKL - If it is a Home Depot Customer, use a custom PL
		lsCustCode = idw_main.GetITemString(1,'cust_Code')
		Select user_field1 into :lsUF1
		From Customer
		Where Project_id = 'Hillman' and cust_code = :lsCustCode;
		
		If lsUF1 > '' Then /*Home DEpot Store NUmber present*/
			luo_pack.uf_packprint_hillman_homedepot() 
		Else
			w_do.trigger event ue_pack_print() /*use default for non Home Depot Orders*/
		End If

	CASE "SMYRNA-MU"

			IF idw_main.getitemstring(1,"wh_code") = 'EPSON' THEN
				luo_pack.uf_packprint_epson() 
			Else
				w_do.trigger event ue_pack_print() /*use default for non EPSON Orders*/
			End If
	
	CASE 'PHXBRANDS'  /*BCR 23-AUG-2011*/
  
     	luo_pack.uf_packprint_phxbrands()
		  
	CASE 'RIVERBED'  /*BCR 04-NOV-2011*/
  
     	luo_pack.uf_packprint_riverbed()
		  
	CASE 'GEISTLICH'  /*BCR 18-NOV-2011*/
  
     	luo_pack.uf_packprint_geistlich()
		
	CASE 'NIKE-SG', 'NIKE-MY'  /* 12/11 - PCONKL*/
  
     	luo_pack.uf_packprint_nike()
		  
	CASE 'KARCHER'  /* 12/11 - PCONKL*/
  
     	luo_pack.uf_packprint_karcher()
		  
	CASE 'STRYKER'  /* 06/12 - MEA*/
		
     	luo_pack.uf_packprint_stryker()

	Case 'ARIENS'  // dts 07/11/13                                
       		//Jxlim 08/07/2013 Always print BOL load sheet by default
				//nxjain 2013/08/06 added areins report 2013/08/06
	li_ren =luo_pack.uf_process_packprint_ariens()
	//Then print HomeDepot Packing List depending on the doc type value pass onto delivery_master.user_field7 either PK2(US) or PK3(Canada)
	if li_ren =1 then 
		luo_pack.uf_packprint_Ariens()  	
	end if 
		  
	Case 'FRIEDRICH'  // TAM 2013/11                                
		luo_pack.uf_process_packprint_friedrich()
		
	Case 'PE-THA'  // Nxjain 2014/11                          
		luo_pack.uf_packprint_petha()
		
	Case 'GARMIN'  //Jxlim05/20/2014
		luo_pack.uf_packprint_garmin()
		
	Case 'BOSCH'   //09/09/2014 Madhu Added
		luo_pack.uf_packprint_bosch()
		
	Case 'PUMA'   //26-Dec-2014 Madhu Added
		luo_pack.uf_packprint_puma()	
		
	Case "KENDO" /* 04/16 - PCONKL*/
		
		luo_pack.uf_packprint_kendo()
		
	Case 'HAGER-SG'	//GailM - 09/28/2017 - SIMSPEVS-846 - HAGER-SG customized packing list    removed for 17-10 release
		
		luo_pack.uf_packprint_hagersg( )

	case else         //Wason 10/02/04
		
	   w_do.trigger event ue_pack_print()  //Wason 10/02/04
		
end choose //Wason 19/01/04
end event

event constructor;
g.of_check_label_button(this)
end event

type dw_packprint from datawindow within tabpage_pack
boolean visible = false
integer x = 1266
integer y = 1004
integer width = 1362
integer height = 704
integer taborder = 60
boolean bringtotop = true
string dataobject = "d_packing_prt"
boolean hscrollbar = true
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event constructor;g.of_check_label(this)
end event

type dw_pack from u_dw_ancestor within tabpage_pack
event ue_set_column ( )
event ue_create_bundled_parent ( )
event ue_set_row ( )
event ue_kendo_ship_label ( )
event ue_process_carton_scan ( )
integer x = 9
integer y = 700
integer width = 3497
integer height = 1340
integer taborder = 20
string dataobject = "d_do_packing_grid"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
end type

event ue_set_column;
This.SetColumn(isColumn)
end event

event ue_create_bundled_parent();// 01/05 - PConkl - If a component, if a parent doesn't exist for this child, add it (copy from a previous parent)

String	lsParentSKU, lsFind, lsSuppcode, lsSKU, lsReturnFind, lsCarton
Long	llfindRow, llLineItemno, llCurrRow, llRowID, llReturnRow
Boolean	lbChanged
//Find Parent SKU in PAck List
		
llCurrRow = il_curr		

llLineItemNO = This.GetITemNumber(llCurrRow,'Line_Item_No')
lssku = This.GetITemString(llCurrRow,'SKU')
lsSuppCode = This.GetITemString(llCurrRow,'supp_Code')
lsCarton = This.GetITemString(llCurrRow,'carton_no')

//we want to return to the current row after we have sorted and recalced the group
lsReturnFind = "Line_Item_No = " + String(llLineItemNO) + " and upper(carton_no) = '" + & 
					Upper(lscarton) + "' and Upper(Sku) = '" + Upper(lsSKU) + "' and Upper(supp_code) = '" + Upper(lsSuppCode) + "'"

lsFind = "Line_Item_No = " + String(llLineItemNo) + " and Upper(SKU) = '" + Upper(lssku) + "' and Upper(Supp_code) = '" + Upper(lssuppcode) + "'"
llFindRow = idw_Pick.find(lsFind,1,idw_Pick.RowCount())

If llFindRow > 0 Then
		
	lsParentSKU = idw_Pick.GetITemString(llFindRow,'sku_Parent')
	lsFind = "Line_Item_No = " + String(llLineItemNo) + " and Upper(SKU) = '" + Upper(lsParentSKU) + "' and Upper(Supp_code) = '" + Upper(lssuppcode) + "'"
	lsFind += " and Upper(carton_no) = '" + Upper(This.GetItemString(llCurrRow,'carton_no')) + "'"
	llFindRow = idw_Pack.find(lsFind,1,idw_Pack.RowCount())
	
	If llFindRow = 0 Then /*we don't already have a new parent row */
	
		lsFind = "Line_Item_No = " + String(llLineItemNo) + " and Upper(SKU) = '" + Upper(lsParentSKU) + "' and Upper(Supp_code) = '" + Upper(lssuppcode) + "'"
		lsFind += " and Upper(carton_no) <> '" + Upper(This.GetItemString(llCurrRow,'carton_no')) + "'"
		llFindRow = idw_Pack.find(lsFind,1,idw_Pack.RowCount())
		
		If llFindRow > 0 Then
			
			This.RowsCopy(llFindRow,llFindRow,Primary!,This,llCurrRow,Primary!)
			This.SetItem(llCurrRow,'carton_no',This.GetItemString(llCurrRow + 1,'carton_no'))
		
		End If
		
	End If
	
	lbChanged = True
	
End If

If lbChanged Then
	
	This.SetRedraw(false)
	This.Sort()
	This.GroupCalc()
	This.SetRedraw(True)

	//Return to original row
	llReturnrow = This.Find(lsReturnFind,1,This.RowCount())
	If llReturnrow > 0 Then
		This.ScrolltoRow(llReturnrow)
		This.SetRow(llReturnrow)
	End If
	
End IF
end event

event ue_set_row();
if ilSetRow > 0 Then
	This.SetRow(ilSetRow)
	This.ScrollToRow(ilSetRow)
End If
end event

event ue_kendo_ship_label();String	lsFind
Long	llFindRow

idw_pack.AcceptText()

			
			lsFind = "upper(sku) = '" + upper(This.GetItemString(ilPackRow,'sku')) + "' and upper(lot_no) = '" +  upper(This.GetItemString(ilPackRow,'pack_lot_no')) + "'"
			llFindRow = idw_pick.Find(lsFind,1,idw_pick.RowCount())
			
			If llFindRow > 0 Then
				
				If (This.GetItemStatus(ilPackRow,0,Primary!) = New! or This.GetItemStatus(ilPackRow,0,Primary!)  = NewModified!) and idw_Main.GetITemNumber(1,'ctn_cnt') > 0 Then 
					
					If isnull(THis.GetITemNumber(ilPackRow,'Line_Item_No')) Then
						This.SetITem(ilPackRow,'line_item_no',idw_pick.GetItemNumber(llFindRow,'line_item_no'))
					End If
				
					If Messagebox(is_title,"Print Shipping Label?",Question!,YesNo!,1) = 1 Then
					
						//w_do.TriggerEvent('ue_save')
						Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/
						If idw_pack.Update() = 1 Then
							Execute Immediate "COMMIT" using SQLCA;
   							If SQLCA.SQLCode = 0 Then
   							Else /*commit failed*/
								Execute Immediate "ROLLBACK" using SQLCA;
     							MessageBox(is_title, "Unable to save Packing List - No label to print " + SQLCA.SQLErrText)
								  return 
							End If
						End If
						
						idw_pack.REsetUpdate()
						
						//quick and dirty - open kendo label windo invisibly, check the carton row and execute print logic and then close
						Open(w_kendo_labels)
						w_kendo_labels.visible = false
					
						//Check the correct box for carton/SKU
						lsFind = "Upper(Delivery_Packing_carton_No) = '" + Upper(This.GetITemString(ilPackRow,'carton_no')) + "' and upper(sku) = '" + Upper(This.GetITemString(ilPackRow,'sku')) + "'"
						llFindRow = w_kendo_labels.dw_label.Find(lsFind,1,w_kendo_labels.dw_label.RowCount())
						If llFindRow > 0 Then
						
							w_kendo_labels.dw_label.SetItem(llFindRow,'c_print_ind','Y')
							w_kendo_labels.ibUseCalculatedCartonCount = True /* will use calculated Carton Qty instead of what's already been generated*/
							w_kendo_labels.cb_label_print.TriggerEvent('clicked')
						
						Else
						
							Messagebox(is_title, 'No label to print')
						
						End If
					
						Close(w_kendo_labels)
						
					End If /* New Row*/
					
				End If /* Print label*/
				
			Else
				
				MessageBox(is_title,'Invalid Batch Code: ' + This.GetItemString(ilPackRow,'pack_lot_no') ,StopSign!)
				This.SetItem(ilPAckRow,'pack_lot_no','')
				This.SetColumn('pack_lot_no')
				
				return 
							
			End If
			
			

end event

event ue_process_carton_scan();
String	lsFind
Long	llFindRow, llRowCount

llRowCount = This.RowCount()

If sle_carton_scan.Text = '' or llRowCount = 0 Then Return

//Find the Carton
lsFind = "Upper(Carton_no) = '" + Upper(sle_carton_scan.Text) + "'"
llFindRow = This.Find(lsFind,1,llRowCount)

If llFindRow > 0 Then
	idw_pack.SetFocus()
	This.ScrollToRow(llFindRow)
	This.SetRow(llFindRow)
	sle_carton_scan.Text=""
	idw_pack.setItem(llFindRow,'c_Select_ind','Y')
Else
	Messagebox(is_title,'Carton Not found!',StopSign!)
	sle_carton_scan.SelectText(1,999)
	Return
End If

//If all the fields look good, prompt to print label

// Gross Weight required for LTL
If This.GetITemNumber(llFindRow,'weight_gross') = 0 or isNull(This.GetITemNumber(llFindRow,'weight_gross')) Then
	This.SetColumn('weight_gross')
	Return
End If

//Carton Count required
If idw_Main.GetITemNumber(1,'ctn_cnt') = 0 or isnull(idw_Main.GetITemNumber(1,'ctn_cnt')) Then
	Return
End If

//GailM 5/15/2018 DE4305 Messagebox misspelling
If messagebox("","Print Shipping label?",Question!,YesNo!,1) = 1 Then
	cb_print_ship_label.TriggerEvent('clicked')
End If

sle_carton_scan.SetFocus()
end event

event itemchanged;call super::itemchanged;
String ls_SKU, ls_Name,ls_std_measure, lsParentSKU,ls_where,ls_poject_id,ls_carton_type, lsPrefix
string ls_supp_code,ls_alternate_sku,ls_coo, lsFind,ls_wh_code,ls_std_measure_w
Long ll_owner_id,ll_row , llLineItemNo, llRC
LONG   ll_Count, ll_Length, ll_Width, ll_Height,   llFindRow,ll_rtn,ll_find
decimal ld_null,ld_result, ld_quantity, ld_qty, ld_Weight
BOOLEAN lb_UpdatePackListUser
String lsOrigVal
String  lssku,lsSUpplier,ls_ContainerTrackingInd,ls_cntr_type
long ll_find_cntr_type
string ls_pack_po_no2
long i

setnull(ld_null)

ls_Name = dwo.Name
ib_changed = True
ibPackModified = True
ls_wh_code = idw_main.object.wh_code[1]
lb_UpdatePackListUser = FALSE   // ET3 2012-11-29 - Update the Last PackList User and Timestamp

CHOOSE CASE ls_Name

CASE 'sku'
	
   //Check if item_master has the records for entered sku	
		ll_Count = i_nwarehouse.of_item_sku(gs_project,data)
		Choose Case ll_Count
			Case 1 /*only 1 supplier, Load*/
				This.SetItem(row,"supp_code",i_nwarehouse.ids_sku.GetItemString(1,"supp_code"))
				ls_sku = data
				ls_supp_code = i_nwarehouse.ids_sku.GetItemString(1,"supp_code")
				goto pick_data
			Case is > 1 /*Supplier dropdown retrievd when clicked*/
				This.object.supp_code[row]=""
			Case Else			
				MessageBox(is_title, "Invalid SKU, please re-enter!",StopSign!)
				return 1
		END Choose
		
Case 'supp_code'
	
	 ls_sku = this.Getitemstring(row,"sku")
	 ls_supp_code = data
	 goto pick_data

Case "length"

	// ET3 Pandora 496 - allow decimals in all fields
	IF UPPER(gs_project) = 'PANDORA' THEN
		This.SetItem(row,'cbm',dec(data) * This.GetItemNumber(row,"width") * This.GetITemNumber(row,"height"))
	ELSE
		This.SetItem(row,'cbm',long(data) * This.GetItemNumber(row,"width") * This.GetITemNumber(row,"height"))
	END IF
	
	uf_update_carton_rows(row,'length',Dec(Data)) /*03/07 - PCONKL - update on other rows for caton*/

	lb_UpdatePackListUser = TRUE
	
Case "width"
	
	// ET3 Pandora 496 - allow decimals in all fields
	IF UPPER(gs_project) = 'PANDORA' THEN
		This.SetItem(row,'cbm',dec(data) * This.GetItemNumber(row,"length") * This.GetITemNumber(row,"height"))
	ELSE
		This.SetItem(row,'cbm',long(data) * This.GetItemNumber(row,"length") * This.GetITemNumber(row,"height"))
	END IF
	
	uf_update_carton_rows(row,'width',Dec(Data))
	lb_UpdatePackListUser = TRUE
	
	//08/16 - PCONKL - For some reason, tabbing to outerpack
	isColumn = "height"
	This.PostEvent("ue_set_column")
	
Case "height"

	// ET3 Pandora 496 - allow decimals in all fields
	IF UPPER(gs_project) = 'PANDORA' THEN
		This.SetItem(row,'cbm',dec(data) * This.GetItemNumber(row,"width") * This.GetITemNumber(row,"length"))
	ELSE
		This.SetItem(row,'cbm',long(data) * This.GetItemNumber(row,"width") * This.GetITemNumber(row,"length"))
	END IF
	
	uf_update_carton_rows(row,'height',Dec(Data))
	lb_UpdatePackListUser = TRUE
	
Case "weight_gross"
	
	IF IsNumber(Data) THEN 
		If UPPER(gs_project) = 'PANDORA' Then
			uf_update_carton_rows(row,'weight_gross', DEC(Data) )
		Else
			uf_update_carton_rows(row,'weight_gross', DEC(Data) )
		End If
		
	END IF
	
	lb_UpdatePackListUser = TRUE
	
	//08/16 - PCONKL
//	If gs_project = "KENDO" Then
//		
//		isColumn = "Pack_lot_no"
//		This.PostEvent("ue_set_column")
//		
//	End If
	
CASE 'quantity'
	
	ld_quantity = long(data)
	
	IF IsNull(ld_quantity) THEN RETURN 
	
	ld_weight = This.GetItemNumber( row, 'weight_net')

	// ET3 Pandora 496 - allow decimals in all fields; blank all dimensions to force manual entry
	IF UPPER(gs_project) = 'PANDORA' THEN
		This.SetItem ( row, 'weight_gross', 0 )
	ELSE
		This.SetItem ( row, 'weight_gross', (ld_Weight * ld_quantity))
	END IF
	
	
CASE 'standard_of_measure'

	//wf_convert(data,0)
	//added parameter to convert a particular row (as P/L is being generated or row is changed) or all rows
	wf_convert(data, 0, row)
	
Case "country_of_origin" /* 09/00 PCONKL - validate Country of Origin*/

	//TimA 09/19/11 Pandora issue #226	
	if gs_project = 'PANDORA' then
		//If the user changes the COO validate it against the Pick rows
		ls_COO = data
		lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Line_Item_no = " + String(This.GetITemNumber(row,'Line_Item_no'))  
		lsFind += " and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
		lsFind += " and Upper(user_field1) = '" + ls_COO + "'"
		
		ll_row= idw_Pick.Find(lsFind,1,idw_pick.RowCount()) 
		If ll_row = 0 then
			doDisplayMessage(is_title, "Country of Origin is not found in the Pick list for this SKU, please re-enter!")
			Return 1
		End if
	End if
		
		//02/02 - PCONKL - we will now allow 2,3 char or 3 numeric COO and validate agianst Country Table
		ls_COO = f_get_Country_Name(data)
		If isNull(ls_COO) or ls_COO = '' Then
			doDisplayMessage(is_title, "Invalid Country of Origin, please re-enter!")
			Return 1
		End If

Case 'carton_no'
	//START  Dhirendra S59788 - ADDED VALIDATION TO PREVENT THE CARTON NO CHANGE IN CASE OF OVER PACKING 
	IF UPPER(gs_Project) = 'PANDORA' THEN
		ll_find =this.Find(" upper(carton_no) = '" + data + "' and upper(carton_type)= 'CARTON'",1,this.Rowcount())
		//ls_cntr_type= this.getitemstring(ll_find_cntr_type,'carton_type')
		IF ll_find > 0  THEN 
			Messagebox("ALERT","Carton Type of 'Carton' not allowed when over-packing (must be 'Pallet' or 'OVERPACK').")
			Return 1
		END IF 
	END IF 
	//END  Dhirendra S59788 - ADDED VALIDATION TO PREVENT THE CARTON NO CHANGE IN CASE OF OVER PACKING 	
	
	//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab
	lsOrigVal = this.GetItemString(row, 'carton_no', Primary!, FALSE )
	If wf_validate_pack_carton(data) < 0 Then
		this.SetItem( row, "carton_no", lsOrigVal )
		Return 1
	End If
	
//		If upper( gs_project ) = 'PANDORA' and g.is_unique_pack_cartonnumbers = "Y" and idw_serial.rowcount() > 0 and this.GetItemString( row, 'serialized_ind' ) <> 'N' Then
//		If ibFootprint = True or ibCntrSerial = True Then
//			MessageBox("Carton Number Change Error", "This carton nbr cannot be changed.~n~n  Pallet and container numbers are set by inventory ." ,StopSign!)
//		Else
//			MessageBox("Carton Number Change Error", "This carton nbr can only be changed from the Serial# tab.~n~n    Please return to the Serial Nbr tab, change~ncarton numbers of relevant serial numbers and Save~n~n    The serial tracked rows will be regenerated." ,StopSign!)
//		End If
//		this.SetItem( row, "carton_no", lsOrigVal )
//		Return 1
	If upper( gs_project ) = 'PANDORA' and g.is_unique_pack_cartonnumbers = "Y" and idw_serial.rowcount() > 0 and this.GetItemString( row, 'serialized_ind' ) <> 'N' Then
     		
	 lssku = idw_pack.GetITemString(row,'SkU')
	 lsSUpplier= idw_pack.GetITemString(row,'Supp_Code')
	
	Select Container_Tracking_Ind 
	 Into :ls_ContainerTrackingInd
	 From Item_Master
	 Where project_id = :gs_project and sku = :lssku and supp_code = :lsSUpplier;

	If ibFootprint = True then  //or ibCntrSerial = True Then
			MessageBox("Carton Number Change Error", "This carton nbr cannot be changed.~n~n  Pallet and container numbers are set by inventory ." ,StopSign!)
	//Dhirendra -S59788 -Pandora -start
     Elseif upper( gs_project ) = 'PANDORA' then// then and ls_ContainerTrackingInd<> 'Y' then
			// allow them to edit the corton no 
	//Dhirendra -S59788 -Pandora -END
	Else
		MessageBox("Carton Number Change Error", "This carton nbr can only be changed from the Serial# tab.~n~n    Please return to the Serial Nbr tab, change~ncarton numbers of relevant serial numbers and Save~n~n    The serial tracked rows will be regenerated." ,StopSign!)
	End If
		//Dhirendra -S59788 -Pandora -END
	IF upper( gs_project ) = 'PANDORA' then //and ls_ContainerTrackingInd <> 'Y' then
		// allow them to edit the corton no 
	//Dhirendra -S59788 -Pandora -END
	else 
		this.SetItem( row, "carton_no", lsOrigVal )
		Return 1
	end if 
	ElseIf g.is_unique_pack_cartonnumbers = "Y" Then		// GailM DE3703 03/18 Only of project has elected to force unique carton numbers
		If Len(data) <> 9 Then		// Length of unique carton numbers must be 9 digits - Throw an error.
		//TAM - S32153 - Relax Pack carton ID validation for Footprints items - For Pandora, If a user wishes to combine a non footprint Item on to a footprint container then allow them to do so. 
			If upper( gs_project ) = 'PANDORA' Then
				lsFind = "carton_no = '" + data + "'" 
				ll_row= idw_Pack.Find(lsFind,1,idw_pack.RowCount()) 
				If ll_row <= 0 then
					MessageBox("Carton Number Change Error", 'Unique carton numbers are mandatory and must be 9 digits.' ,StopSign!)
					this.SetItem( row, "carton_no", lsOrigVal )
					Return 1
				End if
			Else
				MessageBox("Carton Number Change Error", 'Unique carton numbers are mandatory and must be 9 digits.' ,StopSign!)
				this.SetItem( row, "carton_no", lsOrigVal )
				Return 1
			End If
	
		End If
	End If
	
	//03/07 - Pconkl - Enable or disable DIMS if first row for carton
	This.SetITem(row,'c_first_carton_row','*')
	llRC = uf_enable_first_carton_row(row,data)
	If llRC > 0 Then
		ilSetRow = llRC
		This.PostEvent('ue_set_row')
	End IF
	
	// pvh - 03.17.06 
	If Upper(gs_Project) = '3COM_NASH' Then
		if isNull( data ) or len( data ) = 0 then return 1	
		if this.object.carton_no[ row ] <> data then setSerialCarton( this.object.line_item_no[ row ]  ,this.object.sku[ row ], this.object.supp_code[ row ] , this.object.carton_no[ row ] , data )
	end if
	// eom
	
	//If changing carton for a child, we may need to create a parent for the bundle
	If gs_project = '3COM_NASH' Then
			This.PostEvent('ue_create_Bundled_parent')
	End If

	lb_UpdatePackListUser = TRUE
	
Case "user_field1"
	
	uf_update_carton_rows(row,'user_field1',data)
	
Case "user_field2"
	
	uf_update_carton_rows(row,'user_field2',data)
	
Case "shipper_tracking_id"
	
	uf_update_carton_rows(row,'shipper_tracking_id',data)
	
Case "outerpack_id" /* 04/16 - PCONKL */
	
	uf_update_carton_rows(row,'outerpack_id',dec(data))
	//Dhirendra
Case 'carton_type'
	
	IF UPPER(gs_Project) = 'PANDORA' THEN
		ll_find =this.Find(" upper(carton_no) = '" + upper(this.getitemstring(row,'carton_no')) + "'  and Upper(SKU) <> '" + Upper(This.GetITemString(row,'SKU')) + "'",1,this.Rowcount())
	END IF
	
	if ll_find > 0 then 
		IF Upper(data) = 'CARTON' then 
			Messagebox("ALERT","Carton Type of 'Carton' not allowed when over-packing (must be 'Pallet' or 'OVERPACK').")
			Return 1
		end if
	end if 
	//DGM July 2005 forAll Project populate the dimention except *ALL
	ll_find = idwc_carton_type.Find(" upper(carton_type) = '" + upper(data) + "'" &
		,1,idwc_carton_type.Rowcount())
	IF ll_find > 0 THEN
		ls_poject_id = upper(trim(idwc_carton_type.getitemstring(ll_find,"project_id")))
		IF ls_poject_id <> '*ALL' and upper(data) <> 'EACH' THEN				  
		//TAM 2019/07/10 - DE11572 - Skip updating from the Carton Master if CLS
		//GailM 11/18/2020 S51441/F26536/I2978 PhilipsDA mimic PHILIPSCLS in Outbound order
			IF ls_poject_id <> 'PHILIPSCLS' and ls_poject_id <> 'PHILIPS-DA' Then
				This.object.height[row] = idwc_carton_type.getitemdecimal(ll_find,"height")
				This.object.width[row] = idwc_carton_type.getitemdecimal(ll_find,"width")
				This.object.length[row] = idwc_carton_type.getitemdecimal(ll_find,"length")
				This.object.cbm[row]= (idwc_carton_type.getitemdecimal(ll_find,"height") * &
					idwc_carton_type.getitemdecimal(ll_find,"width") * &
					idwc_carton_type.getitemdecimal(ll_find,"length"))
			End If
		ELSEIF ls_poject_id <> '*ALL' and upper(data) = 'EACH' THEN	
			ls_sku = This.object.sku[row]
			ls_supp_code = This.object.supp_code[row]
			IF i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code) > 0 THEN
				ls_std_measure_w = g.ids_project_warehouse.object.standard_of_measure[g.of_project_warehouse(gs_project,ls_wh_code)]
				ls_std_measure = i_nwarehouse.ids.object.standard_of_measure[1]
				This.object.height[row] = i_nwarehouse.ids.object.height_1[1]
				This.object.width[row] = i_nwarehouse.ids.object.width_1[1]
				This.object.length[row] = i_nwarehouse.ids.object.length_1[1]
				IF ls_std_measure <> ls_std_measure_w THEN 
					ib_changed = False
					//wf_convert(ls_std_measure_w,1)//convert the Dimentions
					//added parameter to convert a particular row (as P/L is being generated or row is changed) or all rows
					wf_convert(ls_std_measure_w, 1, row)//convert the Dimensions
					ib_changed = TRUE
				END IF	
				This.object.cbm[row]= (i_nwarehouse.ids.object.height_1[1] * &
					i_nwarehouse.ids.object.width_1[1] * &
					i_nwarehouse.ids.object.length_1[1])
			END IF	
		END IF	
	END IF	

	uf_update_carton_rows(row,'carton_type',data)
	uf_update_carton_rows(row,'length',idwc_carton_type.getitemdecimal(ll_find,"length"))	
	uf_update_carton_rows(row,'width',idwc_carton_type.getitemdecimal(ll_find,"width"))
	uf_update_carton_rows(row,'height',idwc_carton_type.getitemdecimal(ll_find,"height"))
	
	lb_UpdatePackListUser = TRUE	

	CASE 'free_form_serial_no'
		
		// ET3 - 2012-07-05 Pandora 447 - cleanup SN's by removing leading/trailing '.' and '-'
		IF UPPER(gs_Project) = 'PANDORA' THEN
			
			data = TRIM(data)
			If len(data) > 1 Then
			// strip extraneous Trailing chars
			DO WHILE MATCH( data, "[-\.]$" )
				data = MID(data, 1, len(data) - 1 )
			LOOP
			
			// strip extraneous Leading chars
			DO WHILE MATCH( data, "^[-\.]")
				data = MID(data, 2, len(data) - 1 )
			LOOP
			
			this.setitem( row, dwo.name, data )
			
			End If
		
		END IF
					
	Case "pack_lot_no"
		
		// 08/16 - Kendo - If line number hasn't been populated, get the first instance of sku/Lot from Picking and populate Line Number. THere may be multiple lines for same SKU/Lot though
		If gs_project = 'KENDO' Then
			
			ilPackRow = row
			This.PostEvent("ue_kendo_ship_label")
				
		End If /* Kendo*/
//Begin -Dinesh - 06242022- S72575- Google - SIMS - Outbound Processing Changes (Carton_Type / Pack_PO_NO2 portion)	
//	case "pack_po_no2"
//
//		for i= 1 to this.rowcount()
//			
//		accepttext()
//		ls_pack_po_no2= this.getitemstring(i,'pack_po_no2')
//		
//		if ls_pack_po_no2= "" then
//			
//			setnull(ls_pack_po_no2)
//			
//		end if
//		
//			//if (ls_pack_po_no2 <> "" or not isnull(ls_pack_po_no2))  // Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
//			if (ls_pack_po_no2 <> "" or not isnull(ls_pack_po_no2) and  (ls_Pack_Po_No2 <> '-') )   then // Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
//				
//				wf_set_carton_type()
//			end if
//			
//			if  (ls_Pack_Po_No2 = '-') then
//			
//			idw_Pack.object.carton_type[i]=''
//			end if
//			//idw_Pack.object.carton_type[i].protect=0
//				
//			IF ls_pack_po_no2="" or isnull(ls_pack_po_no2) then // Dinesh - 05/31/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
//				
//				idw_Pack.object.carton_type[i]=''
//			end if
//			//idw_Pack.object.carton_type[i].protect=0
//				
//			
//		next
//
////End -Dinesh -  06242022- S72575- Google - SIMS - Outbound Processing Changes (Carton_Type / Pack_PO_NO2 portion)	
		
END CHOOSE

if gs_project = 'PANDORA' then
	// dts - 09/16/10 - using 'vor_shipment_ind' to indicate whether or not the 3b18 for commercial invoice has been sent.  If the pack list changes, re-send the 3b18
	idw_main.setitem(1,'vor_shipment_ind', 'N')
end if

IF lb_UpdatePackListUser = TRUE THEN
	
	// 04/14 - PCONKL - Moved from SLE to DW
	// monitored fields changed - update
//	sle_pack_list_last_user.text = gs_userid
//	sle_pack_list_last_upate.text = STRING(today(), "m/d/yyyy hh:mm:ss am/pm" )
	
	idw_main.SetItem(1, 'pack_list_last_user', gs_userid )
	idw_main.SetItem(1, 'pack_list_last_update', today() )
	
END IF

return

pick_data:
IF i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code) > 0 THEN
	
	//Get the values from datastore ids which is item master
	ll_row =i_nwarehouse.ids.Getrow()
	ls_coo = i_nwarehouse.ids.GetItemString(ll_row,"Country_of_Origin_Default")

//Use the radio buttons
//	ls_std_measure=i_nwarehouse.ids.GetItemString(ll_row,"standard_of_measure")
	
	IF rb_eng.checked THEN
		ls_std_measure = "E"
	ELSE
		ls_std_measure = "M"
	END IF
	
	
	//Set the values from datastore ids which is item master
	this.object.country_of_origin[ row ] = ls_coo
	this.object.standard_of_measure[ row ] = ls_std_measure
	//Call function to set the indicatores
	//i_nwarehouse.of_item_master(gs_project,ls_sku,ls_supp_code,idw_pick,row)
	
	// Set Component Ind based on Matching Pick Record
	llLineItemNO = This.GetITemNumber(row,'Line_Item_No')
	lsFind = "Line_Item_No = " + String(llLineItemNo) + " and Upper(SKU) = '" + Upper(ls_sku) + "' and Upper(Supp_code) = '" + Upper(ls_supp_code) + "'"
	llFindRow = idw_Pick.find(lsFind,1,idw_Pick.RowCount())
	If llFindRow > 0 Then
		
		This.SetItem(row,'component_ind',idw_Pick.GetITemString(llFindRow,'component_ind'))
		
		//01/05 - PCONKL - for 3COM Bundles, if we are entering a child for a new carton, we will need to build a parent for that carton
		If gs_project = '3COM_NASH' Then
			This.PostEvent('ue_create_Bundled_parent')
		End If
		
	End If
		
	isColumn = "quantity"
	This.PostEvent("ue_set_column")
	
ELSE
	
	doDisplayMessage(is_title, "Invalid Supplier, please re-enter!")
	return 1			
	
END IF	

end event

event process_enter;//IF This.GetColumnName() = "weight_gross" THEN
//	IF This.GetRow() = This.RowCount() THEN
//		icb_pack_insert.TriggerEvent(Clicked!)
//	END IF
//ELSE
//	Send(Handle(This),256,9,Long(0,0))
//End If

Send(Handle(This),256,9,Long(0,0))

Return 1

end event

event itemerror;call super::itemerror;Return 1
end event

event rowfocuschanged;call super::rowfocuschanged;wf_set_filter_carton_type ()
end event

event ue_copy;call super::ue_copy;//BCR 08-DEC-2011: PID-L11P027 for PhnxBrands Custom PackList Copy

Long  llRow, llNewRow, llFindRow, llRowCount, i
String	lsCarton, lsFind, lsScrollFind, lsSku, lsSupplier, lsNextContainer, lsGroup, lsFirstCartonRow
Boolean	lbNewCarton
boolean lbUsingTrax
Integer	liMsg, liMsg2=3
Long llWtDim, llLineItemNo, llArrayRow
Long llTestRow, llrowno
String lsCopiedSku
Str_Parms	lStrParms
str_multiparms	lStrMultiParms
u_nvo_search_array lnvoSearchArray
lnvoSearchArray = Create u_nvo_search_array

llWtDim = 0
lbNewCarton = False

idw_pack.SetFocus()

If idw_pack.AcceptText() = -1 Then Return -1

//MikeA - 3/2020 - DE14755 - Defect-KDO-Kendo - Fix 'Copy Row' Function to Generate Unique SSCC Number for Each Line
If (gs_project = 'KENDO') Then
	
	 IF dw_pack.Find( "trim(pack_sscc_no) <> '' and not isnull(pack_sscc_no)", 1, dw_pack.RowCount()) > 0 Then
		Messagebox(is_title, "Cannot Copy Row  . The SSCC numbers have already been created.",Stopsign!)
		return -1 	
	END IF
End If


If cbx_show_comp_pack.Enabled and cbx_show_comp_pack.Checked = False Then
	Messagebox(is_title,'You must show components before you can copy a Parent Row.')
	Return -1
End If

llRow = idw_pack.GetRow() 

llRowCount = idw_pack.rowcount( )
i=0
//Build an array of the way the current rows look.  This is to set the values back on rows that were not copied.
If gs_project = 'PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True   Then
	For i = 1 to llRowCount
		//concatenate the SKU and Line number for searching later
		lStrMultiParms.string_arg1 [ i ] =  idw_pack.GetItemString ( i ,"sku") + ',' +  String( idw_pack.GetItemNumber ( i ,"line_item_no") )
		lStrMultiParms.string_arg2 [ i ] =  idw_pack.GetItemString ( i ,"sku")
		lStrMultiParms.string_arg3 [ i ] =  String ( idw_pack.GetItemNumber ( i ,"line_item_no") )
		lStrMultiParms.string_arg4 [ i ] =  idw_pack.GetItemString ( i ,"c_first_carton_row")
		lStrMultiParms.string_arg5 [ i ] =  idw_pack.GetItemString ( i ,"carton_no")	
	Next
End if
If llRow > 0 Then
	
	//Allow user to select the number of rows to add and set QTY
	lstrparms.Decimal_arg[1 ] = idw_pack.GetITemNumber(llRow,'quantity') /*Qty from original row, will be default for new rows*/
	OpenWithParm(w_do_copy_packlist,lStrParms)
	lstrparms = message.PowerObjectParm
	
	If lstrparms.Cancelled Then Return 1 /*Don't copy row if cancelled from prompt*/
	
	This.SetReDraw(False)
	
	//Change Qty of original row to new value from dialogue window...
	idw_pack.SetItem(llRow,'quantity',lstrparms.decimal_arg [1 ] )

	//Loop for each row to Create We're creating one less row than rowcount since we already have the first row)
	For i = 1 to (lstrparms.Long_arg[1 ] - 1)
	
		idw_pack.RowsCopy(llRow,llRow,Primary!,idw_pack,999999999,Primary!)
		
		//Change Qty to new value after RowsCopy
		idw_pack.SetItem(idw_Pack.RowCount ( ),'quantity',lstrparms.decimal_arg[1])

		//TimA 05/19/14 Pandora issue #855 Null out the Dim and Weights when orders are copied from one to another
		//***********************
		//TRA 06/11/14 Back out Pandora issue #855 per James.  Not able to test yet.
		If gs_project = 'PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS'  and idw_pack.GetItemString ( idw_Pack.RowCount ( ) ,"sku")  = isSkuCopied  and idw_Pack.RowCount ( ) <> 1 and ibCopied = True Then
			//llTestRow = idw_Pack.RowCount ( )
			
			idw_pack.SetItem ( idw_Pack.RowCount ( ),'length',llWtDim )
			idw_pack.SetItem ( idw_Pack.RowCount ( ),'width',llWtDim )
			idw_pack.SetItem ( idw_Pack.RowCount ( ),'height',llWtDim )
			idw_pack.SetItem ( idw_Pack.RowCount ( ),'cbm',llWtDim )
			idw_pack.SetItem ( idw_Pack.RowCount ( ),'weight_gross',llWtDim )
			idw_pack.SetITem ( idw_Pack.RowCount ( ),'c_first_carton_row','N' )
		End if
		
		ib_changed = True
		
		// 09/05 - PCONKL - If the row being copied has been shipped via TRAX, then the new row must have a new carton number
		If g.is_unique_pack_cartonNumbers = 'Y' Then
		
			lbUsingTrax = false
			if idw_pack.Find("tracking_id_type='T'",1,idw_pack.RowCount())  > 0 then lbUsingTrax = true
			
			//Need to ask this question once and apply the answer to all rows copied...
			IF liMsg <> liMsg2 THEN
				If Not lbUsingTrax Then /*no need to prompt if we are going to do it anyway*/
					liMsg =  Messagebox(is_title, "Would you like to assign a new carton Number to the new row?",Question!,YesNo!,2) 
					liMsg2 = liMsg
				End If
			END IF
				
			If liMsg = 1 or lbUsingTrax Then
				lscarton = wf_set_PAck_Carton(idw_Pack.RowCount())
				idw_pack.SetItem(idw_Pack.RowCount(),'carton_no',lsCarton)
				
				if lbUsingTrax then idw_pack.SetItem(idw_Pack.RowCount(),'shipper_tracking_id','')
				
				idw_pack.SetItem(idw_Pack.RowCount(),'tracking_Id_type','')
				lbNewCarton = True
			end If
				
		End If
				
		//We will want to scroll to the new row
		lsScrollFind =  "Upper(carton_No) = '" + Upper(idw_Pack.GetITemString(idw_Pack.RowCount(),'Carton_No')) + & 
						"' and Line_Item_No = " + String(idw_Pack.GetITemNumber(idw_Pack.RowCount(),'Line_Item_No')) 
		
		// 04/05 - PCONKL - If this is a parent and we have created a new carton, we will copy the children to the new carton as well
		If lbNewCarton and idw_Pack.GetITemString(lLRow,'Component_ind') = 'Y' Then
			
			lLRowCount = idw_Pack.RowCount()
			//Find and Copy the children to the new carton
			lsFind = "Upper(carton_No) = '" + Upper(idw_Pack.GetITemString(lLRow,'Carton_No')) + & 
						"' and Line_Item_No = " + String(idw_Pack.GetITemNumber(lLRow,'Line_Item_No')) + &
						" and (component_ind = 'W' or Component_ind = '*')"
			llFindRow = idw_Pack.Find(lsFind,llRow,lLRowCount)
			
			Do While llFindrow > 0
				
				idw_pack.RowsCopy(llFindRow,llFindRow,Primary!,idw_pack,999999999,Primary!)
				idw_pack.SetItem(idw_pack.RowCount(),'carton_no',lsCarton)
				
				llFindRow ++
				If llFindRow > lLRowCount Then 
					llFindRow = 0
				Else
					llFindRow = idw_Pack.Find(lsFind,llFindRow,lLRowCount)
				End If
				
			Loop
				
		End If /*New Carton and parent*/

		idw_pack.Sort()
		idw_pack.GroupCalc()

		uf_enable_first_carton_row(0,"")

		//Find the row we just created and scroll to it
		llFindRow = idw_pack.Find(lsScrollFind,1,idw_pack.rowCount())
		If llFindRow > 0 Then
			idw_pack.SetRow(llFindRow)
			idw_Pack.ScrollToRow(llFindRow)
			idw_pack.SetColumn('carton_no')
		End If
		
	NEXT
	//***********************
	//TRA 06/11/14 Back out Pandora issue #855 per James.  Not able to test yet.
	//TimA 06/04/14 reset the first carton flags to Y because they are copied rows now.  Pandora issue #855
	If gs_project = 'PANDORA' and Upper(idw_other.GetItemString(1,"User_Field1") ) <> 'DOS' and ibCopied = True   Then
		i=0
		//First renumber all the carton rows
		llRowCount = idw_pack.rowcount( )
		//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list validate unique carton_no if required
		For i = 1 to llRowCount
			lscarton = wf_set_PAck_Carton( i )
			idw_pack.SetITem( i ,'carton_no', lscarton )
		Next
		i=0
		For i = 1 to llRowCount
			idw_pack.scrolltorow( i )
			//If the Sku being copied just replace all the carton row ind with 'Y'
			If idw_pack.GetItemString ( i ,"sku")  = isSkuCopied  then
				idw_pack.SetITem( i ,'c_first_carton_row','Y' )			
			Else
			//Search the Array for the combind values of Sku and Line number
			//Because we now have more rows than we started with the
			//llArrayRow is passed by Reference to get the row that was found in the array.
			If lnvoSearchArray.uf_value_exists_in_array( idw_pack.GetItemString ( i ,"sku") + ',' +  String( idw_pack.GetItemNumber ( i ,"line_item_no") ) , lStrMultiParms.string_arg1 [ ]  , llArrayRow ) = True then
				If lStrMultiParms.string_arg4 [ llArrayRow ] = 'Y' then
				idw_pack.SetITem( i ,'c_first_carton_row','Y'  )
				Else
				//Set that carton number back to the number that is originaly had
				idw_pack.SetITem( i ,'carton_no',lStrMultiParms.string_arg5 [ llArrayRow ]  )
				idw_pack.SetITem( i ,'c_first_carton_row','N'  )
				End if
			End if
		End if
		Next
		idw_pack.scrolltorow( 1 )
	End if
Else
	Messagebox(is_title,"Nothing to copy!")
End If	
return 1
end event

event clicked;call super::clicked;DatawindowChild	ldwc
String	lsColumn, lsInd,ls_pack_po_no2,ls_carton_type
Long	llRow, llRowCount, llRowPos
Int liCnt = 0
Int liAccept

lsColumn 	= DWO.Name
llRow  = row	
ilSetRow = llRow	//For access by window buttons
//liAccept = idw_pack.AcceptText()

CHOOSE CASE lsColumn
		
	Case "mobile_status_ind"

		This.GetChild('mobile_status',ldwc)
		ldwc.SetFilter("mobile_status_ind <> 'X' and mobile_status_ind <> 'R' and mobile_status_ind <> 'I'")
		ldwc.Filter()
		
	Case "c_select_ind"
		lsInd = idw_pack.GetItemString(llRow,'c_select_ind')
		If lsInd = 'Y' Then liCnt = -1 Else liCnt = 1
		llRowCount = idw_pack.RowCount()
		For llRowPos = 1 to llRowCount
			lsInd = idw_pack.GetItemString(llRowPos,'c_select_ind')
			If lsInd = "Y" Then
				liCnt ++
			End If
		Next
		If liCnt <= 1 Then
			cb_pack_delete.Enabled = True
			cb_pack_select.Enabled = False
			cb_pack_delete.visible = True
			cb_pack_select.visible = False
		Else
			cb_pack_select.Enabled = True
			cb_pack_delete.Enabled = False
			cb_pack_delete.visible = False
			cb_pack_select.visible = True
		End If
		//Begin - Dinesh - 06/03/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
		Case "carton_type"
			ls_carton_type= idw_pack.GetItemString(row,'carton_type')
			if ls_carton_type='Pallet' then

				//idw_Pack.object.carton_type[row].protect=1

			end if
		//End - Dinesh - 06/03/2024- SIMS-478- Google SIMS - Blank Container type Unable to save packing list
End Choose
end event

event constructor;call super::constructor;//21-Jul-2016 :Madhu- Moved "UF1" field on Pack List for H2O
IF upper(gs_project)='H2O' Then
	this.modify( "user_field1.x=1509  user_field1.y=8  user_field1.width=590  user_field1.height=60")
End If

If gs_project <> 'KENDO' Then
	This.Modify("c_select_ind.visible=false")
	//MikeA - 04/2020 - DE12525 SIMS QAT DEFECT - KENDO - Unable to select single rows in Kendo
	//Need to hide the select all if not Kendo.
	cbx_sel.visible = false
End If

end event

type gb_etom from groupbox within tabpage_pack
integer x = 2610
integer width = 677
integer height = 124
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
end type

type cb_import_pack from commandbutton within tabpage_pack
integer x = 2080
integer y = 316
integer width = 293
integer height = 92
integer taborder = 50
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "I&mport"
end type

event clicked;
Choose Case Upper(gs_project)
		
	Case 'NIKE-SG', 'NIKE-MY'
		
		uf_nike_import_from_scanner()
		
End Choose
end event

event constructor;this.visible = (Upper(gs_project) <> 'PANDORA')	// LTK Pandora #370  Hide this button for Pandora

end event

type cbx_sel from checkbox within tabpage_pack
string tag = "SelectAll"
integer x = 50
integer y = 736
integer width = 82
integer height = 116
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
end type

event clicked;
int li_row, li_rows
boolean lb_checked

lb_checked = tab_main.tabpage_pack.cbx_sel.checked
li_rows = tab_main.tabpage_pack.dw_pack.RowCount() 

if lb_checked then
	for li_row = 1 to li_rows
		idw_pack.SetItem( li_row, 'c_select_ind', 'Y')
	next
	cb_pack_select.Enabled = True
	cb_pack_delete.Enabled = False
	cb_pack_delete.visible = False
	cb_pack_select.visible = True
else
	for li_row = 1 to li_rows
		idw_pack.SetItem( li_row, 'c_select_ind', 'N')
	next
	cb_pack_delete.Enabled = True
	cb_pack_select.Enabled = False
	cb_pack_delete.visible = True
	cb_pack_select.visible = False
End if



end event

type cb_pack_select from commandbutton within tabpage_pack
boolean visible = false
integer x = 667
integer y = 28
integer width = 311
integer height = 92
integer taborder = 120
integer textsize = -7
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "Delete Seltd"
end type

event clicked;//GailM 7/29/2019 - S35966 F16957 I2457 Packing screen button
Int liRet, i
String lsInd
String lsCopyRows[]
Integer liCopyRows[]
Long llRowCount, llRowPos

 liRet = 0
 
//There must be a least 1 row past the first pack row to copy/paste to the first row.
If idw_pack.Find("C_select_Ind='Y'",2,idw_pack.RowCount()) > 0 Then
	llRowCount = idw_pack.RowCount()
	For llRowPos = llRowCount to 1 Step -1
		lsInd = idw_pack.GetItemString(llRowPos,'c_select_ind')
		If lsInd = "Y" Then
			liRet ++
			liCopyRows[liRet] = llRowPos
		End If
	Next
Else
	MessageBox(is_title,"To copy/paste, please identify the rows to merge to row one.")
End If

If wf_check_pack_predelete_validation(liCopyRows[]) < 0 Then
	return
End If

For i = liRet to 1 Step -1
	idw_pack.deleterow(i)
Next
ib_changed = True


end event

event constructor;
//g.of_check_label_button(this)
end event

type cb_pack_delete from commandbutton within tabpage_pack
integer x = 667
integer y = 28
integer width = 311
integer height = 92
integer taborder = 50
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Delete Row"
end type

event clicked;//GailM 7/30/2019 S35966 F16957 I2457 Packing screen button - Move pre-delete validation to wf_check_pack_delete_validation
//One Row selected (current row)
Integer liCopyRows[]
Int liRow

liRow =idw_Pack.GetRow()
liCopyRows[1] = liRow

If liRow = 0 Then return

If wf_check_pack_predelete_validation(liCopyRows[]) < 0 Then
	return
End If

ib_changed = True
idw_pack.DeleteRow(0)
end event

event constructor;
g.of_check_label_button(this)
end event

type tabpage_serial from userobject within tab_main
event ue_mode_switch ( )
event ue_process_barcodes ( )
event ue_generate ( )
event ue_process_barcodes_sku_only ( )
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = "Serial #"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
mle_2dbarcode mle_2dbarcode
rb_2dbarcode rb_2dbarcode
cb_copy_serial cb_copy_serial
sle_total_alloc_qty sle_total_alloc_qty
sle_total_req_qty sle_total_req_qty
st_total_alloc_qty st_total_alloc_qty
st_total_req_qty st_total_req_qty
cbx_print_labels cbx_print_labels
dw_carton_serial dw_carton_serial
scan_qty_t scan_qty_t
sle_scan_qty sle_scan_qty
cb_new_carton cb_new_carton
cb_ob_serial_delete cb_ob_serial_delete
cb_ob_serial_insert cb_ob_serial_insert
sle_carton_no sle_carton_no
st_carton_no_t st_carton_no_t
rb_manual rb_manual
rb_barcode rb_barcode
gb_1 gb_1
sle_barcodes sle_barcodes
cb_undo cb_undo
dw_serial dw_serial
st_message st_message
cb_generate_ob_serial cb_generate_ob_serial
cbx_selallserial cbx_selallserial
end type

event ue_mode_switch();Long	llRowCount,	&
		llRowPos
		
String	lsSKUHold

Choose Case Upper(message.StringParm)
		
	Case "2DBARCODE"
		
		st_message.text = "Scan Serial Number and Hardware Number using 2D barcode."
		mle_2dbarcode.visible = True
		mle_2dbarcode.text = ""
		
		dw_serial.SetTabOrder("line_item_NO",0)
		dw_serial.SetTabOrder("SKU",0)
		dw_serial.SetTabOrder("Supp_Code",0)
		dw_serial.SetTabOrder("Carton_No",0)
		dw_serial.SetTabOrder("Serial_No",0)
		dw_serial.SetTabOrder("Mac_ID",0)
		dw_serial.SetTabOrder("Quantity",0) 
		dw_serial.SetTabOrder("Sku_Substitute",0)

		st_carton_no_t.visible = true
		sle_carton_no.visible = true
		sle_carton_no.enabled = true
			sle_carton_no.Displayonly = False
		sle_barcodes.enabled = false
		mle_2dbarcode.SetFocus( )
	
		
	Case "MANUAL"
		
		dw_serial.SetTabOrder("line_item_NO",10)
		dw_serial.SetTabOrder("SKU",20)
		dw_serial.SetTabOrder("Supp_Code",30)
		dw_serial.SetTabOrder("Carton_No",40)
		dw_serial.SetTabOrder("Serial_No",50)
		dw_serial.SetTabOrder("Mac_ID",60)
		dw_serial.SetTabOrder("Quantity",70) /* 03/14 - PCONKL */
// TAM 2011/12/03 Added Sku Substitute
		dw_serial.SetTabOrder("Sku_Substitute",80)
		
		st_carton_no_t.visible = true
		sle_carton_no.visible = true
		sle_carton_no.enabled = false
		sle_barcodes.visible = False
		sle_barcodes.Text = ''
		st_message.text = ''
		sle_carton_no.Displayonly = False
		dw_serial.Object.DataWindow.ReadOnly= False
		dw_serial.SetFocus()
		If dw_serial.RowCOunt() > 0 Then
			dw_serial.SetRow(1)
		End If
		st_message.text = "Please type or scan the Serial Number for the proper SKU."
		mle_2dbarcode.visible = False
		
	Case "BARCODE"
		
		dw_serial.SetTabOrder("line_item_NO",0)
		dw_serial.SetTabOrder("SKU",0)
		dw_serial.SetTabOrder("Supp_Code",0)
		dw_serial.SetTabOrder("Carton_No",0)
		dw_serial.SetTabOrder("Serial_No",0)
		dw_serial.SetTabOrder("Mac_ID",0)
		dw_serial.SetTabOrder("Quantity",0) /* 03/14 - PCONKL */
// TAM 2011/12/03 Added Sku Substitute
		dw_serial.SetTabOrder("Sku_Substitute",0)
		
		st_carton_no_t.visible = true
		sle_carton_no.visible = true
		sle_carton_no.enabled = false
		sle_barcodes.visible = True
		sle_barcodes.enabled = true
		sle_barcodes.Text = ''
		st_message.text = "Scan Carton Number."
		dw_serial.Object.DataWindow.ReadOnly= True
		
		If idw_Pack.RowCount() > 0 Then
			sle_carton_no.Displayonly = True
		Else
			sle_carton_no.Displayonly = False
		End If
		
		sle_barcodes.SetFocus()
		mle_2dbarcode.visible = False
		
		//DEtermine whether we have a single SKU or multiple SKUS - If only a single sku we wont force them to scan a SKU first, just a serial #
		llRowCount = dw_Serial.RowCount()
		lsSKUHold = ''
		For llRowPOs = 1 to llRowCount
			If (lsSKUHold <> dw_serial.GetITemString(llRowPOs,'sku') and llRowPos > 1) Then
				ibMultipleSKU = True
			//	st_message.text = "Multiple SKU's exist - You must scan a SKU before Scanning the Serial Number."
				Exit /*no need to continue*/
			Else
				lsSKUHold = dw_serial.GetITemString(llRowPOs,'sku')
			End If
		NExt /*row*/
		
		If llRowCount > 0 Then
			dw_serial.ScrollToRow(1)
			dw_serial.SetRow(1)
		End If
		
		If not ibMultipleSKU Then
		//	st_message.text = "Only 1 SKU is present. You can scan the Serial Number Only."
		End If
		
End Choose
end event

event ue_process_barcodes();// 05/05 - PCONKL - We may now either be scanning/entering a Packing List Carton Number (from the Packing List)
//						  Not to be confused with a supplier carton level carton number used to blow out enclosed serial numbers

// pvh 03/02/06 - Smartcode
//						changed the call from messagebox to doDisplayMessage() due to operators ability to scan through standard messagebox dialog


String		lsBarcode, lsFind, lsSupplier, lsLine, lsMessage, lsSku, ls_woserial, lsNull, lsOwnerCd
String 	ls_serialized_ind, lsComponent_Ind   // 01/03/2011 ujh: S/N_P:
Integer	liRC, i
Long 		llComponent_no, ll_first, ll_last, i_ndx, ll_na_component_no, llLineItem // 01/03/2011 ujh: S/N_P:
Long		llFindRow, llLineItemNo, lLDetailLIne, ll_pickrow, llSerialFind
long		llPackingRow, llPackingExists,row,ll_serialno, ll_index, llRtn 
Dec		ldLineQty, ldScanQty, ldExpQty, ldCurrentScanQty
str_parms	lstrparms

String ls_PONO2ControlledInd , ls_ContainerTrackingInd 
String ls_UOM2, ls_UOM3, ls_UOM4 //TAM 2015/06
String ls_carton, ls_stripoff_checked, ls_return  //06-Mar-2014 :Madhu- Added for Ariens SSCC
String ab_error_message_title, ab_error_message, ls_Serial_no_short

Long ld_Qty2, ld_Qty3, ld_Qty4 //TAM 2015/06
Long llPickFindRow, ll_method_trace_id, llPackFind //TAM 2014/09/26
String ls_corton_no
long j,llrowfind


setNull(lsNull)
SetNull( ll_method_trace_id )
f_method_trace_special( gs_project, this.ClassName() , 'Start ue_process_barcodes: ' ,is_dono, '','',isinvoice_no)

lstrparms = 	i_nwarehouse.of_parse_2d_barcode( sle_barcodes.Text) //06-Nov-2017 :Madhu - PEVS-654 - 2D Barcode
	
FOR ll_index =1 to UPPERBOUND(lstrparms.string_arg[]) //06-Nov-2017 :Madhu - PEVS-654 - 2D Barcode
	sle_barcodes.Text = lstrparms.string_arg[ll_index] //06-Nov-2017 :Madhu - PEVS-654 - 2D Barcode

	lsBarcode = sle_barcodes.Text
	ibSerialModified = True
	
	If gs_project = 'COMCAST' Then
		iuo_carton_serial_scanning.uf_do_scan_comcast()
		Return /* COMPLETELY OVERRIDING THIS FUNCTION*/
	
	ElseIf gs_project = 'LMC' Then
		liRC = iuo_carton_serial_scanning.uf_do_scan_LMC(lsBarcode)
		If liRC = 0 Then /* we may have multiple barcodes with the same value (if unserialized parts) and Modified won't be triggered if not changed*/
			sle_barcodes.Text = ''
		End If
	
		Return /* COMPLETELY OVERRIDING THIS FUNCTION*/
	
	ElseIf gs_Project = 'PUMA' Then
		liRC = iuo_carton_serial_scanning.uf_do_scan_Puma(lsBarcode)
		If liRC = 0 Then /* we may have multiple barcodes with the same value (if unserialized parts) and Modified won't be triggered if not changed */
			sle_barcodes.Text = ''
		End If
		
		Return /* COMPLETELY OVERRIDING THIS FUNCTION*/
	
	Elseif gs_Project = 'PHYSIO-MAA' then //hdc 10172012
		// 01/14 - PCONKL - If enabled, use custom logic, otherwise baseline
		If g.isProjectUserField1 = 'Y'  and str_resp.action <> "generate" Then
			
			liRC = iuo_carton_serial_scanning.uf_do_scan_physio(lsBarcode)
			If liRC = 0 Then  // we may have multiple barcodes with the same value (if unserialized parts) and Modified won't be triggered if not changed
				sle_barcodes.Text = ''
			End If
			Return 		
			
		End If
	Elseif gs_Project = 'PANDORA' then
		//TimA 08/09/13 We only want to use LNP type SKU's for the fucntion being called below.		
		//lsSupplier = idw_pick.GetITemString(idw_pick.Getrow(),"supp_code")
		//isCurrentSKU = idw_serial.GetItemString(dw_serial.getrow( ),'sku') 
		
		Select PO_NO2_Controlled_Ind, Container_Tracking_Ind Into :ls_PONO2ControlledInd, :ls_ContainerTrackingInd
		From Item_Master WITH (NOLOCK)
		Where project_id = :gs_project and sku = :isCurrentSKU and supp_code = :isSUpplier;			
			
		If ls_PONO2ControlledInd = 'Y' and ls_ContainerTrackingInd = 'Y' then

			liRC = iuo_carton_serial_scanning.uf_do_scan_pandora(isSupplier)
			If liRC = 1 Then
				sle_barcodes.Text = ''
				ib_changed = True
				ibScanQtyNeeded = true		//Need to refresh barcode field
				TriggerEvent("rb_barcode")
			End If
			Return /* COMPLETELY OVERRIDING THIS FUNCTION*/
		End if
		
		//GailM 2/21/2018 DE3189 - ContainerTracked Serialized in Pick/Serial/Pack tabs
		If ls_PONO2ControlledInd = 'N' and ls_ContainerTrackingInd = 'Y' then
			liRC = iuo_carton_serial_scanning.uf_do_scan_pandora(isSupplier)		//GailM 12/9/2019 lsSupplier to isSupplier
			If liRC = 1 Then
				sle_barcodes.Text = ''
				ib_changed = True
				ibScanQtyNeeded = true		//Need to refresh barcode field
				TriggerEvent("rb_barcode")
			End If
			Return /* COMPLETELY OVERRIDING THIS FUNCTION*/
		End if
	end if
	
	
	
	// 01/14 - PCONKL - If we've just changed the qty field, return. Baseline doesn't do anything but custom logic might
	If ib_QtyEntered Then
		ib_QtyEntered = False
		Return
	End If
	
	//BCR 29-SEP-2011: Franke_TH requires that we scan each sku before scanning serial number...every time...
	//MEA 5-JAN-2012: Added for NIKE
	If Upper(gs_project) = 'FRANKE_TH' OR  Upper(gs_project) = 'NIKE-SG'  OR Upper(gs_project) = 'NIKE-MY' Then
	 ELSE
		If not ibmultiplesku Then
			ibSkuScanned = True
			If dw_serial.RowCOunt() > 0 Then
				isCurrentSKU = dw_serial.GetItemString(1,'sku') 
				lsFind = " Upper(sku) = '" + Upper(isCurrentSKU) + "' and isnull(serial_no)" 
				If Upper(gs_Project) = 'ANKI'   and  Not Upper(idw_main.GetItemString(1,'wh_code')) = 'ANKI_EMU' Then 
					lsFind += " and Upper(carton_no) = '" +  Upper(iscurrentpackcartonid) + "'"
				End If
				llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1) 
				If llFindRow > 0 Then
					llLineItemNo = dw_serial.GetItemNumber(llFindRow,'Line_Item_no') 
				else
					llLineItemNo = dw_serial.GetItemNumber(1,'Line_Item_no') //pfc 05/25/05
				end if
			End If
			//TAM 2015/06  If Serial number is scanned and there ar multiple sku then check the serial inventory table for this Serial number to get the SKU
		Else 	
			SELECT Serial_Number_Inventory.SKU  INTO :isCurrentSKU FROM Serial_Number_Inventory  
			WHERE ( Serial_Number_Inventory.Project_Id = :gs_project ) AND  ( Serial_Number_Inventory.Serial_No = :lsbarcode )   ;
			
			lsFind = " Upper(sku) = '" + Upper(isCurrentSKU) + "' and isnull(serial_no)" 
			llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1) 
			If llFindRow > 0 Then
				ibSkuScanned = True
				llLineItemNo = dw_serial.GetItemNumber(llFindRow,'Line_Item_no') 
			end if
		End If
	END IF//End Franke_TH,  NIKE-SG, NIKE-MY
	
	// 10/02 - PCONKL - Check for a (Packing) Carton Scan first - will update all rows with Packing carton number until another one is scanned
	//11/09 - PCONKL - Allowing Serials to be scanned before packing. If this is the case, the carton needs to be entered in the cartn field
	
	If idw_Pack.RowCOunt() > 0 Then
		lsFind = " Upper(carton_no) = '" + Upper(lsbarcode) + "'"
		llFindRow = idw_pack.Find(lsFind,1,idw_pack.RowCount())
		If llFindRow > 0 Then
			llPackingRow = llFindRow
			sle_carton_no.text = idw_pack.GetITemString(llFindRow,'carton_no')
			st_message.Text = "PACKING CARTON NUMBER Scanned. Please scan a SKU or Serial Number."
			sle_barcodes.SelectText(1,len(sle_barcodes.Text))
			ilUndoRow = 0
			cb_undo.Enabled = True
			isCurrentPackCartonId = trim(Upper(lsbarcode))
			Return
		End If
	End If
	
	// 02/10 - PCONKL - Allowing UPC/EAN to be scanned
	If isnumber(lsBarcode) then
		lsFind = " part_upc_Code = " + lsbarcode 
		llFindRow = Tab_main.tabpage_serial.dw_serial.Find(lsFind,1,Tab_main.tabpage_serial.dw_serial.RowCount())
	Else
		lsFind = " Upper(SKU) = '" + lsbarcode + "'"
		llFindRow = Tab_main.tabpage_serial.dw_serial.Find(lsFind,1,Tab_main.tabpage_serial.dw_serial.RowCount())
	End If
	
	// Always check to see if a SKU has been scanned (if we were not successfull with a UPC scan)
	If llFindRow = 0 Then
		lsFind = " Upper(sku) = '" + Upper(lsbarcode) + "'"
		llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
	End If
	
	If llFindRow > 0 Then /* a SKU was scanned*/
		ibSkuScanned = True
		cb_undo.Enabled = False
		lsBarcode = Tab_main.tabpage_serial.dw_serial.GetITemString(llFindRow,'sku') /*map EAN back to SKU */
		isCurrentSKU = lsBarcode
		
		// pvh 12/01/05
		int index, max
		boolean foundit
		
		// 11/09 - PCONKL - Allowing for Serial Numbers to be scanned before Packing List generated
		If g.ibCartonSerialvalidationRequired and idw_pack.RowCount() > 0  Then
		
			// validate the packing container/sku combination
			lsFind = "Upper( carton_no ) = '" + isCurrentPackCartonId + "' and Upper( sku ) = '" + isCurrentSKU + "'"
			llFindRow = idw_pack.find( lsFind, 1, idw_pack.rowcount() )
			
				if llFindRow <=0 then
					// see if the sku is a child
					foundit = false
				
					// 10/06 - PCONKL - Powerwave is using Delivery BOM for components, not Item Component - need to validate differently than 3COM
					Choose Case Upper(gs_project)
					Case '3COM_NASH'
						llFindRow = idsparentskbychild.retrieve( gs_project, isCurrentSKU )
						
						if llFindRow > 0 then
							max = llFindRow
							// try again with each parent found
							For index = 1 to max 
								lsFind = "Upper( carton_no ) = '" + isCurrentPackCartonId + "' and Upper( sku ) = '" + idsparentskbychild.object.sku_parent[ index ] + "'"
								llFindRow = idw_pack.find( lsFind, 1, idw_pack.rowcount() )
								if llFindRow > 0 then
									foundit = true
									exit
								end if
							next
						end if	
					Case Else
						//See if we have a parent for this SKU
						llFindRow = idw_Pick.Find("Upper(sku) = '" + Upper(isCurrentSKU) + "'",1,idw_pick.RowCount())
						If llFindRow > 0 Then /*see if this parent/carton combo exists*/
							llFindRow = idw_pack.Find("Upper( carton_no ) = '" + isCurrentPackCartonId + "' and Upper( sku ) = '" + Upper(idw_pick.GetITemString(llFindRow,'sku_parent')) + "'", 1, idw_pack.rowcount())
							If llFindRow > 0 Then
								foundit = true
							End IF
						End If
					End Choose
				end if /*carton/Sku combo not found */
		end if /*Carton Serial validation required */
	
		lsFind = " Upper(sku) = '" + Upper(lsbarcode) + "' and isnull(serial_no) and (serialized_ind = 'O' or serialized_ind = 'B' or serialized_ind = 'Y') "
		llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1) 
		If llFindRow > 0 Then
			dw_serial.SetRow(llFindRow)
			dw_serial.ScrolltoRow(llFindRow)
			dw_serial.SetColumn('serial_no')
			llLineItemNo = dw_serial.GetItemNumber(llFindRow,'Line_Item_no')
			st_message.Text = "SKU Scanned. Please scan the Serial Number."
			
		Else /*all rows for this SKU have been entered*/
			
			// 11/09 - PCONKL - If we are scanning all items (pack validation), we will be adding to an existing record for non serialized parts. We dont need to have an empty serial number record, just an existing SKU record
			If g.ibCartonSerialvalidationRequired Then
				
				//Count current scanned qty of this SKU vs what is allocated before accepting scan. Dont allow to over scan
				//We may have trhe same SKU in multipple lines. Dont worry about allocating properly. We will allocate appropriately when we generate the Pack List from the Serial tab.
				ldLineQty = 0
				ldScanQty = 0
				
				//Total allocated at detail level
				lsFind = "Upper(Sku) = '" + Upper(isCurrentSKU) + "'"
				llFindRow = idw_Detail.Find(lsFind,1,idw_Detail.RowCount())
				Do While llFindRow > 0
					ldLineQty += idw_Detail.GetITemNumber(llFindRow,'alloc_qty')
					llFindRow ++
					If llFindROw > idw_detail.RowCount() Then
						llFindROw = 0
					Else
						llFindRow = idw_Detail.Find(lsFind,llFindRow,idw_Detail.RowCount())
					End If
				Loop
				
				//Total Scanned Qty for this SKU
				llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
				Do While llFindRow > 0
					ldScanQty += dw_serial.GetITemNumber(llFindRow,'quantity')
					llFindRow ++
					If llFindROw > dw_serial.RowCount() Then
						llFindRow = 0
					Else
						llFindRow = dw_serial.Find(lsFind,llFindRow,dw_serial.RowCount())
					End If
				Loop
				
				//Existing Qty + current Scan Qty can not be greater than Allocated Qty
				ldCurrentScanQty = Long(sle_scan_qty.Text)
				If isnull(ldCurrentScanQty) or ldCurrentScanQty = 0 Then ldCurrentScanQty = 1
				
				If (ldScanQty + ldCurrentScanQty)  > ldLineQty Then
					doDisplayMessage('Serial Numbers',"All Serial Numbers for this SKU ('" + isCurrentSKU + "') have been entered (including this scan). ScannedQty = " + String(ldScanQty + ldCurrentScanQty) + " Allocated Qty = " + String(ldLineQty) + "  If you need to update a serial number, switch to manual mode.")
					ibSKUScanned = False
					st_message.Text = "Scan a SKU/UPC/EAN."
					REturn
				End If
				
				//If we already have a record for this sku/carton, bump up the Qty
				lsFind = "Upper(sku) = '" + Upper(isCurrentSku) + "' and Upper(carton_no) = '" + Upper(sle_carton_no.text) + "' and (serialized_ind = 'N' or serialized_ind = 'Y')"
				lsFind += " and quantity < expected_qty "
				llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
							
				//If Not found, see if we have a record for the sku where we havent assigned a carton number yet.
				If llFindRow = 0 then
					lsFind = "Upper(sku) = '" + Upper(isCurrentSku) + "' and (Upper(carton_no) = '' or isnull(carton_no)) and (serialized_ind = 'N' or serialized_ind = 'Y')" 
					lsFind += " and quantity < expected_qty "
					llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
				End If
				
				//If not found see if we have a row for this SKU that we can copy to a new row for a new carton
				If llFindRow = 0 then
					
					lsFind = "Upper(sku) = '" + Upper(isCurrentSku) + "' and (serialized_ind = 'N' or serialized_ind = 'Y')"
					lsFind += " and quantity < expected_qty "
					llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
					
					If llFindRow > 0 Then
						lsSKU =Tab_main.tabpage_serial.dw_serial.getITemString(llFindRow ,'sku')
						dw_serial.RowsCopy(llFindRow,llFindRow,PRimary!,dw_serial,99999999999, Primary!)
						llFindRow =Tab_main.tabpage_serial.dw_serial.RowCount()
						dw_serial.SetITem(llFindRow,'quantity',0)
																
						//IF adding a new row, set all the others to fully processed and the new row to be the remainder
						ldExpQty = 0
						For i = 1 to (llFindRow - 1)
							If Tab_main.tabpage_serial.dw_serial.GetitemString(i,'sku') = lsSKU  Then
								ldExpQty += Tab_main.tabpage_serial.dw_serial.GetitemNumber(i,'expected_qty') - Tab_main.tabpage_serial.dw_serial.GetitemNumber(i,'quantity')
								Tab_main.tabpage_serial.dw_serial.SetITem(i,'expected_qty',Tab_main.tabpage_serial.dw_serial.GetitemNumber(i,'quantity'))
							End If
						Next
						Tab_main.tabpage_serial.dw_serial.SetITem(llFindRow,'expected_qty',ldExpQty)
					End If
				End If
							
				If lLFindRow > 0 Then
					dw_serial.SetRow(llFindRow)
					dw_serial.ScrolltoRow(llFindRow)
					
					// 3/14 - PCONKL - For some projects (set in ue_postOpen), we will force users to enter the qty scanned
					if ibProjectRequiresScanQty Then
						
						ilScanRow = llFindRow
						sle_scan_qty.SetFocus()
						sle_scan_qty.Text = "0"
						sle_scan_qty.SelectText(1,len(sle_scan_qty.Text))
						ibScanQtyNeeded = True
						return
					End If
					
					If isnumber(sle_Scan_qty.Text) Then
						If Long(sle_scan_Qty.Text) > 0 Then
							dw_serial.SetITem(llFindRow,'quantity',dw_serial.GetItemNumber(llFindRow,'quantity') + Long(sle_scan_Qty.Text))
						Else
							dw_serial.SetITem(llFindRow,'quantity',dw_serial.GetItemNumber(llFindRow,'quantity') + 1)
						End If
						
					Else
						dw_serial.SetITem(llFindRow,'quantity',dw_serial.GetItemNumber(llFindRow,'quantity') + 1)
					End If
									
					dw_serial.SetITem(llFindRow,'carton_no',sle_carton_no.text)
					dw_serial.SetITem(llFindRow,'serial_no',"N/A-" + sle_carton_no.text)
					ib_changed = True
							
					ibSKUScanned = False
					sle_barcodes.Text = ""
					st_message.Text = "Non Serialized SKU scanned. Scan the next SKU/UPC/EAN."
				Else
					doDisplayMessage('Serial Numbers',"All Serial Numbers for this SKU have been entered.  If you need to update a serial number, switch to manual mode.")
					ibSKUScanned = False
					st_message.Text = "Scan a SKU."
				
				End If
			End If /*Scanning all items*/
		End If /*All rows scanned for SKU? */
		
	ElseIf ibDejaVu Then					/* GailM 8/22/2014 Pandora Issue 883 - Scan Container IDs */
	
			//Check for Duplicates
			lsFind = "Upper(serial_no) = '" + Upper(Upper(lsbarcode) ) + "'"
			If dw_serial.Find(lsFind,1,dw_serial.RowCount()) > 0 Then
				doDisplayMessage("Duplicates found","This Container has already been scanned ")
				sle_barcodes.SelectText(1,len(sle_barcodes.Text))
				Return
			End If
			
			//Check for valid PONO for Honda.  Honda could have multiple lines with the same PONO but we only need to scan for one and will populate all matching rows with the scanned value
			// TAM 2014/09/19- Honda-Th uses PONO to validate scanning on Export warehouse
			If Upper(gs_Project) = 'HONDA-TH' and  idw_main.GetItemString(1,'wh_code') = 'EXP-HONDA' Then
				lsFind = "Upper(Po_No) = '" +  Upper(lsbarcode) + "'"
				llPickFindRow = idw_pick.Find(lsFind,1, idw_pick.Rowcount())
				if llPickFindRow = 0 Then
					doDisplayMessage("Pallet ID error","This PalletID could not be found for this order.~r~nPlease re-enter valid PalletId. ")
					sle_barcodes.SelectText(1,len(sle_barcodes.Text))
					Return
				End If
	
				// TAM 2014/09/26- Honda-Th could have multiple SKUs with the same PONO.  We want to load the PONO into all Lines with this container number
				llLineItemNo = idw_pick.GetItemNumber(llPickFindRow,'line_item_no')
				lsFind = "line_item_no = " + string(llLineItemNo)
				llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
				If llFindRow <= 0 Then // PONO Not Found
					doDisplayMessage("Pallet Id error","Could not find Line Item No for this Pallet.")
					Return
				Else //PoNo Found
					do while llfindRow > 0  //Loop through other pick rows to find other lines with a matching PONO and update each serial row.
						dw_serial.SetITem(llFindRow,'serial_no',sle_barcodes.Text) 	//SerialNo is ContainerID
						dw_serial.SetITem(llFindRow,'carton_no',String(llLineItemNo))	//CartonNo is LineItemNo
						dw_serial.SetITem(llFindRow,'mac_id','-') 							//Default MacID to dash
						dw_serial.SetITem(llFindRow,'quantity',idw_pick.GetItemNumber(llFindRow,'quantity')) //originial
						ib_changed = True
	
						//Check next Pickrows for matching carton numbers 
						llPickFindRow = llPickFindRow + 1 //Check next Pickrows for more
						If llPickFindRow>idw_pick.Rowcount() Then // End of Picklist
							llFindRow=0
						Else
									
							lsFind = "Upper(Po_No) = '" +  Upper(lsbarcode) + "'"
							llFindRow = idw_pick.Find(lsFind,llPickFindRow, idw_pick.Rowcount())
							if llFindRow > 0 Then //More found
								llLineItemNo = idw_pick.GetItemNumber(llFindRow,'line_item_no')
								lsFind = "line_item_no = " + string(llLineItemNo)
								llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
								If llFindRow <= 0 Then // PONO Not Found
									doDisplayMessage("Pallet Id error","Could not find Line Item No for this Pallet.")
									Return
								End If //PoNo Found
							else
								llFindRow=0
							end if  //More Pick Rows
						end if // End of Picklist
					loop
	
				End If // Find Pono
	
			Else //Not Honda
	
				//Check for Valid Container		
				lsFind = "Upper(container_id) = '" +  Upper(lsbarcode) + "'"
				llFindRow = idw_pick.Find(lsFind,1, idw_pick.Rowcount())
				if llFindRow = 0 Then
					doDisplayMessage("Container error","This ContainerID could not be found for this order.~r~nPlease re-enter valid container. ")
					sle_barcodes.SelectText(1,len(sle_barcodes.Text))
					Return
				End If
			
				llLineItemNo = idw_pick.GetItemNumber(llFindRow,'line_item_no')
				lsFind = "line_item_no = " + string(llLineItemNo)
				llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
				If llFindRow > 0 Then
					dw_serial.SetITem(llFindRow,'serial_no',sle_barcodes.Text) 	//SerialNo is ContainerID
					dw_serial.SetITem(llFindRow,'carton_no',sle_barcodes.Text)	//CartonNo is ContainerID
					dw_serial.SetITem(llFindRow,'mac_id','-') 							//Default MacID to dash
					dw_serial.SetITem(llFindRow,'quantity',idw_pick.GetItemNumber(llFindRow,'quantity')) //originial
					ib_changed = True
				Else
					doDisplayMessage("Container error","Could not find Line Item No for this container.")
				End If
			End If
	
	Else /*sku not found, must be a serial scan*/
		
			//MAS 030211 BlueCoat Change
			//validate that serial numbers that are scanned on the Outbound Order were
			//either scanned as part of a Workorder Putaway or a Receive Order Putaway
		
			string ls_wosku, ls_rpa_serial, ls_rpa_sku
			integer li_rowcnt
			long ll_find
			boolean lb_Set_Serial_No = true
	
		//05/05 - We may be loading Serial Numbers, Mac ID,s etc from a file based on a scan
		liRC = iuo_carton_serial_scanning.uf_Process_do_carton_Scan(isCurrentSKU,lsMessage,sle_barcodes.Text, sle_carton_no.text,idw_Main, idw_detail, idw_Pick, idw_PAck, dw_Serial,llPackingRow )
		
		If liRC = 1 Then
			sle_barcodes.SelectText(1,len(sle_barcodes.Text))
			ib_changed = True
			If lsMessage > '' Then st_message.Text = lsmessage
			Beep(1)
			Return
		ElseIf liRC < 0 Then
			sle_barcodes.SetFocus()
			sle_barcodes.SelectText(1,len(sle_barcodes.Text))
			Beep(2)
			Return
		Else /*fall through to existing logic*/
		
		End If
		
		If ibskuscanned Then /*sku already scanned, it's a serial # */
		
			//Check for Duplicates
			lsFind = "Upper(sku) = '" + Upper(isCurrentSku) + "' and Upper(serial_no) = '" + Upper(lsBarcode) + "'"
			If dw_serial.Find(lsFind,1,dw_serial.RowCount()) > 0 Then
				// pvh 03/02/06 - smartcode 
				doDisplayMessage("Duplicates found","This Serial Number has already been scanned for this SKU")
				sle_barcodes.SelectText(1,len(sle_barcodes.Text))
				Return
			End If
			
			//Set the entered barcode to the first empty serial # for the current SKU
			// 11/09 - PCONKL - If scanning all (pack validation) and this is a non serialized product, we just need the first available row for sku and carton
			
			lsFind = "Upper(sku) = '" + Upper(isCurrentSKU) + "' and isnull(serial_no)"
			llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1)
			
			If llFindRow > 0 Then
				dw_serial.SetRow(llFindRow)
				dw_serial.ScrolltoRow(llFindRow)
				
				//07-JUNE-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -START
				//a. check whether SKU is enabled for StripOff First char or not.
				//b. If scanned SN does pass Serial Mask, don't need to check against StripOff 1st char.
				//c. If scanned SN does not pass Serial Mask, need to check against StripOff 1st char and re-do Serial Mask Validation.
				ls_stripoff_checked = i_nwarehouse.of_stripoff_firstcol_checked( Upper(isCurrentSku), idw_serial.GetItemString(llFindRow,'supp_code'))	
				ls_return = i_nwarehouse.of_validate_serial_format( Upper(isCurrentSku), sle_barcodes.Text , idw_serial.GetItemString(llFindRow,'supp_code') )
	
				//28-JULY-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -START
				If ls_return <> "" and upper(ls_stripoff_checked) ='Y' Then
					sle_barcodes.Text = i_nwarehouse.of_stripoff_firstcol_serialno( Upper(isCurrentSku) ,  idw_serial.GetItemString(llFindRow,'supp_code') , sle_barcodes.Text)
					ls_return = i_nwarehouse.of_validate_serial_format( Upper(isCurrentSku), sle_barcodes.Text , idw_serial.GetItemString(llFindRow,'supp_code') )
				End If
				//28-JULY-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -END
	
				if ls_return <> "" then
					doDisplayMessage("Serial Number Entry",ls_return)
					dw_serial.SetItem(llFindRow,'serial_no','')		//Remove number from selected row
					return
				end if
			//07-JUNE-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -END
	 
				if g.ibSNchainofcustody then
					long ll_owner_id, ll_return
					long llFoundrow  //01/03/2011 ujh: S/N_Pfx1
					string ls_owner_cd, ls_SKU, ls_serial_no
					 ls_Sku = dw_serial.GetItemString(llFindRow,'SKU')
					ls_serial_no = tab_main.tabpage_serial.sle_barcodes.text
	
				if upper(idw_serial.GetItemString(llFindRow, 'Component_ind')) = 'Y'   and ls_serial_no = '-'  then
					messagebox('Alert', 'Please use manual mode to activate a parent')
					return
				end if
				if isnull(ls_serial_no) or ls_serial_no = '' then
					// Is this a parent item?
					if upper(idw_Serial.GetItemString(llFindRow, 'Component_ind')) = 'Y' then
						// now determine if it has children with populated serial numbers
						// First find the boundary for this parents children
						ll_return = wf_set_active_parent_range(llFindRow, ll_first, ll_last, idw_serial)
						if ll_return = 0 then
							// Now determine if there is a child with populated serial numbers for this parent
							lsFind = " component_ind = '*'  and Serial_no <> '' "
							llFoundRow = idw_Serial.Find(lsFind, llFindRow, ll_last )
							if llFoundRow > 0 then
								messagebox('Error Delete', 'Please remove serial numbers from all children before Parent')
								return  // 2
							end if
							// Reset so there is no active parent
							ilParent_rowno = 0
							ilParent_maxrow = 0
							ilComponent_no = 0
	
						else
							return    // ll_return  
						end if  // end test return from function
					end if  // end if component_ind = 'Y'
					// Whether child or parent remove component no when serial_no is blanked
					idw_Serial.SetItem(llFindRow, 'na_component_no', 0)
					messagebox('No Data', 'Serial number is required!  You may come back to this later')
					return   // 0
				end if
				ls_serialized_ind = idw_serial.GetITemString(llFindRow,'Serialized_ind')
				lsComponent_Ind =idw_serial.GetItemString(llFindRow, 'component_ind')  
					 // use picking detail to get owner_ID, in order to find owner_cd.
					lsFind = "Upper(SKU) = '" + Upper(dw_serial.GetItemString(llFindRow,'SKU')) + "' and Upper(supp_code) = '" + Upper(dw_serial.GetItemString(llFindRow,'Supp_Code')) + "'"
					lsFind += " and Line_Item_no =  " + String(dw_serial.GetItemNumber(llFindRow,'Line_Item_no')) /* 05/07 - PCONKL - need line item in case child SKU is part of multiple parents on the order*/
					ll_pickrow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
					If ll_pickrow > 0 Then
						ll_owner_id = idw_Pick.GetItemNumber(ll_pickrow,'owner_id')
						llComponent_no = idw_Pick.GetItemNumber(ll_pickrow, 'component_no')   // 01/03/2011 ujh: S/N_Pb:
					End if
						//dts - not calling serial validation for component children
						// Get owner_cd
						Select Owner_cd 
						Into :ls_owner_cd
						From Owner
						where Project_id = :gs_project
						and owner_id = :ll_owner_id;
	
				// 01/03/2011 ujh: S/N_Pfx1:  Parent only processing
				if upper(lsComponent_ind) = 'Y'    then	  
					// Is the current parent valid
					if idw_serial.GetItemNumber(llFindRow, 'na_component_no') > 0 then
							// Current Parent is valid (already scanned)
							// Get a range for this parent, but do not set it.  using local variables so it is not set
							ll_return = wf_set_active_parent_range(llFindRow, ll_first, ll_last, idw_serial)
							if ll_return = 0 then
								// Now determine if there is a child with populated serial numbers for this parent
								lsFind = " component_ind = '*'  and Serial_no <> '' "
								llFoundRow = idw_serial.Find(lsFind, llFindRow, ll_last )
								if llFoundRow > 0 then
									// A child was found
									messagebox('Error Delete', 'Please remove serial numbers from all children before changing parent serial no')
									return    // 2
								else
									// No child found
									// Remove active parent.  This will become active parent if further processing good
									ilParent_rowno = 0
									ilParent_maxrow = 0
									ilComponent_no = 0
								end if
							else
								return    //   ll_return
							end if
					end if  
	
				end if  // Parent only processing
	
				// 01/03/2011 ujh: S/N_Pfx1: Child processing
				if lsComponent_Ind = '*' then  // child only processing
					// make sure entered data is for the correct parent.  Find that parent and force entry to a child of parent
	
						/* if it is not true that there is an active parent range  or there is an active range 
								and this row is not in it,  then try to 
								activate new parent range.  Other wise skip and process normally*/
						if not (ilParent_rowno > 0) &
							or ((ilParent_rowno > 0) and not (llFindRow > ilParent_rowno and llFindRow <= ilParent_maxrow)) Then
	
								/*  There either is no active parent range or this component is not in an active range.  
									Either way find this component's parent if a valid (scanned) parent exists and activate*/
								FOR i_ndx = llFindRow - 1 TO 1 STEP -1
									if upper(idw_serial.GetItemString(i_ndx, 'Component_ind')) = 'Y' then
										// Found this items parent, now get parent's dummy component if parent has been scanned
										ll_na_component_no = idw_serial.GetItemNumber(i_ndx, 'na_component_no')
										Exit
									end if
								next
								// Determine if parent has been scanned
								if isnull(ll_na_component_no) or ll_na_component_no = 0 then
									// Parent has not been scanned
									messagebox('Component Error', 'No Scanned Parent Found for this component.' &  
										+ ' Please enter a parent Serial # before scanning its components')
									idw_serial.SetItem(llFindRow, 'Serial_no', '')  // blank out the scanned data
									return    // 1
								end if
								// we have a valid parent(scanned), now activate its row range
								ilComponent_no = ll_na_component_no
								ll_return = wf_set_active_parent_range(llFindRow, ilParent_rowno, ilParent_maxrow, idw_serial)
							
							end if   // End trying to active parent range
						
							// Set current component no to the component number of the active parent
							llComponent_no = ilComponent_no
				 end if   // child only processing
						f_method_trace_special( gs_project, this.ClassName() , 'Check if Serial Number exist: ' ,is_dono, '','',isinvoice_no) 		
						//24-Jul-2014 : Madhu- Added "is_dono,isinvoice_no" to write onto Method Trace Log
						ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, ls_SKU, ls_Serial_no, ls_owner_cd, lsComponent_ind, llComponent_no, false, false,ab_error_message_title,ab_error_message,is_dono,isinvoice_no)
						If ll_return = 1 then    // Return from Error function
							sle_barcodes.SetFocus()  
							DoDisplayMessage(ab_error_message_title, ab_error_message)
							GoTO skipSerialNoSet
						else
						idw_Serial.SetItem(llFindRow, 'NA_Component_no',  ilComponent_no )  
						if upper(lsComponent_ind) = 'Y' then
							// Set the parent Active range
							ll_return = wf_set_active_parent_range(llFindRow, ilParent_rowno, ilParent_maxrow, idw_serial)
							if ll_return <> 0 then
								return   //  ll_return
							end if
								
						end if  // End lsComponent_ind = 'Y'
						
						// Now, if the current item is a serialized component, reset Parent Range if all serial numbers are entered
						if lscomponent_ind = '*'  then
							For i_ndx = ilParent_rowno + 1 to ilParent_maxrow
								// Go to done at the first part with no serial number entered
								if (isnull(idw_Serial.GetItemString(i_ndx, 'Serial_no') ) &
									or idw_Serial.GetItemString(i_ndx, 'Serial_no') = '' ) &
									and  idw_Serial.GetItemString(i_ndx, 'Serialized_ind') = 'B'  then
									/* The current row does not yet show that it is populated, so we will skip using its info 
										as we know it is populated because we have a good return code*/
									if i_ndx <> llFindRow then
										// this should have serial numbers, but doesn't, so this parent is not finished
										goto Done
									end if
								end if
							next
							// this parent's components are all entered, so remove the Parent Range
							ilParent_rowno = 0
							ilParent_maxrow = 0
							ilComponent_no = 0
							Done:
							
						end if  // End lsComponent_ind = '*'
						end if    // Return from Error function
				end if  // end Pandora processing
				//added if condition else is originial code
				If Not lb_Set_Serial_No and Upper(gs_project) = 'BLUECOAT' Then
					sle_barcodes.Text = ''
					sle_barcodes.SetFocus()
					ib_changed = True
				Else
					// 07/13 - PCONKL - If Serialized Inbound (and validating all orders), make sure this serial exists on Pick list
					If dw_serial.GetITemString(llFindRow,'Serialized_ind') = 'Y' Then
						
						llSerialFind = idw_pick.Find("Upper(Serial_No) = '" + upper(sle_barcodes.Text) + "'",1, idw_Pick.RowCount())
						If llSerialFind < 1 Then
							doDisplayMessage('Serial Numbers',"Inbound Tracked Serial Number not found on Picking List.")
							sle_barcodes.SelectText(1,len(sle_barcodes.Text))
							Return
						End If
					End If
					
					dw_serial.SetITem(llFindRow,'serial_no',sle_barcodes.Text) //originial
					If Not Upper(gs_project) = 'ANKI' and Not Upper(  idw_main.GetItemString(1,'wh_code')) = 'ANKI-EMU' Then
						dw_serial.SetITem(llFindRow,'quantity',1) //originial
						ib_changed = True
					End iF
					
				End If		
				
				// For Ariens, validate on hold and if  Print Labels checkbox is checked, print the UCC label
				if upper(gs_Project) = 'ARIENS' Then
					ls_Sku = dw_serial.GetItemString(llFindRow,'SKU')
					llLineItem = dw_Serial.GetITemNumber(llFindROw,'Line_Item_No')
					ls_serial_no = trim(tab_main.tabpage_serial.sle_barcodes.text)
					ls_Serial_no_short =  Right(idw_serial.GetItemString(llfindRow, 'serial_no'),6)
								
				//TAM 2014/04/21  Add a service call to Tibco/Ariens to see if the order is on hold				
				If idw_Main.GetITemString(1,'Ord_Type') <> 'Z' and  idw_Main.GetITemString(1,'Ord_Type') <> 'X' Then //TAM  Skip Validation for Transfer Orders and Return Orders
				If  ib_ariens_on_hold_service_call = True Then // If  ib_ariens_on_hold_service_call = True
					//Add the header and footer
					String lsPost, lsxmlresponse, lsreturncode, lsreturndesc
					iuoWebsphere = CREATE u_nvo_websphere_post
					linit = Create Inet
					lsPost = iuoWebsphere.uf_request_header("AriensOnHold")
					lsPost += 	'<SKU>' + ls_sku +  '</SKU>' 
					lsPost += 	'<Serial_No>' + ls_serial_no_short +  '</Serial_No>' 
					lsPost = iuoWebsphere.uf_request_footer(lsPost)
		
					w_main.setMicroHelp("Serial Number Validation request to Application Server...")
					lsXMLResponse = iuoWebsphere.uf_post_url(lsPost)
					w_main.setMicroHelp("Serial Number Validation request complete.")
					//If we didn't receive an XML back, there is a fatal exception error
					If pos(Upper(lsXMLResponse),"SIMSRESPONSE") = 0 Then
						Messagebox("Websphere Fatal Exception Error","Unable to Validate On Hold Status: ~r~r" + lsXMLResponse,StopSign!)
						lsReturnCode = "-1"
						lsReturnDesc = ''
					Else	
					//Check the return code and return description for any trapped errors
						lsReturnCode = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"returncode")
						lsReturnDesc = iuoWebsphere.uf_get_xml_single_Element(lsXMLResponse,"errormessage")
					End If
		
					Choose Case lsReturnCode
				
						Case "-99" /* Websphere non fatal exception error*/
							dw_serial.SetITem(llFindRow,'Serial_no',lsNull)
							Messagebox("Websphere Operational Exception Error","Order On Hold Status: ~r~r" + lsReturnDesc,StopSign!)
							sle_barcodes.SelectText(1,len(sle_barcodes.Text))
							Return 
						Case Else
							If lsReturnDesc > '' Then
								Messagebox(is_title,lsReturnDesc)
							End If
				
							if lsReturnCode = "-1" Then // If Return code = -1(Timeout from Tibco) then we want to use the existing table validation
								lsFind = "Upper(sku) ='" + Upper(ls_Sku) + "'" + " and Upper(serial_no) = '" + Upper(ls_serial_no) + "'" 
								llSerialFind =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
								If llSerialFind > 0 Then
									dw_serial.SetITem(llFindRow,'Serial_no',lsNull)
									doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(ls_Sku) + '~rSerial: ' + Upper(ls_serial_no) + ' is on Hold ~rCould not Process.')
									sle_barcodes.SelectText(1,len(sle_barcodes.Text))
									Return 
								End If
							End If
			
					End Choose
	
				Else	// If  ib_ariens_on_hold_service_call = False then  we want to use the existing table validation
					lsFind = "Upper(sku) ='" + Upper(ls_Sku) + "'" + " and Upper(serial_no) = '" + Upper(ls_serial_no) + "'" 
					llSerialFind =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
					If llSerialFind > 0 Then
						dw_serial.SetITem(llFindRow,'Serial_no',lsNull)
						doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(ls_Sku) + '~rSerial: ' + Upper(ls_serial_no) + ' is on Hold ~rCould not Process.')
						sle_barcodes.SelectText(1,len(sle_barcodes.Text))
						Return 
					End If
				End If // End  ib_ariens_on_hold_service_call = True
				End If // End  Skip Validation on Warehouse Transfer
				
					//06-Mar-2014 :Madhu- Added for Ariens SSCC -START
					lsFind = "Upper( sku ) ='" +Upper(ls_Sku) + "'" + " and  Line_Item_No= " + String(llLineItem) + "" + " and  ((free_form_serial_no) = '' or isnull(free_form_serial_no))"
					llPackFind =idw_pack.Find(lsFind,1,idw_pack.RowCount())
					f_method_trace_special( gs_project, this.ClassName() , 'Process ue_process_barcodes, Pack Find count is: ' + String(llPackFind) + 'for sku: '+ls_Sku+ ' and LineItemNo: ' +String(llLineItem)  ,is_dono, '','',isinvoice_no) 	
					IF llPackFind > 0 Then
						ls_carton = idw_pack.getItemString(llPackFind,'carton_no')
						idw_pack.setItem(llPackFind,'free_form_serial_no',ls_serial_no)
						dw_Serial.setItem(llFindRow,'carton_no',ls_carton)
						f_method_trace_special( gs_project, this.ClassName() , 'Process ue_process_barcodes, copied following SN: ' + ls_serial_no +' onto Pack List, with combination of Sku: ' + ls_Sku + ' Carton_No: ' +ls_carton+ ' LineItemNo: ' +String(llLineItem)  ,is_dono, '','',isinvoice_no) 	
					ELSE
						doDisplayMessage('Invalid Packing SKU/LineItem Combination'," SKU: " + ls_Sku + " with Line Item No: " + String( llLineItem)  +&
						+ "~r~n~r~n Less number of records on Pack List tab against Serial Tab, please check.")
						f_method_trace_special( gs_project, this.ClassName() , 'Process ue_process_barcodes, an error msg popup to user:-   Less number of records on Pack List tab against Serial Tab, please check'  ,is_dono, '','',isinvoice_no) 	
						return
					END IF
					//06-Mar-2014 :Madhu- Added for Ariens SSCC-END
	
					//24-Oct-2014 :Madhu- Don't allow same SN to multiple orders - START
					ll_serialno =wf_duplicate_Serial_no_scan_validation( ls_SKU, ls_Serial_no, ls_owner_cd)
					If ll_serialno = 1 then
						idw_pack.setItem(llPackFind,'free_form_serial_no',lsNull) 
						dw_serial.setItem(llFindrow,'serial_no', lsNull)
						return
					END IF
					//24-Oct-2014 :Madhu- Don't allow same SN to multiple orders - END
			
					If cbx_print_labels.Checked Then
						iuo_labels.uf_ariens_ucc_by_scan(llLineItem,ls_SKU, ls_serial_no,ls_carton) //03-Mar-2014 :Madhu- Added 'ls_carton' for Ariens SSCC
					End If
							
				End If /*Ariens */
				skipSerialNoSet:
				
				IF gs_project = '3COM_NASH' THEN iw_window.wf_coo_validation(dw_serial,llFindRow)
				
					// 10/03 - PCONKL - add carton number if scanned
					If sle_carton_no.text > '' and gs_project <> 'ARIENS' Then //06-Mar-2014 :Madhu- Added for Ariens SSCC- we're already setting carton# above
					//scanned serial_no, carton no combination should be same as in pack & serial tab.
					  //Dhirendra S59788- PANDORA -START
					  IF Upper(gs_project) = 'PANDORA' and dw_serial.getitemstring(llFindRow,'Container_Tracking_Ind') <> 'Y' THEN
						ls_corton_no='T'+sle_carton_no.text
						lsFind = "Upper(sku) <>'" + Upper(ls_Sku) + "'" + " and Upper(carton_no) = '" + Upper(ls_corton_no) + "'" 
							llrowfind = dw_serial.Find(lsFind,1,dw_serial.RowCount())
							IF llrowfind > 0 then 
						         messagebox('Alert Info','Not allow different GPNs to have the same carton number')
								dw_serial.SetITem(llFindRow,'serial_no',lsNull)
								RETURN
							else
							  dw_serial.SetITem(llFindRow,'carton_no',ls_corton_no)
						end if
					else 
						dw_serial.SetITem(llFindRow,'carton_no',sle_carton_no.text)	
					end if 
					 //Dhirendra S59788- PANDORA -END 
					 
					 // Begin - Dinesh - 09/11/2024- SIMS-548-Google – SIMS-Prevent movement of FP Tracked GPN movement without valid info
					IF Upper(gs_project) = 'PANDORA' and dw_serial.getitemstring(llFindRow,'Container_Tracking_Ind') <> 'Y' THEN 
						long ll_LineItemNo,llrowfindlineitem,llFindlineitem
						int liMessage
						string lsFindlineitem,lsLineItemNo,lscartonNo
						lsLineItemNo = string(idw_serial.GetItemNumber(llFindRow, "line_item_no"))
						lsFindlineitem=  "line_item_no <>" + lsLineItemNo + "" + " and Upper(carton_no) = '" + Upper(ls_corton_no) + "'" 
							llrowfindlineitem = dw_serial.Find(lsFindlineitem,1,idw_serial.RowCount())
							IF llrowfindlineitem > 0  then
							if Messagebox("Warning" ,"The same Carton Number " + ls_corton_no +  " may not be used on different Line Number " + lsLineItemNo + " .Would you like to generate a new Carton Number?",Question!,YesNo!,1) =1 then
								tab_main.tabpage_serial.cb_new_carton.TriggerEvent("clicked")
								ls_corton_no='T'+sle_carton_no.text
								dw_serial.SetITem(llFindRow,'carton_no',ls_corton_no)
								dw_serial.SetITem(llFindRow,'serial_no',sle_barcodes.text)
							else
								dw_serial.SetITem(llFindRow,'carton_no',lsNull)
								dw_serial.SetITem(llFindRow,'serial_no',lsNull)
								return
							end if
							end if	
					end if
					//End  - Dinesh - 09/11/2024- SIMS-548-Google – SIMS-Prevent movement of FP Tracked GPN movement without valid info
	 
				End If
					
					ib_changed = True
					ilUndoRow = llFindRow /*so we can undo last scan if desired*/
					cb_undo.Enabled = True
							
				Else
					doDisplayMessage('Serial Numbers',"All Serial Numbers for this SKU (and Supplier/Line Item if carton number entered) have been entered.~rIf you need to update a serial number, switch to manual mode.")
					sle_barcodes.SelectText(1,len(sle_barcodes.Text))
					Return
					
				End If
			
			//BCR 22-SEP-2011: Franke_TH requires SKU scan for every row!
			//MEA 05-JAN-2012: Added for Nike
			IF Upper(gs_project) =  'FRANKE_TH' OR  Upper(gs_project) = 'NIKE-SG'  OR Upper(gs_project) = 'NIKE-MY' THEN
				st_message.Text = "Serial Number Entered. Please scan the next SKU."
				ibSkuScanned = False
			ELSE//Processing for all other projects...
				//If all the same SKU, the no need to rescan next SKU
				If Not ibmultiplesku Then
					st_message.Text = "Please scan the next Serial Number."
					ibSKUScanned = True
				Else
					st_message.Text = "Serial Number Entered, Please scan the next SKU or another Serial # for this SKU."
				End If
			END IF//END Franke_TH,  NIKE-SG, NIKE-MY
			
		Else /*sku not already scanned - error*/
			doDisplayMessage( "Validation Error","SKU Not found. Please scan a SKU.")
			cb_undo.Enabled = False
		End If /*Sku already scanned*/
		
	End If /*sku found in barcode*/
	
		//GailM 07/08/2017 - SIMSPEVS-718 - Checking for duplicate serial numbers will be baseline
		ll_serialno =wf_duplicate_Serial_no_scan_validation( ls_SKU, ls_Serial_no, ls_owner_cd)
		If ll_serialno = 1 then
			idw_pack.setItem(llPackFind,'free_form_serial_no',lsNull) 
			dw_serial.setItem(llFindrow,'serial_no', lsNull)
			sle_barcodes.Text = ''
			sle_barcodes.SetFocus()
			return
		END IF
	
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
	
	//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -START
	long llscannedqty
	If gs_Project ='KLONELAB' Then
		llscannedqty = long(sle_total_alloc_qty.Text)
		llscannedqty = llscannedqty + 1
		sle_total_alloc_qty.Text = string(llscannedqty)
	END IF
	//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -END

NEXT

//TimA 02/12/13 Added method trace function call
//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_process_barcodes: ' + is_dono )
f_method_trace_special( gs_project, this.ClassName() , 'End ue_process_barcodes: ' ,is_dono, '','',isinvoice_no)
end event

event ue_generate();Long	llRowPos, llRowCount, llFindRow, llPickPos, llPickCount, llUPC, llNewRow, llID, llLineItemNo
String	lsFind,lsDONO,  lsSku, lsSupplier, lsDesc
Long	ll_method_trace_id
Integer	liRC

u_nvo_custom_validations	luo_validations
u_nvo_carton_serial_scanning lu_carton_serial_scanning

lu_carton_serial_scanning = Create u_nvo_carton_serial_scanning

If ib_changed Then
	messagebox(is_title,'Please save changes before generating Serial # list!')
	return
End If

// cawikholm 07/05/11 Added call to track user 
SetNull( ll_method_trace_id )
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Start ue_generate Serial: ' + is_dono ) //08-Feb-2013  :Madhu commented
f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate', 'Start ue_generate Serial:' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

// 09/13 - PCONKL -Project spcific validations before generating Serial List
// GailM - 8/19/2014 - Pandora #883 - DejaVu Scanning containers
luo_validations = Create  u_nvo_custom_validations
If ibDejaVu Then
	idw_serial.Object.serial_no_t.text = 'ContainerID'
	//	uf_generate_container_scan()
	//	If luo_validations.uf_outbound_validate_container_generate() < 0  Then
	For llRowPos = 1 to idw_pick.RowCount()
		//TAM 2014/09/19 - HONDA-TH - Honda Uses PONO to validate
		If Upper(gs_project) = 'HONDA-TH' Then
			If idw_pick.GetItemString(llRowPos,'Po_No' ) <> '' and idw_pick.GetItemString(llRowPos,'Po_No' ) <> '-' Then
				ilRetrieveRow = llRowPos
				dw_serial.TriggerEvent("ue_retrieve_containers") /*retrievestart = 2 to not clear after each retrieve*/
			End If
		Else
			If idw_pick.GetItemString(llRowPos,'container_id') <> '' and idw_pick.GetItemString(llRowPos,'container_id') <> '-' Then
				ilRetrieveRow = llRowPos
				dw_serial.TriggerEvent("ue_retrieve_containers") /*retrievestart = 2 to not clear after each retrieve*/
			End If
		End If
	Next
Else
	//10/07 - If validating carton serial relationship, make sure packing list has been generated first
	// 11/09 - PCONKL - We are allowing Serial numbers to be scanned first. Instead of throwing an error, just force carton number to be scanned first.
	If g.ibCartonSerialvalidationRequired and idw_Pack.RowCount() = 0 Then
		
	//	messagebox(is_title,'Pack List must be generated before generating Serial # list!')
	//	return
	
		sle_barcodes.Enabled = False
		
	End If
	
	sle_carton_no.Text = ''
	sle_scan_qty.Text = '1'
	isCurrentSKU = ''
	
	// need to show component children to check for serial #'s - may be filtered to not show
	wf_set_pick_filter('Remove')
	
	//For Each Pick Row, retrieve any required outbound Serials
	
	SetPointer(Hourglass!)
	
	dw_serial.SetRedraw(false)
	
	//dw_serial.Reset()
	
	
	// 03/04 - PCONKL - Only need to retreive once by DONO instead of looping for each row
	lsDoNO = idw_main.GetItemString(1,'do_no')
	
	// 09/13 - PCONKL - Retrieve any serial numbers on hold
	 ids_skuserialhold.Retrieve(gs_project, lsDoNO)
	 
	
	For llRowPos = 1 to idw_pick.RowCount()
		
		If idw_pick.GetItemString(llRowPos,'serialized_ind') = 'O' or  idw_pick.GetItemString(llRowPos,'serialized_ind') = 'B' or g.ibScanAllOrdersRequired Then /* 02/09 - PCONKL - added Type B */
					
			ilRetrieveRow = llRowPos
	//TAM 2010/05/26 Saving the Parent quantity if an Item is actually a parent and not every record.  The comment row below already existed but was not used anywhere.
			If idw_pick.GetItemString(llRowPos,'sku') = idw_pick.GetItemString(llRowPos,'sku_parent') then
				ilParentQty = idw_pick.GetItemNumber(llRowPos,"quantity")
			End If		
	//		ilParentQty = idw_pick.GetItemNumber(llRowPos,"quantity")
			// TAM 2014/11/25 - For Friedrich they want to scan every sku that is seriallized and start with a letter
			If upper(gs_project) = 'FRIEDRICH' and idw_pick.GetItemString(llRowPos,'serialized_ind') <> 'O' and  idw_pick.GetItemString(llRowPos,'serialized_ind') <> 'B' and  ((left(idw_pick.GetItemString(llRowPos,'sku'),1) < 'A' ) or (left(idw_pick.GetItemString(llRowPos,'sku'),1) > 'Z' )) Then
			//Skip
			Else
				dw_serial.TriggerEvent("ue_retrieve") /*retrievestart = 2 to not clear after each retrieve*/
			End IF
			
		End If
			
	Next
	
	// 01/20 - PCONKL - F20215/S41092 -  We will load SNs for any Footprints Containers that have already been validated on the Pick list
	If gs_project = 'PANDORA' Then
		
		liRC = lu_carton_serial_scanning.uf_pandora_load_sn_for_picked_containers()
		If liRC = 1  Then
			Messagebox('Footprints', 'All Footprints Serial  Numbers have been succssfully populated')
		ElseIf liRc = -1 Then
			Messagebox('Footprints', 'Errors existed populating Footprints Serial Numbers.~rPallets/Containers will need to be scanned as needed.')
		End If
		
	End If
	
	
	// 02/01 PCONKL - Re Filter Pick list to not show components if box is not checked
	wf_set_pick_filter('Set')
	
	//We only want to show items that need serializing or component masters
	//dw_serial.SetFilter("component_ind = 'Y' or isnull(serial_no) or serial_no <> '-'")
	//dw_Serial.Filter()
	
	//Sort and regroup
	dw_serial.Sort()
	dw_serial.GroupCalc()
	
	dw_serial.SetRedraw(True)
	SetPointer(Arrow!)
	
	//TAM - 08/2015 - Disable Auto entry for ANKI
	//TAM - 11/12/2015 - Not for ANKI-EMU
	//If upper(gs_project) = 'ANKI' then
	If upper(gs_project) = 'ANKI' and Not Upper(  idw_main.GetItemString(1,'wh_code')) = 'ANKI-EMU'   then
		rb_manual.Checked = True /*1/01 PCONKL - default to auto entry*/
		rb_manual.TriggerEvent("clicked")
		rb_barcode.enabled = False
		cb_undo.Enabled = False
	Else
		rb_barcode.Checked = True /*1/01 PCONKL - default to auto entry*/
		rb_barcode.TriggerEvent("clicked")
		cb_undo.Enabled = False
	End If
	//st_message.Text = ""
				
	If dw_serial.RowCount() = 0 Then
		messageBox(is_title, 'There are no serial numbers to capture.')
	End IF
	
	isCurrentPackCartonId = ""
	
	If g.ibCartonSerialvalidationRequired Then
		st_message.text = 'Scan Carton Number'
	Else
		st_message.text = 'Scan Carton Number or SKU'
	End If
	
	If g.ibCartonSerialvalidationRequired and idw_Pack.RowCount() = 0 Then
		sle_carton_no.SetFocus() 
	End If
	
	cb_generate_ob_serial.Enabled = False /* 12/09 - PCONKL - Disabled retrieve above - we dont want to be able to regenerated until a save has occurred*/
	
	//f_method_trace( ll_method_trace_id, this.ClassName(), 'End ue_generate Serial' ) //08-Feb-2013  :Madhu commented
	f_method_trace_special( gs_project, this.ClassName() + ' - ue_generate', 'End ue_generate Serial:' ,is_dono, ' ',' ',isinvoice_no) //08-Feb-2013  :Madhu added

End If		/* End serial capture */

end event

event ue_process_barcodes_sku_only();/* dts 08/02/07 - K&N wants to scan SKUs until it has scanned the total qty.
	Modeled this after ue_process_barcodes...
*/

String	lsBarcode, lsFind, lsSupplier, lsLine, lsMessage
Integer	liRC
Long		llFindRow, llLineItemNo, lLDetailLIne, llLastRow
boolean	lbLastRow
long		llPackingRow
lsBarcode = sle_barcodes.Text

ibSerialModified = True


// Always check to see if a SKU has been scanned 
lsFind = " Upper(sku) = '" + Upper(lsbarcode) + "'"
llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())

If llFindRow > 0 Then /* a SKU was scanned*/
		
	ibSkuScanned = True
	cb_undo.Enabled = False
	lbLastRow = False
	isCurrentSKU = sle_barcodes.Text 
	
	// pvh 12/01/05
	int index
	int max
	boolean foundit
	
	lsFind = " Upper(sku) = '" + Upper(lsbarcode) + "' and isnull(serial_no)" 
	llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1) 
	If llFindRow > 0 Then
		llLastRow = dw_serial.Find(lsFind, llFindRow+1, dw_serial.RowCount() + 1) 
		If llLastRow = 0 Then lbLastRow = True
		dw_serial.SetRow(llFindRow)
		dw_serial.ScrolltoRow(llFindRow)
		dw_serial.SetColumn('serial_no')
		llLineItemNo = dw_serial.GetItemNumber(llFindRow,'Line_Item_no')
//		st_message.Text = "SKU Scanned. Please scan another item."
	Else /*all rows for this SKU have been entered*/
		lsFind = "isnull(serial_no)" 
		llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1) 
		If llFindRow > 0 Then
			doDisplayMessage('SKU Scans', "All Items for this SKU have been scanned/entered. Scan a different SKU.")
			st_message.Text = "Scan a Different SKU."
		Else
			doDisplayMessage('SKU Scans', "ALL Items have been scanned/entered. Scanning Complete")
			st_message.Text = "Scanning Complete."
		End If
		ibSKUScanned = False
		Return
	End If
	
//Else /*sku not found, must be a serial scan*/

	
	//If ibskuscanned Then /*sku already scanned */
		
		//Set the entered barcode to the first empty serial # for the current SKU
		//?already at the right line (from 'find' above)?
		lsFind = "Upper(sku) = '" + Upper(isCurrentSKU) + "' and isnull(serial_no)"
		
		llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount() + 1)
		
		If llFindRow > 0 Then
			
			dw_serial.SetRow(llFindRow)
			dw_serial.ScrolltoRow(llFindRow)
			//dw_serial.SetItem(llFindRow,'serial_no',sle_barcodes.Text)
			dw_serial.SetItem(llFindRow, 'serial_no', sle_barcodes.Text + '(' + string(llFindRow) +')')
			
			ib_changed = True
			ilUndoRow = llFindRow /*so we can undo last scan if desired*/
			cb_undo.Enabled = True
			
		Else
			doDisplayMessage('yada yada',"All Qty for this SKU have been scanned.")
			sle_barcodes.SelectText(1,len(sle_barcodes.Text))
			Return
		End If
		
		//If all the same SKU, the no need to rescan next SKU
//		If Not ibmultiplesku Then
			if lbLastRow = True then
				lsFind = " isnull(serial_no)" 
				llFindRow = dw_serial.Find(lsFind, 1, dw_serial.RowCount() + 1)
				If llFindRow = 0 Then
					st_message.Text = "Scanning Complete."
					doDisplayMessage('SKU Scanning', "ALL Items have been scanned/entered. Scanning Complete!")
					return
				else
					//doDisplayMessage( "SKU Scanning", "All items for this SKU have been Scanned.")
				end if
			end if
			st_message.Text = "Please scan the next Item."
			ibSKUScanned = True
//		Else
//			st_message.Text = "Serial Number Entered, Please scan the next SKU or another Serial # for this SKU."
//		End If
		
Else /*sku not already scanned - error*/
		doDisplayMessage( "Validation Error","SKU Not found. Please scan a Valid SKU for this order.")
		cb_undo.Enabled = False
	
End If /*sku found in barcode*/

sle_barcodes.SelectText(1,len(sle_barcodes.Text))
end event

on tabpage_serial.create
this.mle_2dbarcode=create mle_2dbarcode
this.rb_2dbarcode=create rb_2dbarcode
this.cb_copy_serial=create cb_copy_serial
this.sle_total_alloc_qty=create sle_total_alloc_qty
this.sle_total_req_qty=create sle_total_req_qty
this.st_total_alloc_qty=create st_total_alloc_qty
this.st_total_req_qty=create st_total_req_qty
this.cbx_print_labels=create cbx_print_labels
this.dw_carton_serial=create dw_carton_serial
this.scan_qty_t=create scan_qty_t
this.sle_scan_qty=create sle_scan_qty
this.cb_new_carton=create cb_new_carton
this.cb_ob_serial_delete=create cb_ob_serial_delete
this.cb_ob_serial_insert=create cb_ob_serial_insert
this.sle_carton_no=create sle_carton_no
this.st_carton_no_t=create st_carton_no_t
this.rb_manual=create rb_manual
this.rb_barcode=create rb_barcode
this.gb_1=create gb_1
this.sle_barcodes=create sle_barcodes
this.cb_undo=create cb_undo
this.dw_serial=create dw_serial
this.st_message=create st_message
this.cb_generate_ob_serial=create cb_generate_ob_serial
this.cbx_selallserial=create cbx_selallserial
this.Control[]={this.mle_2dbarcode,&
this.rb_2dbarcode,&
this.cb_copy_serial,&
this.sle_total_alloc_qty,&
this.sle_total_req_qty,&
this.st_total_alloc_qty,&
this.st_total_req_qty,&
this.cbx_print_labels,&
this.dw_carton_serial,&
this.scan_qty_t,&
this.sle_scan_qty,&
this.cb_new_carton,&
this.cb_ob_serial_delete,&
this.cb_ob_serial_insert,&
this.sle_carton_no,&
this.st_carton_no_t,&
this.rb_manual,&
this.rb_barcode,&
this.gb_1,&
this.sle_barcodes,&
this.cb_undo,&
this.dw_serial,&
this.st_message,&
this.cb_generate_ob_serial,&
this.cbx_selallserial}
end on

on tabpage_serial.destroy
destroy(this.mle_2dbarcode)
destroy(this.rb_2dbarcode)
destroy(this.cb_copy_serial)
destroy(this.sle_total_alloc_qty)
destroy(this.sle_total_req_qty)
destroy(this.st_total_alloc_qty)
destroy(this.st_total_req_qty)
destroy(this.cbx_print_labels)
destroy(this.dw_carton_serial)
destroy(this.scan_qty_t)
destroy(this.sle_scan_qty)
destroy(this.cb_new_carton)
destroy(this.cb_ob_serial_delete)
destroy(this.cb_ob_serial_insert)
destroy(this.sle_carton_no)
destroy(this.st_carton_no_t)
destroy(this.rb_manual)
destroy(this.rb_barcode)
destroy(this.gb_1)
destroy(this.sle_barcodes)
destroy(this.cb_undo)
destroy(this.dw_serial)
destroy(this.st_message)
destroy(this.cb_generate_ob_serial)
destroy(this.cbx_selallserial)
end on

event constructor;
If Not g.ibCartonSerialvalidationRequired Then
	st_carton_No_t.Visible=False
	sle_carton_No.visible = False
	cb_new_carton.visible = False
End If

sle_scan_qty.Text =  '1'
//If gs_project <> 'WARNER' /* CR03 and gs_project <> 'PHYSIO-MAA' and gs_project <> 'PHYSIO-XD' CR03 */ Then //hdc 10172012
//If  gs_project <> 'PHYSIO-MAA' and gs_project <> 'PHYSIO-XD'  Then //hdc 10172012
// 01/14 - PCONKL - make visible for any project scanning all items
If not g.ibscanallordersrequired Then
	sle_scan_qty.visible = False
	scan_qty_t.visible = False
End If

//09/13 - PCONKL - Scacn labels checkbox only visible for Ariens right now
if gs_project = 'ARIENS' Then
	cbx_print_labels.visible = True
	cbx_print_labels.Checked = True
Else
	cbx_print_labels.visible = False
	cbx_print_labels.Checked = False
End If

//12/15 - TAM - Copy Row not visible for Pandora
if gs_project = 'PANDORA' Then
	cb_copy_serial.visible = False
Else
	cb_copy_serial.visible = True
End If
end event

type mle_2dbarcode from multilineedit within tabpage_serial
boolean visible = false
integer x = 1824
integer y = 44
integer width = 571
integer height = 252
integer taborder = 30
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
borderstyle borderstyle = stylelowered!
end type

event modified;//GailM - 11/01/2017 - SIMSPEVS-825 Riverbed 2D Matrix barcode for Serial Numbers
String lsSKU, lsSN, lsHW, lsData, lsCartonNo, lsFind
Int liPos1, liPos2, liRowPos, liPackPos, liNbrRows, liEntered, liCartonQty, liCartonUsed, i

liCartonQty = 0	//Initialize

liNbrRows = idw_serial.RowCount()
If liNbrRows = 0 Then
	MessageBox("Validation Error","Generate serial data prior to scanning." )
	RETURN
End If

// Is there a carton number?  If so, use it or default to 1
lsCartonNo = sle_carton_no.text
If lsCartonNo = '' Then lsCartonNo = '1'
// What is the carton quantity from packing list?
lsFind = "Carton_no = '" + lsCartonNo + "' "
liPackPos = idw_pack.Find( lsFind, 1, idw_pack.RowCount( ) )
If liPackPos > 0 Then
	liCartonQty = idw_pack.GetItemNumber( liPackPos, "quantity" )
Else
	MessageBox("Validation Error", "Carton No " + lsCartonNo + " not found on pack list."  )
	Return
End If

lsData = This.Text
liPos1 = pos( lsData, char(13), 2 )  // Start at two in case there is a leading carriage return
If liPos1 <= 0 Then
	MessageBox("Validation Error","Scanning must have multiple lines.  Prease try again." )
Else
	lsSKU = Left( lsData, liPos1 - 1 )
	liPos2 = pos( lsData, char(13), liPos1+1 )
	If liPos2 <= liPos1 Then
		MessageBox("Validation Error","Scanning must have three lines.  Please try again." )
	Else
		lsFind = "SKU = '" + lsSKU + "' "
		liRowPos = idw_serial.Find(lsFind, 1, liNbrRows)
		If liRowPos > 0 Then
			lsFind =  "SKU = '" + lsSKU + "' and isNull(serial_no) "
			liRowPos = idw_serial.Find(lsFind, 1, liNbrRows)
			If liRowPos > 0 Then
				lsHW = Mid(lsData, liPos1 + 1, liPos2 - liPos1 )
				lsSN = Right( lsData, len(lsData) - liPos2 -1 )
				
				lsFind = "SKU = '" + lsSKU + "' and serial_no = '" + lsSN + "' "
				liEntered = idw_serial.Find(lsFind, 1, liNbrRows)
				If liEntered > 0 Then
					MessageBox("Validation Error","Serial Number already assigned.  Please try again." )
				Else
					//Before we commit to the serial table, check SKU and carton nbr for validity
					lsFind = "SKU = '" + lsSKU + "' and carton_no = '" + lsCartonNo + "' "
					liPackPos = idw_pack.Find( lsFind, 1, idw_pack.RowCount() )
					If liPackPos > 0 Then			// Carton number found on pack list
						liCartonUsed = 0
						For i = 1 to dw_serial.rowcount()
							If dw_serial.GetItemString( i, "carton_no" ) = lsCartonNo Then
								liCartonUsed ++
							End If
						Next
						If liCartonUsed < liCartonQty Then
							idw_serial.SetItem( liRowPos, "carton_no", lsCartonNo )
							idw_serial.SetItem( liRowPos, "serial_no", lsSN )
							idw_serial.SetItem( liRowPos, "mac_id", lsHW )
						Else
							MessageBox( "Validation Error", "All serial numbers for this carton have been entered." )
						End If
					Else
						MessageBox("Validation Error","SKU / Carton Number combination could not be found on packing list.~r                               Please try again." )
					End If
				End If
			Else
				MessageBox("Validation Error","SKU has already been filled.  Please try again." )
			End If
		Else
			MessageBox("Validation Error","SKU not found.  Please try again." )
		End If
	End If
End If

ib_changed = True		// Save scan

This.Text = ""
This.SetFocus( )

end event

type rb_2dbarcode from radiobutton within tabpage_serial
boolean visible = false
integer x = 50
integer y = 204
integer width = 631
integer height = 76
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "2d Barcode Scanning"
end type

event clicked;message.StringParm = "2DBARCODE" 
Parent.TriggerEvent("ue_mode_switch")
end event

type cb_copy_serial from commandbutton within tabpage_serial
integer x = 2405
integer y = 140
integer width = 343
integer height = 92
integer taborder = 30
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Copy Row"
end type

event clicked;
If rb_manual.Checked Then
	idw_serial.SetFocus()
	idw_serial.TriggerEvent("ue_Copy_Serial")
End IF


end event

type sle_total_alloc_qty from singlelineedit within tabpage_serial
integer x = 3543
integer y = 236
integer width = 265
integer height = 96
integer taborder = 60
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
boolean displayonly = true
borderstyle borderstyle = stylelowered!
end type

type sle_total_req_qty from singlelineedit within tabpage_serial
integer x = 3538
integer y = 76
integer width = 265
integer height = 108
integer taborder = 70
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
boolean displayonly = true
borderstyle borderstyle = stylelowered!
end type

type st_total_alloc_qty from statictext within tabpage_serial
integer x = 3511
integer y = 172
integer width = 366
integer height = 64
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Total Alloc Qty"
boolean focusrectangle = false
end type

type st_total_req_qty from statictext within tabpage_serial
integer x = 3506
integer y = 12
integer width = 338
integer height = 64
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Total Req Qty"
boolean focusrectangle = false
end type

type cbx_print_labels from checkbox within tabpage_serial
integer x = 3026
integer y = 252
integer width = 521
integer height = 76
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long backcolor = 67108864
string text = "Print Labels"
end type

type dw_carton_serial from datawindow within tabpage_serial
boolean visible = false
integer x = 3543
integer y = 1452
integer width = 306
integer height = 268
integer taborder = 70
boolean bringtotop = true
string title = "none"
string dataobject = "d_carton_serial_validate"
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

type scan_qty_t from statictext within tabpage_serial
integer x = 1993
integer y = 140
integer width = 229
integer height = 64
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Scan Qty"
boolean focusrectangle = false
end type

type sle_scan_qty from singlelineedit within tabpage_serial
integer x = 1989
integer y = 44
integer width = 229
integer height = 92
integer taborder = 20
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
borderstyle borderstyle = stylelowered!
end type

event modified;Decimal	ldLineQty, ldScanQty, ldcurrentScanQty
String	lsSKU, lsFind
Long	llFindRow

If Not isnumber(This.Text) Then
	This.Text = '1'
	Messagebox(is_title,'Scan Qty must be numeric.')
End If

// 03/14 - PCONKL - If a row passed in, update the qty on that row
If ilScanRow >0 Then
	
	//If doing a full count, Make sure we haven't scnned too many
	If g.ibCartonSerialvalidationRequired Then
			
			//Count current scanned qty of this SKU vs what is allocated before accepting scan. Dont allow to over scan
			//We may have trhe same SKU in multipple lines. Dont worry about allocating properly. We will allocate appropriately when we generate the Pack List from the Serial tab.
			ldLineQty = 0
			ldScanQty = 0
			
			lsSKU = dw_serial.GetITemString(ilScanRow,'SKU')
			
			//Total allocated at detail level
			lsFind = "Upper(Sku) = '" + Upper(lsSKU) + "'"
			llFindRow = idw_Detail.Find(lsFind,1,idw_Detail.RowCount())
			Do While llFindRow > 0
				ldLineQty += idw_Detail.GetITemNumber(llFindRow,'alloc_qty')
				llFindRow ++
				If llFindROw > idw_detail.RowCount() Then
					llFindROw = 0
				Else
					llFindRow = idw_Detail.Find(lsFind,llFindRow,idw_Detail.RowCount())
				End If
			Loop
			
			//Total Scanned Qty for this SKU
			llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
			Do While llFindRow > 0
				ldScanQty += dw_serial.GetITemNumber(llFindRow,'quantity')
				llFindRow ++
				If llFindROw > dw_serial.RowCount() Then
					llFindRow = 0
				Else
					llFindRow = dw_serial.Find(lsFind,llFindRow,dw_serial.RowCount())
				End If
			Loop
			
			//Existing Qty + current Scan Qty can not be greater than Allocated Qty
			ldCurrentScanQty = Long(sle_scan_qty.Text)
			If isnull(ldCurrentScanQty) or ldCurrentScanQty = 0 Then ldCurrentScanQty = 1
			
			If (ldScanQty + ldCurrentScanQty)  > ldLineQty Then
				doDisplayMessage('Serial Numbers',"All Serial Numbers for this SKU ('" + lsSKU + "') have been entered (including this scan). ScannedQty = " + String(ldScanQty + ldCurrentScanQty) + " Allocated Qty = " + String(ldLineQty) + "  If you need to update a serial number, switch to manual mode.")
				ibSKUScanned = False
				st_message.Text = "Scan a SKU/UPC/EAN."
				REturn
			End If
			
			If Long(This.Text) > 0 Then
				dw_serial.SetITem(ilScanRow,'quantity',dw_serial.GetItemNumber(ilScanRow,'quantity') + Long(This.Text))
			End If
			
	End If
	
	
	dw_serial.SetITem(ilScanRow,'carton_no',sle_carton_no.text)
	dw_serial.SetITem(ilScanRow,'serial_no',"N/A-" + sle_carton_no.text)
	ib_changed = True
						
	ibSKUScanned = False
	sle_barcodes.Text = ""
	This.Text = "1"
	st_message.Text = "Non Serialized SKU scanned. Scan the next SKU/UPC/EAN."
	
	ilScanRow = 0
	
End If

//if gs_project = 'PHYSIO-MAA' and  idw_Pack.RowCount() < 1 then  //hdc 01152013  Continue serial validation after quantity entered; if there's a packing list use the old functionality - CR03
//if gs_project = 'PHYSIO-MAA'  then  //hdc 01152013  Continue serial validation after quantity entered; if there's a packing list use the old functionality - CR03
	w_do.ib_QtyEntered = true
	ibScanQtyNeeded = False
	tab_main.tabpage_serial.sle_barcodes.TriggerEvent(Modified!)
//end if /*CR03 */
end event

type cb_new_carton from commandbutton within tabpage_serial
integer x = 2752
integer y = 140
integer width = 343
integer height = 92
integer taborder = 30
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&New Carton"
end type

event clicked;
Long	llCarton
//IF LEFT(sle_carton_no.text,len(sle_carton_no.text)-1) = 'T'

//If isnumber(right(sle_carton_no.text,len(sle_carton_no.text)-1) Then 
//IF LEFT(sle_carton_no.text,len(sle_carton_no.text)-1) = 'T' then 
If isnumber(sle_carton_no.text) then
	// 04/01 - PCONKL - we need allow for System Generated unique numbers if necessary
	If g.is_unique_pack_cartonNumbers = 'Y' Then
	//	IF	upper(gs_project) <> 'PANDORA' then 
		llCarton = Long(Right(sle_carton_no.text,3))
		llCarton ++
		sle_carton_no.text = String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + String(llCarton,'000')
//	else 
//		llCarton = Long(Right(sle_carton_no.text,3))
//		llCarton ++
//		sle_carton_no.text = "T"+String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + String(llCarton,'000')
//	end if 
	Else
		
		llCarton = Long(sle_carton_no.text)
		llCarton ++
		sle_carton_no.text = String(llCarton)
		
	End If
	
ElseIf sle_carton_No.Text = '' Then
	
//	sle_carton_no.Text = '1'

	// 04/01 - PCONKL - we need allow for System Generated unique numbers if necessary
	If g.is_unique_pack_cartonNumbers = 'Y' Then
		//IF	upper(gs_project) <> 'PANDORA' then
		sle_carton_no.Text  = String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + '001'
//	else 
//		sle_carton_no.Text  = "T"+String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + '001'
//	end if 
	Else /*just sequential within order */
		
		sle_carton_no.Text = '1'
		
	End If
	
End If

//sle_carton_no.triggerEvent('Modified')
//GailM - 11/01/2017 - SIMSPEVS-825 Riverbed 2D Matrix barcode for Serial Numbers
If rb_2dbarcode.checked = true Then
	mle_2dbarcode.SetFocus() 
Else
	sle_barcodes.Enabled = Enabled /*once a carton number scanned, allow other barcodes to be entered*/
	sle_barcodes.SetFocus()
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
End If

isCurrentPackCartonId = sle_carton_no.Text


//// 09/03 - PCONKL - If generating Carton Numbers, get the next available on an Insert
//	If g.is_unique_pack_cartonNumbers = 'Y' Then
//		
//		If idw_pack.rowCount() > 1 Then
//			If isnumber(idw_pack.getITemString((idw_pack.rowCount() - 1),'carton_no')) Then
//				llCarton = Long(Right(idw_pack.getITemString((idw_pack.rowCount() - 1),'carton_no'),3))
//			Else
//				// pvh - 11/16/06
//				llCarton = getCartonNo()
//				//llCarton = idw_pack.RowCount()
//			End If
//		Else
//			llCarton = 1
//		End If
//		
//		lsNextCarton = String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + String(llCarton,'000')
//		//If found, keep bumping until no longer present
//		llFindRow = idw_pack.Find("carton_no = '" + lsNextCarton + "'",1,idw_pack.RowCount())
//		Do While llFindRow > 0
//			llCarton ++
//			lsNextCarton = String(Long(Right(Mid(idw_main.GetITemString(1,'do_no'),(len(gs_project) + 1),7),6)),'000000') + String(llCarton,'000')
//			llFindRow = idw_pack.Find("carton_no = '" + lsNextCarton + "'",1,idw_pack.RowCount())
//		Loop
//		
//	Else /*Next sequential carton*/
//	   	// pvh - 11/16/06
//		lsNextcarton = String( getCartonNo() )		
//		//lsNextcarton = String(ilCartonNo)
//
//	End IF
end event

type cb_ob_serial_delete from commandbutton within tabpage_serial
integer x = 3141
integer y = 140
integer width = 247
integer height = 92
integer taborder = 80
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Delete"
end type

event clicked;

dw_serial.TriggerEvent('ue_Delete')

If rb_barcode.Checked Then
	sle_barcodes.SetFocus()
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
End IF

//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab (SIMSPEVS-898)
If Upper(gs_project) = 'PANDORA' Then
	ibSerialCartonNoChanged = TRUE
End If
end event

type cb_ob_serial_insert from commandbutton within tabpage_serial
integer x = 3141
integer y = 44
integer width = 247
integer height = 92
integer taborder = 100
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Insert"
end type

event clicked;
dw_serial.TriggerEvent('ue_insert')

If rb_barcode.Checked Then
	sle_barcodes.SetFocus()
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
End IF
end event

type sle_carton_no from singlelineedit within tabpage_serial
integer x = 923
integer y = 140
integer width = 905
integer height = 80
integer taborder = 40
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
borderstyle borderstyle = stylelowered!
end type

event modified;String	lsFind

// 11/09 - PCONKL - We are allowing the Serial Numbers to be entered first now. Only validate of PAcking Already Exists
If idw_pack.RowCount() > 0 Then
	
	lsFind = "Carton_no = '" + this.Text + "'"
	
	If idw_Pack.Find(lsFind,1,idw_pack.RowCount()) <= 0 Then
		Messagebox(is_Title,"Carton Number not found on Packing List!")
		This.SelectText(1,Len(this.Text))
	End If
	
Else
	
	sle_barcodes.Enabled = Enabled /*once a carton number scanned, allow other barcodes to be entered*/
	sle_barcodes.SetFocus()
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
	isCurrentPackCartonId = This.Text
	
	st_message.Text = "PACKING CARTON NUMBER Scanned. Please scan a SKU or Serial Number."
	
End If


end event

type st_carton_no_t from statictext within tabpage_serial
integer x = 562
integer y = 140
integer width = 375
integer height = 76
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Carton Nbr:"
boolean focusrectangle = false
end type

type rb_manual from radiobutton within tabpage_serial
integer x = 50
integer y = 60
integer width = 457
integer height = 76
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "&Manual Entry"
end type

event clicked;

//07/19 - Pconkl - Short term disable manual mode for Pandora if any SKUs are Footprint until we can add validations to manual entry

String lsDONO
Long	llCount

lsDoNo = idw_main.GetItemString(1,'do_no')

If upper(gs_project) = 'PANDORA' Then
	
	Select Count(*) into :llCount
	From Item_Master
	Where Project_id = 'PANDORA' and foot_prints_ind = 'Y' and sku in (select sku from delivery_picking where do_no = :lsDONO)
	Using SQLCA;
	
	If llCount > 0 Then
		
		rb_barcode.checked = true
		Messagebox(is_title,'Manual mode disabled for FootPrints Orders',StopSign!)
		message.StringParm = 'barcode'
		Parent.TriggerEvent("ue_mode_switch")
		return
		
	End If

End If /*Pandora*/

message.StringParm = 'Manual'
Parent.TriggerEvent("ue_mode_switch")
end event

type rb_barcode from radiobutton within tabpage_serial
integer x = 50
integer y = 124
integer width = 393
integer height = 76
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "&Auto Entry"
end type

event clicked;message.StringParm = 'barcode'
Parent.TriggerEvent("ue_mode_switch")
end event

type gb_1 from groupbox within tabpage_serial
integer width = 503
integer height = 208
integer taborder = 90
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
end type

type sle_barcodes from singlelineedit within tabpage_serial
event ue_keydown pbm_keydown
event ue_mouseclick pbm_rbuttondown
integer x = 539
integer y = 44
integer width = 1289
integer height = 92
integer taborder = 10
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
textcase textcase = upper!
borderstyle borderstyle = stylelowered!
end type

event ue_keydown;//17-Aug-2015 :Madhu- Added code to prevent Manul Scanning
If gbPressKeySNScan ='Y'  THEN
	CHOOSE CASE gs_role
		CASE '1','2'
			IF Upper(gs_project)='PANDORA' and ibPressF10Unlock =FALSE THEN
				If ibkeytype =FALSE THEN
					timer(0.5)
					ibkeytype=TRUE
				END IF
		
				//Get Key Pressed
				IF (KeyDown(KeyShift!) and KeyDown(KeyInsert!)) or (KeyDown(KeyControl!))THEN
					MessageBox("Manual Entry", "Control, Shift Key's are disabled!")
					sle_barcodes.text=''
					ibkeytype =FALSE
				END IF
			
				CHOOSE CASE key
					CASE KeyEnter!,KeyUpArrow!,KeyDownArrow!,KeyLeftArrow!,KeyRightArrow!
						timer(0)
						ibkeytype=FALSE
				END CHOOSE
			END IF
	END CHOOSE
END IF
end event

event ue_mouseclick;//17-Aug-2015 :Madhu- Added code to prevent Manual Scanning
If gbPressKeySNScan ='Y' THEN
	CHOOSE CASE gs_role
		CASE '1','2'
			IF Upper(gs_project)='PANDORA'  and ibPressF10Unlock =FALSE THEN
				ibmouseclick =FALSE
				MessageBox("MouseClick","Right Mouse Click (RMC) Option is disabled")
			ELSE 
				ibmouseclick =TRUE
			END IF
	END CHOOSE
END IF
return 0
end event

event modified;string lsSerial = '', lsOrigVal, lsCartonNo,lsFindserial
string lsfullserialno, lsMessage
int liRtn
string lsFind, lsSerialType, lsSelectedSku
long llFindRow, llSelectedRow, llPickRow, llLineItemNo,ll_LineItemNo,ll_LineItemNo_temp,ll_LineItemNo_prev,ll_LineItemNo_next
boolean lbMixedFootprint

timer(0) //22-Sep-2015 :Madhu Added for PressKeyVs SNScan

// 04/01 - PCONKL - Allow a 'New Carton' barcode to be scanned instead of clicking the button
If This.Text = 'NEWCARTON' Then
	cb_new_Carton.TriggerEvent('clicked')
	This.SetFocus()
	This.SelectText(1,len(sle_barcodes.Text))
	Return 0
ElseIf This.Text = '' Then
	Return 0
End If

// ET3 - 2012-07-05 Pandora 447 - cleanup SN's by removing leading/trailing '.' and '-'
IF upper(gs_project) = 'PANDORA' THEN
	lsSerial = TRIM(this.text)
	If len(lsSerial) > 1 Then
		// strip extraneous Trailing chars
		DO WHILE MATCH( lsSerial, "[-\.]$" )
			lsSerial = MID(lsSerial, 1, len(lsSerial) - 1 )
		LOOP
		
		// strip extraneous Leading chars
		DO WHILE MATCH( lsSerial, "^[-\.]")
			lsSerial = MID(lsSerial, 2, len(lsSerial) - 1 )
		LOOP
		
		//idw_putaway.setitem( row, dwo.name, data )
		this.text = lsSerial
	
	End If
END IF

// TAM - 2018/02 - S14838 - Can't Scan if No Serial Number Rows
if dw_serial.rowcount() < 1 then
	doDisplayMessage("Scan error","You must generate the Serial numbers before you scan a value.~r~nPlease 'GENERATE' first. ")
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
	Return			
end if

//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab (SIMSPEVS-898)
IF upper(gs_project) = 'PANDORA' and g.is_unique_pack_cartonnumbers  = 'Y' THEN
	
	llSelectedRow = dw_serial.GetRow( )
	
	lsFind = "po_no2 = '" + lsSerial + "' "
	llFindRow = idw_pick.Find( lsFind, 1, idw_pick.rowcount( ) )
	If llFindRow > 0 Then
		lsSerialType = "Pallet"
		ilPickLineItemNo = idw_pick.GetItemNumber(llFindRow, "line_item_no")
	Else
		lsFind = "container_id = '" + lsSerial + "' "
		llFindRow = idw_pick.Find( lsFind, 1, idw_pick.rowcount( ) )
		If llFindRow > 0 Then
			lsSerialType = "Container"
			ilPickLineItemNo = idw_pick.GetItemNumber(llFindRow, "line_item_no")
		Else
			lsSerialType = "Serial"
			ilPickLineItemNo = dw_serial.GetItemNumber( llSelectedRow, 'line_item_no' )
			llLineItemNo = ilPickLineItemNo
		End If
	End If
	 
	lsSelectedSku = dw_serial.GetItemString( llSelectedRow, 'sku' )
	//liRtn = w_do.idw_serial.SelectRow(llSelectedRow, true)

	isCurrentSku = lsSelectedSku
	isSupplier = idw_pick.getitemstring(1,'supp_code')
	
	If lsSerialType = 'Serial' Then	//TAM 2018/02 - S14838 - TODO -Footprint validation GWM added for DE3189
		lbMixedFootprint = f_contains_mixed_footprint_nonfootprint(idw_pick)
		If llSelectedRow = 1 and lbMixedFootprint Then
			lsMessage =  "Pick list contains a mixture of footprint and non-footprint GPNs.~r~n" +&
							  "Please select GPN row when scanning Pallet/Container/Serial numbers. ~r~n~r~nContinue?"
			If MessageBox( "Serial Number Entry Warning", lsMessage, Question!, YesNo!) = 2 Then
				Return 0
			End If
		End If
		
	// message to generate if SN blank	
		lsCartonNo = TRIM(sle_carton_no.text)
		If lsCartonNO = "" Then
			if isNumber( lsCartonNo ) and Len( lsCartonNo ) = 9 Then
				If wf_validate_pack_carton( lsSerial ) >= 0 Then
					sle_carton_no.text = lsSerial
					sle_barcodes.Text = ""
					messagebox( is_Title, "Carton Number has been set.  Begin scanning serial numbers." )
					return 0
				End If
			Else
				sle_barcodes.Text = ""
				messagebox( is_Title, "Add a new unique carton to begin scanning serial number." )
				return 0
			End If
		End If
	End If
	
	
END IF

// TAM - 2014/10/27 Bosch only has max 18 digit serial numbers.  Trim leading charaters
IF upper(gs_project) = 'BOSCH' THEN
	//lsSerial = Right(this.text,18) // Dinesh - 02/28/2025 - SIMS-642-Development for IFB-SIMS-Bosch Serial field updates to accept 20 characters
	lsSerial = Right(this.text,20) // Dinesh - 02/28/2025 - SIMS-642-Development for IFB-SIMS-Bosch Serial field updates to accept 20 characters
	this.text = lsSerial
END IF

// TAM - 2015/02/04 Honda may only have a partial barcode.  See if the partial exists and return the full serial number
IF upper(gs_project) = 'HONDA-TH' THEN
	lsSerial = '%' + this.text + '%'
	Select Serial_no 
	into :lsfullserialno
	From Serial_Number_Inventory with (nolock)  LEFT OUTER JOIN Inventory_Type with (nolock) ON Serial_Number_Inventory.Project_Id = Inventory_Type.Project_Id AND Serial_Number_Inventory.Inventory_Type = Inventory_Type.Inv_Type
	where Serial_Number_Inventory.Project_ID = :gs_project
	and SKU = :isCurrentSKU
	and Serial_no like :lsSerial ;

	If Not isNull(lsfullserialno) and lsfullserialno <> '' Then
		this.text = lsfullserialno
	End If
END IF

Parent.TriggerEvent("ue_process_barcodes")

//If rb_barcode.Checked  and (gs_project <> 'PHYSIO-MAA' or idw_Pack.RowCOunt()>1)  Then  //hdc 01152013 impossible to set focus to scan qty field if this runs; if there's a packing list it's the old functionality - CR03
If Not ibScanQtyNeeded Then
	This.SetFocus()
	This.SelectText(1,len(sle_barcodes.Text))
Else
	This.SetFocus()
	This.Text = ''
End IF

return 0

end event

event getfocus;If rb_barcode.Checked Then
	This.SelectText(1,len(sle_barcodes.Text))
End IF
end event

type cb_undo from commandbutton within tabpage_serial
integer x = 2459
integer y = 44
integer width = 247
integer height = 92
integer taborder = 60
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Undo"
end type

event clicked;String	lsNUll

SetNull(lsNull)


If ilUndoRow > 0 Then
	dw_serial.SetItem(ilUndoRow,'serial_no',lsNUll)
	dw_serial.SetItem(ilUndoRow,'carton_no',lsNUll)
	ibSkuScanned = True
Elseif ilUndoRow = 0 Then /* undo carton number scan*/
	sle_carton_no.Text = ''
End If

sle_barcodes.SetFocus()

sle_barcodes.SelectText(1,len(sle_barcodes.Text))

This.Enabled = False
end event

type dw_serial from u_dw_ancestor within tabpage_serial
event ue_load_item_values ( long alserialrow,  long alpickrow )
event ue_retrieve_containers ( )
event ue_keydown pbm_dwnkey
event ue_mouseclick pbm_rbuttondown
event type integer ue_copy_serial ( )
integer y = 364
integer width = 3813
integer height = 1420
integer taborder = 50
boolean bringtotop = true
string dataobject = "d_do_outbound_serial"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean hsplitscroll = true
end type

event ue_load_item_values(long alserialrow, long alpickrow);
String		lsSku,lsDoNo,lsSupplier, lsDesc,	lsSkuParent, lsCompInd
Long			llID, llMaxSeq,llCompNo, llLineItemNo
String      ls_uf4


lsDoNo = idw_pick.GetITemString(alPickRow,"do_no")
lsSku = idw_pick.GetITemString(alPickRow,"sku")
lsSkuParent = idw_pick.GetITemString(alPickRow,"sku_Parent")
lsCompInd = idw_pick.GetITemString(alPickRow,"Component_Ind")
lsSupplier = idw_pick.GetITemString(alPickRow,"supp_code")
llCompNo = idw_pick.GetITemNumber(alPickRow,"Component_no")
llLineItemNo = idw_pick.GetITemNumber(alPickRow,"line_item_no") /* 10/03 - PCONKL*/

//Get the Item Description
Select Description,user_field4 Into :lsDesc,:ls_uf4
From Item_Master
Where project_id = :gs_project and sku = :lsSku and supp_code = :lsSUpplier;


//Get the ID from Picking Detail
Select Min(id_no) into :llID
from Delivery_Picking_Detail
Where do_no = :lsdoNo and sku = :lsSKU and supp_code = :lsSupplier and Line_Item_no = :llLineItemNo;
	
dw_serial.SetItem(alSerialRow,'id_no',llID)
dw_serial.SetITem(alSerialRow,'sku',lsSKU)
dw_serial.SetITem(alSerialRow,'supp_code',lsSUpplier)
dw_serial.SetITem(alSerialRow,'sku_parent',lsSKUPArent)
dw_serial.SetITem(alSerialRow,'component_ind',lsCompInd)
dw_serial.SetITem(alSerialRow,'component_no',llCompNo)
dw_serial.SetITem(alSerialRow,'description',lsDesc)
dw_serial.SetITem(alSerialRow,'item_master_user_field4',ls_uf4)
dw_serial.SetITem(alSerialRow,'sku_substitute',lsSKU) //TAM 2010/04
dw_serial.SetITem(alSerialRow,'supplier_substitute',lsSUpplier)  //TAM 2010/04

If gs_project <> 'LMC' Then /* 01/09 - PCONKL - LMC will be scanning the qty, don't default here */
	dw_serial.SetITem(alSerialRow,'quantity',1)
End If

llMaxSeq ++
If llMaxSeq = 0 Then llMaxSeq = 1
			
//Non components should sort at the end
If dw_serial.GetItemString(alSerialRow,'component_ind') = 'Y' Or dw_serial.GetItemString(alSerialRow,'component_ind') = '*' Or dw_serial.GetItemString(alSerialRow,'component_ind') = 'B' Then
	dw_serial.SetITem(alSerialRow,'component_sequence_no',llmaxSeq)
Else
	dw_serial.SetITem(alSerialRow,'component_sequence_no',999)
End If
		

dw_serial.SetColumn('carton_no')







end event

event ue_retrieve_containers();String		lsSku,lsDoNo,lsSupplier,lsCOO, lsLoc,lsInvType,lsLot, lsPO,lsPO2,lsSerialized,lsDash, &
				lsDesc, lsFind, lsContainer, lsGrp,lsBOM_UF3,  ls_child_sku, ls_parent_sku, ls_shippable_flag//TAM 12/05/2011 Added from Riverbed
Long			llOwner, llPickCOunt, llPickPos, llCount,llID, llNewRow,i, llMaxSeq,llFindRow, llCompNo, llLineItemNo
Decimal		ldMod, ldPickQty, ldParentQty,ldUnitQty, ldUPC, ldQty
String      ls_uf4, lsNativeDescription
DateTime		ldtExpDt

lsDoNo = idw_pick.GetITemString(ilretrieverow,"do_no")
lsSku = idw_pick.GetITemString(ilretrieverow,"sku")
lsSerialized = idw_pick.GetITemString(ilretrieverow,"serialized_ind")
lsSupplier = idw_pick.GetITemString(ilretrieverow,"supp_code")
llOwner = idw_pick.GetITemNumber(ilretrieverow,"owner_id")
ldQty = idw_pick.GetITemNumber(ilretrieverow,"Quantity")
llCompNo = idw_pick.GetITemNumber(ilretrieverow,"Component_no")
llLineItemNo = idw_pick.GetITemNumber(ilretrieverow,"line_item_no") /* 10/03 - PCONKL*/
lsCOO = idw_pick.GetITemString(ilretrieverow,"Country_of_origin")
lsloc = idw_pick.GetITemString(ilretrieverow,"l_code")
lsInvType = idw_pick.GetITemString(ilretrieverow,"inventory_type")
lsLot = idw_pick.GetITemString(ilretrieverow,"lot_no")
lsPO = idw_pick.GetITemString(ilretrieverow,"po_no")
lsPO2 = idw_pick.GetITemString(ilretrieverow,"po_no2")
lsContainer = idw_pick.GetITemString(ilretrieverow,"Container_ID") /* 12/04 - PCONKL*/
ldtExpDT = idw_pick.GetITemDateTime(ilretrieverow,"Expiration_date")  /* 12/04 - PCONKL*/

If not isvalid(ids_pick_detail) Then
	ids_pick_detail = Create DataStore
	ids_pick_detail.dataobject = 'd_do_serial_no_hidden'
	ids_pick_detail.SetTransObject(SQLCA)
End If

//Get the Item Description
Select Description,user_field4, part_upc_Code, grp, Native_Description Into :lsDesc,:ls_uf4, :ldUPC, :lsGrp, :lsNativeDescription
From Item_Master
Where project_id = :gs_project and sku = :lsSku and supp_code = :lsSUpplier;

llPickCount = ids_pick_detail.Retrieve(lsdono,lssku,lssupplier,llOwner,lscoo,lsloc,lsInvTYpe,lsLot,lsPO,lsPO2,llCompNo,llLineItemNo, lsContainer, ldtExpDt)

llID = ids_pick_detail.GetItemNumber(llPickCount,'id_no')

	
	If dw_serial.Find("Line_Item_No = " + string(llLineItemNo) + " and Upper(SKU) = '" + upper(lsSKU) + "'",1,dw_serial.RowCount()) > 0 Then
		Return
	End If

//TAM 2014/09/19 - HONDA-TH - The are using the container to validate PONO
	If UPPER(gs_project) = 'PANDORA'  or  UPPER(gs_project) = 'HONDA-TH' Then			
//	If UPPER(gs_project) = 'PANDORA' Then			//Only pandora are scanning containerIDs  #883
	
			llNewRow = dw_serial.InsertRow(0)
			dw_serial.SetItem(llNewRow,'id_no',llID)
			dw_serial.SetITem(llNewRow,'sku',lsSku)
			dw_serial.SetITem(llNewRow,'supp_code',lsSupplier)
			dw_serial.SetITem(llNewRow,'sku_parent',ids_pick_detail.GetItemString(llPickCount,'sku_parent'))
			dw_serial.SetITem(llNewRow,'component_ind',ids_pick_detail.GetItemString(llPickCount,'component_ind'))
			dw_serial.SetITem(llNewRow,'component_no',ids_pick_detail.GetItemNumber(llPickCount,'component_no'))
			dw_serial.SetITem(llNewRow,'line_Item_No',ids_pick_detail.GetItemNumber(llPickCount,'line_Item_No'))
			dw_serial.SetITem(llNewRow,'shippable_flag','N')
			dw_serial.SetITem(llNewRow,'sku_substitute',ids_pick_detail.GetItemString(llPickCount,'sku'))
			//dw_serial.SetITem(llNewRow,'serial_no',lsContainer)
			dw_serial.SetITem(llNewRow,'quantity',ldQty)
			dw_serial.SetITem(llNewRow,'description',lsDesc)
			dw_serial.SetITem(llNewRow,'native_description',lsNativeDescription)
			dw_serial.SetITem(llNewRow,'part_upc_code',ldUPC)
			dw_serial.SetITem(llNewRow,'item_master_user_field4',ls_uf4)
		
	End If
	
end event

event ue_keydown;//17-Aug-2015 :Madhu- Added code to prevent Manul Scanning
If gbPressKeySNScan ='Y' THEN
	CHOOSE CASE gs_role
		CASE '1','2'
			IF Upper(gs_project)='PANDORA' and this.getcolumnname( )='serial_no' and  ibPressF10Unlock =FALSE  THEN
				If ibkeytype =FALSE THEN
					timer(0.5)
					ibkeytype=TRUE
				END IF
				
				//Get Key Pressed
				IF (KeyDown(KeyShift!) and KeyDown(KeyInsert!)) or (KeyDown(KeyControl!))THEN
					MessageBox("Manual Entry", "Control, Shift Key's are disabled!")
					this.setitem( idw_serial.getrow( ),'serial_no','')
					ibkeytype =FALSE
				END IF
			
				CHOOSE CASE key
						CASE KeyEnter! //which calls process_enter again fall back to this event..so, don't call timer.
							timer(0)
							ibkeytype=TRUE
						CASE KeyUpArrow!,KeyDownArrow!,KeyLeftArrow!,KeyRightArrow!,KeyTab!
							timer(0)
							ibkeytype=FALSE
					END CHOOSE
			END IF
	END CHOOSE
END IF
end event

event ue_mouseclick;//17-Aug-2015 :Madhu- Added code to prevent Manual Scanning
If gbPressKeySNScan ='Y' THEN
	CHOOSE CASE gs_role
		CASE '1','2'
			IF Upper(gs_project)='PANDORA' and this.getcolumnname( )='serial_no'  and ibPressF10Unlock =FALSE THEN
				ibmouseclick =FALSE
				MessageBox("MouseClick","Right Mouse Click (RMC) Option is disabled")
			ELSE 
				ibmouseclick =TRUE
			END IF
	END CHOOSE
END IF
return 0
end event

event type integer ue_copy_serial();//TAM 12-DEC-2015:  SerialList Copy

Long  llRow, llNewRow, llFindRow, llRowCount, i
String	lsCarton, lsFind, lsScrollFind, lsSku, lsSupplier, lsNextContainer, lsGroup, lsFirstCartonRow
Boolean	lbNewCarton
boolean lbUsingTrax
Integer	liMsg, liMsg2=3
Long llWtDim, llLineItemNo, llArrayRow
Long llTestRow, llrowno
String lsCopiedSku
Str_Parms	lStrParms
str_multiparms	lStrMultiParms
u_nvo_search_array lnvoSearchArray
lnvoSearchArray = Create u_nvo_search_array
string lsserialnull
SetNull(lsserialnull)



llWtDim = 0
lbNewCarton = False

idw_serial.SetFocus()

If idw_serial.AcceptText() = -1 Then Return -1


llRow = idw_serial.GetRow() 

llRowCount = idw_serial.rowcount( )
i=0
If llRow > 0 Then
	
	//Allow user to select the number of rows to add and set QTY
	lstrparms.Decimal_arg[1 ] = idw_serial.GetITemNumber(llRow,'quantity') /*Qty from original row, will be default for new rows*/
	OpenWithParm(w_do_copy_packlist,lStrParms)
	lstrparms = message.PowerObjectParm
	
	If lstrparms.Cancelled Then Return 1 /*Don't copy row if cancelled from prompt*/
	
	This.SetReDraw(False)
	
	//Change Qty of original row to new value from dialogue window...
	idw_serial.SetItem(llRow,'quantity',lstrparms.decimal_arg [1 ] )

	//Loop for each row to Create We're creating one less row than rowcount since we already have the first row)
	For i = 1 to (lstrparms.Long_arg[1 ] - 1)
	
		idw_serial.RowsCopy(llRow,llRow,Primary!,idw_serial,999999999,Primary!)
		
		//Change Qty to new value after RowsCopy
		idw_serial.SetItem(idw_serial.RowCount ( ),'quantity',lstrparms.decimal_arg[1])
		//Blank Serial #  after RowsCopy
//		idw_serial.SetItem(idw_serial.RowCount ( ),'serial_no','')
		idw_serial.SetItem(idw_serial.RowCount ( ),'serial_no',lsserialnull )

		
		ib_changed = True
		
		//We will want to scroll to the new row
		lsScrollFind =  "Upper(carton_No) = '" + Upper(idw_serial.GetITemString(idw_serial.RowCount(),'Carton_No')) + & 
						"' and sku = '" + String(idw_serial.GetITemString(idw_serial.RowCount(),'sku')) + & 
						" ' and serial_no = '"  + & 
						"' and Line_Item_No = " + String(idw_serial.GetITemNumber(idw_serial.RowCount(),'Line_Item_No')) 
		
		idw_serial.Sort()

		//Find the row we just created and scroll to it
		llFindRow = idw_serial.Find(lsScrollFind,1,idw_serial.rowCount())
		If llFindRow > 0 Then
			idw_serial.SetRow(llFindRow)
			idw_serial.ScrollToRow(llFindRow)
			idw_serial.SetColumn('serial_no')
		End If
		
	NEXT
	idw_serial.SetRedraw(True)

Else
	Messagebox(is_title,"Nothing to copy!")
End If	
return 1
end event

event constructor;call super::constructor;
//If gs_project <> '3COM_NASH' and gs_project <> 'POWERWAVE' and gs_project <> 'NETAPP' Then
If Not g.ibCartonSerialvalidationRequired Then /* 10/07 - PCONKL - using project indicator instead of hardcoding*/
	This.Modify("carton_no.visible=0")
End If

// 02/09 - PCONKL - LMC is using MAC ID to store Lot, make visible and change title
If gs_project <> 'LINKSYS' and gs_project <> 'LMC' and gs_project<> 'RIVERBED' Then  // 2011/10/13 TAM added riverbed
	This.Modify("mac_id.visible=0")
End If

If gs_project <> 'PUMA' and gs_project <> 'WARNER' Then
	This.Modify("part_upc_Code.visible=0")
End If


If gs_project = 'LMC' Then
	This.Modify("mac_id_t.text = 'Lot Nbr'")
End If

 // 2011/10/13 TAM added riverbed
If gs_project = 'RIVERBED' Then
	This.Modify("mac_id_t.text = 'Hardware Serial'")
	This.Modify("serial_no_t.text = 'Software Serial'")
 // 2011/12/03 TAM added sku substitue
	This.Modify("sku_substitute_t.text = 'Parent Serial'")
//	This.Modify("sku_substitute.protect = 0")
//	This.SetTabOrder("sku_substitute",70)
End If

If gs_project <> 'PANDORA' and gs_project <> 'RIVERBED' Then
	This.Modify("sku_substitute.visible=0")
End If

//01/09 - PCONKL - Showing Qty for LMC and COMCAST
//For LMC,This is the Qty being scanned from the label. It may be more than 1 if they are scanning a carton or pallet, etc.
//For Comcast, they are scanning a carton or pallet and we want to display the Qty in that unit
// 11/09 - PCONKL- Show Qty for projects where we are scanning all items (pack validation)
// TAM - 2015/06 - Anki show the quantity.  They May be scanning a pallet or carton and they get the Quantity from the Item Master
//If gs_project = 'LMC' or gs_project = 'COMCAST' or g.ibScanAllOrdersRequired Then
If gs_project = 'LMC' or gs_project = 'COMCAST' or gs_project = 'ANKI' or g.ibScanAllOrdersRequired Then
Else
	This.Modify("quantity.visible=0")
End If

If  gs_project = 'ANKI' Then
	This.Modify("carton_no.visible=1")
End If

//10/08 - For Comcast, we are actually scanning Pallet or Carton ID's, reflect in header
If gs_Project = 'COMCAST' Then
	This.Modify("serial_no_t.text = 'Pallet/Carton ID'")
End If

//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -START
If gs_project <> 'KLONELAB' Then
	This.Modify("expected_qty.visible=0")
	
	tab_main.tabpage_serial.st_total_req_qty.visible=FALSE
	tab_main.tabpage_serial.sle_total_req_qty.visible=FALSE
	tab_main.tabpage_serial.st_total_alloc_qty.visible=FALSE
	tab_main.tabpage_serial.sle_total_alloc_qty.visible=FALSE
END IF

IF gs_project ='KLONELAB' Then
	This.Modify("quantity_t.text ='Alloc Qty'")
	this.object.quantity_t.x="2550"
	this.object.quantity_t.y="8"
	this.object.quantity_t.width ="460"
	this.object.quantity_t.height="66"

	this.object.quantity.x="2550"
	this.object.quantity.y="12"
	this.object.quantity.width="460"
END IF
//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -END

This.SetRowFocusIndicator(Hand!)
end event

event retrievestart;
//Multiple retrieves to fill DW
Return 2
end event

event process_enter;
Send(Handle(This),256,9,Long(0,0))
Return 1
end event

event ue_retrieve;// 11/02 - PConkl - QTY fields changed to Decimal

String		lsSku,lsDoNo,lsSupplier,lsCOO, lsLoc,lsInvType,lsLot, lsPO,lsPO2,lsSerialized,lsDash, &
				lsDesc, lsFind, lsContainer, lsGrp,lsBOM_UF3,  ls_child_sku, ls_parent_sku, ls_shippable_flag//TAM 12/05/2011 Added from Riverbed
Long			llOwner, llPickCOunt, llPickPos, llCount,llID, llNewRow,i, llMaxSeq,llFindRow, llCompNo, llLineItemNo
Decimal		ldMod, ldPickQty, ldParentQty,ldUnitQty, ldUPC, ldQty
String      ls_uf4, lsNativeDescription
DateTime		ldtExpDt
String ls_PONO2ControlledInd, ls_ContainerTrackingInd
String lsPackSku //TAM 08/2015

//Picking detail records are being retrievd into datastore
//For each picking detail, we are retrieving the picking serial #'s. THis will allow us to create
// blank rows as needed so we have rows of 1 qty to fill all qty for picking detail row

// 03/04 - PCONKL - ALL Serial #'s are being retrieved at once - no need to loop through each pick detail record.
//							All we need to do is add empty rows as needed when the user clicks 'generate'

If not isvalid(ids_pick_detail) Then
	ids_pick_detail = Create DataStore
	ids_pick_detail.dataobject = 'd_do_serial_no_hidden'
	ids_pick_detail.SetTransObject(SQLCA)
End If

// will loop through each Pick record  and here we will return all pick details for that pick record.
lsDoNo = idw_pick.GetITemString(ilretrieverow,"do_no")
lsSku = idw_pick.GetITemString(ilretrieverow,"sku")
lsSerialized = idw_pick.GetITemString(ilretrieverow,"serialized_ind")
lsSupplier = idw_pick.GetITemString(ilretrieverow,"supp_code")
llOwner = idw_pick.GetITemNumber(ilretrieverow,"owner_id")
ldQty = idw_pick.GetITemNumber(ilretrieverow,"Quantity")
llCompNo = idw_pick.GetITemNumber(ilretrieverow,"Component_no")
llLineItemNo = idw_pick.GetITemNumber(ilretrieverow,"line_item_no") /* 10/03 - PCONKL*/
lsCOO = idw_pick.GetITemString(ilretrieverow,"Country_of_origin")
lsloc = idw_pick.GetITemString(ilretrieverow,"l_code")
lsInvType = idw_pick.GetITemString(ilretrieverow,"inventory_type")
lsLot = idw_pick.GetITemString(ilretrieverow,"lot_no")
lsPO = idw_pick.GetITemString(ilretrieverow,"po_no")
lsPO2 = idw_pick.GetITemString(ilretrieverow,"po_no2")
lsContainer = idw_pick.GetITemString(ilretrieverow,"Container_ID") /* 12/04 - PCONKL*/
ldtExpDT = idw_pick.GetITemDateTime(ilretrieverow,"Expiration_date")  /* 12/04 - PCONKL*/


//02/10 - PCONKL - If we are scanning all items, we only need one row per line/SKU - WE mya have multiple pick records for same line/sku - dont need multiples here
If g.ibScanAllOrdersRequired and lsSerialized = 'N' Then
	If dw_serial.Find("Line_Item_No = " + string(llLineItemNo) + " and Upper(SKU) = '" + upper(lsSKU) + "'",1,dw_serial.RowCount()) > 0 Then
		Return
	End If
End If

//llPickQty = idw_pick.GetITemNumber(ilretrieverow,"quantity")

//Get the Item Description
Select Description,user_field4, part_upc_Code, grp, Native_Description, PO_NO2_Controlled_Ind, Container_Tracking_Ind Into :lsDesc,:ls_uf4, :ldUPC, :lsGrp, :lsNativeDescription, :ls_PONO2ControlledInd, :ls_ContainerTrackingInd
From Item_Master
Where project_id = :gs_project and sku = :lsSku and supp_code = :lsSUpplier;

llPickCount = ids_pick_detail.Retrieve(lsdono,lssku,lssupplier,llOwner,lscoo,lsloc,lsInvTYpe,lsLot,lsPO,lsPO2,llCompNo,llLineItemNo, lsContainer, ldtExpDt) /* 12/04 - PCONKL - added Container ID and Expiration DT */

// 07/13 - PCONKL - If Serial Tracked Inbound, we only want to create a single record
// 2015/01/28 If Serial Tracking 'B"oth then set as well
If lsSerialized = 'Y' Then
//If lsSerialized = 'Y' or  lsSerialized = 'B' Then
	if llPickCOunt > 0 Then
		llPickCount = 1
	End If
End If

For llPickPos = 1 to llPickCount
	
	llID = ids_pick_detail.GetItemNumber(llPickPos,'id_no')
	
	// 10/08 - PCONKL - For Comcast, we only need 1 serial row per picking row since they are only scanning 1 pallet/carton per picked row
	// 05/09 - PCONKL - For LMC, start with 1 row per Pick List. We will add as necessary but we are ending up with thousands of extra rows to delete
	// 11/09 - If we are scanning all orders (Pack Val), we just want one row per SKU ifit is not a serialized part
	//If gs_project = 'COMCAST' or gs_project = 'LMC' or (g.ibScanAllOrdersRequired and (lsSerialized = 'N' or lsSerialized = 'Y'))  then
	If gs_project = 'COMCAST' or gs_project = 'LMC'  or gs_project = 'KARCHER' or (g.ibScanAllOrdersRequired and (lsSerialized = 'N' or lsSerialized = 'Y' ))  then
		ldPickQty = 1
	else
		ldPickQty = ids_pick_detail.GetItemNumber(llPickPos,'quantity')
	End If
	
	//dw_serial.Retrieve(llId,gs_project) /*retievestart=2*/
	
	//	//add blank rows where needed
	// 03/04 - PCONKL - We will only add blank rows if we are 'generating', not just retreiving existing records
		

// TAM 08/2015 - For Anki they are creating Serial Rows based on the Packlist with the Serail QTY = Packing Qty.  Instead of counting the serial rows, we need to sum the Serial QTY.
	//TAM - 11/12/2015 - Not for ANKI-EMU
	//If upper(gs_project) = 'ANKI' then
	If upper(gs_project) = 'ANKI' and Not Upper(  idw_main.GetItemString(1,'wh_code')) = 'ANKI-EMU'   then
		select Sum(quantity)  into :llCount 
		From Delivery_serial_detail
//		Group  By :llid
		Where id_no = :llID;
	Else
		select count(*)  into :llCount 
		From Delivery_serial_detail
		Where id_no = :llID;
	End if
		//Find THe Max for this sku
		llMaxSeq = 0
		
		//lsFind = "sku = '" + ids_pick_detail.GetItemString(llPickPos,'sku') + "' and supp_code = '" + ids_pick_detail.GetItemString(llPickPos,'supp_code') + "'"
		lsFind = "sku_parent = '" + ids_pick_detail.GetItemString(llPickPos,'sku_parent') + "' and sku = '" + ids_pick_detail.GetItemString(llPickPos,'sku') + "' and supp_code = '" + ids_pick_detail.GetItemString(llPickPos,'supp_code') + "'"
		llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
		
		Do While llFindRow > 0
			If dw_serial.GetItemNumber(llFindRow,'component_sequence_no') > llMaxSeq Then
				llMaxSeq = dw_serial.GetItemNumber(llFindRow,'component_sequence_no')
			End If
			llFindRow ++
			If llFindRow > dw_serial.RowCount() Then Exit
			llFindRow = dw_serial.Find(lsFind,llFindRow,(dw_serial.RowCount() + 1))
		Loop

		if gs_project = 'RIVERBED' Then //TAM 2011/12/03 If Riverbed then we need to look in the delivery bom table for the shippable flag =  N (User_field 3) to turn the field for input
			ls_child_sku = ids_pick_detail.GetItemString(llPickPos,'sku')
			ls_parent_sku = ids_pick_detail.GetItemString(llPickPos,'sku_parent')
			Select User_field3 Into :lsBOM_UF3
			From Delivery_BOM
			Where Project_id = :gs_project and sku_parent = :ls_parent_sku and sku_child = :ls_child_sku and do_no = :lsdono
			Using SQLCA;
			If POS(Trim(lsBOM_UF3), "IsShippable:N") > 0 Then
				ls_shippable_flag = 'N'
			Else
				ls_shippable_flag = 'Y'
			End If
		End If
				
//  TAM 2018/02 - S14838 -  Not doing LPN anymore
//		If gs_project = 'PANDORA' and ls_PONO2ControlledInd = 'Y' and ls_ContainerTrackingInd = 'Y' then
//			//TimA 07/29/13 Pandora LPN project #608
//		
//			llNewRow = dw_serial.InsertRow(0)
//			dw_serial.SetItem(llNewRow,'id_no',llID)
//			dw_serial.SetITem(llNewRow,'sku',ids_pick_detail.GetItemString(llPickPos,'sku'))
//			dw_serial.SetITem(llNewRow,'supp_code',ids_pick_detail.GetItemString(llPickPos,'supp_code'))
//			dw_serial.SetITem(llNewRow,'sku_parent',ids_pick_detail.GetItemString(llPickPos,'sku_parent'))
//			dw_serial.SetITem(llNewRow,'component_ind',ids_pick_detail.GetItemString(llPickPos,'component_ind'))
//			dw_serial.SetITem(llNewRow,'component_no',ids_pick_detail.GetItemNumber(llPickPos,'component_no'))
//			dw_serial.SetITem(llNewRow,'line_Item_No',ids_pick_detail.GetItemNumber(llPickPos,'line_Item_No'))
//			dw_serial.SetITem(llNewRow,'shippable_flag','N')
//			dw_serial.SetITem(llNewRow,'sku_substitute',ids_pick_detail.GetItemString(llPickPos,'sku'))
//			//dw_serial.SetITem(llNewRow,'serial_no',lsContainer)
//			dw_serial.SetITem(llNewRow,'quantity',ldQty)
//			dw_serial.SetITem(llNewRow,'description',lsDesc)
//			dw_serial.SetITem(llNewRow,'native_description',lsNativeDescription)
//			dw_serial.SetITem(llNewRow,'part_upc_code',ldUPC)
//			dw_serial.SetITem(llNewRow,'item_master_user_field4',ls_uf4)
//			//dw_serial.SetITem(llNewRow,'serialized_ind',lsSerialized)
//			
//// TAM 08/2015 - For Anki they are creating Serial Rows based on the Packlist with the Serail QTY = Packing Qty.  Create the Rows from the Packing Table.
//		Else 
	//TAM - 11/12/2015 - Not for ANKI-EMU
			//If upper(gs_project) = 'ANKI' then
			If upper(gs_project) = 'ANKI' and Not Upper(  idw_main.GetItemString(1,'wh_code')) = 'ANKI-EMU'   then
				lsSku = ids_pick_detail.GetItemString(llPickPos,'sku') 

				For I = 1 to idw_pack.RowCount()
					
					lsFind = "sku = '" + lsSKU + "' and Carton_No = '" + idw_pack.GetItemString(I,'Carton_No') + "'"
					llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
					lsPackSku = idw_pack.GetItemString(I,'sku')
					
					If llFindRow > 0 or  lsSku <> lsPackSku Then 
						//Skip
					Else
						llNewRow = dw_serial.InsertRow(0)
						dw_serial.SetItem(llNewRow,'id_no',llID)
						dw_serial.SetITem(llNewRow,'sku',ids_pick_detail.GetItemString(llPickPos,'sku'))
						dw_serial.SetITem(llNewRow,'supp_code',ids_pick_detail.GetItemString(llPickPos,'supp_code'))
						dw_serial.SetITem(llNewRow,'sku_parent',ids_pick_detail.GetItemString(llPickPos,'sku_parent'))
						dw_serial.SetITem(llNewRow,'component_ind',ids_pick_detail.GetItemString(llPickPos,'component_ind'))
						dw_serial.SetITem(llNewRow,'component_no',ids_pick_detail.GetItemNumber(llPickPos,'component_no'))
						dw_serial.SetITem(llNewRow,'line_Item_No',ids_pick_detail.GetItemNumber(llPickPos,'line_Item_No'))
						dw_serial.SetITem(llNewRow,'shippable_flag','Y')
						dw_serial.SetITem(llNewRow,'sku_substitute',ids_pick_detail.GetItemString(llPickPos,'sku'))
						dw_serial.SetITem(llNewRow,'description',lsDesc)
						dw_serial.SetITem(llNewRow,'native_description',lsNativeDescription)
						dw_serial.SetITem(llNewRow,'part_upc_code',ldUPC)
						dw_serial.SetITem(llNewRow,'item_master_user_field4',ls_uf4)
						dw_serial.SetITem(llNewRow,'carton_no',idw_pack.GetItemString(I,'Carton_No'))
						dw_serial.SetITem(llNewRow,'quantity',idw_pack.GetItemNumber(I,'Quantity'))
					End If
				Next
			
			Else
			If llCount < ldPickQty Then // AND   NOT  (gs_project = 'WARNER' AND lsGrp = 'PO' ) Then
				
				For I = 1 to (Long(ldPickQty) - llCount)
	
					if gs_project = 'KARCHER' Then //TAM 2013/04/25 If KARCHER then Look if Picking Detail ID exists in serial table.  If so then skip it.
						lsFind = "sku_parent = '" + ids_pick_detail.GetItemString(llPickPos,'sku_parent') + "' and sku = '" + ids_pick_detail.GetItemString(llPickPos,'sku') + "' and supp_code = '" + ids_pick_detail.GetItemString(llPickPos,'supp_code') + "' and id_no = " + string(ids_pick_detail.GetItemNumber(llPickPos,'Id_No' ))
						llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
						If llFindRow > 0 Then Return
					End If
					
					llNewRow = dw_serial.InsertRow(0)
					dw_serial.SetItem(llNewRow,'id_no',llID)
					dw_serial.SetITem(llNewRow,'sku',ids_pick_detail.GetItemString(llPickPos,'sku'))
					dw_serial.SetITem(llNewRow,'supp_code',ids_pick_detail.GetItemString(llPickPos,'supp_code'))
					dw_serial.SetITem(llNewRow,'sku_parent',ids_pick_detail.GetItemString(llPickPos,'sku_parent'))
					dw_serial.SetITem(llNewRow,'component_ind',ids_pick_detail.GetItemString(llPickPos,'component_ind'))
					dw_serial.SetITem(llNewRow,'component_no',ids_pick_detail.GetItemNumber(llPickPos,'component_no'))
					dw_serial.SetITem(llNewRow,'line_Item_No',ids_pick_detail.GetItemNumber(llPickPos,'line_Item_No')) /* 03/05 - PCONKL*/
					If ls_shippable_flag = 'Y' then //TAM 2011/12 Populate for riverbed
						dw_serial.SetITem(llNewRow,'shippable_flag','Y')
					Else
						dw_serial.SetITem(llNewRow,'shippable_flag','N')
					End If
	
					dw_serial.SetITem(llNewRow,'Container_Id', lsContainer )   //GWM 2018/04/20

					if gs_project <> 'RIVERBED' Then //TAM 2011/12/03 Don't do for Riverbed
						dw_serial.SetITem(llNewRow,'sku_substitute',ids_pick_detail.GetItemString(llPickPos,'sku')) //TAM 2010/04
					end if
					dw_serial.SetITem(llNewRow,'supplier_substitute',ids_pick_detail.GetItemString(llPickPos,'supp_code'))  //TAM 2010/04
					
					// 01/11 - PCONKL - For Comcast, if we are doing a WH transfer from a Corp Warehouse to an SIK warehouse, set the Serial # to the Lot # from Picking
					// 03/11 - PCONKL - Also if a virtual Shipment from warehouse 'COM-DIRECT'
					if gs_project = 'COMCAST' Then
						
						If (idw_Main.GetITemSTring(1,'Ord_Type') = 'Z' and Left(idw_Main.GetItemString(1,'Cust_Code'),7) = 'COM-SIK') or idw_Main.GetITEmString(1,'wh_code') = 'COM-DIRECT'  Then
						
							dw_serial.SetITem(llNewRow,'serial_no',lsLot)
							dw_serial.SetITem(llNewRow,'quantity',ldQty)
							
						End If
											
					End If /*Comcast*/
					
					//If we have a non swerialized part and we are scanning all items, ge the expeced qty from dd.alloc_qty since we wont be processing all the pick detail records (this logic will only be hit once per line/sku
					If g.ibScanAllOrdersRequired and lsSerialized = 'N' Then
						
						llFindRow = idw_detail.Find("line_item_no = " + String(llLineItemNo) + " and Upper(SKU) = '" + upper(lsSKU) + "'",1,idw_detail.RowCount())
						If llFindRow > 0 Then
							dw_serial.SetITem(llNewRow,'expected_qty',idw_Detail.GetItemNumber(llFindRow,'alloc_Qty'))
						Else
							dw_serial.SetITem(llNewRow,'expected_qty',ids_pick_detail.GetItemNumber(llPickPos,'quantity'))
						End If
					Else
						dw_serial.SetITem(llNewRow,'expected_qty',ids_pick_detail.GetItemNumber(llPickPos,'quantity'))
					End If
					
					dw_serial.SetITem(llNewRow,'description',lsDesc)
					dw_serial.SetITem(llNewRow,'native_description',lsNativeDescription)
					dw_serial.SetITem(llNewRow,'part_upc_code',ldUPC)
					dw_serial.SetITem(llNewRow,'item_master_user_field4',ls_uf4)
					dw_serial.SetITem(llNewRow,'serialized_ind',lsSerialized)
					dw_serial.SetITem(llNewRow,'po_no2_controlled_ind',ls_PONO2ControlledInd)
					dw_serial.SetITem(llNewRow,'container_tracking_ind',ls_ContainerTrackingInd)
					
	//				If gs_project <> 'LMC' Then /*LMC will be scanning Qty, don't default */
					If dw_serial.GetITemNumber(llNewRow,'Quantity') > 0 Then
					Else
						dw_serial.SetITem(llNewRow,'quantity',0)
					End If
	//				End If
						
					//If not serialized for this item, default to '-' which will gray/protect
					If lsSerialized <> 'O' and lsSerialized <> 'B' and lsSerialized <> 'Y' Then /* 02/09 - PCONKL - Added B, 07/13 - added 'Y' to support validation of Inbound tracked SNs */
						//lsDash += '-' /*dummy value to avaoid dups but not require serial no where not required*/
						dw_serial.SetITem(llNewRow,'serial_no','-')
					End If
				
					//If it's not a child, always bump the Seq up, otherwise only bump up if we've included all the children for a single parent qty (there can be more than 1 of a child for a single parent*/
				
					// 03/03 - PCONKL - This is causing problems if the parent is split across multiple pick records (diff Lot, etc.).
					// We will assume that there is only 1 of a child per parent. If not, they will need to be entered in the same row.
				
					llMaxSeq ++
				
					If llMaxSeq = 0 Then llMaxSeq = 1
					If llMaxSeq > 9999999 Then llMaxSeq = 1 /* 05/04 - PCONKL - ensure it doesn't wrap*/
				
					//Non components should sort at the end
					// 10/04 - PCONKL - If component_no = 0 (built in WO or blown out in DO) then no need to sort by component seq - set them all to 999
					If (dw_serial.GetItemString(llNewRow,'component_ind') = 'Y' Or dw_serial.GetItemString(llNewRow,'component_ind') = '*' Or dw_serial.GetItemString(llNewRow,'component_ind') = 'B') and llCompNo > 0 Then
	
	//TAM 2010/05/26 - BOMs are not sorted correctly if there is a child BOM quantity > 1.  The Parent sequence numbers wil be 1 to (parent quantity).  
	//           In order to keep the Child Skus with their Parents we need to calculate the associated parent sequence number.  Divide Max Sequence by the Parent quantity and add 1 to the remainer
						If gs_project = 'PANDORA' and llmaxSeq>ilparentqty and ilparentqty > 0 then
							dw_serial.SetITem(llNewRow,'component_sequence_no',mod(llmaxSeq, ilparentqty) + 1)
						Else
							dw_serial.SetITem(llNewRow,'component_sequence_no',llmaxSeq)
						End If
					Else
						dw_serial.SetITem(llNewRow,'component_sequence_no',999)
					End If
					
				Next /*Next Pick Qty*/
			
			End If /* Blank rows needed */
		End if //ANKI 
		//End if //Pandora LPN 
	
Next /*Next Pick Detail*/

long index
long sRows
string _supplier


dw_serial.SetFocus()
dw_serial.SetRow(1)
dw_serial.ScrollToRow(1)
dw_serial.SetColumn('serial_no')








end event

event itemchanged;call super::itemchanged;String	lsFind, lsMessage, lsOrigVal, lsSerialType, lsPickContainerID
Long	llFindRow, llLineItemNo, llSelectedRow, llPickRow
Integer	liRC

// TAM 07/21/2010 Needed a few more variables for Pandora Serial Vaidation
string ls_Serialized_Ind, ls_serial_no, ls_ro_no,ls_to_no, ls_owner_cd, ls_wh_code, ls_sku
long ll_rec_owner_id, ll_soc_owner_id, ll_owner_id, ll_return
long llComponent_no, ll_first, ll_last,  i_ndx , ll_na_component_no  //01/03/2011 ujh: S/N_Pb:
integer liMessage
string lsComponent_Ind //dts - not calling serial validation for component children
string lsfullserialno, lsFootPrintsInd, lsSerialCarton

//TimA 04/15/2011 capture the erro message in of_error_on_serial_no_exit to help with possiblem SIMS locking
//Pandora
String ab_error_message_title, ab_error_message
Long		ll_method_trace_id,ll_serialno

//TimA 07/30/13 LPN Project Pandora #608
String ls_PONO2ControlledInd, ls_ContainerTrackingInd,lsSupplier
Long ll_cs_rows, llCartonQty,ll_serialcount //13-Nov-2014 :Madhu- Added ll_serialcount
String ls_ctype, lsLineItemNo, lsCartonId,ls_primary_serial_no

String ls_selected_serialized_ind	// LTK 20150403  Pandora #961
String ls_return, ls_stripoff_checked, lstemp

Boolean lbLpn
//TimA 02/12/13 added method trace function
SetNull( ll_method_trace_id )
//f_method_trace( ll_method_trace_id, this.ClassName(), 'Start Serial Number itemchanged: ' + is_dono )
f_method_trace_special( gs_project, this.ClassName() , 'Start Serial Number itemchanged: ' ,is_dono, '','',isinvoice_no) 		
// KZUV.COM - Get the SKU for this row.
ls_sku = getitemstring(row, "sku")

lbLpn = False

llSelectedRow = dw_serial.GetRow()


// 10/03 - PCONKL - If carton Number Entered, Validate against packing list
Choose Case Upper(dwo.Name)
		
	Case 'LINE_ITEM_NO'
		
		If data > '' THEN			
			lsFind = "Line_Item_No = " + Upper(data) 
			llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
			If llFindRow <= 0 Then
				Messagebox(is_Title,"Line Item not found on Pick List!")
				Return 1
			End If
		Else
			Messagebox(is_title,"Line Item is required!")
			Return 1	
		End If
		
	// 01/04 - PCONKL - Allowing entry of SKU/Supplier - validate against Pick Detail
	Case 'SKU'
		
		If data > '' THEN			
			lsFind = "Upper(SKU) = '" + Upper(data) + "' and Line_item_no = " + String(This.GetITemNumber(row,'line_item_no'))
			llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
			If llFindRow <= 0 Then
				Messagebox(is_Title,"Line Item/SKU not found on Pick List!")
				Return 1
			Else /*we need to load some values from Pick Detail*/
				Post Event ue_Load_item_values(row,llFindRow)
				This.SetColumn('carton_no')
			End If
		Else
			Messagebox(is_title,"SKU is required!")
			Return 1
		End If
		
	Case 'SUPP_CODE'
		
		If data > '' THEN			
			lsFind = "Upper(supp_code) = '" + Upper(data) + "' and Upper(SKU) = '" + Upper(This.GetITemString(row,'sku')) + "'"
			llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
			If llFindRow <= 0 Then
				Messagebox(is_Title,"SKU/Supplier combination not found on Pick List!")
				Return 1
			Else /*we need to load some values from Pick Detail*/
				Post Event ue_Load_item_values(row,llFindRow)
				This.SetColumn('carton_no')
			End If
		End If
		
	Case 'CARTON_NO' 
		
			lsSerialType = dw_serial.GetItemString( llSelectedRow, 'serial_type' )
			lsOrigVal = this.GetItemString(llSelectedRow, 'carton_no', Primary!, FALSE )

			//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab
			If g.is_unique_pack_cartonNumbers = 'Y' Then
				If Upper(gs_Project) = 'PANDORA' and lsSerialType = 'Pallet' or lsSerialType = 'Container' Then
					// Will not be validated to unique carton numberw
				Else
					If wf_validate_pack_carton( data ) < 0 Then
						this.SetItem( llSelectedRow, "carton_no", lsOrigVal )
						Return 1
					End If
				End If
			END IF  /* End of unique cartons */

		If data > '' and idw_Pack.RowCOunt() > 0 THEN	 /* 11/09 - PCONKL - allowing serial numbers to be entered before Packing*/
			
			lsFind = "Upper(Carton_no) = '" + Upper(data) + "'"
			
			//01/05 - PCONKL - Need to also validate for SKU/Supplier combination for proper pack list printing
			//03/05 - PCONKL - validating againast line item instead of Supplier
			//12/06 - PCONKL - added validation for Powerwave
			If Upper(gs_Project) = '3COM_NASH' or Upper(gs_Project) = 'POWERWAVE' Then
				//lsFind += " and Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
				lsFind += " and Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Line_Item_no = " + String(This.GetITemNumber(row,'Line_Item_no')) + " and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
			End IF
			
			If idw_Pack.Find(lsFind,1,idw_pack.RowCount()) <= 0 Then
				
				//If this is a child, then get the parent SKU from the Pick List and look for the parent on the Pack List
				lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
				lsFind += " and Line_Item_no =  " + String(This.GetITemNumber(row,'Line_Item_no')) /* 05/07 - PCONKL - need line item in case child SKU is part of multiple parents on the order*/
				lLFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
				If llFindRow > 0 Then
					lsFind = "Upper(Carton_no) = '" + Upper(data) + "'"
					//lsFind += " and Upper(SKU) = '" + Upper(idw_pick.GetITemString(llFindRow,'SKU_Parent')) + "' and Upper(supp_code) = '" + Upper(idw_pick.GetITemString(llFindRow,'supp_Code')) + "'"
					lsFind += " and Upper(SKU) = '" + Upper(idw_pick.GetITemString(llFindRow,'SKU_Parent')) + "' and Line_Item_No = " + String(This.GetITemNumber(row,'Line_Item_no')) 
//					lsFind += " and Upper(supp_code) = '" + Upper(idw_pick.GetITemString(llFindRow,'supp_Code')) + "'"
					If idw_Pack.Find(lsFind,1,idw_pack.RowCount()) <= 0 Then
						If Upper(gs_project) = 'PANDORA' Then
							If lsSerialType = 'Pallet' or lsSerialType = 'Container' Then
								DoDisplayMessage(is_Title,"Pallet or Container numbers cannot be changed from original.")
								this.SetItem( row, "carton_no", lsOrigVal )
								Return 1
							Else
								ibSerialCartonNoChanged = TRUE		// Re-generate serial rows in pack list
							End If
						Else
							DoDisplayMessage(is_Title,"Carton Number not found on Packing List!~ror Carton Number not valid for this SKU/Supplier/Line Item")
							Return 1
						End If
					End If
				Else
					DoDisplayMessage(is_Title,"Carton Number not found on Packing List!~ror Carton Number not valid for this SKU/Supplier/Line Item")
					Return 1
				End If
				
			End If
			
			If Upper(gs_project) = 'PANDORA' Then
				ibSerialCartonNoChanged = TRUE		// Re-generate serial rows in pack list
			End If
			
		Else
			If lsSerialType = 'Pallet' or lsSerialType = 'Container' Then
				if isNull( lsOrigVal ) Then
					If data > '' Then
						sle_barcodes.Text = data
						Parent.TriggerEvent("ue_process_barcodes")
					End If
				Else
					DoDisplayMessage(is_Title,"Pallet or Container numbers cannot be changed from original.")
					this.SetItem( row, "carton_no", lsOrigVal )
					Return 1
				End If
			End If
		
		End If
		
	Case 'SERIAL_NO' 
		

		//TAM -PEVS-554 Added validation here to mimick what is happening in the SLE_BARCODE.Modified event
		//07-JUNE-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -START
		// Validate StripOff First col
		BOOLEAN lb_SN_Cleaned = FALSE
		lsSerialType =  dw_serial.GetItemString( row, 'serial_type' )
		lsOrigVal = this.GetItemString(llSelectedRow, 'serial_no', Primary!, FALSE )

		//GailM 1/22/2018 S14978 F5724 I350 PAN SIMS Pint to generate Pack list based on serial tab (SIMSPEVS-898)
		If Upper(gs_project) = 'PANDORA' and g.is_unique_pack_cartonnumbers  = 'Y' Then
			lsCartonId = idw_serial.GetItemString( row, 'carton_no' )
			If sle_carton_no.text <> '' and (isNull( lsCartonId ) or lsCartonId = '' ) and lsSerialType = 'Serial' Then
				dw_serial.SetItem(llSelectedRow,'carton_no', sle_carton_no.text )		// Use carton number
			ElseIf isNull( lsCartonId ) or lsCartonId = '' Then
				If lsSerialType = 'Serial' Then
					lsMessage =  "Unique carton numbers are required.  Please generate a unique carton number using the New Carton button.  " + &
									"A unique carton number consists of the last six digits of the order system number plus a 3 digit unique sequence number."
					doDisplayMessage('Unique Carton Number Required', lsMessage )
					dw_serial.SetItem(llSelectedRow,'serial_no','')		//Remove number from selected row
					this.setfocus( )
					this.setcolumn( 'carton_no')
					Return 1
				ElseIf lsSerialType = 'Container' Then
					lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'sku')) + "'"
					llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
					lsCartonId = idw_pick.GetITemString(llFindRow,"container_id")
					idw_serial.SetItem( row, 'carton_no', lsCartonID )
				ElseIf lsSerialType = 'Pallet' Then
					lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'sku')) + "'"
					llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
					lsCartonId = idw_pick.GetITemString(llFindRow,"po_no2")
					idw_serial.SetItem( row, 'carton_no', lsCartonID )
				End If
			Else
				If lsSerialType = 'Container' Then
					lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'sku')) + "'"
					llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
					lsCartonId = idw_pick.GetITemString(llFindRow,"container_id")
					idw_serial.SetItem( row, 'carton_no', lsCartonID )
				End If
			End If
		End If

		//11-July-2017 :Madhu -Perform SN Mask Validation
		ls_stripoff_checked = i_nwarehouse.of_stripoff_firstcol_checked( This.GetITemString(row,'SKU'), This.GetITemString(row,'Supp_Code'))	
		ls_return = i_nwarehouse.of_validate_serial_format( This.GetITemString(row,'SKU'), data , This.GetITemString(row,'Supp_Code') )
		
		//28-JULY-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -START
		If ls_return <> "" and upper(ls_stripoff_checked) ='Y' Then
			lstemp = i_nwarehouse.of_stripoff_firstcol_serialno(  This.GetITemString(row,'SKU') , This.GetITemString(row,'Supp_Code') , data)

			if lstemp <> data then // Set the Serial Number
				lb_SN_Cleaned = True
				data = lsTemp
			end if
			ls_return = i_nwarehouse.of_validate_serial_format( Upper(isCurrentSku), data , idw_serial.GetItemString(llFindRow,'supp_code') )
		End If
		//28-JULY-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -END

		if ls_return <> "" then
			doDisplayMessage("Serial Number Entry",ls_return)
			dw_serial.SetItem(llSelectedRow,'serial_no','')		//Remove number from selected row
			return 1
		end if
		
		//07-JUNE-2017 :Madhu -PEVS-554 - TCIF Linked Code39 "TLC39" SerialBarcodes -END
		
           
		If NOT ibDejaVu Then
			// KRZ on behalf of PCONKL.  12/17/09
				If This.GetITEmNumber(row,'Quantity') = 0 Then
					This.SetITem(row,'quantity',1)
				End If	
							
//			BOOLEAN lb_SN_Cleaned = FALSE TAM PEVS-554 moved above
			
			IF UPPER(gs_Project) = 'PANDORA' THEN
				//TimA 07/30/13 LPN Project #608
				lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'sku')) + "'"
				llFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
				llPickRow = llFindRow		//Use pick row later
				lsSupplier = idw_pick.GetITemString(llFindRow,"supp_code")
				
				Select PO_NO2_Controlled_Ind, Container_Tracking_Ind, Serialized_Ind Into :ls_PONO2ControlledInd, :ls_ContainerTrackingInd, :ls_selected_serialized_ind
				From Item_Master
				Where project_id = :gs_project and sku = :ls_sku and supp_code = :lsSUpplier;			
				
				If ls_PONO2ControlledInd = 'Y' and ls_ContainerTrackingInd = 'Y' then

					// LTK 20150402  Pandora #961 - Fixed issue where serialized_ind was not set upon *inserts* (however it was available upon retrieves due to join to Item_Master).
					// So if the user confirmed the order without retrieving it again, the VICS/BOL confirmation check was not executed correctly because it reads the serialized_ind.
					if this.getitemstatus( row, 0, Primary! ) = New! or this.getitemstatus( row, 0, Primary! ) = NewModified! then
						if NOT IsNull(ls_selected_serialized_ind) then
							this.SetItem( row, 'serialized_ind', ls_selected_serialized_ind )  
						end if
					end if
					// End of Pandora #961 

					lbLpn = True
					//S20849 GailM LPN no longer active.  Replaced by Footprint.  This code is obsolete
//					lsLineItemNo = string(This.GetItemNumber(row,"line_item_no")) 
//					SetMicroHelp("Checking serial numbers.  Please wait..")
//					idw_carton_serial.Reset()
//					ll_cs_rows = idw_carton_serial.Retrieve(gs_project, data)
//					if ll_cs_rows = 0 then
//						messagebox("Find LPN serial numbers","No serial numbers found for " + string(data))
//						This.SetItem(row, 'Serial_no', '-')  // blank out the scanned data
//						this.SelectText(1,1)
//						return 1
//					else
//						ls_ctype = idw_carton_serial.GetItemString(1,'c_type')
//						
//						if ls_ctype = 'S' and idw_carton_serial.rowcount( ) = 1 then
//							Until Pandora desides on what to do with serial numbers on pallets that might be spit we are not allowing
//							of scanning serial numbers
//							Do not throw error message GailM 
//							messagebox("Serial numbers Error","Serial Numbers are not allowed to be scanned on LPN type SKU's ")
//							Return 1
//							This.SetItem(row,'Serial_no',idw_carton_serial.GetItemString(1,'serial_no'))
//							This.SetItem(llFindRow,"quantity",idw_carton_serial.GetItemnumber(1,"carton_qty"))
//						elseif ls_ctype = 'C' then
//							If iuo_carton_serial_scanning.uf_do_scan_Pandora(This.GetITemString(row,'sku'),data, row,ls_ctype) < 0 Then
//								Return 1
//							else
//								goto Done
//							End if
//							lsFind = "(serial_no = '-' or serial_no = '" + data + "') and container_id = '" + data + "' and line_item_no = " + lsLineItemNo
//							for i_ndx = 1 to ll_cs_rows
//								llFindRow = This.Find(lsFind,1,This.RowCount())
//								if llFindRow > 0 then
//									This.SetItem(llFindRow,"serial_no",idw_carton_serial.GetItemString(i_ndx,"carton_id"))
//									This.SetItem(llFindRow,"quantity",idw_carton_serial.GetItemnumber(i_ndx,"carton_qty"))
//								end if
//							next	
//						elseif ls_ctype = 'P' then
//							for i_ndx = 1 to ll_cs_rows
//								If lbLpn = True then
//									lsCartonId = idw_carton_serial.GetItemString(i_ndx,"pallet_id")
//								Else	
//									lsCartonId = idw_carton_serial.GetItemString(1,"carton_id")
//								End if
//								llCartonQty = Dec(idw_carton_serial.GetItemNumber(i_ndx,"carton_qty"))
//											
//								If iuo_carton_serial_scanning.uf_do_scan_Pandora(ls_sku,lsCartonId, row,ls_ctype) < 0 Then
//									Return 1
//								else
//									lsFind = "(serial_no = '-' or IsNull(serial_no)) and SKU = '" + ls_sku + "' and line_item_no = " + lsLineItemNo
//									llFindRow = This.Find(lsFind,1,This.RowCount())
//									if llFindRow > 0 then
//										This.SetItem(llFindRow,"serial_no", lsCartonId)
//										This.SetItem(llFindRow,"quantity",llCartonQty)
//									end if
//								End if
//							next
//						else
//							messagebox("Find LPN serial numbers","Error in detail for:  " + string(data))
//							This.SetItem(row, 'Serial_no', '-')  // blank out the scanned data
//							this.SelectText(1,1)
//							return 1
//						end if
//						
//						lsFind = "IsNull(serial_no)"
//						//lsFind = "serial_no = '-'"
//						llFindRow = This.Find(lsFind,1,This.RowCount())	// Find next blank SN
//						if llFindRow > 0 then
//							This.scrolltorow(llFindRow)
//							end if
//							SetMicroHelp("Ready")
//							return 1
//						end if		
//						SetMicroHelp("Ready")				
//					
//					
//					If iuo_carton_serial_scanning.uf_do_scan_Pandora(This.GetITemString(row,'sku'),data, row) < 0 Then
//						Return 1
//					else
//						goto Done
//					End if
					
				ElseIf ls_PONO2ControlledInd = 'N' and ls_ContainerTrackingInd = 'Y' then  
	//*****************************************************************************START CONTAINER TRACKED*******				
					ls_serial_no = data
					ls_wh_code = idw_main.getitemstring(1,'wh_code')
					lsPickContainerID = idw_pick.GetItemString( llPickRow, 'container_id' )
					if lsPickContainerID <> lsCartonId Then
						This.SetItem( llSelectedRow, 'carton_no', lsPickContainerID )
					End If
					select count(*) into :ll_serialcount From Serial_Number_Inventory Where Project_Id=:gs_project and wh_code =:ls_wh_code
					and SKU=:ls_SKU and serial_no=:ls_serial_no and carton_id = :lsCartonId;
					If ll_serialcount = 0 Then
						messagebox(is_title,'Serial number ' + ls_serial_no + ' is not associated~r~nwith the Container Id ' + lsCartonId + '!~r~n~r~nPlease change serial number and try again.', Stopsign! )
						This.SetItem( llSelectedRow, 'serial_no', lsOrigVal )
						Return 1
					End If
					
					
	//*****************************************************************************END CONTAINER TRACKED*******	*											
				Else
					// ET3 - 2012-07-05 Pandora 447 - cleanup SN's by removing leading/trailing '.' and '-'
					data = TRIM(data)
					If len(data) > 1 Then
						// strip extraneous Trailing chars
						DO WHILE MATCH( data, "[-\.]$" )
							data = MID(data, 1, len(data) - 1 )
							lb_SN_cleaned = TRUE
						LOOP
						
						// strip extraneous Leading chars
						DO WHILE MATCH( data, "^[-\.]")
							data = MID(data, 2, len(data) - 1 )
							lb_SN_cleaned = TRUE
						LOOP
						
						//this.setitem( row, dwo.name, data )
					
					End If
				End if
			END IF
			
			// 2014/10/27 - TAM - Validate length - shouldn't be > 18 characters for BOSCH
			//02/10/2025......Akash Baghel......Change length > 18 TO > 20 characters for BOSCH......SIMS-642.....Development for IFB-SIMS-Bosch Serial field updates to accept 20 characters
			If Len(data) > 20 and Upper(gs_Project) = 'BOSCH' Then
				messagebox(is_title,'Serial Number can not be greater than 20 characters!',Stopsign!)
				Return 1
			End If
				  
			// TAM - 2015/02/04 Honda may only have a partial barcode.  See if the partial exists and return the full serial number
			IF upper(gs_project) = 'HONDA-TH' THEN
				ls_serial_no = '%' + data + '%'
				Select Serial_no 
				into :lsfullserialno
				From Serial_Number_Inventory with (nolock)  LEFT OUTER JOIN Inventory_Type with (nolock) ON Serial_Number_Inventory.Project_Id = Inventory_Type.Project_Id AND Serial_Number_Inventory.Inventory_Type = Inventory_Type.Inv_Type
				where Serial_Number_Inventory.Project_ID = :gs_project
				and SKU = :ls_sku
				and Serial_no like :ls_serial_no ;

				If Not isNull(lsfullserialno) and lsfullserialno <> '' Then
					data= lsfullserialno
					lb_SN_cleaned = TRUE
				End If
			END IF
			
			// 09/04 - PCONKL - Validate length - shouldn't be > 18 characters for 3COM
			// 03/07 - PCONKL - allow 20 char for 3COM
//			If Len(data) > 20 and Upper(gs_Project) = '3COM_NASH' Then
//				messagebox(is_title,'Serial Number can not be greater than 20 characters!',Stopsign!)
//				Return 1
//			End If
			
			If this.Find("Upper(SERIAL_NO) = '" + upper(data) + "'" + " and Upper(SKU) = '" + upper(ls_sku) + "'",1, this.rowCount()) > 0 Then
				messagebox(is_title,'This Serial Number/sku combination has already been scanned!',Stopsign!)
				This.SetItem( llSelectedRow, 'serial_no', '' )
				Return 1
			End If
				
			// ET3 = Pandora 447 SN cleaning
			// processing of entered serial number complete - store if modified
			//to force the modification to be accepted - returning 0 will overwrite the correction
			if lb_SN_cleaned then 
				this.setitem( row, dwo.name, data )
				ll_return = 2  
			end if
				
			If IsNull(This.GetITemString(row,'carton_no')) or This.GetITemString(row,'carton_no') = '' Then
				
				If sle_carton_no.Text > '' Then
					
					This.SetITem(row,'carton_no',sle_carton_no.Text)
					
				Else /*Powerwave must have carton number entered before entering a serial number*/
					
//					If Upper(gs_Project) = 'POWERWAVE' Then
//						Messagebox(is_title,'Carton Number must be entered before entering a Serial Number')
//						Return 1
//					End IF
					
				End If
				
			End If
			
			//TAM -2013/05 - For riverbed - They want to use the first 9 character of the SKU to validate the prefix instead of the whole serial number.  For example  SKU = SHA-00250-L, SHA-00250-H, they want to setup with sku = SHA-00250 and have it validate for all skus beginning with SHA-00250
			//SARUN2015MAR31 - For riverbed - Change in the logic Operation want to check first 13 char then 12 and then 9
			Boolean ib_msg = False
			If Upper(gs_Project) = 'RIVERBED' Then
				
				If iuo_carton_serial_scanning.uf_validate_serial_Prefix(LEFT(This.GetITemString(row,'sku'),13),data) = False Then
					Messagebox(is_title,'Invalid Serial Number prefix for this SKU!', StopSign!)
					Return 1
				End If
				
				If iuo_carton_serial_scanning.uf_validate_serial_Prefix(LEFT(This.GetITemString(row,'sku'),12),data) = False Then
					Messagebox(is_title,'Invalid Serial Number prefix for this SKU!', StopSign!)
					Return 1
				End If

				If iuo_carton_serial_scanning.uf_validate_serial_Prefix(LEFT(This.GetITemString(row,'sku'),9),data) = False Then
					Messagebox(is_title,'Invalid Serial Number prefix for this SKU!', StopSign!)
					Return 1
				End If

				long llserialcount
				ls_serial_no = this.GetitemString(Row, 'serial_no', Primary!, true)
				SELECT count(*)  
				INTO :llserialcount  
				FROM Delivery_Serial_Detail  
					WHERE  Supplier_Substitute = :gs_project AND Serial_No = :data 
				USING SQLCA;
	
				If llserialcount > 0  Then
					Messagebox(is_title,'Serial Number has already been used for another order!', StopSign!)
					Return 1
				End If
				
			Else
				// 01/07 - PCONKL - validate the prefix
				//TAM 08/2016 - Skip Pandora validation - Currently they are only validating on Inbound.  If this changes then logic will be needed in the function to validate the prefix because Pandora has special logic
				If Upper(gs_Project) <> 'PANDORA' Then
						If iuo_carton_serial_scanning.uf_validate_serial_Prefix(This.GetITemString(row,'sku'),data) = False Then
						Messagebox(is_title,'Invalid Serial Number prefix for this SKU!', StopSign!)
						Return 1
					End If
				End if
			End If
	
			// 10/08 - PCONKL - Validate Pallet/Carton scan for Comcast
//			If gs_project = 'COMCAST' Then
//				If iuo_carton_serial_scanning.uf_do_scan_Comcast(This.GetITemString(row,'sku'),data, row) < 0 Then Return 1
//			End If
			
			//09-Apr-2014 :Madhu- Added for Ariens SSCC -START
				long llPackFind,llSerialFind
				String ls_carton,ls_free_form_serial_no,lsNull
			
//				IF gs_Project ='ARIENS' THEN
//					
//					setNull(lsNull)
//					//sku-serial hold validation
//				 If idw_Main.GetITemString(1,'Ord_Type') <> 'Z' and  idw_Main.GetITemString(1,'Ord_Type') <> 'X' Then //TAM  Skip Validation for Transfer Orders and Return Orders
//					lsFind = "Upper(sku) ='" + Upper(ls_Sku) + "'" + " and Upper(serial_no) = '" + Upper(data) + "'" 
//					llSerialFind =	ids_skuserialhold.find(lsFind,1,ids_skuserialhold.rowCount())
//					If llSerialFind > 0 Then
//						this.setItem(row,'serial_no', lsNull)
//						doDisplayMessage('SKU/Serial Combo', 'Model: ' + Upper(ls_Sku) + '~rSerial: ' + Upper(data) + ' is on Hold ~rCould not Process.')
//						this.setfocus( )
//						this.setcolumn( 'serial_no')
//						Return 1
//					End If
//				 End If
//				
//					//check whether a pack record doesn't hold serial no value
//					lsLineItemNo =string(this.GetItemNumber(row,'line_item_no'))
//					lsFind = "Upper( sku ) ='" +Upper(ls_Sku) + "'" + " and  Line_Item_No= " + lsLineItemNo + "" + " and  ((free_form_serial_no) = '' or isnull(free_form_serial_no))"
//					llPackFind =idw_pack.Find(lsFind,1,idw_pack.RowCount())
//					
//					f_method_trace_special( gs_project, this.ClassName() , 'Process Serial Number itemchanged, Pack Find count is: ' + String(llPackFind) + 'for sku: '+ls_Sku+ ' and LineItemNo: ' +lsLineItemNo  ,is_dono, '','',isinvoice_no) 	
//					
//					IF llPackFind > 0 Then
//						ls_carton = idw_pack.getItemString(llPackFind,'carton_no')
//						idw_pack.setItem(llPackFind,'free_form_serial_no',data)
//						dw_Serial.setItem(row,'carton_no',ls_carton)
//						f_method_trace_special( gs_project, this.ClassName() , 'Process Serial Number itemchanged, copied following SN: ' + data +' onto Pack List, with combination of Sku: ' + ls_Sku + ' Carton_No: ' +ls_carton+ ' LineItemNo: ' +lsLineItemNo  ,is_dono, '','',isinvoice_no) 	
//				
//					ELSE // if an user wants to override SN on Serial tab and that should be copied onto Pack list.
//						ls_carton = dw_serial.getItemString(row,'carton_no')
//						ls_free_form_serial_no = dw_serial.GetitemString(row, 'serial_no', Primary!, true)  //get primary SN - before overriding
//						
//						//Let assume, user may delete SN record and insert manually to update SN- At that time primary buffer value of SN is null. To avoid that situation, I added below condition.
//						If isnull(ls_free_form_serial_no) or ls_free_form_serial_no ='' Then
//							ls_free_form_serial_no = dw_serial.GetitemString(row, 'serial_no')  //get typed SN - before overriding
//						END IF
//						
//						//may be carton no column is invisible based on project master setup
//						If isnull(	ls_carton) or 	ls_carton='' Then
//							lsFind = "Upper( sku ) ='" +Upper(ls_Sku) + "'" + " and  Line_Item_No= " + lsLineItemNo + "" + " and free_form_serial_no = '" + ls_free_form_serial_no +"'"
//						ELSE
//							lsFind = "Upper( sku ) ='" +Upper(ls_Sku) + "'" + " and  Line_Item_No= " + lsLineItemNo + "" + " and carton_no = '" + ls_carton + "'" + " and free_form_serial_no = '" + ls_free_form_serial_no +"'"
//						END IF
//				
//						llPackFind =idw_pack.Find(lsFind,1,idw_pack.RowCount())
//						f_method_trace_special( gs_project, this.ClassName() , 'Process Serial Number itemchanged, Found an existing record on Pack list for Sku: ' + ls_Sku +' Carton_No: ' +ls_carton+ ' LineItemNo: ' +lsLineItemNo+ ' SerialNo: '+ls_free_form_serial_no  ,is_dono, '','',isinvoice_no)
//				
//						IF llPackFind > 0 Then
//							idw_pack.setItem(llPackFind,'free_form_serial_no',data)
//							f_method_trace_special( gs_project, this.ClassName() , 'Process Serial Number itemchanged, copied following SN: ' + data +' onto Pack List, with combination of Sku: ' + ls_Sku + ' Carton_No: ' +ls_carton+ ' LineItemNo: ' +lsLineItemNo  ,is_dono, '','',isinvoice_no) 	
//						ELSE //Assume, serial tab records > pack list records
//							doDisplayMessage('Invalid Packing SKU/LineItem Combination'," SKU: " + ls_Sku + " with Line Item No: " + String( lsLineItemNo) + " row: " + String(row) +&
//							+ "~r~n~r~n Less number of records on Pack List tab against Serial Tab, please check.")
//							f_method_trace_special( gs_project, this.ClassName() , 'Process Serial Number itemchanged, an error msg popup to user:-   Less number of records on Pack List tab against Serial Tab, please check'  ,is_dono, '','',isinvoice_no) 	
//							return
//						END IF
//					END IF
//				END IF
			 //09-Apr-2014 :Madhu- Added for Ariens SSCC-END
	//---
			// 2015/10 - TAM - ANKI - Validate format - "CNNNNN..." - First Pos Character, Remaining Pos Numeric
			If  Upper(gs_Project) = 'ANKI' Then
				If IsNumber(Left(Data,1))  Then
					messagebox(is_title,'Serial Number scanned is not valid.  It must begin with a character in the first position!',Stopsign!)
					this.setfocus( )
					this.setcolumn( 'serial_no')
					Return 1
				End If
				If Not IsNumber(Mid(Data,2))  Then
					messagebox(is_title,'Serial Number scanned is not valid.  It must contain all numbers after the first position!',Stopsign!)
					this.setfocus( )
					this.setcolumn( 'serial_no')
					Return 1
				End If
				AcceptText()
				lsFind = "IsNull(serial_no) or serial_no = '' "
				llFindRow = This.Find(lsFind,1,This.RowCount())	// Find next blank SN
				if llFindRow > 0 then
					This.SetRow(llFindRow)
					This.scrolltorow(llFindRow)
					this.setcolumn( 'serial_no')
					Return 1
				end if
			End if
				  
			// 7/21/2010 TAM: Validate Serial Number is in the warehouse for the correct owner.
	//		IF upper(gs_project) = 'PANDORA' Then
			//BCR 06-DEC-2011: Treat Bluecoat same as Pandora...
	//		IF upper(gs_project) = 'PANDORA' OR upper(gs_project) = 'BLUECOAT' Then
			// ET3 2012-06-14: Implement generic test
			IF g.ibSNchainofcustody THEN
				//////////////////////////////////////////////////////////////////////////////////////////////////////////
				// 01/03/2011 ujh: S/N_Pfx1Z: when parent info set null don't allow if it has children with serial numbers
				// When data entered is "dash" and part is a parent, set it to active parent
				if upper(this.GetItemString(row, 'Component_ind')) = 'Y'   and data = '-'  then
					ls_serial_no = this.GetitemString(Row, 'serial_no', Primary!, true)
					// if this parent is valid, set its range else error
					if this.GetItemNumber(row, 'na_component_no') > 0 then
						ll_return = wf_set_active_parent_range(row, ilParent_rowno, ilParent_maxrow, idw_serial)
						if ll_return = 0 then
							return 2
						else
							return ll_return
						end if
					else
						if  isnull(ls_serial_no) or ls_serial_no = ''  then // we already know na_component_no not valid
							messagebox('Range Set Error', 'This parent is not yet valid. Please enter serial number before setting valid')
							this.SelectText(1, len(data))
							return 1
						end if
						// the following will be unique because the sku/serialno combo is uniqe
						Select Component_no
						Into :ll_na_component_no
						From Serial_number_inventory
						where sku = :ls_sku
						and Serial_no = :ls_serial_no;
						
						if  not (ll_na_component_no > 0) then
							messagebox('Serial No Error', 'The serial no entered for this sku is not in the database.')
							this.SelectText(1, len(data))
							return 1
						end if
						ilComponent_no = ll_na_component_no
						this.Setitem(row, 'na_component_no', ll_na_component_no)
						ll_return = wf_set_active_parent_range(row, ilParent_rowno, ilParent_maxrow, idw_serial)
						if ll_return = 0 then
							return 2
						else
							return ll_return
						end if
					end if
				end if
				//////////////////////////////////////////////////////////////////////////////////////////////////////////
				if isnull(data) or data = '' then
					// Is this a parent item?
					if upper(this.GetItemString(row, 'Component_ind')) = 'Y' then
						// now determine if it has children with populated serial numbers
						// First find the boundary for this parents children
						ll_return = wf_set_active_parent_range(row, ll_first, ll_last, idw_serial)
						if ll_return = 0 then
							// Now determine if there is a child with populated serial numbers for this parent
							lsFind = " component_ind = '*'  and Serial_no <> '' "
							llFindRow = this.Find(lsFind, row, ll_last )
							if llFindRow > 0 then
								messagebox('Error Delete', 'Please remove serial numbers from all children before Parent')
								return 2
							end if
							// Reset so there is no active parent
							ilParent_rowno = 0
							ilParent_maxrow = 0
							ilComponent_no = 0
	
						else
							return ll_return  
						end if  // end test return from function
					end if  // end if component_ind = 'Y'
					// Whether child or parent remove component no when serial_no is blanked
					this.SetItem(row, 'na_component_no', 0)
					messagebox('No Data', 'Serial number is required!  You may come back to this later')
					return ll_return
				end if   // end setting this item to active parent
			//////////////////////////////////// 01/03/2011 ujh: S/N_Pfx1Z:///////////////////////////////////////////////////////////////
			 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
				ls_serialized_ind = This.GetITemString(row,'Serialized_ind')
				lsComponent_Ind = This.GetItemString(Row, 'component_ind')		// 01/03/2011 ujh: S/N_Pfx3
				ls_serial_no = data
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// 08/15/2010 ujhall: 01 of ?? Full Circle Fix: w_do Changes: Error if serial number does not exist or Owner different
	
				//TimA 08/13/14 Pandora issue 892 If serialized ind is outbound "O" then just exist.  No validation.
				If UPPER(gs_Project) = 'PANDORA' and ls_serialized_ind = 'O' then
					Return 0
				End if
				// use picking detail to get owner_ID, in order to find owner_cd.
				lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
				lsFind += " and Line_Item_no =  " + String(This.GetITemNumber(row,'Line_Item_no')) /* 05/07 - PCONKL - need line item in case child SKU is part of multiple parents on the order*/
				lLFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
				If llFindRow > 0 Then
					ll_owner_id = idw_Pick.GetItemNumber(llfindrow,'owner_id')
	//				lsComponent_Ind = idw_Pick.GetItemString(llFindRow, 'component_ind')				
				End if
				llcomponent_no = This.GetITemNumber(row,'Component_no') // 01/03/2011 ujh: S/N_Pb:
	//			if lsComponent_Ind <> '*' then     //01/03/2011 ujh: S/N_P  Now childeren are validated, as they should be in the table
					// Get owner_cd
					Select Owner_cd 
					Into :ls_owner_cd
					From Owner
					where Project_id = :gs_project
					and owner_id = :ll_owner_id;
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// 01/03/2011 ujh: S/N_Pfx1:  Parent only processing
				if upper(lsComponent_ind) = 'Y'    then	  
					// Is the current parent valid
					if this.GetItemNumber(row, 'na_component_no') > 0 then
							// Current Parent is valid (already scanned)
							// Get a range for this parent, but do not set it.  use local variables so it is not set
							ll_return = wf_set_active_parent_range(row, ll_first, ll_last, idw_serial)
							if ll_return = 0 then  // Set Active Range
								// Now determine if there is a child with populated serial numbers for this parent
								lsFind = " component_ind = '*'  and Serial_no <> '' "
								llFindRow = this.Find(lsFind, row, ll_last )
								if llFindRow > 0 then
									// a child was found
									messagebox('Error Delete', 'Please remove serial numbers from all children before changing parent serial no')
									return 2
								else
									// No child found
									// Remove active parent.  This will become active parent if further processing good
									ilParent_rowno = 0
									ilParent_maxrow = 0
									ilComponent_no = 0
								end if
							else  
								// Could not set active range
								return ll_return
							end if
					end if  
	
				end if  // Parent only processing
				/////////////////////////// 01/03/2011 ujh: S/N_Pfx1:////////////////////////////////////////////////////////////	
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
					
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
				// 01/03/2011 ujh: S/N_Pfx1: Child processing
				if lsComponent_Ind = '*' then  // child only processing
					// make sure entered data is for the correct parent.  Find that parent and force entry to a child of parent
	
						/* if it is not true that there is an active parent range  or there is an active range 
								and this row is not in it,  then try to 
								activate new parent range.  Other wise skip and process normally*/
						if not (ilParent_rowno > 0) &
							or ((ilParent_rowno > 0) and not (row > ilParent_rowno and row <= ilParent_maxrow)) Then
	
								/*  There either is no active parent range or this component is not in its active range.  
									Either way find this component's parent if a valid (scanned) parent exists and activate*/
								FOR i_ndx = row - 1 TO 1 STEP -1
									if upper(this.GetItemString(i_ndx, 'Component_ind')) = 'Y' then
										// Found this items parent, now get parent's dummy component if parent has been scanned
										ll_na_component_no = this.GetItemNumber(i_ndx, 'na_component_no')
										Exit
									end if
								next
								// Determine if parent has been scanned
								if isnull(ll_na_component_no) or ll_na_component_no = 0 then
									// Parent has not been scanned
									messagebox('Component Error', 'No Scanned Parent Found for this component.' &  
										+ ' Please enter a parent Serial # before scanning its components')
									This.SetItem(row, 'Serial_no', '')  // blank out the scanned data
									return 1
								end if
								// we have a valid parent(scanned), now activate its row range
								ilComponent_no = ll_na_component_no
								ll_return = wf_set_active_parent_range(row, ilParent_rowno, ilParent_maxrow, idw_serial)
							
						end if   // End trying to active parent range
						
						// Set current component no to the component number of the active parent
						llComponent_no = ilComponent_no
				 end if   // child only processing
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
					
					/* check if serial no exists, setting Error_on_exist to false because the serial number should be there.
						it is an error if serial no is NOT there */
					//ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, ls_SKU, ls_Serial_no, ls_owner_cd, lsComponent_ind, llComponent_no,false)   // 01/03/2011 ujh: S/N_Pb:   change call to add component_ind and component_no
					//dts - 2/19/11 - added parameter to skip component number as part of the serial look-up condition
					
					//TimA -04/15/2011 added parameters to capture the error message from the calling function
					//				ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, ls_SKU, ls_Serial_no, ls_owner_cd, lsComponent_ind, llComponent_no, false, false)
					ab_error_message_title = ''
					ab_error_message = ''
					
					//f_method_trace( ll_method_trace_id, this.ClassName(), 'Check if Serial Number exist: ' + is_dono )
					f_method_trace_special( gs_project, this.ClassName() , 'Check if Serial Number exist: ' ,is_dono, '','',isinvoice_no) 		
					
					//24-Jul-2014 : Madhu -Added "is_dono,isinvoice_no" to write onto Method Trace Log
					ll_return = i_nwarehouse.of_Error_on_serial_no_exists(gs_Project, ls_SKU, ls_Serial_no, ls_owner_cd, lsComponent_ind, llComponent_no, false, false,ab_error_message_title, ab_error_message,is_dono,isinvoice_no)
					
					If ll_return = 1 then
	//					This.SetItem(row, 'Serial_no', '')  // blank out the scanned data
						this.SelectText(1, len(data))
						//TimA 04/15/2011
						messagebox(ab_error_message_title, ab_error_message)
						f_method_trace_special( gs_project, this.ClassName() , 'Check if Serial Number exist: ' +ab_error_message ,is_dono, '','',isinvoice_no) 
						
						//26-Jun-2014 :Madhu- Don't update pack list with Invalid SN. -START
//						If Upper(gs_Project) ='ARIENS' Then
//							idw_pack.setItem(llPackFind,'free_form_serial_no',lsNull) 
//							this.setItem(row,'serial_no', lsNull)
//						END IF

						//26-Jun-2014 :Madhu- Don't update pack list with Invalid SN. -END
						return ll_return
					else
						////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
						
//						//07/19 - PCONKL - If Pandora and Footprints and Container is present, SN must be from proper container (From Serial Number Inventory)
//						If Upper(gs_Project) ='PANDORA' Then
//							
//							//See if Footprints
//							ls_wh_code = idw_main.getitemstring(1,'wh_code')
//							ls_sku = This.GetItemString(row,'sku')
//							lsSupplier = This.GetItemString(row,'supp_code')
//							
//							Select Foot_prints_ind into :lsFootPrintsInd
//							FRom Item_Master
//							Where Project_id = 'PANDORA' and sku = :ls_Sku and Supp_Code = :lsSupplier
//							Using SQLCA;
//							
//							If lsFootPrintsInd = 'Y' Then
//								
//								//Get The Container ID From Serial Inventory
//								Select Carton_ID into :lsSerialCarton
//								From Serial_Number_Inventory
//								Where Project_id = 'PANDORA' and wh_code = :ls_wh_code and sku = :ls_SKU and Serial_no = :data
//								Using SQLCA;
//								
//								//Carton on Serial record must match Carton from Serial_Inventory. If blank on Serial row, must be 'NA' on Serial Inventory
//								If (upper(lsSerialCarton) = 'NA' and This.GetitemString(row,'carton_no') <> '') or &
//									(upper(lsSerialCarton) <> 'NA' and This.GetitemString(row,'carton_no') <> lsSerialCarton)	Then
//									
//										Messagebox('Footprints Serial Error','Serial Number not found in this Container',Stopsign!)
//										return 1
//									
//								End If
//								
//							End If /* Footprints*/
//							
//						End If /*Pandora*/
						
						//24-Oct-2014 : Madhu- Don't Assign same SN to multiple orders -START
						//21-SEP-2017 :Madhu PEVS-793 Update serial_flag in SNI table
						ls_primary_serial_no = this.GetitemString(Row, 'serial_no', Primary!, true)
						ls_wh_code = idw_main.getitemstring(1,'wh_code')
						
						//If user override the SN, revert the changes of original SN, if it is not associated with any orders.
						select count(*) into :ll_serialcount From Serial_Number_Inventory Where Project_Id=:gs_project and wh_code =:ls_wh_code
						and SKU=:ls_SKU and serial_no=:ls_primary_serial_no and Do_No <> :is_dono;
						
						
						IF ls_primary_serial_no <> ls_Serial_no and ll_serialcount=0 Then
							Update Serial_Number_Inventory set Serial_Flag ='N', Do_No='-',Transaction_Type = 'Reset Serial Flag to N item changed event', Transaction_Id = :is_dono
							where Project_Id=:gs_project and wh_code=:ls_wh_code
							and sku=:ls_SKU and serial_no=:ls_primary_serial_no;
						END IF
						
						ll_serialno=wf_duplicate_serial_no_scan_validation(ls_SKU, ls_Serial_no, ls_owner_cd)
						If ll_serialno = 1 then
							this.SelectText(1, len(data))
							idw_pack.setItem(llPackFind,'free_form_serial_no',lsNull) 
							this.setItem(row,'serial_no', lsNull)
							return ll_serialno
						END IF

						//24-Oct-2014 : Madhu- Don't Assign same SN to multiple orders -END
						
						/* 01/03/2011 ujh: S/N_Pfx1: Can't use component number, so creating a way to link parents to 
							children and create a boundry that associates a parent with its children */
						// NOTE: ilcomponent_no was set in of_error_on_serial_no_exists
						This.SetItem(row, 'NA_Component_no',  ilComponent_no )  
						if upper(lsComponent_ind) = 'Y' then
							// Set the parent Active range
							ll_return = wf_set_active_parent_range(row, ilParent_rowno, ilParent_maxrow, idw_serial)
							return ll_return
								
						end if  // End lsComponent_ind = 'Y'
						
						// Now, if the current item is a serialized component, reset Parent Range if all serial numbers are entered
						if lscomponent_ind = '*'  then
							For i_ndx = ilParent_rowno + 1 to ilParent_maxrow
								// Go to done at the first part with no serial number entered
								if (isnull(this.GetItemString(i_ndx, 'Serial_no') ) &
									or this.GetItemString(i_ndx, 'Serial_no') = '' ) &
									and  this.GetItemString(i_ndx, 'Serialized_ind') = 'B'  then
									/* The current row does not yet show that it is populated, so we will skip using its info 
										as we know it is populated because we have a good return code*/
									if i_ndx <> row then
										// this should have serial numbers, but doesn't, so this parent is not finished
										goto Done
									end if
								end if
							next
							// this parent's components are all entered, so remove the Parent Range
							ilParent_rowno = 0
							ilParent_maxrow = 0
							ilComponent_no = 0
							Done:
							
						end if  // End lsComponent_ind = '*'
						
						////////////////////////// 01/03/2011 ujh: S/N_Pfx1://///////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
						//return ll_return  // ET3 - commented out to force test below
					end if
	//			end if
				
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	//				lsFind = "Upper(SKU) = '" + Upper(This.GetITemString(row,'SKU')) + "' and Upper(supp_code) = '" + Upper(This.GetITemString(row,'Supp_Code')) + "'"
	//				lsFind += " and Line_Item_no =  " + String(This.GetITemNumber(row,'Line_Item_no')) /* 05/07 - PCONKL - need line item in case child SKU is part of multiple parents on the order*/
	//				lLFindRow = idw_Pick.Find(lsFind,1,idw_pick.RowCount())
	//				If llFindRow > 0 Then
	//					ll_owner_id = idw_Pick.GetItemNumber(llfindrow,'owner_id')
	//				End if
	//
	//			If ls_serialized_ind = 'B'  THEN 
	//				SELECT TOP 1 RO_No, Owner_ID
	//				INTO :ls_ro_no, :ll_rec_owner_id
	//				FROM Receive_Putaway  
	//				WHERE ( Serial_No = :ls_serial_no ) AND (RO_No like 'PANDORA%' )  
	//				ORDER BY RO_No DESC
	//				USING SQLCA;
	//
	//
	//				// Serial number doesn't exist 
	//				If SQLCA.SQLCode <> 0 THEN 
	//
	//// TAM 2010/07/30 -  Dissallow entering serial numbers that don't exist in SIMS
	////					liMessage = Messagebox(is_title," Serial Number was never received!  Do you want to keep serial number =" + ls_serial_no + ".  Please contact Site Manager/Supervisor to verify serial number and fill out Serial Number Change form.",Question!, YesNo!,2)
	//					liMessage = Messagebox(is_title," Serial Number " + ls_serial_no + " does not exist in SIMS!   Please verify serial number was entered correctly and if so please contact your Site Manager/Supervisor determine what needs to be corrected.")
	//
	////					if liMessage = 2 then
	//						This.SetItem(row, 'Serial_no', '')  // blank out the scanned data
	//						return 1
	////					else
	////						return 0
	////					end if  // checking liMessage
	//
	//				Else 
	//					// Check for an owner change on this serial number
	//				//TAM 2010/08/05 - Get Warehouse of last Inbound or Owner change  and added to SQL below
	//				SELECT  Wh_Code
	//				INTO :ls_wh_code
	//				FROM Receive_Master  
	//				WHERE ( Ro_No = :ls_ro_no )   
	//				USING SQLCA;
	//
	//
	//					SELECT TOP 1 Transfer_Detail.TO_No, Transfer_Detail.New_Owner_ID  
	//					INTO :ls_To_No, :ll_soc_owner_id
	//					FROM Alternate_Serial_Capture, Transfer_Detail, Transfer_Master  
	//					WHERE ( Alternate_Serial_Capture.TO_NO = Transfer_Detail.TO_No ) and  
	//					( Alternate_Serial_Capture.TO_NO = Transfer_Master.TO_No ) and  
	//					( Alternate_Serial_Capture.SKU_Parent = Transfer_Detail.SKU ) and  
	//					( Alternate_Serial_Capture.TO_Line_Item_No = Transfer_Detail.Line_Item_No ) and  
	//					( ( Alternate_Serial_Capture.Serial_no_Parent = :ls_serial_no ) AND 
	//					( Alternate_Serial_Capture.TO_NO like 'PANDORA%' ) AND
	//					( Transfer_Master.S_Warehouse = :ls_wh_code ))  
	//					ORDER BY Transfer_Detail.TO_No DESC
	//					USING SQLCA ;					
	//
	////					SELECT TOP 1 Transfer_Detail.TO_No, Transfer_Detail.New_Owner_ID  
	////					INTO :ls_To_No, :ll_soc_owner_id
	////					FROM Alternate_Serial_Capture, Transfer_Detail  
	////					WHERE ( Alternate_Serial_Capture.TO_NO = Transfer_Detail.TO_No ) and  
	////					( Alternate_Serial_Capture.SKU_Parent = Transfer_Detail.SKU ) and  
	////					( Alternate_Serial_Capture.TO_Line_Item_No = Transfer_Detail.Line_Item_No ) and  
	////					( ( Alternate_Serial_Capture.Serial_no_Parent = :ls_serial_no ) AND 
	////					( Alternate_Serial_Capture.TO_NO like 'PANDORA%' ) )  
	////					ORDER BY Transfer_Detail.TO_No DESC
	////					USING SQLCA ;					
	//
	//					// Owner Change not found so compare Receive Owner with Delivery Owner.
	//					If SQLCA.SQLCode <> 0 THEN   
	//
	//						//	If They are different then issue a message
	//						If ll_rec_owner_id <> ll_owner_id	Then	
	// 							SELECT dbo.Owner.Owner_Cd  
	//    							INTO :ls_owner_cd  
	//   							FROM dbo.Owner  
	//							WHERE ( dbo.Owner.Owner_ID = :ll_rec_owner_id ) AND  ( dbo.Owner.Project_ID = :gs_project )   ;
	//
	////							liMessage = Messagebox(is_title," Serial Number belongs to a owner " + ls_owner_cd + ".  Do you want to keep serial number =" + ls_serial_no + ".  Please contact Site Manager/Supervisor to verify serial number and fill out Serial Number Change form.",Question!, YesNo!,2)
	//							liMessage = Messagebox(is_title," Serial Number " + ls_serial_no + " belongs to a owner " + ls_owner_cd + "!   Please verify serial number was entered correctly and if so please contact your Site Manager/Supervisor determine what needs to be corrected.")
	//
	////							if liMessage = 2 then
	//								This.SetItem(row, 'Serial_no', '')  // blank out the scanned data
	//								return 1
	////							else
	////								return 0
	////							end if  // checking liMessage
	//						End If  //Different Received Owner
	//					Else	
	//
	//						// Owner Change was found so we need to compare SOC Owner with the Delivery Owner
	//						If ll_SOC_owner_id <> ll_owner_id	Then	
	//							//	If They are different then issue a message			
	// 							SELECT dbo.Owner.Owner_Cd  
	//    							INTO :ls_owner_cd  
	//   							FROM dbo.Owner  
	//							WHERE ( dbo.Owner.Owner_ID = :ll_soc_owner_id ) AND  ( dbo.Owner.Project_ID = :gs_project )   ;
	//
	////							liMessage = Messagebox(is_title," Serial Number belongs to a owner " + ls_owner_cd + ".  Do you want to keep serial number =" + ls_serial_no + ".  Please contact Site Manager/Supervisor to verify serial number and fill out Serial Number Change form.",Question!, YesNo!,2)
	//							liMessage = Messagebox(is_title," Serial Number " + ls_serial_no + " belongs to a owner " + ls_owner_cd + "!   Please verify serial number was entered correctly and if so please contact your Site Manager/Supervisor determine what needs to be corrected.")
	//
	////							if liMessage = 2 then
	//								This.SetItem(row, 'Serial_no', '')  // blank out the scanned data
	//								return 1
	////							else
	////								return 0
	////							end if  // checking liMessage
	//						End If  //Different SOC Owner
	//					End If	// Check SOC or Receive
	//
	//				End If //Serial Exist
	//					
	//			End if  // checking if ls_serialized_ind is B
					
			End if // checking if the project is Pandora
			
			if ll_return = 1 then
				//This.SetItem(row, 'Serial_no', '-')  // blank out the scanned data
				this.SelectText(1, len(data) )
				
			elseif lb_SN_cleaned then
				// ET3 - 2012-07-10  If the SN was processed to a different value, then set that value
				ll_return = 2
			
			else
				ll_return = 0
			
			end if
	
			return ll_return

		Else
	
			llSelectedRow = dw_serial.GetRow()
			
			//Check for Duplicates
			lsFind = "Upper(serial_no) = '" + Upper(Upper(data) ) + "'"
			If dw_serial.Find(lsFind,1,dw_serial.RowCount()) > 0 Then
				doDisplayMessage("Duplicates found","This Container has already been scanned ")
				dw_serial.SetItem(llSelectedRow,'serial_no','')		//Remove number from selected row
				Return 2
			End If
			
			//Check for valid containerID from the pick list
			lsFind = "Upper(container_id) = '" +  Upper(data) + "'"
			llFindRow = idw_pick.Find(lsFind,1, idw_pick.Rowcount())
			if llFindRow = 0 Then
				doDisplayMessage("Container error","This ContainerID could not be found for this order.~r~nPlease re-enter valid container. ")
				dw_serial.SetItem(llSelectedRow,'serial_no','')		//Remove number from selected row
				Return 2
			End If
			
			llLineItemNo = idw_pick.GetItemNumber(llFindRow,'line_item_no')
			lsFind = "line_item_no = " + string(llLineItemNo)
			llFindRow = dw_serial.Find(lsFind,1,dw_serial.RowCount())
			If llFindRow > 0 Then
				dw_serial.SetItem(llSelectedRow,'serial_no','')		//Remove number from selected row
				
				dw_serial.SetITem(llFindRow,'serial_no',data) 	//SerialNo is ContainerID
				dw_serial.SetITem(llFindRow,'carton_no',data)	//CartonNo is ContainerID
				dw_serial.SetITem(llFindRow,'mac_id','-') 							//Default MacID to dash
				dw_serial.SetITem(llFindRow,'quantity',idw_pick.GetItemNumber(llFindRow,'quantity')) //originial
				
				ib_changed = True
				
				Return 2
			Else
				doDisplayMessage("Container error","Could not find Line Item No for this container.")
				dw_serial.SetItem(llSelectedRow,'serial_no','')		//Remove number from selected row
				Return 2
			End If

End If

	//GailM 07/08/2017 - SIMSPEVS-718 - Check for duplicate serial number as baseline (maybe without Pandora)
	ll_serialno=wf_duplicate_serial_no_scan_validation(ls_SKU, ls_Serial_no, ls_owner_cd)
	If ll_serialno = 1 then
		this.SelectText(1, len(data))
		idw_pack.setItem(llPackFind,'free_form_serial_no',lsNull) 
		this.setItem(row,'serial_no', lsNull)
		sle_barcodes.Text = ''
		sle_barcodes.SetFocus()
		return ll_serialno
	END IF



End Choose
//TimA 02/12/13 added method trace function
//f_method_trace( ll_method_trace_id, this.ClassName(), 'End Serial Number itemchanged: ' + is_dono )
f_method_trace_special( gs_project, this.ClassName() , 'End Serial Number itemchanged: ' ,is_dono, '','',isinvoice_no) 
ib_changed = True
ibSerialModified = True
end event

event itemerror;call super::itemerror;
If upper(gs_project) = 'PANDORA' then
	return 1
else
	
	Return 2
end if
end event

event ue_postitemchanged;call super::ue_postitemchanged;
CHOOSE CASE upper(dwo.Name)
	CASE 'SERIAL_NO'
		IF gs_project = '3COM_NASH' THEN 
			iw_window.wf_coo_validation(this,row)
		END IF	
END CHOOSE


end event

event ue_insert;call super::ue_insert;
Long	llNewRow

llNewRow = This.InsertRow(0)
This.SetFocus()
This.SetRow(llNewROw)
This.ScrollToRow(llNewRow)
This.SetColumn('Line_Item_No')
end event

event ue_delete;call super::ue_delete;
//13-May-2014 :Madhu - Prompt a msg if no records present-START
If this.rowcount( ) =0 Then
	MessageBox(is_title,"No records are present to delete",Stopsign!)
return
END IF
//13-May-2014 :Madhu - Prompt a msg if no records present-END

//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -START
long llscannedqty,ll_qty
If ((gs_Project ='KLONELAB') and (this.GetITemNumber(this.GetRow(),'quantity')) > 0 )Then
	ll_qty =this.GetItemNumber(this.GetRow(),'quantity')
	llscannedqty = long(sle_total_alloc_qty.Text)
	llscannedqty = llscannedqty - ll_qty
	sle_total_alloc_qty.Text = string(llscannedqty)
END IF
//21-Apr-2014 :Madhu- KLN Display Total Requested Qty & Total Scanned qty -END

//GailM - 11/18/2017 - SIMSPEVS-825 - Riverbed 2dbarcode scanning
If gs_Project = 'RIVERBED' and rb_2dbarcode.checked = true and mle_2dbarcode.text <> '' then 
	sle_barcodes.Text = ''

End If


//26-Jun-2014 :Madhu- Upon deleting SN record, set serial value as blank on corresponding pack row -START
String ls_sku,ls_serialno,ls_cartonno,ls_lineno,lsFind,ls_whcode, ls_dono
long  llPackFind

ls_sku = this.getItemString( this.GetRow(),'sku')
ls_serialno = this.getItemString( this.GetRow(),'serial_no')
ls_cartonno = this.getItemString( this.GetRow(),'carton_no')
ls_lineno = String(this.getItemNumber( this.GetRow(),'line_item_no'))

//may be carton no column is invisible based on project master setup
If isnull(	ls_cartonno) or 	ls_cartonno='' Then
	lsFind = "Upper( sku ) ='" +Upper(ls_Sku) + "'" + " and  Line_Item_No= " + ls_lineno + "" + " and free_form_serial_no = '" + ls_serialno +"'"
ELSE
	lsFind = "Upper( sku ) ='" +Upper(ls_Sku) + "'" + " and  Line_Item_No= " + ls_lineno + "" + " and carton_no = '" + ls_cartonno + "'" + " and free_form_serial_no = '" + ls_serialno +"'"
 END IF
	
llPackFind =idw_pack.Find(lsFind,1,idw_pack.RowCount())
f_method_trace_special( gs_project, this.ClassName() , 'Process ue_delete, Found an existing record on Pack list for Sku: ' + ls_Sku +' Carton_No: ' +ls_cartonno+ ' LineItemNo: ' +ls_lineno+ ' SerialNo: '+ls_serialno  ,is_dono, '','',isinvoice_no)
IF llPackFind > 0 Then
	idw_pack.setItem(llPackFind,'free_form_serial_no','')
	f_method_trace_special( gs_project, this.ClassName() , 'Process ue_detail, set SN value as NULL on following SN: ' + ls_serialno +' onto Pack List, with combination of Sku: ' + ls_Sku + ' Carton_No: ' +ls_cartonno+ ' LineItemNo: ' +ls_lineno  ,is_dono, '','',isinvoice_no) 	
END IF

//26-Jun-2014 :Madhu- Upon deleting SN record, set serial value as blank on corresponding pack row -END

//24-Oct-2014 :Madhu- Don't Assign same SN to multiple orders -START
//21-SEP-2017 :Madhu PEVS-793 - clear the Serial Flag from SNI table
Execute Immediate "Begin Transaction" using SQLCA;
	ls_sku = this.getItemString( this.GetRow(),'sku')
	ls_serialno = this.getItemString( this.GetRow(),'serial_no')
	ls_whcode = idw_main.getitemstring(1,'wh_code')
	ls_dono = idw_main.getitemstring(1, 'do_no')
	
	//GailM 6/7/2019 S33409 Add inventory history audit fields to serial number inventory
	update Serial_Number_Inventory set Serial_Flag ='N', Do_No='-' , Transaction_Type = 'Reset Serial Flag to N serial tab delete', Transaction_Id = :ls_dono
	where Project_Id=:gs_project 
	and sku= :ls_sku
	and serial_no= :ls_Serialno
	and wh_code= :ls_whcode
	and Do_No =:ls_dono;
	
	f_method_trace_special( gs_project, this.ClassName() , 'Clear Serial_Flag (set to N) value on Serial Number Inventory table with SKU: '+ls_sku+ ' Serial_No: '+ls_Serialno+' Wh_Code: '+ls_whcode+ ' Do_No: '+is_dono ,is_dono, '','',isinvoice_no)

Execute Immediate "COMMIT" using SQLCA;
//24-Oct-2014 :Madhu- Don't Assign same SN to multiple orders -END

This.DEleteRow(This.GetRow())
ib_changed = True
ibSerialModified = True
end event

event scrollvertical;call super::scrollvertical;sle_barcodes.SetFocus()
sle_barcodes.SelectText(1,len(sle_barcodes.Text))
end event

event getfocus;call super::getfocus;If rb_barcode.Checked Then
	sle_barcodes.SetFocus()
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
End IF
end event

event rowfocuschanged;call super::rowfocuschanged;If rb_barcode.Checked Then
	sle_barcodes.SetFocus()
	sle_barcodes.SelectText(1,len(sle_barcodes.Text))
End IF
end event

event doubleclicked;call super::doubleclicked;

// 09/08 - PCONKL If one of the lottable fields is double clicked, we will enable a scan mode which will allow the users to scan down a column instead of across when enter is clicked

str_parms	lstrparms

If Row > 0 Then

	Choose Case dwo.Name

		case "sku_substitute" /*TAM 2010/04/07l */
		If Upper(gs_Project) <>  'RIVERBED'  Then // TAM 2011/12/03 exclude RIVERBED	
			This.AcceptText()
				 
			lstrparms.String_arg[1] = This.GetITemString(row,'sku')
			lstrparms.String_arg[2] = This.GetITemString(row,'supp_code')
			OpenWithParm(w_select_substitute_sku, lstrparms)
					
			lstrparms = Message.PowerObjectParm
			If lstrparms.Cancelled Then Return
				
			ib_changed = True
					
			This.SetITem(row,"sku_substitute",Lstrparms.String_arg[3])
			This.SetITem(row,"supplier_substitute",Lstrparms.String_arg[4])
		END IF
	End Choose /*Clicked column*/
	
END IF /*Valid Row*/





end event

type st_message from statictext within tabpage_serial
integer y = 284
integer width = 2917
integer height = 76
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
boolean enabled = false
boolean focusrectangle = false
end type

type cb_generate_ob_serial from commandbutton within tabpage_serial
integer x = 2752
integer y = 44
integer width = 343
integer height = 92
integer taborder = 70
boolean bringtotop = true
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Generate"
end type

event clicked;
Parent.TriggerEvent("ue_generate")


end event

type cbx_selallserial from checkbox within tabpage_serial
boolean visible = false
integer x = 64
integer y = 396
integer width = 82
integer height = 76
integer textsize = -9
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
boolean enabled = false
boolean automatic = false
end type

event clicked;int li_row, li_rows
boolean lb_checked

lb_checked = tab_main.tabpage_serial.cbx_selallserial.checked
li_rows = tab_main.tabpage_serial.dw_serial.RowCount() 

if lb_checked then
	for li_row = 1 to li_rows
		idw_serial.SetItem( li_row, 'c_delete_ind', 'Y')
	next
else
	for li_row = 1 to li_rows
		idw_serial.SetItem( li_row, 'c_delete_ind', 'N')
	next
End if

// Change delete button from delete row to delect selected and back
//If idw_serial.Find("upper(c_DELETE_Ind) = 'Y'",1,idw_serial.RowCOunt()) > 0 Then
//	cb_serial_select.Enabled = True
//	cb_serial_delete.Enabled = False
//	cb_serial_delete.visible = False
//	cb_serial_select.visible = True
//Else
//	cb_serial_delete.Enabled = True
//	cb_serial_select.Enabled = False
//	cb_serial_delete.visible = True
//	cb_serial_select.visible = False
//End If
	

end event

type tabpage_bol from userobject within tab_main
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = "BOL"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
rb_sli rb_sli
rb_bol rb_bol
cb_editaddress cb_editaddress
cb_bol_print cb_bol_print
cb_generate_bol cb_generate_bol
dw_bol_prt dw_bol_prt
dw_bol_valeod dw_bol_valeod
dw_bol_entry dw_bol_entry
rb_bol_combined rb_bol_combined
gb_letter gb_letter
end type

on tabpage_bol.create
this.rb_sli=create rb_sli
this.rb_bol=create rb_bol
this.cb_editaddress=create cb_editaddress
this.cb_bol_print=create cb_bol_print
this.cb_generate_bol=create cb_generate_bol
this.dw_bol_prt=create dw_bol_prt
this.dw_bol_valeod=create dw_bol_valeod
this.dw_bol_entry=create dw_bol_entry
this.rb_bol_combined=create rb_bol_combined
this.gb_letter=create gb_letter
this.Control[]={this.rb_sli,&
this.rb_bol,&
this.cb_editaddress,&
this.cb_bol_print,&
this.cb_generate_bol,&
this.dw_bol_prt,&
this.dw_bol_valeod,&
this.dw_bol_entry,&
this.rb_bol_combined,&
this.gb_letter}
end on

on tabpage_bol.destroy
destroy(this.rb_sli)
destroy(this.rb_bol)
destroy(this.cb_editaddress)
destroy(this.cb_bol_print)
destroy(this.cb_generate_bol)
destroy(this.dw_bol_prt)
destroy(this.dw_bol_valeod)
destroy(this.dw_bol_entry)
destroy(this.rb_bol_combined)
destroy(this.gb_letter)
end on

type rb_sli from radiobutton within tabpage_bol
integer x = 1563
integer y = 108
integer width = 215
integer height = 76
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "SLI"
end type

type rb_bol from radiobutton within tabpage_bol
integer x = 1563
integer y = 28
integer width = 201
integer height = 76
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "BOL"
end type

type cb_editaddress from commandbutton within tabpage_bol
boolean visible = false
integer x = 3154
integer y = 60
integer width = 338
integer height = 96
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Edit Address"
end type

event constructor;this.visible = false
if gs_project = 'PHXBRANDS' then this.visible = true

end event

event clicked;iw_window.Event  ue_edit_warehouse_address()
end event

type cb_bol_print from commandbutton within tabpage_bol
integer x = 2807
integer y = 60
integer width = 338
integer height = 96
integer taborder = 50
boolean bringtotop = true
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Print"
end type

event clicked;iw_window.triggerEvent("ue_print_bol")
end event

type cb_generate_bol from commandbutton within tabpage_bol
integer x = 2464
integer y = 60
integer width = 338
integer height = 96
integer taborder = 60
boolean bringtotop = true
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Generate"
end type

event clicked;iw_window.TriggerEvent("ue_process_bol")
end event

type dw_bol_prt from u_dw_ancestor within tabpage_bol
integer x = 9
integer y = 284
integer width = 3493
integer height = 1532
integer taborder = 20
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean livescroll = false
end type

type dw_bol_valeod from datawindow within tabpage_bol
boolean visible = false
integer x = 18
integer y = 284
integer width = 3282
integer height = 1468
integer taborder = 40
string title = "none"
string dataobject = "d_valeo_bol_prt"
boolean hscrollbar = true
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

type dw_bol_entry from datawindow within tabpage_bol
boolean visible = false
integer y = 12
integer width = 1509
integer height = 192
integer taborder = 50
string dataobject = "d_bol_entry"
boolean resizable = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event itemchanged;Choose Case dwo.name
	Case "pieces"
		tab_main.tabpage_bol.dw_bol_prt.SetItem(1,"c_pieces",long(data))
	Case "weight"
		tab_main.tabpage_bol.dw_bol_prt.SetItem(1,"c_weight",string(data))
	Case "desc"
		tab_main.tabpage_bol.dw_bol_prt.SetItem(1,"c_desc",data)
End Choose


end event

type rb_bol_combined from radiobutton within tabpage_bol
boolean visible = false
integer x = 1563
integer y = 188
integer width = 571
integer height = 76
boolean bringtotop = true
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Combined BOL"
end type

type gb_letter from groupbox within tabpage_bol
integer x = 1522
integer y = 16
integer width = 626
integer height = 256
integer taborder = 90
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Letter"
end type

type tabpage_carrier from userobject within tab_main
boolean visible = false
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = "Carrier"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
st_carrier_ship_date st_carrier_ship_date
em_carrier_ship_date em_carrier_ship_date
dw_carrier_labels dw_carrier_labels
cb_carrier_labels cb_carrier_labels
cb_save_carrier_defaults cb_save_carrier_defaults
cb_export_to_carrier cb_export_to_carrier
dw_carrier dw_carrier
end type

on tabpage_carrier.create
this.st_carrier_ship_date=create st_carrier_ship_date
this.em_carrier_ship_date=create em_carrier_ship_date
this.dw_carrier_labels=create dw_carrier_labels
this.cb_carrier_labels=create cb_carrier_labels
this.cb_save_carrier_defaults=create cb_save_carrier_defaults
this.cb_export_to_carrier=create cb_export_to_carrier
this.dw_carrier=create dw_carrier
this.Control[]={this.st_carrier_ship_date,&
this.em_carrier_ship_date,&
this.dw_carrier_labels,&
this.cb_carrier_labels,&
this.cb_save_carrier_defaults,&
this.cb_export_to_carrier,&
this.dw_carrier}
end on

on tabpage_carrier.destroy
destroy(this.st_carrier_ship_date)
destroy(this.em_carrier_ship_date)
destroy(this.dw_carrier_labels)
destroy(this.cb_carrier_labels)
destroy(this.cb_save_carrier_defaults)
destroy(this.cb_export_to_carrier)
destroy(this.dw_carrier)
end on

type st_carrier_ship_date from statictext within tabpage_carrier
integer x = 2533
integer y = 44
integer width = 421
integer height = 60
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Carrier Ship Date:"
alignment alignment = right!
boolean focusrectangle = false
end type

type em_carrier_ship_date from editmask within tabpage_carrier
integer x = 2981
integer y = 28
integer width = 393
integer height = 80
integer taborder = 30
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
borderstyle borderstyle = stylelowered!
maskdatatype maskdatatype = datemask!
string mask = "mm/dd/yyyy"
boolean spin = true
string minmax = "~~"
end type

event modified;if date(w_do.tab_main.tabpage_carrier.em_carrier_ship_date.text) < Today ( )  then
	MessageBox ( "CARRIER SHIP DATE", "Date needs to be today or greater")
	w_do.tab_main.tabpage_carrier.em_carrier_ship_date.SetFocus()
end if
end event

type dw_carrier_labels from datawindow within tabpage_carrier
boolean visible = false
integer x = 2679
integer y = 140
integer width = 654
integer height = 1532
integer taborder = 30
boolean enabled = false
string title = "none"
string dataobject = "d_pack_labels_generic"
boolean hscrollbar = true
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

type cb_carrier_labels from commandbutton within tabpage_carrier
integer x = 1947
integer y = 12
integer width = 571
integer height = 108
integer taborder = 80
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Print Carrier &Labels"
end type

event clicked;if date(iw_Window.tab_main.tabpage_carrier.em_carrier_ship_date.text) < Today ( )  then
	MessageBox ( "CARRIER SHIP DATE", "Date needs to be today or greater")
	iw_Window.tab_main.tabpage_carrier.em_carrier_ship_date.SetFocus()
else
	iw_window.TriggerEvent('ue_carrier_labels')
end if

end event

type cb_save_carrier_defaults from commandbutton within tabpage_carrier
integer x = 759
integer y = 12
integer width = 398
integer height = 108
integer taborder = 50
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Save Defaults"
end type

event clicked;Integer	liRC
String	lsMsg

Execute Immediate "Begin Transaction" using SQLCA; /* 11/04 - PCONKL - Auto Commit Turned on to eliminate DB locks*/

liRC = idw_carrier.Update()
If liRC = 1 Then
	Execute Immediate "COMMIT" using SQLCA;
Else
	Execute Immediate "ROLLBACK" using SQLCA;
	lsMsg = "Unable to save Carrier Default Records!~r~r"
	If Not isnull(SQLCA.SQLErrText) Then /*if errtext is null, we get no msg - datastores dont return error codes like DW's*/
		lsMsg += SQLCA.SQLErrText
	End If
  	MessageBox(is_title, lsMsg)
	SetMicroHelp("Save failed!")
	return -1
End If

This.Enabled = False
end event

type cb_export_to_carrier from commandbutton within tabpage_carrier
integer x = 18
integer y = 12
integer width = 622
integer height = 108
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean enabled = false
string text = "&Export"
end type

event clicked;
If idw_main.AcceptText() < 0 Then return -1
If idw_detail.AcceptText() < 0 Then return -1
If idw_other.AcceptText() < 0 Then return -1
If idw_Pack.AcceptText() < 0 Then return -1

// pvh - 02/21/06 - moved to boneyard
//u_nvo_edi_confirmations	lu_edi_confirm

//lu_edi_confirm = Create u_nvo_edi_confirmations

Choose Case Idw_Other.GetItemString(1,'Carrier')
	Case 'FEDEX'
		if date(w_do.tab_main.tabpage_carrier.em_carrier_ship_date.text) < Today ( )  then
			MessageBox ( "CARRIER SHIP DATE", "Date needs to be today or greater")
			w_do.tab_main.tabpage_carrier.em_carrier_ship_date.SetFocus()
		else
			//lu_edi_confirm.uf_export_to_fedex(idw_main, idw_Detail,idw_Carrier,idw_pack)
		end if
	Case 'UPS'
		//lu_edi_confirm.uf_export_to_ups(idw_main, idw_Detail,idw_Carrier,idw_pack)
End Choose
	

end event

type dw_carrier from datawindow within tabpage_carrier
event ue_process_enter pbm_dwnprocessenter
integer x = 14
integer y = 124
integer width = 3429
integer height = 1568
integer taborder = 30
string title = "none"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event ue_process_enter;IF This.GetRow() = This.RowCount() THEN
	This.SetRow(1)
	This.ScrolltoRow(1)
ELSE
	Send(Handle(This),256,9,Long(0,0))
End If
Return 1
end event

event itemchanged;
tab_main.tabpage_carrier.cb_save_carrier_defaults.Enabled = True
end event

type tabpage_trax from userobject within tab_main
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = "ConnectShip"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_trax_clearall cb_trax_clearall
cb_trax_selectall cb_trax_selectall
cb_trax_print_label cb_trax_print_label
cb_trax_void cb_trax_void
cb_trax_ship cb_trax_ship
dw_trax dw_trax
end type

on tabpage_trax.create
this.cb_trax_clearall=create cb_trax_clearall
this.cb_trax_selectall=create cb_trax_selectall
this.cb_trax_print_label=create cb_trax_print_label
this.cb_trax_void=create cb_trax_void
this.cb_trax_ship=create cb_trax_ship
this.dw_trax=create dw_trax
this.Control[]={this.cb_trax_clearall,&
this.cb_trax_selectall,&
this.cb_trax_print_label,&
this.cb_trax_void,&
this.cb_trax_ship,&
this.dw_trax}
end on

on tabpage_trax.destroy
destroy(this.cb_trax_clearall)
destroy(this.cb_trax_selectall)
destroy(this.cb_trax_print_label)
destroy(this.cb_trax_void)
destroy(this.cb_trax_ship)
destroy(this.dw_trax)
end on

type cb_trax_clearall from commandbutton within tabpage_trax
integer x = 329
integer y = 32
integer width = 293
integer height = 92
integer taborder = 50
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Clear All"
end type

event clicked;
dw_trax.triggerEvent('ue_clearall')
end event

type cb_trax_selectall from commandbutton within tabpage_trax
integer x = 18
integer y = 32
integer width = 293
integer height = 92
integer taborder = 40
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Select &All"
end type

event clicked;
dw_trax.triggerEvent('ue_selectall')
end event

type cb_trax_print_label from commandbutton within tabpage_trax
integer x = 1911
integer y = 32
integer width = 457
integer height = 92
integer taborder = 40
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Print Labels"
end type

event clicked;
dw_trax.triggerEvent('ue_print_labels')
end event

type cb_trax_void from commandbutton within tabpage_trax
integer x = 1321
integer y = 32
integer width = 293
integer height = 92
integer taborder = 90
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Void"
end type

event clicked;
dw_trax.TriggerEvent('ue_Void')
end event

type cb_trax_ship from commandbutton within tabpage_trax
integer x = 923
integer y = 32
integer width = 293
integer height = 92
integer taborder = 40
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "&Ship"
end type

event clicked;
dw_trax.TriggerEvent('ue_Ship')
end event

type dw_trax from u_dw_ancestor within tabpage_trax
event ue_selectall ( )
event ue_clearall ( )
event ue_enable ( )
event ue_ship ( )
event ue_void ( )
event ue_print_labels ( )
integer x = 9
integer y = 156
integer width = 2953
integer height = 1372
integer taborder = 20
string dataobject = "d_do_packing_trax"
boolean hscrollbar = true
boolean vscrollbar = true
boolean resizable = true
boolean livescroll = false
end type

event ue_selectall();
Long	llRowPos, llRowCount

This.SetRedraw(False)

llRowCount = This.RowCount()
For llRowPos = 1 to llRowCount
	//23-Feb-2014 :Madhu- Added condition to set c_select_ind value Y/N -START
	If IsNull(This.GetITemString(llRowPos,'carton_no')) or This.GetITemString(llRowPos,'carton_no') = '' Then
		This.SetItem(llRowPos,'c_select_ind','N')			
	ELSE
		This.SetItem(llRowPos,'c_select_ind','Y')
	END IF
	//23-Feb-2014 :Madhu- Added condition to set c_select_ind value Y/N -END
Next

This.SetRedraw(True)

This.TriggerEvent('ue_enable')

end event

event ue_clearall();
Long	llRowPos, llRowCount

This.SetRedraw(False)

llRowCount = This.RowCount()
For llRowPos = 1 to llRowCount
	This.SetItem(llRowPos,'c_select_ind','N')
Next

This.SetRedraw(True)

This.TriggerEvent('ue_enable')
end event

event ue_enable();
//Enable or disable buttons based on order status and row(s) being selected

if idw_main.RowCount() < 1 or This.RowCount () < 1 Then
	cb_trax_ship.Enabled = False
	cb_trax_void.Enabled = False
	cb_trax_print_label.enabled = False
	Return
End If

If idw_Main.GetItemString(1,'ord_status') = 'C' or &
	idw_Main.GetItemString(1,'ord_status') = 'D' or &
	idw_Main.GetItemString(1,'ord_status') = 'V' or &
	idw_Main.GetItemString(1,'ord_status') = 'H' Then
	
// TAM 2007/11/01 allow Trax call after "ready to ship"
	// or &	idw_Main.GetItemString(1,'ord_status') = 'R' Then
	
		cb_trax_ship.Enabled = False
		cb_trax_void.Enabled = False
				
End If

// TAM 2007/11/01 allow Trax call if existing Tracking Number is not assigned by TRAX 
//If This.Find("C_select_Ind = 'Y' and (shipper_tracking_id = '' or isnull(shipper_tracking_id))",1,This.RowCount()) > 0 Then
If This.Find("C_select_Ind = 'Y' and (tracking_id_type = '' or isnull(tracking_id_type))",1,This.RowCount()) > 0 Then
	cb_trax_ship.Enabled = True
Else
	cb_trax_ship.Enabled = False
End If

If This.Find("C_select_Ind = 'Y' and shipper_tracking_id > '' and tracking_id_type = 'T'",1,This.RowCount()) > 0 Then
	cb_trax_print_label.enabled = True
Else
	cb_trax_print_label.enabled = False
End If

If This.Find("C_select_Ind = 'Y' and shipper_tracking_id > '' and tracking_id_type = 'T'",1,This.RowCount()) > 0 Then
	cb_trax_void.Enabled = True
Else
	cb_trax_void.Enabled = False
End If


end event

event ue_ship();
u_nvo_trax	luTrax
Integer	liRC
String	lsPrint[],  lsLocale, lsWarehouse, lsDONO
Long	llRowCount, llRowPos

//23-Feb-2014 :Madhu -Added code to select all rows in TRAX -START
//29-Jun-2016 :Madhu- As discussed with Pete - commented for Kendo to print carton by carton
//IF this.Find("c_select_ind ='N'",1,this.rowcount()) > 0 Then
//	MessageBox (is_title,'Please provide Carton No# to all rows')
//	Return
//END IF
//23-Feb-2014 :Madhu -Added code to select all rows in TRAX -END

tab_main.tabpage_main.tab_address.tabpage_shipto.dw_shipto.AcceptText() /* addresses being validated, not available to nvo */

If ib_Changed Then
	Messagebox(is_title,'Please save your changes first.')
	Return
End IF

luTrax = Create u_nvo_Trax

If luTrax.uf_validate_do(idw_Main, idw_PAck) < 0 Then Return 

SetPointer(Hourglass!)

//MikeA - 08/2019 - S37018 - F18059 - H2O : Use a separate Shipping account for Disney UPS orders
//dts note: Pack location driven by Shipping Method (DM.UF5)
//If UF5 present, look in Lookup table for associated Pack Location and set 
//(save, both data window and in-line sql)  Trax_Pack_Location based on value in lookup table

//LookUp Table Usage:
// Code_Type = Left(Code_Type, 11) = 'TRAXPACKLOC'  - Allow for Multip-Warehouses by adding Number after.
// Code_ID = Shipping Method
// Code_Descript = Warehouse

String lsUF5, lsTraxPackLoc

if gs_project = 'H2O' then
	
	lsUF5 = trim(idw_other.GetITEmString(1,'user_field5'))
	
	if Not IsNull(lsUF5) and Trim(lsUF5) <> '' then
	
		lsWarehouse = idw_Main.GetITemString(1,'wh_code')
		
		Select User_Field1 INTO :lsTraxPackLoc From LookUp_Table  with (NOLOCK) Where  Left(Code_Type, 11) = 'TRAXPACKLOC'  AND Code_ID = :lsUF5 AND project_Id = :gs_project and Code_Descript = :lsWarehouse;

		IF Not IsNull(lsTraxPackLoc) and Trim(lsTraxPackLoc) <> '' then

			idw_other.SetItem(1,'Trax_Pack_Location', lsTraxPackLoc)

			Execute Immediate "Begin Transaction" using SQLCA; /* Auto Commit Turned on to eliminate DB locks*/
			If idw_other.Update() = 1 Then
			Execute Immediate "COMMIT" using SQLCA;
   				If SQLCA.SQLCode = 0 Then
   				Else /*commit failed*/
					Execute Immediate "ROLLBACK" using SQLCA;
     				//MessageBox(is_title, "Unable to save Trax Pack Location for Shipping Method: " + lsUF5 + " : "  + SQLCA.SQLErrText)
					MessageBox(is_title, "Unable to save ConnectShip Pack Location for Shipping Method: " + lsUF5 + " : "  + SQLCA.SQLErrText)// Dinesh - 02/06/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 
				  	return 
				End If
			End If
			//
		End If
	
	End If	
End If

liRC = luTrax.uf_ship_shipment(idw_trax)

//If any of the checked rows have a tracking ID, we will prompt to print labels after retrieve
If This.Find("C_select_Ind='Y'",1,This.RowCount()) > 0 Then

	llRowCount = This.RowCOunt()
	For llRowPos = 1 to llRowCount
		//save array of checked rows - will be lost after refresh
		lsPrint[llRowPos] = This.GEtItemString(llRowPOs,'c_select_ind')
	Next
	
End If

//If succesfull, re-retreive PAck List
// 08/10 - PCONKL - Also reretrieve the Master record for AWB and Freight Cost 
If liRC = 0 Then
	lsDONO = idw_Main.GetITemString(1,'do_no')
	idw_Main.Retrieve(lsDONO)
	idw_Pack.Retrieve(lsDONO)
//	if  Upper(gs_project) ="PANDORA" THEN 
//		f_crossdock() // Dinesh - 02/01/2021 - S52817- Google -SAP Conversion - GUI - Multileg set in other info
//	end if
End If

//10/07 - PCONKL - For 3COM 3CGLSEMEA or 3CGLSAMI Warehouses, copy the first tracking number to awb field
//08/10 - PCONKL - Added code on server side to always set AWB from first TRAX Tracking Number
If gs_project = '3COM_NASH' and (idw_main.GetITemString(1,'wh_code') = '3CGLSEMEA' or idw_main.GetITemString(1,'wh_code') = '3CGLSAMI') Then
	
	For llRowPos = 1 to THis.RowCount()
		
		If This.GEtITemString(llRowpos,'shipper_tracking_ID') > "" Then
			idw_other.SetITem(1,'awb_bol_no',This.GEtITemString(llRowpos,'shipper_tracking_ID'))
			ib_changed = True
			Exit
		End If
		
	Next
	
End If


If gs_project = 'PANDORA' or gs_project = 'COMCAST'  Then
 
 For llRowPos = 1 to THis.RowCount()
  
  If This.GEtITemString(llRowpos,'shipper_tracking_ID') > "" Then
       idw_other.SetITem(1,'awb_bol_no',This.GEtITemString(llRowpos,'shipper_tracking_ID'))
       ib_changed = True
       Exit
  End If
  
 Next
 
End If


//Added MEA - 12/10/2008
// copy the first Tracking Number from the PAcking List to Delivery Master User Field 6 after a successfull TRAX call for Maquet.


IF gs_project = "MAQUET" THEN

	For llRowPos = 1 to THis.RowCount()
		
		If This.GEtITemString(llRowpos,'shipper_tracking_ID') > "" Then
			idw_other.SetITem(1,'user_field6',This.GEtITemString(llRowpos,'shipper_tracking_ID'))
			ib_changed = True
			Exit
		End If
		
	Next

END IF


//Prompt for print if any of selected rows have a tracking ID assigned...
	
//recheck the rows
For llRowPos = 1 to llRowCount
	This.SetITem(llRowPos,'c_select_ind',lsPrint[llRowPos])
Next

//TAM check tracking id type for a "T" instead of a tracking number.



If This.Find("C_select_Ind='Y' and tracking_ID_Type = 'T'",1,This.RowCount()) > 0 Then
//If This.Find("C_select_Ind='Y' and shipper_tracking_ID > ''",1,This.RowCount()) > 0 Then
	
	// 08/10 - PCONKL - If TRAX printer Locale is other than 'QPSL', then the labels are being sent to a physical printer. No need to print, just display a confirmation msg that we already did.
	lsWarehouse = idw_Main.GetITemString(1,'wh_code')

	Select trax_printer_locale into :lsLocale
	From Trax_warehouse
	Where project_id = :gs_Project and wh_code = :lsWarehouse;
	
	If lsLocale <> 'QPSL' Then
		//Messagebox("TRAX call Successful",'TRAX Labels(s) sent to printer')	// Dinesh - 02/05/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 	
		Messagebox("ConnectShip call Successful",'ConnectShip Labels(s) sent to printer') // Dinesh - 02/05/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 
	Else	
		//If Messagebox("TRAX call Successful" ,"Would you like to print the TRAX Shipping Labels?",Question!,YesNo!,1) = 1 then // Dinesh - 02/05/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 
		If Messagebox("ConnectShip call Successful" ,"Would you like to print the ConnectShip Shipping Labels?",Question!,YesNo!,1) = 1 then // Dinesh - 02/05/2025- SIMS-641- Development for Delivery Order screen change for ConnectShip 
			This.TriggerEvent('ue_Print_labels')
		End If			
	End If		
End If

//Uncheck
This.TriggerEvent('ue_clearall')

	
SetPointer(Arrow!)

this.TriggerEvent('ue_Enable')


end event

event ue_void();

u_nvo_trax	luTrax
Integer	liRC

If ib_Changed Then
	Messagebox(is_title,'Please save your changes first.')
	Return
End IF

SetPointer(Hourglass!)

luTrax = Create u_nvo_Trax
liRC = luTrax.uf_void_shipment(idw_Main,idw_trax)

//If succesfull, re-retreive PAck List
If liRC = 0 Then
	idw_Pack.Retrieve(idw_Main.GetITemString(1,'do_no'))
End If

SetPointer(Arrow!)

this.TriggerEvent('ue_Enable')
end event

event ue_print_labels();
//Print Shipping labels returned from TRAX

Long	llRowCount, llRowPos, llPrintJob, llLen, llstartPos, llRow
String	lsCurrentLabel, lsLabels,  lsTrackID, lsTrackIDSave, lsPrinter, lsProject, lsWarehouse
Dec 		ldLoop
Int		i

Str_parms lstrparms
u_nvo_trax	luTrax
string lsDoNo

luTrax = Create u_nvo_Trax

lsDoNo = idw_main.GetItemString(1,'do_no') // Akash - 01/30/2025- SIMS-640-Development for ConnectShip Label Re-print in SIMS

llRowCount = This.RowCount()
For llRowPos = 1 to llRowCount
	
	If this.GetITemString(llRowpos,'c_select_ind') <> 'Y' Then Continue

	// 01/08 - PCONKL - We should be printing at the Ship Ref level instead of carton level now, check both for back ass compatability
	//							If Printing at the Ship Ref level, we only need to print once since all labels for a ship ref are in the same file
	If This.GetITemString(llRowPos,'trax_Ship_ref_nbr') > "" Then
		lsTrackID = This.GetITemString(llRowPos,'trax_Ship_ref_nbr')
		
	Else
		lsTrackID = This.GetITemString(llRowPos,'carton_no')
	End If
	
	If lsTrackID = '' or lsTrackID = lsTrackIDSave Then Continue
	
	//lsLabels += luTrax.uf_retrieve_label(lsTrackID, 'CS') /* CS= Create Shipment label type */
	lsLabels += luTrax.uf_retrieve_label_dp(lsTrackID,lsDoNo) /* CS= Create Shipment label type */// Akash - 01/30/2025- SIMS-640-Development for ConnectShip Label Re-print in SIMS
	
	lsTrackIDSave = lsTrackID

Next

This.TriggerEvent('ue_clearall')
end event

event itemchanged;call super::itemchanged;
if dwo.name = 'c_select_ind' Then
	This.PostEvent('ue_enable')
End If
end event

type tabpage_shipments from userobject within tab_main
string tag = "Shipments"
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = "Shipments"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
cb_confirm_shipment cb_confirm_shipment
cb_remove_from_shipment cb_remove_from_shipment
st_1 st_1
dw_shipments dw_shipments
end type

on tabpage_shipments.create
this.cb_confirm_shipment=create cb_confirm_shipment
this.cb_remove_from_shipment=create cb_remove_from_shipment
this.st_1=create st_1
this.dw_shipments=create dw_shipments
this.Control[]={this.cb_confirm_shipment,&
this.cb_remove_from_shipment,&
this.st_1,&
this.dw_shipments}
end on

on tabpage_shipments.destroy
destroy(this.cb_confirm_shipment)
destroy(this.cb_remove_from_shipment)
destroy(this.st_1)
destroy(this.dw_shipments)
end on

type cb_confirm_shipment from commandbutton within tabpage_shipments
integer x = 1842
integer y = 12
integer width = 485
integer height = 96
integer taborder = 30
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Confirm Shipment"
end type

event clicked;Long	llCheckedCount, ll_row
Int	li_rtn
String	ls_empty_batch_message[]
String	lsCurrentDONO, lsShipmentID, lsFind, lsTemp
Boolean	lbAllConfirmed
datetime ldtToday


If dw_Shipments.Find("ord_status <> 'R'",1, dw_Shipments.RowCount()) > 0 Then
	Messagebox(is_title,"All order must be in 'Ready to Ship' Status~rbefore confirming the shipment!",Stopsign!)
	Return
End If

//AWB and Carrier PRO must be the same on all orders
If idw_Shipments.RowCount() > 1 Then
	
	lsTemp = idw_Shipments.GetITEmString(1,'awb_bol_no')
	lsFind = "Upper(Awb_Bol_No) <> '" + upper(lsTEmp) + "'"
	If idw_Shipments.Find(lsFind,2,idw_Shipments.RowCount()) > 1 Then
		Messagebox(is_title,"All orders on the shipment must have the same AWB/BOL Nbr~rbefore confirming the shipment!",Stopsign!)
		Return
	End If
	
	lsTemp = idw_Shipments.GetITEmString(1,'carrier_pro_no')
	lsFind = "Upper(carrier_pro_no) <> '" + upper(lsTEmp) + "'"
	If idw_Shipments.Find(lsFind,2,idw_Shipments.RowCount()) > 1 Then
		Messagebox(is_title,"All orders on the shipment must have the same Carrier PRO Nbr~rbefore confirming the shipment!",Stopsign!)
		Return
	End If
	
End If

If Messagebox(is_title,'Are you sure you want to confirm this shipment?',Question!,YesNo!,2) = 2 Then
	Return
End If

//Confirm all the orders on the Shipment

lsCurrentDONO = idw_Main.GetITEmSTring(1,'do_no') /* we will want to re-open the current order after we're done looping through the orders on the shipment*/
ldtToday = f_getLocalWorldTime( idw_main.getitemstring(1,'wh_code') ) 

open(w_update_status)
w_update_status.hpb_status.MaxPosition = llCheckedCount

//Clear out batch messages

is_batch_message[] = ls_empty_batch_message[]

ib_batchconfirmmode = true

lbAllConfirmed = True

iw_window.SetRedraw(False)

for ll_row = 1 to idw_Shipments.RowCount()
	
	w_update_status.hpb_status.Position = ll_row
	w_update_status.st_status.text = 'Confirming Order: ' + idw_shipments.getITemString(ll_row,'invoice_no') + "..."
	
	//is_dono =  idw_result.GetItemString( ll_row, "do_no")		// LTK 20140703  Use shipment dw
	is_dono =  idw_shipments.GetItemString( ll_row, "do_no")

		
	isle_order.Trigger Event modified()
		
	Yield ( )
		
	iw_window.Title = "Confirm Batch - [" + idw_main.GetItemString(1,'invoice_no') + "]"
		
	ibConfirmShipment = True  /*will suppress individual orders from sending GI as they are confirmed*/
	li_rtn = icb_confirm.Trigger Event clicked()
	
	//Stop if there are any errors and reset the previously confirmed orders to Ready Status
	If li_rtn < 0 Then
		
		lsShipmentID = idw_Main.GetITemString(1,'consolidation_no')
		If lsShipmentID > '' Then
			
			Execute Immediate "Begin Transaction" using SQLCA;
		
			Update Delivery_MAster
			Set Ord_status = 'R', Complete_Date = null
			Where Project_id = :gs_Project and consolidation_no = :lsShipmentID;
			
			Execute Immediate "COMMIT" using SQLCA;
			
		End If
				
		lbAllConfirmed = False
		Exit
		
	End If /* Confirm failed*/
		
next /*order in shipment*/

//retrieve the current order...
is_dono = lsCurrentDONO
isle_order.Trigger Event modified()

//Create a Ship Confirm msg for this shipment
If lbAllConfirmed Then
	uf_send_websphere_GI("SHIPMENT")
End If
		
//TAM 04/2016  -  Create a SC "Shipment Confirmation" record in Batch transaction
lsShipmentID = idw_Main.GetITemString(1,'consolidation_no')

Insert Into batch_Transaction (project_ID, Trans_Type, Trans_Order_ID, Trans_Status, Trans_Create_Date, Trans_Parm)
				Values(:gs_Project, 'SC', :is_dono,'N', :ldtToday, :is_dono);


Close(w_update_status)

iw_window.SetRedraw(True)

//Show Error Messages

if UpperBound(is_batch_message) > 0 then
	
	str_parms  lstr_parms
	
	lstr_parms.string_arg = is_batch_message[]
	
	OpenWithParm (w_batch_confirm_error,  lstr_parms )
	
end if

If lbAllConfirmed then
	Messagebox(is_title,'Shipment Confirmed')
End If


ib_batchconfirmmode = false
ibConfirmShipment = False
end event

type cb_remove_from_shipment from commandbutton within tabpage_shipments
integer x = 155
integer y = 12
integer width = 613
integer height = 96
integer taborder = 50
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "Remove from Shipment"
end type

event clicked;Long	llRowPos, llRowCount
String	lsDONO

If Messagebox(is_title,'Are you sure you want to remove the checked order(s) from this shipment?',Question!,YesNo!,2) = 2 Then
	Return
End If

llRowCOunt = dw_Shipments.RowCount()
For llRowPos = 1 to llRowCount
	
	If dw_Shipments.GetITemString(llRowPos,'c_select_ind') = 'Y' Then
		
		lsDONO =  dw_Shipments.GetITemString(llRowPos,'do_no')
		Execute Immediate "Begin Transaction" using SQLCA;
		
		Update Delivery_MAster
		Set Consolidation_no = ''
		Where do_no = :lsDONO;
			
		Execute Immediate "COMMIT" using SQLCA;
		
	End If
	
Next

isle_order.Trigger Event Modified() /*refresh current order*/
end event

type st_1 from statictext within tabpage_shipments
integer x = 101
integer y = 108
integer width = 2469
integer height = 60
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 255
long backcolor = 67108864
string text = "Double click on row to edit order                   All Orders must be in Ready to Ship status before confirming Shipment"
alignment alignment = center!
boolean focusrectangle = false
end type

type dw_shipments from u_dw_ancestor within tabpage_shipments
event ue_process_checked ( )
integer y = 160
integer width = 3849
integer height = 1692
integer taborder = 20
string dataobject = "d_do_shipments"
boolean hscrollbar = true
boolean vscrollbar = true
boolean hsplitscroll = true
end type

event ue_process_checked();
This.AcceptText()

If This.GetITemString(This.getRow(),'c_select_ind') = 'Y' Then
	cb_remove_from_shipment.Enabled = true
else
	if This.Find("c_select_ind = 'Y'",1,this.RowCount()) > 0 Then
		cb_remove_from_shipment.Enabled = true
	Else
		cb_remove_from_shipment.Enabled = False
	End IF
End If
end event

event clicked;call super::clicked;//If row is clicked then highlight the row
IF row > 0 THEN
	This.SelectRow(0, FALSE)
	This.SelectRow(row, TRUE)
END IF
end event

event doubleclicked;call super::doubleclicked;If row > 0 Then
	iw_window.Trigger Event ue_edit()
	If not ib_changed Then
		isle_order.Text = This.GetItemString(row,'invoice_no')
		is_dono = This.GetItemString(row,'do_no')
		isle_order.Trigger Event Modified()
	End If
End If
end event

event itemchanged;call super::itemchanged;
Choose Case dwo.name
		
	Case 'c_select_ind'
		
		This.PostEvent('ue_process_checked')
				
End Choose
end event

type tabpage_load_plan from userobject within tab_main
string tag = "TMS"
integer x = 18
integer y = 108
integer width = 4544
integer height = 2564
long backcolor = 79741120
string text = "TMS"
long tabtextcolor = 33554432
long tabbackcolor = 79741120
long picturemaskcolor = 536870912
dw_load_plan dw_load_plan
end type

on tabpage_load_plan.create
this.dw_load_plan=create dw_load_plan
this.Control[]={this.dw_load_plan}
end on

on tabpage_load_plan.destroy
destroy(this.dw_load_plan)
end on

type dw_load_plan from datawindow within tabpage_load_plan
integer x = 9
integer y = 156
integer width = 3397
integer height = 1196
integer taborder = 60
string title = "none"
string dataobject = "d_do_tms_load_plan"
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

type dw_scanner from u_dw_ancestor within w_do
boolean visible = false
integer x = 9
integer y = 1580
integer width = 1906
integer height = 364
integer taborder = 20
boolean titlebar = true
string title = "Assign Scanner ID:"
string dataobject = "d_scanner"
boolean vscrollbar = true
end type

type dw_print_invoice from datawindow within w_do
boolean visible = false
integer x = 1234
integer y = 1212
integer width = 759
integer height = 316
integer taborder = 30
string dataobject = "d_nyxinvoice"
boolean hscrollbar = true
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

